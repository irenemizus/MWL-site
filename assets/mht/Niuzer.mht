Content-Type: multipart/related; start=<op.mhtml.1364584085390.d4038834116d9b4e@192.168.1.56>; boundary=----------qTBjXnmaI6qvT5AepQBBtZ
Content-Location: http://www.niuzer.com/Space-Astronomy/Water-dimers-detected-in-atmospheric-conditions-1681list.html#/page/2441
Subject: =?utf-8?Q?Water=20dimers=20detected=20in=20atmospheric=20conditions=20::=20Niuzer?=
MIME-Version: 1.0

------------qTBjXnmaI6qvT5AepQBBtZ
Content-Disposition: inline; filename*0="Water-dimers-detected-in-atmospheric-con";
 filename*1="ditions-1681list.html#/page/2441"
Content-Type: text/html; charset=UTF-8; name*0="Water-dimers-detected-in-atmospheric-con";
 name*1="ditions-1681list.html#/page/2441"
Content-ID: <op.mhtml.1364584085390.d4038834116d9b4e@192.168.1.56>
Content-Location: http://www.niuzer.com/Space-Astronomy/Water-dimers-detected-in-atmospheric-conditions-1681list.html#/page/2441
Content-Transfer-Encoding: 8bit

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html dir="ltr" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Water dimers detected in atmospheric conditions :: Niuzer</title>
<base href="http://www.niuzer.com/" />
<meta name="description" content="08.03.2013 - London, UK (SPX) Mar 07, 2013
   
 Physicists in Russia are the first to detect water dimers - bonded pairs of gaseous water molecules - in condi..." />
<meta name="keywords" content="Physicists in Russia" />
<link rel="shortcut icon" href="favicon.ico" />
<link rel="stylesheet" type="text/css" href="css/frontend/style.css" />
<link rel="alternate" media="handheld" href="http://m.niuzer.com/" />
<script type="text/javascript">
	var HOST = 'http://www.niuzer.com/';
	var UPLOAD_URL = 'http://uploads.niuzer.com';
	var XYZ = '6LdX1MISAAAAABuzYMCEA6yBfNl_P1_Uqo38jjxs';
</script>
<script type="text/javascript" src="http://js.niuzer.com/common/jquery.js"></script>
<script type="text/javascript" src="http://js.niuzer.com/frontend/notices.js"></script>
<script type="text/javascript" src="http://js.niuzer.com/frontend/scripts1.js"></script>
</head>
<body>
<div class="bg">
<div class="top_header">
	<div class="header"> <a href="http://www.niuzer.com/"><img src="images/frontend/logo.png" width="132" height="47" alt="Niuzer - Local News" title="Niuzer - Local News" /></a>
		<form class="search" name="search" method="get" id="mainSearch" action="search">
			<div class="search">
				<input type="text" class="search" name="q" id="keyword" onfocus="javascript: if (this.value=='Search News &amp; Discussions') this.value=''" onblur="javascript: if (!this.value.length) this.value='Search News &amp; Discussions'" value="Search" />
				<input type="hidden" id="searchType" value="1" name="xx" />
				<input class="search_b" name="searchSubmit" value="" id="searchSubmit" type="submit" title="Search" />
			</div>
		</form>
	</div>
</div>
<div class="menu_bg">
	
<div class="menu_pos"><div class="menu">
<ul id="cssdropdown">
	<li class="mainitems"><a href="http://www.niuzer.com/" class="menu_home">Home</a></li>
	<li class="mainitems">
		<a class="mainitems" id="c9" href="Business/"><strong>Business</strong></a>
				</li>
	<li class="mainitems"><a class="mainitems" id="c2" href="Politics/"><strong>Politics</strong></a></li>
	<li class="mainitems">
		<a class="mainitems" id="c3" href="Entertainment/"><strong>Entertainment</strong></a>
				</li>
	<li class="mainitems">
		<a class="mainitems" id="c30" href="Technology/"><strong>Technology</strong></a>
				</li>
	<li class="mainitems">
		<a class="mainitems menu_on" id="c39" href="Science/"><strong>Science</strong></a>
						<ul class="subuls">
				<li><a href="Space-Astronomy/">Space &amp; Astronomy</a></li>
				<li><a href="Energy/">Energy</a></li>
				<li><a href="Environment/">Environment</a></li>
			</ul>
				</li>
	<li class="mainitems">
		<a class="mainitems" id="c64" href="Lifestyle/"><strong>Lifestyle</strong></a>
				</li>
	<li class="mainitems"><a class="mainitems" id="c46" href="Health/"><strong>Health</strong></a></li>
	<li class="mainitems">
		<a class="mainitems" id="c17" href="Sports/"><strong>Sports</strong></a>
				</li>
	<li class="mainitems"><a class="mainitems" id="c45" href="Education/"><strong>Education</strong></a></li>
	<li class="mainitems"><a class="mainitems" id="c42" href="Animals-Pets/"><strong>Pets</strong></a></li>
	
	<li class="mainitems">
		<a class="mainitems" id="c62" href="US/"><strong>U.S.</strong></a>
	</li>
	
	<li class="mainitems">
		<a class="mainitems" id="c61" href="World/"><strong>Local News</strong></a>
			<ul class="subuls">
								<li><a href="favorite-locations.html">Set My Locations</a></li>
				<li><a href="local-news.html">US Local News</a></li>
			</ul>
	</li>
</ul>	
</div></div></div>

<script type="text/javascript">
	var ACTIVE_MENU = 39;
</script>


	<div class="submenu">
		<a href="http://www.niuzer.com/">News</a> <em>/</em><a href="Science/">Science</a> <em>/</em><a href="Space-Astronomy/">Space & Astronomy</a> <em>/</em>	</div>
	
<div class="main"><div class="content_left">
<script type="text/javascript" src="http://www.google.com/recaptcha/api/js/recaptcha_ajax.js"></script>
<script type="text/javascript">
var COM_MIN_LENGTH = 30;
</script>
<script type="text/javascript" src="http://js.niuzer.com/frontend/comments.js"></script>
<script type="text/javascript">
_comment._post_id = 16812441;
</script>



<div class="view">
	<cite><span>08 March 2013</span> &mdash; <a href="search?p=http://russodaily.com&xx=2">Russo Daily</a></cite>
<a target="_blank" href="go/Space-Astronomy/Water-dimers-detected-in-atmospheric-conditions-1681list.html#/page/2441"><img src="http://uploads.niuzer.com/news/03_2013/150/imge63865885ce8f9019c23661f8d5e34ab.jpeg" width="150" height="150" alt="Physicists in Russia" /></a>	<h1><a target="_blank" href="go/Space-Astronomy/Water-dimers-detected-in-atmospheric-conditions-1681list.html#/page/2441">Water dimers detected in atmospheric conditions</a></h1>
	<p>London, UK (SPX) Mar 07, 2013      Physicists in Russia are the first to detect water dimers - bonded pairs of gaseous water molecules - in conditions similar to Earth's atmosphere. Such dimers have been predicted to have important effects on the Earth's radiation balance and atmospheric chemistry, so this latest breakthrough could help scientists gain a better understanding of how their presence affects climate.     Water vapo <a href="go/Space-Astronomy/Water-dimers-detected-in-atmospheric-conditions-1681list.html#/page/2441" class="underline_none">[...]</a></p>

<div class="ntopix">
	<span>Topics:</span> 
	<h2><a href="Space-Astronomy/">Space & Astronomy</a></h2> 	        <h3><a href="topic/Russia-and-Poland.html">Russia and Poland</a></h3>
        	<div class="clear"></div>
</div>

<div class="osxx">
	<ul class="sursa"><li><span>Source:</span></li> <!--<li><a href="http://russodaily.com">Russo Daily</a></li>--> 
        <li class="cfs"><a target="_blank" href="go/Space-Astronomy/Water-dimers-detected-in-atmospheric-conditions-1681list.html#/page/2441">Read the full story on <strong>Russo Daily</strong></a></li></ul>
	<ul class="share"><li><a rel="nofollow" href="http://www.facebook.com/share.php?u=http%3A%2F%2Fwww.niuzer.com%2FSpace-Astronomy%2FWater-dimers-detected-in-atmospheric-conditions-1681list.html#/page/2441&t=Water+dimers+detected+in+atmospheric+conditions" class="share1" title="Share on Facebook" target="_blank">FaceBook</a></li><li><a rel="nofollow" href="http://twitter.com/home?status=http%3A%2F%2Fwww.niuzer.com%2FSpace-Astronomy%2FWater-dimers-detected-in-atmospheric-conditions-1681list.html#/page/2441" class="share2" title="Share on Twitter" target="_blank">Twitter</a></li><li></ul></div>
</div><div class="clear3"></div>
	

	<div class="panou_gri porange">
		<h4><span><strong>Comment</strong> &amp; <strong>Start a Discussion</strong> on this subject</span></h4>
		
		
		<form class="post_comment" method="post" action="" name="post_comment" id="commentSingle" onsubmit="return _comment.sendComment('commentSingle')">
			<input type="hidden" name="news_id" value="16812441" /><input type="hidden" name="" id="is_connected" value="" /><input class="comment_parent" type="hidden" name="parent_id" value="0" />

						
			<div class="formErrorContainer" style="display: none"><span class="error formErrorMessage"></span></div>

			<span class="notif" style="display: none"></span>

			<table cellspacing="0" cellpadding="0" class="form1">

							<tr><td class="form1_1"><label for="_author">Author:</label></td><td class="from1_2"><input type="text" id="_author" size="40" name="_author" value="" class="txt_1 _author" /><span class="default author_check">&nbsp;</span></td></tr>
				<tr><td class="form1_1"><label for="email">E-mail:</label></td><td class="form1_2"><input id="email" type="text" size="40" name="email" value="" class="txt_1 _email" /><span class="default email_check">&nbsp;</span></td></tr>
			
			<tr><td colspan="2" id="tinyMCEContainer"><div class="bbcode" id="addForm"><textarea id="comment" name="comment" cols="75" rows="7" class="mceEditor commentarea"></textarea></div></td></tr>
	
			                    <tr>
                        <td colspan="2">
                        <div id="captchaContainer">
                        </div>
                        <script type="text/javascript">
                            Recaptcha.create('6LdX1MISAAAAABuzYMCEA6yBfNl_P1_Uqo38jjxs',
                                'captchaContainer',
                                {
                                    theme: 'white'
                                }
                            );
                         </script>               
                        </td>
                    </tr>
                	<tr><td colspan="2"><div class="button buttonxx"><input type="submit" name="trimite" value="Start Discussion" class="button" /><span class="preloader4" style="display: none;"></span></div></td></tr>
</table></form></div><div class="clear2"></div><div class="banner_s"><script type="text/javascript"><!--
google_ad_client = "ca-pub-0760346771173038";
/* Niuzer_com_view */
google_ad_slot = "4869740988";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><div class="sponsored">
<a class="sponsored" href="debates/Space-Astronomy/"><strong>Space & Astronomy</strong> Discussions</a>
	
<div class="a1" id="discussion_3776">
<!--<a href="debates/Space-Astronomy/A-tribute-to-the-Apollo-14-fantastic-photos-list.html#/page/3776" title="A tribute to the Apollo 14 [fantastic photos]"><img src="http://uploads.niuzer.com/discavatars/50/imgac74e609bf9c7104d5ccb79299fd900f.jpeg" alt="United States Apollo" width="50" height="50" /></a>-->
<cite><dfn><span class="time">10 Mar 2013</span> &mdash; <em>Niuzer Bot</em> | <span class="nrcom" title="1 Comments">1</span></dfn></cite>
<h2><a href="debates/Space-Astronomy/A-tribute-to-the-Apollo-14-fantastic-photos-list.html#/page/3776">A tribute to the Apollo 14 [fantastic photos]</a></h2>
Apollo 14 was the eighth manned mission in the United States Apollo program and the third to land on the Moon. Here, we present a stunning photo album with the shuttle, the crew, and the Moon.
 ...</div>
</div><div class="panou panou_s"><div class="title"><h2><a href="Space-Astronomy/">Related News</a></h2></div>
<ul class="news_left"><li><cite><span class="time">20 Feb 2013</span> &mdash; <em>Popular Science</em></cite> <a href="Technology/Proposed-Asteroid-Destroying-Satellite-Sounds-An-Awful-Lot-Like-A-Death-Star-1656list.html#/page/6638">Proposed Asteroid-Destroying Satellite Sounds An Awful Lot Like A Death Star</a></li>
<li><cite><span class="time">24 Jan 2013</span> &mdash; <em>The Wenatchee World</em></cite> <a href="Washington/Russian-objections-spare-kids-hospital-1612list.html#/page/9568">Russian objections spare kids hospital</a></li>
<li><cite><span class="time">24 Nov 2012</span> &mdash; <em>The Straits Times</em></cite> <a href="World/Russia-frees-physicist-convicted-of-spying-for-China-1519list.html#/page/5784">Russia frees physicist convicted of spying for China</a></li>
<li><cite><span class="time">13 Nov 2012</span> &mdash; <em>Reuters</em></cite> <a href="World/Russia-paroles-scientist-jailed-under-Putin-for-spying-1500list.html#/page/7680">Russia paroles scientist jailed under Putin for spying</a></li>
</ul><ul class="news_right"></ul></div><div class="clear3"></div>
<script type="text/javascript">
	$(document).ready(
	function(e) {
	updateNewsView(16812441, 1);
	}
);
</script></div>
<div class="content_right">





<div class="banner">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-0760346771173038";
/* Main Niuzer.com */
google_ad_slot = "7428247597";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>

	<div class="myfav">
		<div class="tabs">
			<div class="tabs_menu">
				<div id="myLocations"><span><a href="favorite-locations.html">My Locations</a></span></div>
				<div id="myCategories"><a href="javascript:LoginWindow.open()">My Categories</a></div>
			</div>
			<div class="tabs_right">
				<a class="b2" href="favorite-locations.html" id="userCategoriesManualLink">Change</a>
			</div>
		</div>
		
		<div id="userLocationsSelected">
			<span class="message" id="noLocCat1">Please insert the <b>City</b> name, <b>Country</b> or <b>US State</b>!</span>		</div>
		
				
		<form name="userCategoriesSearch" id="ucForm" action="#" method="post" onsubmit="return userCategories.search()" class="fav_search">			
			<div id="userCategoriesSearch">
				<span class="fav_search">Type your <strong>City</strong>, <strong>Country</strong> or <strong>US State</strong></span>
				
				<input id="userCategoriesKeyword" type="text" class="fav_search" name="categ" onfocus="javascript: if (this.value=='City, Country or US State') this.value=''" onblur="javascript: if (!this.value.length) this.value='City, Country or US State'" value="City, Country or US State" />
				<input class="fav_search_button" id="search_categ_input" type="submit" title="Search Location" value="" />
				<!--preloader--><span id="userCategoriesPreloader" class="fav_loader" style="display: none">&nbsp;</span>
			</div>
		</form>
		<div id="userCategoriesResults"></div>
	</div>
	<a style="padding: 17px 0 0 0; display: inline-block;" rel="nofollow" target="_blank" href="http://www.sunlize.com">
		<img width="310" height="144" alt="Share anyting around you and your area" src="http://www.sunlize.com/images/static/ads_feb_2013/niuzer_com_banner.png">
	</a>
		
    <div class="panou panou_s"><div class="title"><h2><a href="Space-Astronomy">Space & Astronomy</a></h2></div><ul><li><cite><span class="time">Last hour</span> &mdash; <em>The Daily Galaxy</em></cite> <a href="Space-Astronomy/An-Infinity-of-Dwarfs-A-Visible-Universe-of-7-Trillion-Dwarf-Galaxies-1717list.html#/page/0603">An 'Infinity of Dwarfs' --A Visible Universe of 7 Trillion Dwarf Galaxies</a></li>
<li><cite><span class="time">Last hour</span> &mdash; <em>The Daily Galaxy</em></cite> <a href="Space-Astronomy/The-Daily-Poll-Is-the-Evolution-of-Life-Coded-Into-the-Physical-Laws-of-the-Universe-1717list.html#/page/0604">The Daily Poll --&quot;Is the Evolution of Life Coded Into the Physical Laws of the Universe?&quot;</a></li>
<li><cite><span class="time">Last hour</span> &mdash; <em>NASA Watch</em></cite> <a href="Space-Astronomy/DRFC-Just-Spent-15528-on-Killer-Tracks-Music-1716list.html#/page/9977">DRFC Just Spent $15,528 on Killer Tracks Music</a></li>
<li><cite><span class="time">Last hour</span> &mdash; <em>Universe Today</em></cite> <a href="Space-Astronomy/5-Weird-Things-About-Vesta-1716list.html#/page/8976">5 Weird Things About Vesta</a></li>
<li><cite><span class="time">3 hours ago</span> &mdash; <em>PhysOrg.com</em></cite> <a href="Space-Astronomy/With-or-without-you-The-role-of-the-moon-on-life-1716list.html#/page/8416">With or without you: The role of the moon on life</a></li>
</ul></div>




</div><div class="clear"></div><div class="footer">
<a href="http://www.niuzer.com/">Home</a>
<a href="about-niuzer.html">About Niuzer</a>
<a href="help.html">Help &amp; FAQ</a>
<a href="widget.html">News Widget</a>
<a href="World/">World News</a>
<a href="local-news.html">US Local News</a>
<a rel="nofollow" href="contact.html">Contact Us</a><br />
&copy;2009-2013 Niuzer - <a rel="nofollow" href="terms-and-conditions.html">Terms of Service</a> <a rel="nofollow" href="privacy-policy.html">Privacy</a>

<!--<a href="http://www.facebook.com/pages/Niuzercom/119009008160421" class="facebookfollow" rel="nofollow" title="Find Us on Facebook" target="_blank">FaceBook</a>
<a href="http://twitter.com/Niuzer_com" class="twitterfollow" rel="nofollow" title="Follow Us on Twitter" target="_blank">Twitter</a>-->
</div></div></div>
<div id="fb-root"></div>
<script type="text/javascript">
	var __FBID__ 	= '167059156638727';
	var __FBHOST__ 	= 'http://www.niuzer.com/';
</script>
<script type="text/javascript" src="http://js.niuzer.com/frontend/fb/all.js.php"></script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-19569953-1']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<script type="text/javascript"> 
document.getElementsByTagName('html')[0].style.display='block';
</script> 
</body>
</html>
------------qTBjXnmaI6qvT5AepQBBtZ
Content-Disposition: inline; filename=favicon.ico
Content-Type: image/x-icon; charset=UTF-8; name=favicon.ico
Content-Location: http://www.niuzer.com/favicon.ico
Content-Transfer-Encoding: Base64

AAABAAEAEBAAAAAAAABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAA
AAAAAAAAAAEAAAAAAAAAAAAAaTkFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
AQEAAAAAAAAAAAEBAQAAAQEBAAAAAAAAAAABAQEAAAEBAQAAAAAAAAABAQEBAAAB
AQEAAAAAAAABAQEBAQAAAQEBAAAAAAABAQEBAQEAAAEBAQAAAAABAQEBAQEBAAAB
AQEAAAABAQEBAAEBAQAAAQEBAAABAQEBAAABAQEAAAEBAQABAQEBAAAAAQEBAAAB
AQEBAQEBAAAAAAEBAQAAAQEBAQEBAAAAAAABAQEAAAEBAQEBAAAAAAAAAQEBAAAB
AQEBAAAAAAAAAAEBAQAAAQEBAAAAAAAAAAABAQEAAAAAAAAAAAAAAAAAAAAAAP//
AACP8QAAj/EAAI/hAACPwQAAj4EAAI8BAACOEQAAjDEAAIhxAACA8QAAgfEAAIPx
AACH8QAAj/EAAP//AAA=

------------qTBjXnmaI6qvT5AepQBBtZ
Content-Disposition: inline
Content-Type: image/png
Content-Location: http://www.niuzer.com/images/frontend/bg.png
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAA8oAAAJYCAMAAACNaO/6AAAAA3NCSVQICAjb4U/g
AAADAFBMVEUCGGPi+PgAZsxVVVXMAAAMjiJDbJPxx8/e3t5Rlz0HZrbwtg6svs+m
GhqZmZnm/OWdrcxYdrjdU1J2QpN9kbtc1PaZAADQoqJZlbbVbCiz3+kxXItrjDpJ
zPGV5egzMzOnscjxlJxBcK94SJypUFF0kK4AzADbIShyp9DMzMxqfqx8AwMiQoNS
a6TQ7trm5uY7ZJGdqsRKcpfM///v7+/D9fvVdGzYvVr5vLxPZZkFCIFIk0JxhrUx
T40PnjqT0NiMnL5g32A7Wpbe5u6H5PdIo9RDYp2bdgm9z93+l1DyBR7+eB56vt1j
g6UhPHtmZmaIxEEzc0QmdZ/123jv8Par7va3l4//8rZaxnimaGuV6Pef7J/+Dyr/
////PluiOy1onbwvSoWlpaWVb6//AAD0eXPQzL/39/dKXnWwu9QZoN3Q6fA7X6yu
2OtSZpXFxcX86Oiym5l01fC9JSkaPaqMjIwnS41mq7Nxs77o7PAw1jBrhbPw/PD/
Zmb/na7+pmp0rUmmnH1KZJ3C8fsOVjGura7YOzIWiMcUi9EWIRbxt49slevpoDk5
bbB9fX2Uv9z/7+9H2ErL1end9/27osvaAAd7KyY8W5uj6PR1TSkNKYVVcaZje62E
nbUWaiL/h5yUosC1xdY7UoO9vb2MY6ix1rul1dz/ZgBall+Gmb9Yep8uhL+XvM//
iTpKSkr72tj/wCeefT+wh4LzKyYpUXbWhoH//8z/boY0mkUnjc5ezOvW8ff2//+3
nC5phsU5hau1Agne8PeM4+ePlKP4yFhJZqKIp+x6lrTS1teYgLIMEaNBY67G0t5s
gq5Ui8/tb1PvAAAyV6j/VmvIudfV3uf///DxPTiltM/v9/bA3ux33/nFHRdbP4G1
tbUqe6Tdu7xBh62WrMQ8iFG9S0bwFzD1y66NnM1eeKuGs8gyUpN+0pP/zMyCvsrm
3tj4r33o8fVxlrcbtfGCVKD+ITtuhJ1LaJ5ac6aElLy07/j3pqCY0997jbQuU6Y5
XKtZbJrq/P5L0hOgAAAACXBIWXMAAArDAAAKwwE0KSSrAAAAFnRFWHRDcmVhdGlv
biBUaW1lADAzLzI4LzEx/l2HpQAAABx0RVh0U29mdHdhcmUAQWRvYmUgRmlyZXdv
cmtzIENTNui8sowAACAASURBVHic7d0PXFP3ofdxOn2UKWWZVdnksautzkJJIzwZ
dV68ZQlNEas+u6V1cv35b+hp52VSaGl5WPVeMrW1rbJFCiu4Jui00KldN+0qmdXd
UWhv8FEXl6jFyrRSrlWfVRuotPT5/U7+kECQQyQ5yY/v25fk5OQPCeTD75yTwyEq
HiBEUm6MXUV9Y3I/g3AWFf//IETk/l7LDikHE01ZIBACAlJGysFEU5b7NT5cIGWk
HExIOWSQMlIOJqQcMkgZKQcTUg4ZpIyUgwkphwxSRsrBhJRDZlilPE8xr+9M33KN
WuNAKdvqYpCyVEg5ZIZTytOM04zNtN0ZPnO9u62zWWwWRUpKc12/KauMzcZpiuJi
SzRSlgAph0wEpDxq37oec9Z1B3o3rbZR8Smt2xpjjD4te5XcbNXOox9MNiGzrp+U
LXUpFvqh0ThjmgopDwwph0wEpLxv3WXW8Bz2n0oN7F7mmVrjRzWOijeaTK39pGwk
1pTmmHkpFkIs/aQcE1+ntmyzqumC+jykLAFSDpkISHndOrV670eX57gFdCfbTI3x
dTEmWwpt2uY/ZROJSWm0k+JpKUZzsf+UG+O3qU0z4lMy1bYZKUhZAqQcMhGQ8px1
dkr90brdtOPdu3cHcBczFKa6+GmmGEVMzLz4FJvPsOxeTbaaG1MUJNtqF1pTphVb
6/qmHF03w6Q2xo+qmzFDobak1EUj5QEh5ZCJhJTnXL78kZrGfHn37sBSrmttHTXD
aLK1trbGmIzxM1qNdT0XOovdZrHMq7OQYqvVmk0yU+oslsbeKcfMm2dVNcen1NXV
jYqfpo6eN8+ElAeClEMmMlJeN2f3Jhrzpl1z584NIOXG5hl1NpPCiS5kz2hu7rnQ
WWyMoq7xiqC1WrVaq9asnVanUPROeVuryjRqRp3TjBSLqrUVKQ8EKYdMBKS8e47a
fmnT7jmX7Ifn7KICuY9RNhMdkm02m0LRalL4WVeuS5mnFVjIxTRnK7H6WVdW0YXq
GfPq2CW05XjP8jVSvgGkHDIRkbKKriur1s39yHBpd8Apx7CS6aDcSlMe5X2R550o
rd1qpSHTYdkqWOf52+wlpsyypy3PqLMi5YEh5ZCJhJTpKvKmYnvx7rkquogdYMqK
mNYYY92oOoWt1dTqN2U6KluyLY3N27TFVnM/KdfNmDeqOdMSQ8dwpCwJUg6ZiEh5
7txdcy4dvrRrnaF4d+CjsonttbnN1P+onG0lreKbUpZ+R+VRdfEK8U0ppCwNUg6Z
SEh57tzdc3ftVhk27bpkWBfwqKwwsW1dLOX+RuVsq5mmXGcy0wVsv+8rW+iwPoOm
rGqcgZSlQcohEwEpz527SXV5167Lhku7Nhk+CizlFDYqT4tnKRtj+hmVi2nKNppy
pmARtP5H5VE0ZSNNeRpSlggph0wEpLxrrt2uosOy4fDuOYZLcwNKeQYN2JVyq2mb
37296mjAZoWYsrWffbBVzTN6UsY+2FKwlM1DR+5cwlkkpLxr02E6Ku+6pJqz+3CA
KcenKGJinCnbbCm+l7hN0wqCM+Ur2mkp/lJWZ9bNmNEqpjyqzqJGygMb4pTDGVIe
0Ld37ZrL3k+eO1f8/+0hvvuUG2NXUd/YED8grrCUhbAgd+lBFwEpP/btXV6+/dgQ
3z1SDqbwSTmcDZeUgwwpBxNSDpVIWMAOMqQcTCxlu2Ry5xDJkDJSDqrBpRzO5E51
IEgZKQcVSzk7jMn9A2JoIGURUg6mcE85nA0uZ6SMlIOKpXwlyOROLjwgZQiqCP2j
rILcYQ5eMVKGYMKfSg8dub/XwLUouR8AAAwFpAzABaQMwAWkDMAFpAzABaQMwAWk
DMAFpAzABaQMwAWkDMAFpAzABaQMwAWkDMAFpAzABaQMwAWkDMAFpAzABaQMwAWk
DMAFpAzABaQMwAWkDMAFpAzABaQMwAWkDMAFpAzABaQMwAWkDMAFpAzABaQMwAWk
DMAFpAzABaQMwAWkDMAFpAzABaQMwAWkDMAFpAzABaQMwAWkDMAFpAzABaQMwAWk
DMCFKDUAcAApA3ABKQNwASkDcAEpA3AhigAAB5AyABeQMgAXkDIAF5AyABeQMgAX
kDIAF5AyABeQMgAXkDIAF5AyABeQMgAXkDIAF5AyABeQMgAXkDIAF5AyABeQMgAX
kDIAF5AyABeQMgAXkDIAF5AyABeQMgAXkDIAF5AyABeQMgAX8DejALiAlAG4gJQB
uICUAbiAlAG4gJQBuICUAbiAlAG4gJQBuICUAbiAlAG4gJQBuICUAbiAlAG4gJQB
uICUAbiAlAG4gJQBuICUAbiAlAG4gJQBuICUAbiAlAG4gJQBuICUAbhAUy6mVAAQ
qVjCxVHFKBkgwokpy/2XbgBgKCBlAC4gZQAuIGUALiBlAC4gZQAuIGUALiBlAC5E
qVTRMGjxEADxFSf3/o2RSVLKcj/ISKSSO4rIhJQDhpSDBCkHBCkHTErKxXI/yIgk
dxSRCSkHDCkHi9xRRCakHDCkHCxyRxGZkHLAkHKwyB1FZELKAUPKwSJ3FJEJKQcM
KQeL3FFEJqQcMKQcLHJHEZmQcsCQcrDIHUVkQsoBk5Ky3I8xMskdRWRCygFDysEi
dxSRCSkHDCkHi9xRRCakHDCkHCxyRxGZkHLApKSMzV6BkDuKyISUA4aUg0XuKCIT
Ug4YUg4WuaOITEg5YEg5WOSOIjIh5YAh5WCRO4rIhJQDhpSDRe4oIhNSDhhSDha5
o4hMSDlgSDlY5I4iMiHlgCHlYJE7isiElAMmJWUccTMAOOJmQJBywJBykCDlgCDl
gElKGX+dYvCQckCQcsCkpCzhOgBDR+4oIpOELyxShtCSO4rIJOELi5QhtHxeoS3r
oR8tSBnCm88rdH20Fvxbj5QhvPmmrJX74YQrpAzhDilLgpQh3CFlSZAyhDukLAlS
hnCHlCVByhDukLIkSBnCHVKWBClDuEPKkiBlCHdIWRKkDOEOKUuClCHcIWVJkDKE
O6QsCVKGcIeUJUHKEO6QsiRIGcIdUpYEKUO4Q8qSIGUId0hZEqQM4Q4pS4KUIdwh
ZUmQMoQ7pCwJUoZwh5QlQcoQ7pCyJEgZwh1SlgQpQ7hDypIgZblt9+aad62x8Zpb
t8+1Ldf6sIgX1OflnZzkY2e9hM9+7y9+1mfexb+V9b2ilJdGkCBlSZCy3Laf6OFO
udFrnk/KlmsXFL1cEFtebbEzZm8nVw/4yf/1u9/9Re95n2fl/q33PEHaayM4kLIk
SFluA6Ss9km5u6RE2UtbCbtGpsFwuBe7YedAn5uW/H/u7TXv89zc31/sNU/WkvGH
ZiRCyjJzprzdJ+VrzvGYfcj3SbnUp+JSip3QC3bW17N67fZ6r5j7Tdm1UM1K9ixf
uxaqWcm9l6/lLRl//k0i/Pk3mQ2QctNj3lf2SVmRmZlpo3M0REy5/rD+W2e2OCOu
F/WX8r3f/Vd24lPyxazP2YlvyWqBfZS5ZPxR1oBI+MIi5aE1qJQ1PSF3W1hnVp0r
5dX19YaHxowZs1rEQl69ur+Uf/Hd7/6AkB94l0z+lpv7LCHP+pYsviLkLhkpB0TC
FxYpDy0asWvztU/K3U79pqxTiDO0GmfK1/WrVxse+trG11nEBoNBDPp6P5/yZ7Ti
H7D/Xluvy2jFz7L/3kvXgvSXRRDJWkTEkvCFRcpDa3CjcqmHlpBik0mho+gF99Ny
Dz80ZuPrD33MbNGzlO/v95PSjsWR2RvtWByZvQlSXxXBJHMTEUrCFzYSUjabzTe+
Qv7atRfzQ/NYBjJAyqt8Uq7RuSnthCja2yvoZA294P6TJ0/Wb9m4ceMYp4fq6Yz+
U2Yt93kXirY8rvc82ZeuCVIOjIQvrFwpC6PXrp0pWrs23/nG6WDvooxyTo2+uvjq
8bhB30EwBJRyRXsFTbm2KD7elfIWWu7qhzZufNtpzN2r6YxPbvBpf/CDvvOefbbv
PEEI9IkNGbmjiEwSvrCypTzl91nnz1+9evX8+cJH7WKWTJ9X2t6Zoy9SZYLgeRWK
E/kX175FvXqR/RyYuTj36MhFBq97d/2/wecX2H+BeF7dzhk3/bz8va98rWfWGn8p
V2yz2QSzOdOoMFY4U/7EmbKr5LcfyBso5QgidxSRScIXtnfKbCcjSd8Ruqz2jW8M
+vvYY3TquelZdHVu+tKlb9rL1r66lnnVNUILrrIJefX8+SVLzm/4UKCdlXnG4bKZ
b13Nyiovz8q6+tZos3n01dyswtiexy2wZfIbdum+0Oy+onPGzbfsL+VutTq/qWkV
tWa9b8qlFUy7xf1jxUoXsd0pn3zouefepivJbJLtxImUhzMJX1iflO157x482Hbk
Xb2EGxb/5gd/XBHYN9NJHZ2wcnFW1oa4+nxyccNINkIvLj/9qLiYPPP41ePHjy9Z
MqXs0risrKyJS9eYBToM03lrL9L4yqbQqx4qnDr1XGF57pKZ5otXc8uXbvdawDZ0
VupvOC4LpL6zkw7j+k49bVmcJc646Zb97YPNtl0/5uZ9ZVfKRc6U6ae2FrlTpunS
lJ+77rUnNlIexiR8Yb1T1h/RKUtKrsU/eeygdcAbCvf+8fnYQX4Xv3Gv74if/2pW
blYqe7Nz1aLpubkjb106NU5dll9G8lMPlS9efGji1Etm1cqsQ4vW2C8ev3q+nMq6
+iotnaZ765urLl26lDBlce64aJryyEXee/N25uTk3KhLgRgqKys7hXp6PdfPLUNl
Tk5niFe3a0rjxVG51ZJJv1tWk0XhTpml+9BzP3nugTz3oIyUhzUJX1ivlPXHXvnP
VSqVqql2VpSE8fYb//Tz7T4z8kePLiNCvqhMXMv1Skl/9xaB/Pcveu0irH4rK3fx
Stq3fUpW+cSp2+PG0dH4b6kqEv3o+aOFsS0J9KKZWYdazBeX5I48NDX1zdRzWVlT
8t+iy9NPOFeNhbdyy/ddWnL09JveGXZWVuZ4Vp29VrI9U8RAI64U9Dk0aOcSdj2d
rHSP0P4N+SajmtL2eKaoqKhYfaLklaKi+Box5Wcm5VEPPPeTjW8/wFyfNClv0jND
/enlIXcUkUnCF7Yn5fpjUU/sF6eEa3u293f9HjTlNT4zVm44PW4vKdvLsM1ap89d
6rlwS3y8lvzon3/T607yj+fmnn/UXPbq1ZG3bm4ys7NHRy5S0bXh40cL4/Ivzpw5
862sQ9vNx3NHLn2iyWA2W6dkTd93PDdrUbHrHmYuPnoubsnRwvXeKdMRNqeeuH6l
yL0q7H3K0s0xCJ0ZlRmdbG1ZYOdzKsVJr+1fPhvGhr7lP2iSilxU6hPTxDMVfyAs
5Z07d04q+An1HPMQPc9LyhAkPSm/ELX5hGtS3SRO5c+cedE9a//ChftdkwZaVH09
TfnXCfTciYsz99KXuEoljJs+cuSGi+xNIoGcWDly5MjCD3s+j7bVZveTMqHLxrnn
p7yaNfLlFXQYLVtZnpV17l7aH406a7rofFZhy+irR29d71w4L1tSvuFqVtajBleb
a8WUy5cmeN9r5amMjEp9p4he0WB3RmlwVkufgdf1Op2T9RmnTlU6J8XruH8OONu2
G6ghX/zWKHW6O+986SX6UVss1Mbfeeeduja2t5eYsqtlhqWch5ThRjwp1z8Ztcr3
orWp+/adGzeTTe5/+L777nvjYda1Pe/ChRdeONgqOFPeO2Vf6riVe81NTdGpGzZM
Hzl9Lbv+3nG06unnaMonFi5c6P5xIPhJmaaYu3hx1qGX17NzM6cXpl79/YfOlMuX
iqZnFa6Pu3p0abSzsfwl5efGLc6iC+FiymV0AXtq3NXyRT6b6miiOW6dbOxlK87m
zhx2She/2XlCfxo5U2aV2kn9qVN0NkuW3YGhs1Ovd24To5/TQBfY2br1ULdcevBO
5uzZs21arfrCS3TizoPsN6OeybtO7Tw56aEDTEHezp3XkTLckCflvFce891ham3h
ooSmfYfY0Lr/L39a37TqTw/epyb2d9taTMfeL1pDvvFHmnL+uKnbm1IPTdXaVerU
6c/OHDfy9BR60w0jp38+5fSGBPozYOzYsX/Z71pX9pMyazGXjclmcfroOLqwnGoX
F7BvXWFtSmiiS9QjWxKuHj0X7Rwm115l6eaeX+u89auLj94aqz4+0ftdZWLPYSln
iE51Gui5TkFcpBa3cdXTmXrac4aeVBbkiJHSxg20ZCfaL71qpfhzgDXPbiCeOdU5
xF98TdtLLsro6PxaceoIG5WfFlOmTop7X5/cSSfznh7izw588aT87qwFJ7wvyD/9
Mnvl7pu4tJg8/OBT9CWt+tODcSTvyWsnTpjeL4pmKTeRZyeuMJd9fs89bExNLR/H
huPTUz7fwAbnz8sLm8jCv9DhnLWcF/+22m/KhA7LWadjxRIvni8vnDr96IYmIlxc
cvR0nOvy8jjzW0ePHr8osF00l2RNfFO99m9HF7/1KnU8a+TERVry4Zu+q+05BZ5h
udJOS8yga8FmfYZzaVrPUrazmfbOghxn8qcqxXrFyVMGQw7bHKanY3FGjkEs2XmB
lDfpBqO7xNNyU7Rq2Rl62naQ/UbzM/fn3d9L3nWkDDfiSfmFWd0+KV+euJnltXfD
PU/sH/srG5v18IO/y3/hlRXila+xlK0nCl9eMzM1dcFTTURMOZ/kr2RvGY0bTciU
kYWryIn8YrP6jbEP3yDlmWz/jjVsUM4/frTwzbiVNN3ilb/POnr0/Lg44eLx32eV
T4+7lJqVdfX4W28dzyo/NDWB7WAyna5VZ5WXH1oaqyVrj0/xHpTpqFxQUKAX128N
AtHTM2LKp06J4yo9nUBTPnUqh6ZMiz/FdBoyTrkmM+z6jMqcTnqLTjYS2ytPscV0
SsrRtfy9r9xobPQc3cv3gEDdB92iVarWNjZRxw4IdHLb/Xl5eTu9Xd828BuEMJz1
pPz+H1TOKb2eFqB+9p5YcdVw3cTbFo79FUuV7B/74KoX3mcp5816TGAp06E7bsqb
2+vFa6aWb6CL6GVTTp9eyRbVp5TTlOm68sMPs5Q7v/a2381erpS3m81la2mn55rY
ovW4D1NPFxYWnj40NfrihtPnzh0612SesqGQpnv69NJF4gYuQ1zqOWrRE/fSW9If
AQnem+vtGRMmTPCEp6dn2AYtfcGECZ2uU7391ISCDEE/ocC5XN0pGE5NOHVKXMA2
CJXuIZ1GXKmnJxkGIpG/vb2M/R0QiCR0u385yrZ9+zUNPdPtPEzfyaf7QMlwQz3r
yk/Ocr6ZbLhw8N0jR4rXTVwkBnp54oKFYx8Ul1/3v/Hgqnffrygm5GDUCnFUzp8+
8YniYtfWIHFU3ltGZq4V2AlNWVxXfvG+G6RcVpb/Kl3ALozLPzF6HNvoHWe+ePxo
1spV21uo9XH5xMpO10fT5fvtj7755qMtawzud4cMVqvV+alnFt76qPe9iil7lob9
pdxJU56QYa6nF2UIntsUOPOnAzRdnKYXFbDhWp/j3rQtZVewAY7t5XtAIICh40nZ
fmRWvPiD396U8ML78ep1h5aKo/S+e5468caDT7DJ/X/61Rpz26yS+ncrYk84F7A3
TFzkeX2nnt4wWsgXd5KmJ2Ury+k678Nj71tV/HC/KZe9enzJ1dzc3KzzV49/2ERT
fXPNxePlNOkNcYIguN/jFdxv76rVgt+chFUtH3qft2ccKKBd2p07lOsPOCPNmVAw
gQ6vdOl7wmS9WUzZwHrVO49tmTOZFm8XP0EGG6DFg/BUdppd71JJfE95gJR9f18Z
YOj0vK9sen+W0jWS5b1fo75YeA/b7HRx6csmcSWZsHXlBVqiim088uR/7ifOzV5T
Jt465QQpEwOmC9h7e+6Yplxo3T92rN5sfnjs5f5SnlJ4iC1K02XpQ4sM9uLiYntZ
3KJFi6ZOvblfWew8cKDgwIGMDLqWnGO3F0ymYXfSvAsKDtDTCQWTJxsMdGg+ZTBn
TC6glxUU0MQ7J0+gF9Ob6EnnBHY7+iNBn9Mp1GcUTKiU/JkHSHkVUoYg8dpxs/WV
WU++S9eT7fYXZu3JJ3G33rPv0sxzL8fayYn/ePBPC/fTkk3sevpj77PflP/Nr59/
ShBS75l4bl/qPlb6uJHT97r228wXR+XTTSfeGLtw/8KxbLPX1/xu9sqPe/QJdtTF
uEcfjXPtn21nRw5tiu41CgrR4hx1k7iooIoWV41VTWo6x99ObTmTD9BgRTlEP5kO
uOz/BHZCT/+RQ+rZ27UGUj+ZZk7n/aPAbC4QrzX5H5MN5lOTWd4ZBXToNtTT2HMk
fz0H9UuOQ87fIe1hmPD+dYo1j0XNelJ58OBB3Z6naB9rlr48NfVN8ReO1P/xu9/d
d18s2/iV9+67ba/M0hWTezfvWdBE7E+8fM89S9ezzPZtOBe3Ks4jtfDcJUIzfuON
F8c+fCLvzBm/W7C9D9p+o8epWrBnPf24ec8K9qme2hPLTmJHtJDtC9b3WfYV6FL0
ZLcCQiqdUwcyXHlnmM31B+glBjZ+T2Y7YfyjQCBsFp2cPFlP6gvYKcu+kk5Pnjyo
UflGx/YKbsr+DmkPw4XPLznu3775sceuNRpXXRLrKN7ekuDedJu/apWKDZvvHktZ
v2pV/CwlXcFURbMhsqlF/K0HNkau8sW2Kl+6775V0ZcuCXaTSSD3rgj4jxFEj3h+
hIqseJ4uCbjPELL5+RVk/Xdi+67Gsl26Cg4495Rim7L0bDtYQaddz2YWiHtt0bzF
PT7Ei5wbyeozxFuwN64MlQUiehV75eQJUt6GcpJzVPZ3SHsYNnodeuDEAIfIynuy
ZhV9RVqfnNXi93LBmzjHrh6S3R2jNz//nRUJC+gHgQhPLRgxgo3FT9GRusU5Tvd+
HIQYnEePtjs3PLMjV7JH4zwVf3+i3rW3tUGc55msd26qFuc6d/TWD+L3mOVI2d8h
7WHYGeQBgV54RdyWTS7M8jMWBlPTghG03wUL2JJ1wp7YpgULVDdK2as9PxW6fz1K
8L2+4OcWvX43akADpNwShJT9HdIehp9BpnxkVgkbZA1tf1g14HWHVMKIzWtGPN/S
socuYMfuiaUrzWtumLJcBkh5RRBS9ndIexh+BplyZvwrR7Zs2XKwbv2Jga88lBJG
LIhev1m9fc9mgWz+zojNe9gqsjPllnBPuVud37RqDdWyIjYIKfs7pD0MP4M94mbT
tXhlW4kxIcQl04XqPU2CmsQ+v5lOLohtiR0xook2vYKs37N5e0tLU4gfTr/6ObbX
Y36P7TVU/B3SHoabQR8890TTmjWXQh0y/REyYg/L9anvxNKxmDUSu2cFnVpBto9g
K9E3dcDAyOfvkPYwzETCX6dgVCtWsLef1sQ2CS3r2U4hqtjtJCG2iUSvj419KnbN
QLfnnL9D2sPwEikpA8ANIWUALiBlAC4gZQAuIGUALiBlAC4gZQAuIGUALiBlAC4g
ZQAuIGUALiBlAC4gZQAuIGUALiBlAC4gZQAuIGUALiBlAC4gZQAuIGUALiDloSAA
yEh8ESLloSD3txKGN/FFiJSHgtzfShjexBchUh4Kcn8rYXgTX4RIeSjI/a2E4U18
EXqlPMqfIZjr0t2d4qM75MEFj9zfShjexBdh6FL+z95CHlzwyP2thOFNfBGGLuWE
aJWbmtImhDy44JH7WwnDm/giDF3K0WrPZ1aznqNDHlzwyPhdBAh1yk1a15jclMD+
bPgajMoAQ0N8EYY65SZXyHylrB74qw0QNOKLMIQp01VkOiJTTU4hDy54kDLISXwR
hnZUjm5qinZDygBDQ3wRhjjlnq3YKqQMMDTEF+HNppyiSPE31+Q118Wz2QspAwwp
8UV4synbrDY/cy3E0jdltq6MlAGGnPgi7JWyIrPOVWBdpsKTp4kIjeLMRoGYfKJt
tVqtrX1SjqH3FtMn5WiMygDBIL4Ie4/KmdZp4uk0a6ZXnlpCWNgKQrQ+0TZamcZe
KRvFuzP2SnnNmgRfoa0tqJAyyEl8EfZOOcViZQ0arZYUrzxTigmx1lkJKfaeO6rO
ajXVmazWOp+US5z3LJT4pswzpAxyEl+EfdaV/ed5zZXnNe+5ErMfBpAyyEl8Efbd
7CVpoXkwC+PDAFIGGanFF6GfLdhSNmWxD1I3kQ0DSBlk1G/KUt5gGuXPjXcR4RlS
Bhn1n7KE3T6Qsg+kDDLqP2UJeSJlH0gZZISUhw5SBhmpxBchUh4KahWAfMQXIVIG
4AJSBuACUgbgAv46BQAXkDIAF5AyABeQMgAXkDIAF5AyABeQMgAXkDIAF5AyABeQ
MgAXvFIWbN3XfMSww3+tPulj52oztXXHj31sZTOtCbZvLbNFb596LlUUJ9uTAgiS
M2feeeesj3fOyP2YXLxStk2r9TXNRktebfe1ejUhW9/b6uu9reyQ9cVbKC0Znbry
888/37RpH1oG3pw5u+wZH8vOhmHK3SXKUpcKSqcs6SYk03D48GFacP1ht52EfPqe
76D84/c+JWQNOfn2Aw+8vYWoz53+v8y6c/I9LYCgeGdZTGYPi8USs+wduR+Ti1fK
GqWbrmTbttqSUqWGkLx6GvHOLScN9W55hNz1497uoqMyOfk6TfkBszl1+jix5UL5
nhZAULyzLNOq1VrdtNbMZWflfkwuXimXukvWNGrpWaOmtJSQnTTeSWOePGJnAzKd
Xr2ajcp0HPZNmY7K0aT49bcf2Hi2mKSe/psIKQNv6KhMh2JL2I/Kzpg1daxkoqjQ
6WjKq1fXX//a184a2IL24dWrxZTv2rHVyv7a+VYa8Y4drlE5kwh3jxkz5iz58NZb
N4iQMvDmnW99/FsfH38rDNeVNe4VZQUhxTExJRqW8nUab97GMa9//PHdd9+9haV8
nZDbdvyYbehK2LFj61+p93bsuI2Qs6uJve3JM5nRf//h/xT96lfyPS2AoDhz9lvL
fIXjZi+aLlNTRFO+8EpSRWlpDSH3nzypz9u4ceMY0fXVJ0/ez1L+9IMPtpKmT297
jxDLv8WDTQAAETpJREFUVmfKZ45kCiRTq/r7P/9vl3+S72kBBMWZM2d7OROGKdfo
XGyE1BaxsJ0pn7y+0e36SVfKO3Z8ettfSfSnW9XGD378V+OnNOXX3379yBZCfvTr
f3en/HX5nhZAUJzxQ+7H5OKdsoZqr4iJLiZEZVVNa6+gKX/CUn7uuQe2PESxkk9+
Io7KjJWo7O99cNtWspWlfOaBt4+9YiWWnlEZKQNvzpz5lz7kfkwuPilXVFQUtWsJ
Ef/KY22RM+VJk1jKxcVsPXkSRVP+QCz5th8T8t4Hn971V7KDpXxszMazd+sJufe1
P/47FrCBT2f8tCz3Y3LxWcCOr6hob7dZtIJgtVhLitgC9ic03us/ee65u8XdNn1S
/uBTQaAfbtv6VzpNSPzHJ1V7P/rIbC6mLYuQMvDGna+4ZB2+KVcUFbW3txcl1RJS
8kpRkXNUnpSXl/fAc3Rcpu7e6Z3yjq2EbKUD8tatYso28tGcF1988bKaLmMjZeDT
v3i3HL4p1xQxSa800pSjkpwpf5yXt5MNy3Rgph6atDNPTPmuu+76VHwjauuO27a+
dxdL2brwxb9QL14uIz/6OlIGLrGC33nnnTPOlt8Ryf2YXLz39mp76U7mpVZBqI2n
E22ldFTO27mTtvzAT0TXd+7Me4amfJfTbbe5Ju5iKW964y9iyx+ZX3Om/Hf5nhZA
UMRQv/3tx8vO0tH4nWW/zbRYrVa5H5OLb8riG2UvtZaVXTh259mXjugIeSbvOpXn
spNOiinf5oulbPlo7BvM2IUn//515rUfyve0AIKC/Tav/coVy8e05bOZdrPcj8eL
9y4ibS+J4o35+cuO0Yk2DSFPX79+//33X3ejU0+Lo3LflFvsl8cyl+2v/RApA9cE
68dnzyy7IvfD8OGVsqKkzalVrb5wZ1vbwRIFIZmf7PT1SSYhW91L2J7la7YbZ4J9
76ZNm/Y2vfbD10R/XyHf0wIIKsH627MfZ8v9KHx4H0VE4doJuzEhYVoNPVWwt5d3
Pk31/Kb105lsEaPlA1/iUUQSbJmZMcbXfv7zHzqtCKelD4ChdSXm47AdlQFAOutv
D8v9EHwgZQAuIGUALiBlAC4gZQAuIGUALiBlAC4gZQAuIGUALiBlAC4gZQAuIGUA
LiBlAC4gZQAuIGUALiBlAC4gZQAuIGUALiBlAC4gZQAuIGUALiBlAC4gZQAuIGUA
LiBlAC4gZQAuIGUALiBlAC4gZQAuIGUALiBlAC4gZQAuIGUALiBlAC4gZQAuIGUA
LiBlAC4gZQAuIGUALiBlAC4gZQAuIGUALiBlAC4gZQAuIGUALiBlAC4gZQAuIGUA
LiBlAC4gZQAuIGUALkSRePy7qX+x+Hcz/+LhpninDCAjuVOIdD1fSaQMwAWkDMAF
pAzABaQMwAWkDMAFpAzABaQMwAWkDMAFpAzABaQMwAWkDMAFpAzABaQMwAWkDMAF
pAzABaQMwAWkDMAFpAzABaQMwAWkDMAFpAzABaQMwAWkDMAFpAzABaQMwAWkDMAF
pAzABaQMwAWkDMAFpAzABaQMwAWkDMAFpAzABaQMwAWkDMAFpAzABaQMwAWkDMAF
pAzABaQMwAWkDMAFpAzABaQMwAWkDMAFpAzABaQMwAWkDMAFpAzABaQMwAWkDMAF
pAzABaQMwAWkDMAFpAzABaQMwAWkDMAFpAzABaQMwAWkDMAFpAzABaQMwAWkDMAF
pAzABaQMwAWkDMAFpAzABaQMwAWkDMAFpAzABaQMwAWkDMAFpAzABaQMwAWkDMAF
pAzABaQMwAWkDMAFpAzABaQMwAWkDMAFpAzABaQMwAWkDMAFpAzABaQMwAWkDMAF
pAzABaQMwAWkDMAFpAzABaQMwAWkDMAFpAzABaQMwAWkDMAFpAzABaQMwAWkDMAF
pAzABaQMwAWkDMAFpAzABaQMwAWkDBDJGt0TSBkggjU2ultGygCRzNMyUgaIaO6W
kTJAZHO1jJQBIpyzZaQMENkwKgPwAOvKADzAFmwAHuB9ZQA+YG8vAL4gZQAuIGUA
LiBlAC4gZQAuIGUALiBlAC4gZQAuIGUALrhT/h9ykvUrAMAFpAzABaQMwAWkDMAF
V8o/Q8oAEc2Z8s/+iJQBIpqYsswlI2WAm8ZSlrtkpAxw06LCoGSkDHDTosKgZKQM
cNOiyH/LHTJSBghYfLxrgq0r3/sjbPYCiEjx8e6W8b4yQCTztIy9vQAimrtlpAwQ
2VwtI2WACOdsGSkDRDaMygA8wLoyAA/6bMEGgAjU531lAIhIPnt7AUDEQ8oAXEDK
AFxAygBcQMoAXEDKAFxAygBciIoPHbmfKwDHkDIAF5AyABeQMgAXkDIAF5AyABeQ
MgAXkLKM/m1g4vVuH5jMzwTkh5RlhJRh6CBlGQ0+5T9TSBn8QcoyGnTKlZ2dnY8g
ZfAHKcvIb7zHjn3ZX8qdZnauHimDH0hZRv5C/q+DCtMvqcxvHuud8iPEbKD8tizt
E8a6+L8U36eIhpRl5Kfkg1bXZULflOvJ//oe9RWpvMlRuZ+UXfB9ikxIWUZ9S/5m
tvuy7L4pf/UVK/l7BuJndVnCZ4v1jMn+Uu75LuH7FJmQsoz6jsq/9FzWf8rfI4/0
3Yot4bPFek79puw5xfcpMiFlGfVdvO65zM8Ctidl/SMulUgZ3KLSH+/D1mXqO3Nw
0pGyBL1T/sLmuuCXFy5c+K8v+6asd6bcox4pg0uUsbkv3fhqP3MHw4iUJeizfJ3p
nJ/55RdffPFlnzejvvqqU898z8NAbkHK4BRlLPFSXVVVlZhYretKLLk5SFmK3iX/
l2tV+eAXnlni+Z6Ue/se6UTKIIoyJvZwVKenp5dUt+m6qhNvDlKWwndF+dgXx5wp
Z3/zi2PHjklKudNc/+fBp+xPfK9TiDRRxmoPh8OSnZ3d0cZSdmtTKpVt1YOGdWUp
fEbkg+PHj9eKs+0XDh4cf9DfuvIjfSBlcIlK7+mv2STQObU05TT3LGVbWm1ac6KU
eqt0XskjZSl83lHudZm/LdiGPiXriV56yjfc1wvfpUgXld7mVlVLiNZkSWMpu+d1
ZQpEsFSLkdKzPu36nm9LSy6p9twXUpbCJ2W772X+3lc2VIr9eq8qfxXI3l7AI++U
0wmxNbApXbNrVqKVWB432RzKUo2mwdFWpWMTDkdDQ0NFRQW9nH5UtrUp6UmVxia0
aZDyoPiknO17mf+UGb3XtdwbsJEy9KRc0T6ekPSk9qqqKl2JwzkvjVg1mlK6utxh
s3Upq9JqEztsyQ7H+PEl6bZ0esV0m62tqqraaFM0N2tJcgdSHpQbLWCTflPuJHr3
qNyzB2fIHzuEm6j0KoeTzWYhxKKwJTocumbXvDSSOV/z2WefJdMhozhdo7jCdvY3
6kxaLSH2NIeNrltbHA56O6H2DkKuaKvcd1aLlCXwSfmXVqtVcM7X0slf+ks5h5ac
00kqA9pxE/gWVeuuzz0nTanUNbtmlpDMJHZ6RUhPpgN0Msl+/HFimW0h1jssxFgt
aJttpGM8sXZ0OBK15I6u7yuVSFk6ny3YjPvNKHau75tRdkMO0xngPtjAN5qy0sk9
h6Wc6JrZTDKX0+XoZsGSpLFmfz+dKGZriCUpk6TN7xDSq4k10UaSjUJ6Uo2myES6
l5e67kuJlKXotYfIsS897yt/+eWXfVO+5RYx5UrzLZUuSBk8omrd9SUr2AK2UdFG
U25TulM2zW9oaGi2W2Yrrdk/TScdNVU0ZQtxLKcBO4jdqi0eT6dqGpSaTOLQKJHy
YPRK+d88o/IxzyxxhivXerOYco6eELPTV3qkDC49Kbe3d9D14KT2BpZyg3NeIl1X
1ul01YJleYPV/v1akq5po8vcmSRxtpGNypbuxEQNnZqta6Apd7cj5UEZZMp6Uuls
Oce5L7ZeP6h9sIFvUbWfeRgJUWiUdBSmKTu12a+kU8ri7A6FYF1uJMYaB7HMt5DE
IgUxdgtWh6ND00Us49Or6QJ2cloDvRfxhkhZikGmXEk6M1jIGT30g9gHG/jWO+V2
2mGpJ2Wlwk4EwaJJttMXWNf85Oz0Gkc2XVfOdhQZ6bRNIAJp1ljodWqT0rPpFUsp
dldIWYpBpnz7LV9l9DaIHTeBb1G1pR7ulHU6h2deV3JMcppG02VLbp49u63rpzUN
4x01iV0ajaOru0bTcccdHZoah9GW3N2u67ijo0anaxBv1oGUJRhkyn/uJI8UIGXw
L6pD50FTTm4Xp6rcszTzk5bPn6/RJC1Pml/zWfv82XQySVM0v0bDptuTkpLoyWx6
neU6TdHyJI37dkhZisGOyrffQm4/UOADKYNLVIfGJ+XZ4pSywjNTo9F4nfTmmus8
qei5FVKWYtAp3/4V6Sw44OUR9yH75HwaEBZ8UrbbFUW9Uw4MUpZi8CnfXk/Mh714
jggk59OAsOC9gN3AfjNCnKpCyqEQQMq3V37vFi94XxncorrG9+jq6upgpyXjbxpS
liCQlMW/AOeBvb3ADQfPlVFAKfsn59OAsICUZYSUYeggZRkhZRg6SBmAC0gZgAtI
GYALSBmAC0gZgAtRcj8AABgKSBmAC0gZgAtIGYALSBmAC0gZgAtIGYALSBmAC0gZ
gAtIGYALUemP92HrMvWdOTjpcj8vgGEmytjcl258tZ+5g2GU+3kBDDNRxhIv1VVV
VYmJ1bquxJKbg5QBQivKmNjDUZ2enl5S3abrqk68OUgZILSijNUeDoclOzu7o42l
7Mb+0nJb9aBhXRkgtKLSe/prNgl0Ti1NOc09S9mWVpvWnCil3iqdV/JIGSC0otLb
3KpqCdGaLGksZfe8rkyBCJZqMVJ61qdd3/Ntackl1Z77QsoAoeWdMu3P1sCmdM2u
WYlWYnncZHMoSzWaBkdblY5NOBwNDQ0VFRX0cvpRyf46TUVFlcYmtGmQMoBMelKu
aB9PSHpSe1VVla7E4ZyXRqwaTSldXe6w2bqUVWm1iR22ZIdj/PiSdFs6vWK6zdZW
VVVttCmam7UkuQMpA8gkKr3K4WSzWQixKGyJDoeu2TUvjWTO13z22WfJ2YQUp2sU
V6z0JkadSaslxJ7msNF1a4vDQW8n1N5ByBVtlfvOauV+XgDDTFStuz73nDSlUtfs
mllCMpPY6RUhPZkO0Mkk+/HHiWW2hVjvsBBjtaBttpGO8cTa0eFI1JI7ur6vVCJl
ADnQlJVO7jks5UTXzGaSuZwuRzcLliSNNfv76UQxW0MsSZkkbX6HkF5NrIk2kmwU
0pNqNEUm0r281HVfSqQMEFpRte76khVsAduoaKMptyndKZvmNzQ0NNsts5XW7J+m
k46aKpqyhTiW04AdxG7VFo+nUzUNSk0mcWiUSBlAHj0pt7d30PXgpPYGlnKDc14i
XVfW6XTVgmV5g9X+/VqSrmmjy9yZJHG2kY3Klu7ERA2dmq1roCl3tyNlAJlE1X7m
YSREoVHSUZim7NRmv5JOKYuzOxSCdbmRGGscxDLfQhKLFMTYLVgdjg5NF7GMT6+m
C9jJaQ30XsQbImWA0OqdcjvtsNSTslJhJ4Jg0STbCcnump+cnV7jyKbrytmOIiOd
tglEIM0aC71ObVJ6Nr1iKcXuCikDhFZUbamHO2WdzuGZ15Uck5ym0XTZkptnz27r
+mlNw3hHTWKXRuPo6q7RdNxxR4emxmG0JXe36zru6KjR6RrEm3XI/bwAhpmoDp0H
TTm5XZyqcs/SzE9aPn++RpO0PGl+zWft82fTySRN0fwaDZtuT0pKoiez6XWW6zRF
y5M07tshZYDQiurQ+KQ8W5xSVnhmajQar5PeXHOdJxU9t0LKAKHlk7LdrijqnXJg
kDJAaHkvYDew34wQp6qQMkBkieoa36Orq6uDnZaMv2lyPy+AYQYHzwXgAlIG4AJS
BuDC/wflSbAdh85d9gAAAABJRU5ErkJggg==

------------qTBjXnmaI6qvT5AepQBBtZ
Content-Disposition: inline
Content-Type: image/png
Content-Location: http://www.niuzer.com/images/frontend/alpha.png
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAAMgAAAOECAMAAADT9I4mAAAAA3NCSVQICAjb4U/g
AAAC9FBMVEX/////+vf4+fv39/f/9vDy9ffs+O3/8t/48Oz/7+Xl9ubv8vb58Orv
7+/d9N/q7vP/7M/n7fH369/t7eX/5tX859/259nW8dj/5sD/49Hm5ubw5d7z5Mzf
5u3+4c/O7tD447vl5d/c4+r/37Du4NL237jE68bn39jj4NrG6crF6sje3t7z28T/
2Z/V3ufy18P/07b316695sPR2+Xu17Tz1b+75r721qS25b205bfe1tbW1tbN2OPc
1szt06320aLZ1cjq0LvL1t+u47P/y6ms47Dvz6v1zpz/zICn4KzszaXF0dv0ypLZ
zL3nybWh36XvxqLMzMzvx5zwx5fAztv/xnC/zNj1w5yb3aD0xJL/v5Tzw4zbxrS6
ydjPxrT1vZrzv4zFxcX/v2DyvZWR2JaT2JrxvIP1uJvxu3uzxNS0w9H/uVCF1ovk
t5z/sn/xtnu9vb3xtnb/r3p/1IWuvs3/s0B+0YSpvM7/rHV40X/xrnLxrWqluMxz
z3nxqXr/rDDwqWRsznOltcXLrpTWq4vwp2bqpmn/piCds8fvpFppyXDio4FjyW3/
nFrKpovwn2T/mWahrLbon2n/nxCVrMPJoofvnFiTq8FbxWL/llDum1JaxWvMnn3R
nnVSxVpVw1//k0vvlVrullD/mQCNpr7mlWPtlExMw1TMmWZUvmLoklL/jEBQvVrj
j2Lhj2b/iTrdkFfti0pLu1dLu1OZmZn/hTNJuFPli06Bnbc/uktFt1E9uknug1Tt
g0rkhUx8mbRDtEvtgER6l7PqgEU3tkPPhGAztj0/sEnrfUj/eiHXgFnsekKOjo51
k68ysUTlekvVf1Eqrzf/dBhxj6vdd0v/cRIprjNrjKshrTH/bg5niaj/awgipy8f
pin/ZgBhhKX3YwBdgaNYfZ/vYADsXgBVe55gd450dHPkWwBQdpveWQBzbmxMdJlK
cpdKa5RCbJNHaoxDZIQ4ZI1BYX8yYIoxXok9W3g6WoQvW4UsWIEqU3r////miLaf
AAAA/HRSTlP/////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
/////////////////////////wDUesd+AAAACXBIWXMAAAsSAAALEgHS3X78AAAA
H3RFWHRTb2Z0d2FyZQBNYWNyb21lZGlhIEZpcmV3b3JrcyA4tWjSeAAAABZ0RVh0
Q3JlYXRpb24gVGltZQAwMy8yOC8xMf5dh6UAABDtSURBVHic7d19mFRVAcfxsy8j
4bgILgZNrbarWTEtKZu4uKa1SIBouAb51paLiIGUFruZuYRMGUTS21ZSlFpDmmVZ
gmYWaUYmhRqYIKQiEWHpurU5Wc4/3fe5984dFmZue37nPL8vz3NnmbveOR/PfZmZ
ZXdFPp9fuC8XaN/CfKDQaueTjBU3PrJjd6g9+x7PS0nkExHj3Jfwf06UI5czVjzy
t4helAUp+f97aMiOKMg/JEEWRg/Tv3eVhOyOgvxTEiRyQoJTMjyQ0aMrg0SP0hpn
AHLjHHfNnBsDkM4xLmFMZyWQefMi785FfFQRZE7CkbgfuJAxwpE4H5SGJJMHGEht
X19tlMMbSXBM5UNcgAdyIS7ABZWGzJp1gIE0Z7PNkQ5nKOFBlQ+xCZ7Dd4xYBG9i
SkISvb2JUuvy+Z5stifibvehihzrfMtDhJiIgsN/sBsIz1Ea0pTJNJV0jMgajSgp
KXasW+ctDxliSAqOwFlrjPAcpSGLMplFJR3zTMi8kpLi/co0+BzDA0k2tLS0tGeM
2o0PGgLHfHNPXzZQX0/oWIl0WBKfY3h2rWR3xld38OQ1IxtqRvg/j3QE9qtDg1Ry
sHcWHJ3hdccFpqTvuEhHjDNS2em33XW0F68bvaLgWFF0fY8aUb6CY6TSC2J7SYfR
MtexrGiV/VhFkvLPWpU+RekssWNZzRjy+CiW+JaHBIn6hEN50ujuWpEre1xI+JpY
GErE3hVouCANxkUkmTQuJQ1RawvHSHhNYSQHdlT2NH5PFORfkY/T3tti3rT0Rh0k
482zVXOzefYaXySJ+CgSUskLq31RkH9HQ5ynWYkoyNxs9grz9opsdu4BR3sgyEG8
1C35GY+/+I9/hvrXv/966INYtsKZiPErik9bBw2JGue+of/DGKv1TcPcqBclB5MB
GfLtICUSsgcQV4SgRQhahKBFCFqEoGVD7rvjjtud7humB77v5jV298SzPRty1wWt
rVONWlsvuyOe7Q7ZzdPePNnozTNvjmd7NuT22RMmTDKaMGH27fFsd8hunz2pdcqU
KZPjekBnRpZcdtl8qyV3xbPdIbvrhuWrzG6I6QGdY8TdYdfcPFzHyANe8WxPhLYa
13aH7LdGxqMZy3i2Jw1yj9FvH7hv/fr18WxPGqS19YQTVj1wzQmTWuPZng1ZunTp
kuXrH7hp6ZJrrolnu0M/sNGxN8w2ljFtz1qOGjXqsHFL7ll+7GGjRsWz3YN78GkX
HBbbtgofjlq69PC4Njv8+Sd28uLJ0sZRcZo9adQgQtAiBC1C0CIELULQIgQtQtAi
BC0b8uRDD21yenKYHnj7pk0/+7nZ9ni2Z0O2Lp45c7bRzJmLH4pnu0O26YJJ5vv/
ky7YFM/2bMij8ydPnmK+Nz55/qPxbHfINl02derMmTOnzo8VsnX54sUfs1q+NZ7t
DtnW2266w2x9TA9oQ7Zv+rnTpph22SF7yiue7YnQVuPa7pA9bfaUuYhne9Ig242e
fnr71q2x7loSINOmtbbe9vTayVOmxbM9G7J27dpVN21/6qE1q9aujWe7Qz+w+W78
bfNjfjd+3Lhxhx+7avtNEw4fNy6e7R7cg89e/P94N37cmjXD+TWFmPNP7NSlU6WN
o+I0e9KoQYSgRQhahKClEaQ/8C0X/bIHVG4i/I1HsgdUbppBEjlvKXtA5WZBEomE
t5Q9oHJzZsQw2A7FIabCdqgOcedDeYguM6LLMaLRWUuT64g+V3YtINo8+9UkQtAi
BC1C0CIELULQIgQtQtAiBC1C0BI5Pf5oNCOyBxBXhKBFCFqEoEUIWoSgRQhahKBF
CFr6QHKapA9E9i4RV4SgRQhahKBFCFqEoEUIWoSgRQhahKBFCFqEoCU6NPmjz4zI
HkBcEYIWIWgRghYhaBGCFiFoEYIWIWgRghYhaBGCFiFoEYIWIWgRghYhaBGCFiFo
EYIWIWgRghYhaBGCFiFoEYIWIWgRghYhaBGCFiFoEYIWIWgRghYhaBGCFiFoiS9p
8kefGZE9gLgiBC1C0CIELULQIgQtQtAiBC1C0CIELULQIgQtQtAiBC1C0CIELULQ
IgQtQtAiBC1C0CIELULQIgQtD7JS5ihiyIWszO2WOo6KcyDKOxyI+g7dZkQDiXZn
LeUjBC1C0CIELULQIgQtQtAiBC1C0CIELULQIgQtQtAiBC1C0CIELULQIgQtQtAi
BC1C0CIELULQIgQtQtAiBC1C0CIELULQIgQtQtAiBC1C0CIELULQIgQtQtAiBC1C
0CIELULQIgQtQuSWKLpHTUh9ui58l5qQxpp0+C4lIalUfWN4SpSEpFPGn9B9KkJS
6bQBqQ/eqSIkbdYYmhLlIDXJdFubTUnW+O5XCVKXMneqNicbk0ol7ZUKQVIdFqCj
o8MnMf5un78UgtR3dHUU16UeJJ/qMiRdgYy/OmcvlSCW5Cp/XVd1uRdGpSD5lDn2
gMS7wKsFMeYk6ChcFRWD5NM+RjqdLKxQDZLyQ7Zs2eCtUA2S1gXSVtiv0jUGxPst
4KpBOnyQhMqQLusE3NHWscVqg5m1QjFIncVoTOTrthQk1hrFIOYVMW29hbJBbUjC
u3YIIwOi7DHiT2zYsKXwF4kDqTTh7lbWXyQOpNK0gQQiBC1C0CIELULQIgQtQtBS
FHJU0T1qQl43vUiiJuRttaeH71IS8tY3jH/b8aH7lISc/vpTXh+eEhUhbz3ppFNO
Oj00JSpCzjpl+hlnnPSu4J3KQY446vT3nH329OlnnPfOo17lu18lyKvf8pZ3nXvu
e86+eMHFF1944fTzzjvvrLNOPtk5ESsEeeeVFy9YsOCDZgsWXHLJJReef/75H7j0
0s+91lqrEOSNn/7MR6699hP+rr/+k9/9dMpaqxAkf+q3vnzltddd99nPfsPua1/7
wid/+M032StVguTf/r3vXv8dq1tvvfUnRt/+8TcbnXVKQfKnfu/737jVzYD80nMo
Bsm//Vvf9xSm403eGsUg+XN+bBuMNn7gXN+/olMNcvxPLYPZry5/fv9+b4VqkHf/
eqOtMFIa8qFf/8ru8ssvP3r//v3Kfuntc4Zh48MP/+GPqkN+9PuNv3jsN596/+ef
f97YseysFYpB3vjYxo2/+fw76vL1+wtZaxSDHP/H3331HOukqzjkiPed4/4bRiOV
jxF/Yr/Cp19/hEBHCFqEoEUIWoSgRQhahKClKKSm6B41IXXpou/MVxOSqkmF71IS
Ul9fl9Li+9lT9am68JSoCKlPmYWmREVIY6qxMZVqDN6pHKSmxvxe8MbGxnQqcOZS
CZKsq081pt0MizEv9XUORyFIqi3tfl9+gWLcYUsUgtS1dbQV19Fmf6+SQpB8vfmz
BYLflm/81Tl7qQTJp6yRB1Pz+9nrS/ychLxqEHNOoh2qQUIShb/OXheA+C6JqkFS
/h8p0uV7vqUaJO1CrJ8m4nsKrBqkzfzZKKbCWvh+EJJqkA5L0Ja2QF1thRWKQcxj
vavN2KMSjdYP4CmsUQ1ijD5lv4WSSBtTUzhtKQapafS9CkmkFT7YS0YIWoSgRQha
hKBFCFqEoEUIWoSgRQhahKBFCFqEoKUZpD+Y5DGVFSFo6Ql5RBPII73rtIB4DsUh
BYfiEG1mRJ9jRJ+zlj7XEUIA0gyiQYSgRQhaNmR3MMljKitC0NITcrUmkKvFRC0g
nkNxSMGhOESbGdHnGNHnrKXPdYQQgDSDaBAhaBGCFiFoEYIWIWgRghYhaBGCFiFo
EYIWIWgRghYhaBGCFiFoEYIWIWgRghYhaBGCFiFoEYIWIWgRghYhaBGCFiFoEYIW
IWgRgpaekGRS1jAqLwCZNUvWMCrPD6nu7a2WNpBK80OaMpkmaQOpND+kM5PplDaQ
SvNBEhmjol/zqkoFSGKWCZmlqsSENHX2ZoJ1qnesWDPSEnJkWmQP69Czd62G4JQ0
SB5UOTnHSLK7wOhW8vruHeyLXMcimcMpPw/SovDxYeZBOr0zlszhlJ8HKRwjModT
fi5kjEloajLPXmOkDqjcXEh7JvNe8/a9mUy7xOGUnwtZ1O1MxJhuNU9bDqTaNw3t
Sr4o0fM1u8oRgpaekNGjZQ2j8gKQefNkDaPy/JDavr5aaQOpND+kOZttljaQSvND
erLZHmkDqTQfZETWaIS8oVRWATJingmZp6rEhDT39GUD9fWod6xYMzIjG2qG7GEd
evaudVxgSvqOkzyocnKOkdErCo4VSl7fvYN9metYJnM45edBZih8fJh5kB4Xoug1
0YMUjhGZwyk/FzLePFs1N5tnr/FSB1RuLmRuNnuFeXtFNjtX4nDKz4UsW+FMxPgV
ap62HEitbxrmKvmiRM/X7CpHCFqEoEUIWvpBMqFb1XIh7pellf/ytCNQ1uE7RkyD
ug7/wa7wP3vIB89aKjt0nBFdjhFdzloaXUdCt6ql33Mt1SMELULQIgQtQtAiBC39
ILnQrWq5kFwuF7hVrsKMWAJlHb5jxDSo6/Af7Lmcwo7AWUtlh44zossxostZS6Pr
SOhWtfR7rqV6hKBFCFqEoEUIWoSgRQhahKBFCFqEoEUIWoSgRQhahKBFCFqEoCVy
4WSPqMwIQUsjSP+fPcOefoUh/b3dexzHru7efnUhA73d3bssx/3d3SsH1IXkBr/S
3X2/7fjKoMK7Vs6WmAvLoTAkN2hMRrc9LWpDrN3KdagNye1wDnjlIbkB9S+I2lzZ
dYHIHkBcEYIWIWgRghYhaBGCFiFoEYIWIWgRghYhaBGCFiFoEYIWIWgRghYhaBGC
FiFoEYKWeOaWZ4zUXwjpI4hpIaSPIKaFkD6CmBZC+ghiWvBgR1sI6SOIaSGkjyCm
hZA+gpgWPNjRFkL6CGJaCOkjiGkhpI8gpoU+r0dkDyCuCEGLELQIQYsQtAhBixC0
CEGLELQIQYsQtAhBixC0CEGLELQIQYsQtAhBixC0CEGLELQIQYsQtAhBixC0CEGL
ELQIQYsQtAhBixC0CEGLELQIQYsQtAhBixC0CIm5QbNc7j++/mtV+JSdO3f+yejZ
iPbu3YsCGRgYGBx86aUQ5JVXXil8yhNGpSR/+QsS5KUgxCgA2bZtm8Ewv1k6wgEF
yQV3LXNSgpAnLEZxz+597jkgyEvWL216YWVT8sjT1lm/Vys8IyUhQDPS329Ddo0R
Vg0vREC2uZDNHx5bVVU19qPbXAjOjDiQPdUiefWD986pFg1/C0M2b3Yhq4+2taJ2
tQP5+9+BIMYxMtgkjnzB+t1zCbGwJGR1VdXIi+584s6LakXtLZiQHaLa+Q2m94rE
QAnI5pFi7GZ7DztGHL0NEtIrmtxfopcUO0pAPixGbnaOlbtrxcchIS1iovsr5xrE
uhKQseIi73x1phhrQp5Dg5zmzUjuSPFgCUit+IEHuUXUBiAvv/yyJICbDblXVA86
v+JXiP4SECG2eZC7hYCEDFaLhZbEOH21lDprVflmZLVvRjKZjAUxb+VlQ3I3CjGn
P5fbPVGIXaUg/mPkRHEMJmRftRDVyaSxWFd0ZS+ctYR71rpTiNWQkIGJiZXmc5Tq
ibuKn2u5kJ1V4jV320fIWDHyT4iQgYnifmNWHny83z7iS1zZb6kSVWd+ffPXzxRi
5J3PIEJOE+4v9z0Q5IljRJXzXGukfdjDnbX2BR3REMNxzLaPjq0VVWO/6D2Nx4Ec
xCtEG2I6dgZfjkA9RYl4zW6+ai+GnFjsAIdY76EEIeYrxLtPLHIAQorfDfK9HeR7
hVgEwXmFeBDpBNkZ/XbQXqA3Hw4iG1Li/TmVIPY7jSXeMYV5y7TitIH8Dx1zIhsM
SQfBAAAAAElFTkSuQmCC

------------qTBjXnmaI6qvT5AepQBBtZ
Content-Disposition: inline; filename=style.css
Content-Type: text/css; name=style.css
Content-Location: http://www.niuzer.com/css/frontend/style.css
Content-Transfer-Encoding: 8bit

body{background:#fff;color:#333;font-family:Tahoma,sans-serif;font-size:11px;min-width:976px;margin:0;padding:0}
p,ul,li,img,form,h1,h2,h3,h4,h5,form,div{border:none;margin:0;padding:0}
a{color:#2f5d88;text-decoration:none;outline:none}
input,textarea,select{background:#fff;border:1px solid #BBB;color:#333;font-family:tahoma,sans-serif;font-size:11px;font-weight:400;line-height:13px}
table,td,tr{border-spacing:0;margin:0;padding:0}
li{list-style:none}
cite{font-size:10px;font-style:normal;color:#BBB}

.top_banner1 {
background: #2F5D88; min-width: 970px;
}
.top_banner2 {
width: 970px; margin: 0 auto; padding: 12px 0 0 0;
}
.top_banner3 {
width: 728px; height: 90px; background: #2F5D88;
}

span.message,span.error,span.notif{display:block;height:auto!important;margin:3px 0;padding:6px 8px}
span.message{background:#fff5c3;border:1px solid #ccc}
span.message a{font-weight:700;font-size:13px}
span.error{background:#f8dede;border:1px solid #c00}
span.notif{background:#dbf1db;border:1px solid #090}
span.message3{margin-top:2px}
span.message2{font-size:13px;background:none;border-top:3px solid #EEE;border-left:none;border-bottom:none;border-right:none;margin:10px 0;padding:3px 0 0}
span.fav_loader,span.preloader5,span.preloader4,span.preloader6,div.comments_more span.preloader3{background:url(../../images/frontend/preloader.gif) no-repeat;display:block;height:15px;width:19px;position:absolute!important}
span.fav_loader{left:245px;top:37px}
span.preloader5{right:0;top:7px}
span.preloader4{right:0;top:1px}
span.preloader6{right:8px!important;top:8px!important}
span.ppreloader{background:#FFF url(../../images/frontend/preloader.gif) center 9px no-repeat;display:block;height:20px;text-align:center;font-size:10px;text-transform:uppercase;padding:23px 0 0}
div.clear,div.clear2,div.clear3{clear:both;font-size:1px;line-height:1px}
div.clear{height:1px}
div.clear2{height:10px}
div.clear3{height:15px}
div.main{width:970px;border-top:5px #FFF solid;position:relative;margin:0 auto;}
div.top_header{width:100%;height:57px;background:#2F5D88;border-bottom:1px solid #4E769B;padding: 10px 0 0 0;}
div.header{position:relative;width:970px;z-index:950;top:3px;margin:0 auto}
div.header img{position:absolute;left:-3px;top:3px}
form.search{position:absolute;width:362px;background:url(../../images/frontend/bg.png) -1px 15px no-repeat;top:-5px;left:136px;height:55px}
span.search{display:block;font-size:10px;color:#C1CEDB;position:absolute;left:0;top:1px}
input.search_b{border:none;left:329px;position:absolute;top:19px;display:block;width:30px;height:28px;background:url(../../images/frontend/alpha.png) -170px -870px no-repeat;cursor:pointer}
input.search{background:none;border:none;color:#333;display:block;font-size:15px;left:4px;line-height:19px;position:absolute;top:24px;width:313px;vertical-align:middle!important;outline:none;margin:0;padding:0 4px}
div.footer{height:100px;position:relative;border-top:1px solid #BBB;line-height:16px;color:#999;margin:45px 0 0;padding:20px 0 0}
div.content_left{float:left;width:640px;}
div.content_right{float:right;width:310px}
table.pp{left:232px;position:absolute;top:25px;z-index:9999}
div.pp{overflow:hidden}
div.pmain{border:2px #2f5d88 solid;position:relative;width:450px;padding:15px}
p.pmain{padding:0 0 3px}
td.p1,td.p2,td.p3,td.p4,td.p5,td.p6{filter:alpha(opacity=40);moz-opacity:.4;opacity:.4}
td.p2{background:#2f5d88;height:12px}
td.p4{background:#2f5d88;width:12px}
td.p1,td.p3,td.p5,td.p6,a.pclose{background-image:url(../../images/frontend/alpha.png)}
td.p1{background-position:0 0}
td.p3{background-position:-12px 0}
td.p5{background-position:-12px -11px}
td.p6{background-position:0 -11px}
td.pmain{background:#FFF}
a.pclose{background-repeat:no-repeat;background-position:-35px 0;display:block;height:22px;position:absolute;right:-9px;text-indent:-9999px;top:-10px;width:22px}
a:hover.pclose{background-position:-60px 0}
div.alerte{border-top:3px solid #EEE;border-bottom:1px solid #EEE;border-right:1px solid #EEE;border-left:1px solid #EEE;position:relative!important;padding:11px 8px 4px}
div.alerte cite{text-transform:uppercase;color:#FFF;background:#F30;border-left:3px solid #FFF;border-right:3px solid #FFF;position:absolute!important;right:10px;top:-10px;padding:2px 5px}
div.alerte a{display:block;height:19px;clear:both}
div.alerte a strong{color:#FFF;background:red;border:1px solid #FFD8CE;font-size:10px;margin:0 4px 0 0;padding:1px 5px 2px}
div.alerte a:hover strong{color:#FFF;background:#2F5B8A;border:1px solid #789CBC}
div.alerte a span{background:url(../../images/frontend/bg.png) -1px -351px no-repeat;padding:0 0 3px}
div.alerte a:hover span{background:url(../../images/frontend/bg.png) -640px -351px no-repeat}
div.panou{margin:20px 0 0}
div.title2{border-bottom:2px solid #EEE;height:22px;position:relative}
div.buttons cite{font-size:11px;padding:0 0 0 10px}
div.buttons cite a{color:#A3B8CB;font-weight:400!important;padding:0}
div.buttons cite a:hover{color:#2F5B8A}
div.buttons{position:absolute;text-align:right;right:0;bottom:3px;color:#CCC}
div.buttons a{padding:0 0 0 7px}
div.user_come{width:317px;overflow:hidden}
div.list_images{width:56px;overflow:hidden;float:left;text-align:center;margin:0 7px 0 0;padding:5px 0 0}
div.myfav{clear:both;display:block;margin:20px 0 0;padding:0 0 5px}
div.tabs{border-bottom:2px solid #ddd;height:26px;position:relative;margin:0 0 2px}
div.tabs_menu a{background:#2f5d88;border-top:2px solid #91b0ca;color:#fff;float:left;height:17px;font-weight:700;margin:4px 1px 0 0;padding:3px 7px 0}
div.tabs_menu a:hover{background:#4e7aa3;border:none;color:#fff;text-decoration:none;padding:5px 7px 0}
div.tabs_menu span{color:#FFF;background:#4E759A;float:left;height:19px;font-weight:700;position:relative;bottom:-3px;margin:0 1px 0 0;padding:6px 7px 0}
div.tabs_menu span a,div.tabs_menu span a:hover{background:none;border:none;float:none;height:auto;margin:0;padding:0}
div.tabs_right{float:right;padding:8px 0 0}
form.fav_search{background:#EEE url(../../images/frontend/bg.png) -625px -145px no-repeat;height:70px;border-top:solid 2px #FFF;position:relative}
div.fav_search2{border:none;background:#EEE url(../../images/frontend/bg.png) -625px -172px no-repeat;height:37px;position:relative}
span.fav_search{color:#555;font-size:10px;left:14px;position:absolute;text-transform:uppercase;top:13px}
input.fav_search_button{border:none;left:269px;position:absolute;top:32px;display:block;width:25px;height:24px;background:url(../../images/frontend/alpha.png) -135px -870px no-repeat;cursor:pointer}
input.fav_search{background:#fff;border:none;color:#444;display:block;font-size:13px;left:16px;line-height:15px;position:absolute;top:32px;width:240px;margin:0;padding:5px 5px 3px}
input.fav_search_button2{top:5px}
input.fav_search2{top:5px;width:137px}
div.categorie{height:27px;position:relative;overflow:hidden;width:310px;margin:1px 0 0}
a.categorie strong{font-size:18px;font-weight:400;position:relative;top:6px;left:0}
a.categorie em{font-style:normal;position:relative;left:0;top:0;font-size:10px}
a.categorie{background:#EEE url(../../images/frontend/bg.png) 0 -145px no-repeat;display:block;height:27px;line-height:14px;padding:0 0 0 7px}
a:hover.categorie{background:#4E759A;text-decoration:none;color:#FFF}
div#userLocationsSelected a.categorie{background:#2F5D88 url(../../images/frontend/bg.png) -310px -145px no-repeat;text-decoration:none;color:#FFF}
a.delete,a.add{position:absolute;text-indent:-9999px}
a.delete{background:url(../../images/frontend/alpha.png) -177px -2px no-repeat;height:21px;width:21px;top:3px;right:3px}
a:hover.delete{background:url(../../images/frontend/alpha.png) -155px -2px no-repeat}
div#userLocationsSelected a:hover.delete{background:url(../../images/frontend/alpha.png) -177px -2px no-repeat}
a.add{background:url(../../images/frontend/alpha.png) -92px -2px no-repeat;height:23px;width:29px;top:2px;right:2px}
a:hover.add{background:url(../../images/frontend/alpha.png) -122px -2px no-repeat}
div.invite{position:relative;width:308px;height:40px;background:url(../../images/frontend/bg.png) -1px -201px no-repeat;display:block;border:1px solid #DDD}
a.gmail,a.twitter,a.yahoo{text-indent:-9999px;position:absolute}
a.gmail{left:6px;top:9px;width:107px;height:25px}
a.yahoo{left:119px;top:6px;width:85px;height:30px}
a.twitter{left:212px;top:8px;width:92px;height:24px}
div.footer a.facebookfollow,div.footer a.twitterfollow{text-indent:-9999px;display:block;width:22px;height:22px;position:absolute;top:13px;background-image:url(../../images/frontend/bg.png);background-repeat:no-repeat;padding:0}
a.facebookfollow{background-position:-380px -200px;right:25px}
a.twitterfollow{background-position:-405px -200px;right:0}
div.titlefix{border-bottom:2px solid #DDD;position:relative}
div.title h2,div.title h5,div.titlefix h2{font-size:22px;letter-spacing:-1px;line-height:23px;padding:8px 0 0}
div.title h3{font-size:18px;padding:14px 0 0}
div.titlefix p{color:#666;padding:0 0 4px}
div.rcontent{font-size:13px;padding:2px 0 0}
div.rcontent p{padding:2px 0 1px}
div.content_right2{float:right;width:500px;margin:15px 0 0}

div.panou_gri {
border-top:1px solid #CCC;
padding:6px 0px;
}

table.form1{table-layout:fixed;width:100%;margin:3px 0}
td.form1_2{text-align:left}
table.form1 td{padding-top:2px;vertical-align:middle}
td.form1_1{text-align:right;width:110px;padding:0 3px 0 0}
input.txt_1,textarea.txt_1{float:left;margin:0 2px 0 0;padding:4px}
select.txt_1{float:left;margin:0 2px 0 0;padding:3px}
input.txt_2{float:left;font-size:12px;margin:0 2px 0 0;padding:5px 4px}
input.radio_button{background:none;border:none;display:block;height:15px;width:15px;outline:none;margin:0;padding:0}
div.button{background:#EEE;color:#666;display:block;position:relative;margin:5px 0 0;padding:3px}
div.button span{position:relative;top:5px;vertical-align:top}
div.button a,div.button strong{vertical-align:top}
input.button,input.button_uploud{background:#2f5d88;border-spacing:0;color:#fff;cursor:pointer;line-height:14px;overflow:visible;width:auto;outline:none;font-weight:700;border-top:1px solid #003663;border-left:1px solid #003C6F;border-right:1px solid #003C6F;border-bottom:1px solid #004783;padding:3px 5px}
input.button_uploud{float:left;margin:0;padding:4px 6px}
span.good,span.bad,span.default{display:block;float:left;height:10px;vertical-align:top;width:14px;background-image:url(../../images/frontend/bg.png);background-repeat:no-repeat;margin:7px 0 0 2px}
span.good{background-position:-450px -200px}
span.bad{background-position:-470px -200px}
span.default{background-position:-490px -200px}
div.spatiere{border-top:1px solid #EEE;font-size:1px;clear:both;margin:5px 0}
strong.selected{background:url(../../images/frontend/bg.png) -450px -222px no-repeat;font-size:13px;padding:0 0 0 17px}
table.xyz{background:none;border-left:20px solid #FFF;border-top:2px solid #FFF;float:left;width:135px;padding:0}
table.xyz label{display:block;height:13px;overflow:hidden;width:125px}
table.xxx td,table.xyz td{text-align:left;vertical-align:middle}
td.xmini{border-right:2px solid #FFF;width:18px}
td.xmini_gri{border-right:2px solid #EEE;width:18px}
td.xmini2{width:16px;padding:6px 3px 0}
td.xmini3{width:16px;padding:23px 3px 0}
a.plus,a.minus,span.loader{display:block;float:right;height:13px;outline:none;text-indent:-9999px;width:13px}
span.loader{background:url(../../images/frontend/alpha.png) 0 -880px no-repeat}
a.plus,a.minus{background-image:url(../../images/frontend/bg.png);background-repeat:no-repeat}
a.plus{background-position:-335px -200px}
a:hover.plus{background-position:-355px -200px}
a.minus{background-position:-335px -220px}
a:hover.minus{background-position:-355px -220px}
table.xxx{background:none;border-top:4px solid #FFF;clear:both;display:block}
.d1{margin-top:15px;vertical-align:top}
.d2{font-style:italic;padding-right:55px;color:#333;line-height:15px}
.d3{vertical-align:top;padding:13px 2px}
.d4{padding:10px 0 8px}
.d5{vertical-align:top;padding-top:10px}
.d7{float:left;margin:3px 0 0 2px}
.d8{float:left;padding:0}
.d9{vertical-align:top!important;padding-top:5px!important}
.d10{padding:5px 4px 0 0}
.d11{float:right;padding:0}
.d12{vertical-align:top;padding-top:6px}
.d13{padding:2px 4px 0 0}
.d14{padding:0 0 0 93px}
.d15{padding-top:5px!important}
.d16{vertical-align:top;padding:0}
.d17{padding:6px 0 0}
td.d18{width:110px;vertical-align:top!important}
div.d19 img{border:5px solid #EEE;padding:2px}
td.d20{vertical-align:top!important;padding-top:7px!important}
.upl{position:relative;border:1px solid #CCC;height:25px;width:280px;display:block;margin:4px 0 0}
.up1a{width:225px;margin:0}
.upl1{position:absolute;top:2px;border:1px solid #FFF}
.upl2{position:absolute;right:57px;top:1px;border:none}
.upl3{position:absolute;right:1px;top:1px;border:none}
.upl4{filter:alpha(opacity=0);opacity:0;position:absolute;left:0;top:3px}
table.menu_top{height:39px;position:absolute;right:0;top:7px;table-layout:auto;z-index:999}
table.menu_top td{vertical-align:top;white-space:nowrap}
a.menu_top{font-size:13px;font-weight:700;color:#CBD6E1;display:block;height:24px;padding:15px 8px 0}
a.menu_top2{padding-left:2px}
a.menu_top_border{border-right:solid 1px #4E769B}
a.menu_top_border2{border-left:solid 1px #4E769B}
a.top_profile{height:33px;font-size:10px;color:#CBD6E1;text-transform:uppercase;text-align:center;display:block;padding:6px 9px 0}
a.top_profile strong{font-size:15px}
a.top_profile_on{filter:alpha(opacity=75);moz-opacity:.75;opacity:.75}
div.profil_menu{border:2px solid #4E769B;position:relative;width:54px;background:#3F6A92;height:35px;margin:0 1px}
a.profil_menu img{border:1px solid #B4BCC5;position:absolute;top:3px;left:3px;width:25px;height:25px;padding:1px}
a.profil_plus,a.profil_minus{text-indent:-9999px;position:absolute;display:block;width:21px;height:25px;right:1px;top:4px}
a.profil_plus{background:url(../../images/frontend/bg.png) -10px -260px no-repeat}
a:hover.profil_plus{background:url(../../images/frontend/bg.png) -32px -260px no-repeat}
a.profil_minus{background:url(../../images/frontend/bg.png) -54px -260px no-repeat}
a:hover.profil_minus{background:url(../../images/frontend/bg.png) -76px -260px no-repeat}
div.profil_det_plus{position:absolute;width:54px;border-left:2px #4E769B solid;border-right:2px #4E769B solid;height:8px;font-size:1px;top:34px;right:-2px;background:#3F6A92;z-index:999;display:block}
div.profil_det{position:absolute;background:#3F6A92;border:2px #4E769B solid;top:40px;right:-2px;z-index:999;width:134px;white-space:normal}
div.profil_in{width:106px;margin:11px 0 5px 13px}
div.profil_in h2{font-weight:400;color:#FFF;font-size:11px;display:block;margin:0 0 3px}
div.profil_in_img{position:relative;height:106px;width:106px}
div.profil_in_img img{border:5px solid #5E80A2;position:absolute;top:0;left:0;padding:3px}
div.profil_in_menu{margin:5px 0}
div.profil_in_menu2{border-top:2px solid #5E80A2;margin:2px 0 0;padding:4px 0 0}
div.profil_in_menu a,div.profil_in_menu2 a{color:#CBD6E1;display:block;padding:1px 0}
a.link_absolute_1,a.s_add{background:#2f5d88;color:#fff;display:block;filter:alpha(opacity=75);font-size:10px!important;line-height:16px;moz-opacity:.75;opacity:.75;position:absolute;text-align:center;text-decoration:none;text-transform:uppercase;padding:1px 0 0}
a:hover.link_absolute_1,a:hover.s_add{background:#2f5d88;color:#fff;filter:alpha(opacity=100);moz-opacity:1;opacity:1;text-decoration:none}
a.link_absolute_1{bottom:2px;left:2px;width:102px;height:17px;border-top:1px solid #5E80A2}
a.s_add{top:77px;left:2px;width:94px!important;height:17px;border-top:1px solid #CCC;background:#F5F5F5;color:#2f5d88}
a:hover.s_add{border-top:1px solid #5E80A2}
a.s_close{text-indent:-9999px;position:absolute;display:block;width:23px!important;height:23px;background:url(../../images/frontend/alpha.png) 3px -82px no-repeat;top:4px;left:71px;filter:alpha(opacity=55);moz-opacity:.55;opacity:.55}
div.pgri{background:#EEE;margin:20px 0 0;padding:15px 0 3px}
div.titlegri{border-bottom:2px solid #CCC;display:block;margin:0 13px}
div.clear_advs{height:8px;display:block}
div.comutare{position:absolute;top:6px;right:42px;line-height:13px}
div.comutare a,div.comutare span{color:#FFF;float:right;height:14px;margin:0 1px 0 0;padding:4px 5px}
table.cavs2{font-size:11px;margin:7px 0 10px!important}
table.cavs strong{display:block;font-weight:400;padding:0 0 2px}
td.cavs{width:115px}
div.cautare_avansata{padding:0 13px}
.gri{background:#f5f5f5}
.d21{width:640px;margin:5px 0}
.d22{display:block;padding:3px 0}
table.curstats{width:100%;border:2px solid #DDD;padding:3px}
table.curstats td{border-right:1px solid #DDD;padding:1px 6px}
table.ctable{width:100%;border-top:1px solid #EEE;border-bottom:1px solid #EEE;border-left:1px solid #EEE;margin:5px 0 0}
table.ctable td{vertical-align:middle;border-right:1px solid #EEE;border-top:1px solid #EEE;padding:2px 6px}
td.d25{font-size:13px;padding:5px 6px!important}
td.d26{font-size:12px}
td.dm{text-align:center}
.d27{float:left;width:35px;text-align:right;color:#666;padding:4px 3px 0 0}
.d28{clear:both;margin:1px 0 0}
.s75{width:75px}
.d29{display:block;height:30px;padding:5px 13px 0}
.d30{float:left;width:40px;text-align:right;color:#666;padding:5px 3px 0 0}
.d31{width:280px;float:left}
.s170{width:170px}
.d32{width:340px;float:right}
table.statistics{width:100%}
table.statistics th{font-size:13px;font-weight:700;border-bottom:1px solid #EEE;text-align:left;padding:3px 5px 5px}
table.statistics td{border-top:1px solid #EEE;padding:3px 5px}
table.statistics td strong{font-size:13px}
table.faq{width:100%;margin:4px 0 6px}
table.faq td{vertical-align:top;padding:2px 8px}
table.faq li{padding:1px 0}
div.tfaq{margin-top:25px}
div.titles{padding:6px 0}
div.titles p{font-size:11px;padding:0 0 5px}
div.static_bg{background:#eee;border:10px solid #eee;margin:6px 0;padding:0 5px}
div.static_1{float:left;width:294px;margin:0 30px 0 0}
div.static_2{float:left;width:302px}
div.static_3{float:right;position:relative;width:290px}
div.static_bg h1,div.static_bg h2,div.static_bg h3{font-size:18px;padding:4px 0 0}
div.static_bg p{font-size:13px;margin:0;padding:0 0 4px}
div.map{font-size:11px;line-height:14px;margin:5px 0}
div.map a{padding:0 8px 0 0}
div.sort{height:26px;background:#F6F6F6 url(../../images/frontend/bg.png) -325px -256px no-repeat;overflow:hidden;position:relative;font-size:10px;text-transform:uppercase;border-bottom:10px solid #FFF}
div.pmain div.sort{border-bottom:5px solid #FFF}
div.sort ul{position:absolute;color:#888}
div.sort p{font-size:11px;text-transform:none;padding:6px 0 0 8px}
ul.sort_by{width:300px;top:2px;left:8px;padding:4px 0}
ul.sort_by span{background:#A1ACB6;color:#FFF;margin:0 -1px;padding:4px 5px}
ul.sort_by2{top:2px;left:3px;width:620px;overflow:hidden;padding:1px 0}
ul.sort_by2 a:hover{background:#2f5d88;color:#FFF;text-decoration:none}
ul.sort_by2 a,ul.sort_by2 span,ul.sort_by2 em,ul.sort_by2 strong{float:left;background:none;border-left:1px solid #DDD;display:block;padding:3px 4px}
div.pmain ul.sort_by2 a,div.pmain ul.sort_by2 span,div.pmain ul.sort_by2 em,div.pmain ul.sort_by2 strong{padding:3px}
ul.sort_by2 span{background:#A1ACB6;color:#FFF}
ul.sort_by2 em{color:#DDD;font-style:normal}
ul.sort_by2 strong{border:none;font-weight:400}
ul.sort_time{width:400px;top:2px;right:3px;text-align:right;padding:4px 0}
ul.sort_time span{background:#A1ACB6;color:#FFF;margin:0 1px;padding:4px 5px}
select.publi{position:absolute;right:5px;top:3px;font-size:10px;text-transform:none;width:150px;padding:2px}
div.publi{clear:both;height:auto;border:none;width:640px;overflow:hidden;margin:0}
div.publi h2 a,div.publi h2 a:hover{color:#666;text-decoration:none}
div.publi h2{display:block;border-bottom:2px solid #EEE;margin:0 0 3px}
div.publi li{display:block;float:left;overflow:hidden;white-space:nowrap;margin:0 17px 0 0;padding:2px 0 0}
div.publi li strong{font-size:11px;font-weight:400}
div.publi li cite{font-style:normal;font-size:11px}
div.nav{height:35px;text-align:right;font-size:13px;margin:20px 0 0;padding:10px 0 0}
div.show_prieteni div.nav{margin:5px 0 0;padding:0 6px 0 0}
div.pmain div.nav{height:27px;border-top:1px solid #EEE;margin:7px 0 0;padding:5px 0 0}
div.nav a{border:1px solid #b9c7d4;padding:5px 8px}
div.nav a:hover{background:#2f5d88;border:1px #2f5d88 solid;color:#fff;text-decoration:none}
div.nav strong{border:2px solid #2f5d88;font-weight:400;padding:4px 7px}
div.nav span{color:#999;font-weight:700;padding:5px 8px}
div.nav a,div.nav span,div.nav strong{margin:0 2px 0 0}
div.pmain div.nav a,div.pmain div.nav span,div.pmain div.nav strong{float:right;margin:0 0 0 2px}

div.a1{font-size:11px;line-height:15px;color:#444;margin:0;padding:10px 55px 10px 0;position: relative;}
    div.a1 a {
    /*font-size:18px;font-weight:400;line-height:21px;margin:0;*/
    font-size: 23px; letter-spacing: -1px; line-height: 25px; padding: 0 0 1px 0; display: inline-block;
    }
div.a1 h2,div.a1 h3{font-size:18px;font-weight:400;line-height:18px;margin:0}
div.a1 a img{position: absolute; z-index: 1; right: 0; top: 10px; font-size:10px;margin:9px 0 0 15px; background: #FFFFF0;}
span.nrcom{color:#0C8E22;background:url(../../images/frontend/alpha.png) -118px -33px no-repeat;font-style:normal;font-size:10px;font-weight:700;padding:0 20px 0 15px}
div.a1 cite {font-style:normal;line-height:11px;position:relative;top:0px; display: block; line-height: 13px;}
div.a1 cite a {font-size:10px;display:inline}
div.a1 cite dfn {font-style: normal; background: none; padding: 3px 0 2px 0; display: inline-block; border-bottom: 1px solid #DDD;}

div.a1 a.discusss {
letter-spacing: 0;
line-height: 13px;
background: #00BB00;
color: #FFF;
padding: 3px 8px;
margin: 0 0 0 3px;
text-shadow: 0 1px 0 #008800;
visibility: hidden;
}
    div.a1:hover a.discusss {visibility: visible;}
    div.a1 a:hover.discusss {background: #009900; text-shadow: 0 1px 0 #007700; text-decoration: none;}

a.link_1{color:#4E759A}
div.a1 a:hover.link_1,div.a1 a:hover.link_2,a:hover.mini_link{color:#2f5d88}



div.publi a:hover.link_2{text-decoration:none;color:#2f5d88}
div.sponsored{position:relative;border:5px solid #CBD6E1;margin:35px 0 20px;padding:5px 7px 4px}
div.sponsored ul{padding:5px 9px 9px}
div.sponsored ul li{font-size:18px;border-bottom:1px solid #EEE;padding:2px 0}
div.sponsored div.a1{margin:0 9px}
a.sponsored,span.sponsored{position:absolute;color:#FFF;display:block;top:-15px;right:10px;border:3px solid #FFF;padding:4px 6px}
div.sssn{margin:0;padding:0 0 6px}
div.sssn div.a1{border-top:1px dotted #DDD;border-bottom:none;padding:3px 0}
div.comment ul.header li.header_1 a strong{color:#0C8E22;background:url(../../images/frontend/alpha.png) -111px -32px no-repeat;padding:0 0 0 22px}
div.comment ul.header li.header_1 a:hover strong{color:#2f5d88;background:url(../../images/frontend/alpha.png) -111px -62px no-repeat;text-decoration:none;padding:0 0 0 22px}
div.search_niuz{background:#EEE right -1180px no-repeat;height:40px;margin:15px 0 3px;padding:0 6px 0 8px}
div.search_left_1,div.search_left_2{float:left;height:32px;margin:4px 0 0}
div.search_left_1{border-right:2px solid #ddd}
div.search_left_1 strong,div.search_left_2 strong{color:#909090;float:left;font-size:10px;font-weight:400;line-height:11px;text-transform:uppercase;padding:5px 0 0}
div.search_left_1 strong{text-align:right}
div.search_left_1 a,div.search_left_2 a,div.search_left_1 span,div.search_left_2 span{float:left;font-size:25px;font-weight:700}
div.search_left_1 span,div.search_left_1 a{padding:1px 8px 0 4px}
div.search_left_2 span,div.search_left_2 a{padding:1px 4px 0 8px}
div.search_right{border:none;float:right}
div.view{margin:25px 0 0;padding:0 0 64px}
div.view h1{font-size:35px;line-height:35px;letter-spacing:-1px;margin:0 0 5px;padding:15px 0 0}
div.view h1 a { color: #333;}
    div.view h1 a:after {
    width: 18px;
    height: 20px;
    content: " ";
    background: #FFF000 url(../../images/frontend/bg.png) -485px -530px no-repeat;
    display: inline-block;
    position: relative;
    top: -5px;
    }
        div.view h1 a:hover:after {
        background: #FFF000 url(../../images/frontend/bg.png) -515px -530px no-repeat;
        }
div.view h1 a:hover { color: #2f5d88;}
div.view cite{border-bottom:1px solid #CCC;color:#BBB;font-size:13px;line-height:15px;overflow:hidden;padding:6px 0 3px}
div.view img{border:1px solid #EEE;float:right;margin:15px 15px 5px;padding:1px}
div.view p{font-size:15px;line-height:18px;padding:10px 0 5px}
div.view ul.sursa{color:#BBB;float:right;font-size:13px;text-align:right;padding:17px 0 2px 0; border-bottom: 1px dotted #CCC;}
div.view ul.sursa span{font-size:10px;color:#999;}
div.view p.view2{font-size:11px;line-height:13px;border-bottom:2px solid #EEE;color:#777;margin:0 0 6px;padding:2px 0 3px}
div.view p.view2 cite{font-size:10px;border:none;color:#BBB;float:none;display:inline;margin:0;padding:0 0 0 5px}
ul.news_left{width:313px;float:left;padding:3px 0 0!important}
ul.news_right{width:308px;float:right;border-right:1px solid #DDD;position:relative;top:-2px;padding:5px 4px 4px 0 !important}
div.xinvite3{border-top:1px solid #EEE;margin:4px 0 0}
div.xinvite1{border-top:1px solid #EEE;border-left:1px solid #EEE;border-right:1px solid #EEE;margin-top:20px;padding:10px 8px 0}
div.xinvite2{background:#fff}
div.xinvite{height:195px;overflow-y:scroll}
div.xinvite table{float:left;width:217px;margin:1px 10px 1px 0}
div.xinvite label{overflow:hidden;width:187px}
#commentsContainer{margin:0 0 15px}
div.comments h4{font-size:23px;padding:0 0 3px 0;}
div.comments h4 span{background:url(../../images/frontend/bg.png) -815px -289px no-repeat;font-weight:400;letter-spacing:-1px;padding:0 0 0 25px}
div.comment {display:block;overflow:hidden;position:relative;border-top:1px solid #CCC;background:#FFF;margin:0;padding:0 0 5px}
div.comment span.notif{margin:2px 0}
div.comment div.content{font-size:12px;line-height:15px;padding:2px 17px 6px 70px}
div.comment div.content p{padding:5px 0 5px; line-height: 16px;}
div.comment div.content div.comment_from{font-size:10px;line-height:12px;color:#555;border-bottom:1px solid #DDD;margin:2px 0;padding:0 0 3px}
div.comment div.content div.comment_from p{padding:0 0 2px}
div.comment ul.image{width:50px;height:50px;position:absolute;top:9px;left:10px;z-index:25}
div.comment ul.header{height:18px;top:15px;display:block;width:578px;padding:13px 0 0 70px}
div.comment ul.header li.header_1{font-size:13px;font-weight:700;color:#666;float:left;width:280px;overflow:hidden}
div.comment ul.header li.header_1 a{display:block;float:left;border-bottom:2px solid #B7C6D7;padding:0}
div.comment ul.header li.header_1 span{display:block;float:left;border-bottom:1px solid #999;padding:0 0 2px 0}
div.comment ul.header li.header_1 a:hover{text-decoration:none;border-bottom:2px solid #2F5D88}
div.comment ul.header li.header_2{display:block;font-size:10px;width:260px;color:#999;position:absolute;right:8px;top:13px;text-align:right;padding:2px 0}
div.comment ul.header li.header_2 span{color:#999;padding:0 1px}
div.comment ul.header li.header_2 a{background:none;color:#2f5d88;font-size:10px;text-transform:uppercase;padding:2px 4px 3px}
div.comment ul.header li.header_2 a:hover{background:#2f5d88;color:#FFF;text-decoration:none;padding:2px 4px}
div.comment ul.header li.header_2 span a{background:#090;color:#FFF;text-transform:none}
div.comment ul.header li.header_2 span a:hover{background:#070}
div.comments div.nav{height:50px;margin-top:5px}
div.c_replay{padding:0 7px}
div.c_replay div.button{background:#F5F5F5;margin:1px 0 5px}
a.mini_link{font-size:10px;line-height:13px!important;color:#7896b2}
div.show_prieteni{width:648px;padding:10px 0 0}
div.show_prieteni span.message{margin-right:8px}
div.prieteni{width:98px;height:143px;float:left;display:block;position:relative;overflow:hidden;margin:0 10px 0 0}
div.prieteni img{border:3px solid #EEE;margin:0 0 1px;padding:1px}
div.prieteni img:hover{border:2px solid #2F5B8A;margin:1px 1px 2px}
div.prieteni a{width:98px;overflow:hidden}
div.prieteni a strong{font-weight:400;background:url(../../images/frontend/bg.png) -1px -352px no-repeat;display:block;float:left;height:13px;overflow:hidden;padding:0 0 2px}
div.prieteni a:hover strong{background:url(../../images/frontend/bg.png) -640px -352px no-repeat}
div.prieteni span{font-size:10px;color:#999;clear:both;display:block}
p.sug_message{font-size:11px;background:#F5F5F5;padding:5px 8px 7px}
div.suggestion_loader{width:92px;height:92px;display:block;border:3px solid #EEE;background:#FFF url(../../images/frontend/preloader.gif) 37px 39px no-repeat;float:left;margin:0 10px 0 0}
div.SuggestionCell{height:163px}
div.SuggestionCell em{font-size:10px;display:block;border-top:1px solid #EEE;color:#999;font-style:normal;clear:both;line-height:11px;padding:1px 0 0}
div.SuggestionCell strong{padding-bottom:4px!important}
div.SuggestionCell em a:hover{color:#2f5d88;text-decoration:underline}
div.myfav span.message{margin-bottom:1px}
div.icat{width:656px;display:block}
div.icat_right{width:310px;display:block;float:left;overflow:hidden;margin:7px 16px 0 0;padding:0}
div.acv{clear:both;margin:2px 0 0;padding:0 0 1px}
div.acv img.userAvatar{border:none;padding:0}
div.acv_membru{width:59px;float:left}
div.acv_right{width:553px;float:right}
div.acv_cnt{border-bottom:1px solid #EEE;position:relative;line-height:11px;color:#999;font-size:10px;padding:3px 0 1px}
div.acv_cnt cite{color:#999;position:absolute;right:0;top:14px;width:90px;text-align:center}
div.acv_cnt a span{color:#4e759a}
div.acv_cnt a strong{font-weight:400;text-decoration:none}
div.acv_cnt p{clear:both;font-size:11px;color:#333;line-height:14px;padding:1px 105px 3px 0}
div.acv_cnt p a{font-size:17px;display:block;padding:0 0 2px}
div.comments_more{display:block;height:18px;position:relative;font-size:10px;text-align:right;margin:0;padding:5px 0 0}
div.comments_more span.preloader3{right:55px;background-color:#FFF;background-position:right;width:45px;top:4px}
div.comments_more a{color:#FFF;background:#2F5B8A;padding:3px 5px}
div.vprofile{position:relative;padding:20px 0 10px}
div.pmain div.vprofile{padding-top:0;height:108px}
div.vprofile img{position:absolute;top:20px;left:10px;background:#FFF;border:6px solid #EEE;z-index:99;padding:3px}
div.vprofile div.title h1,div.vprofile div.title h2{padding:0 0 0 125px}
div.pmain div.vprofil_c{height:34px}
div.pmain div.vprofile div.title{padding:20px 0 0}
div.pmain div.vprofile div.button{height:23px;background:#F5F5F5;margin:2px 0}
div.vprofil_c{padding:5px 10px 5px 125px}
div.vprofil_c p{font-size:13px;color:#666;border-bottom:1px solid #EEE;padding:3px 0 2px}
div.vprofil_c p cite{text-transform:uppercase;padding:0 10px 0 0}
div.vprofil_c span.message{border:none;font-size:13px;margin:4px 0 3px;padding:9px 10px}
div.vprofile_buttons{width:400px;height:26px;position:absolute;top:12px;right:0;font-size:11px}
div.vprofile_buttons cite{text-align:right;float:right;display:block;color:#666;height:24px;line-height:11px;padding:0 7px 0 0}
div.vprofile_buttons span,div.vprofile_buttons a{float:right;display:block;height:17px;font-weight:700;margin:1px 0 0;padding:3px 7px 0}
div.vprofile_buttons a{background:#090;border:1px solid #0C0;color:#FFF}
div.vprofile_buttons a:hover{background:#2F5B8A;border:1px solid #789CBC;color:#FFF;text-decoration:none}
div.pmain div.title{margin-top:5px}
a.adauga,a.anuleaza{float:LEFT;font-size:11px;height:18px;margin:0 3px 0 0;padding:5px 7px 0}
a.adauga{background:#2F5B8A;color:#FFF;font-weight:700}
div.plist{height:215px;overflow-y:scroll;position:relative;margin:5px 0 0;padding:0}
div.p_label{background:#ddd;border:2px solid #ddd;display:block;filter:alpha(opacity=80);height:15px;left:7px;moz-opacity:.8;opacity:.8;overflow:hidden;position:absolute;text-align:center;text-transform:uppercase;top:72px;width:15px;z-index:999;padding:0}
label.p_label_for{background:#2f5d88;cursor:pointer;display:block;filter:alpha(opacity=0);height:90px;left:4px;moz-opacity:0;opacity:0;outline:none;overflow:hidden;position:absolute;text-indent:-9999px;top:4px;width:90px;z-index:998;padding:0}
label:hover.p_label_for{filter:alpha(opacity=25);moz-opacity:.25;opacity:.25}
table.ep1{width:280px;float:left;margin:5px 10px 0 0}
td.ep1{padding:2px 4px}
td.ep2{width:17px}
td.ep3{padding:0 4px}
div.comment div.button{background:none!important;margin:0;padding:0}
textarea.commentarea,textarea.commentarea2{font-size:13px;display:block;line-height:17px;overflow-x:hidden;background:#FFF;padding:6px 5px}
textarea.commentarea{width:610px}
div.comment textarea.commentarea{width:614px}
textarea.commentarea2{width:725px}
input.disabled,div.comment:hover{background:#F5F5F5}
div.view span.message,table.cavs{margin:7px 0 0}
div.search,.ui-resizable{position:relative}
div.submenu a,ul.sort_by a,ul.sort_time a{padding:0 3px}
div.footer a{padding:0 6px 0 0}
div.title2 h3,div.title2 h2,div.title2 h4,table.curstats h5,table.curstats strong{font-size:18px}
div.title2 span,div.title span,div.titlefix span,div.view cite span,div.view p.view2 cite span{color:#999}
div.tabs_menu div,div.comutare li,div.map li,div.sort li,div.view ul.sursa li,ul.share li,div.comment ul.image li,div.comment ul.header li,.ui-accordion .ui-accordion-li-fix{display:inline}
a:hover.delete,a:hover.add,a:hover.top_profile_on,a:hover.s_close{filter:alpha(opacity=100);moz-opacity:1;opacity:1}
div.titles h2{font-size:18px;font-weight:400}
div.d19{float:left}
input.button,div.d0{margin:0}
.d6,div.icat div.a1{padding-bottom:5px}
.upl2a,.ui-datepicker .ui-datepicker-next-hover{right:1px}
a:hover.menu_top,a:hover.top_profile,div.profil_in h2 a,div.profil_in_menu a:hover,div.profil_in_menu2 a:hover,div.map span,div.comment ul.header li.header_2 a:hover{color:#FFF}
div.comutare a,a.sponsored{background:#2f5d88}
div.comutare span,span.sponsored{background:#A1ACB6}
ul.sort_it,div.vprofile_buttons span{display:none}
a.link_2,div.SuggestionCell em a{color:#7896B2}
div.view p em{font-style:normal}
div.pmain div.vprofile img,.ui-slider-vertical .ui-slider-range-max{top:0}
div.tabs_right a{height:15px;font-size:10px;color:#FFF;display:block;background:#0C8E22 url(../../images/frontend/bg.png) 0 -490px no-repeat;position:absolute;right:0;top:0;padding:2px 4px 0 11px}
div#introMessage{margin:-10px 0 0}
div#introMessage h2{font-size:18px;letter-spacing:0}
div#introMessage div.title{position:relative;border-bottom:2px solid #EEE}
div#introMessage div.title a.delete{right:0;top:11px}
div#introMessage div.panou_gri p{font-size:13px;padding:3px 0 0}
div#introMessage div.panou_gri{border:3px solid #EEE;position:relative;top:-3px}
div.pb1{display:block;height:19px;border:2px solid #EEE}
div.pb2{display:block;height:17px;border:1px solid #DDD;background:#EEE;position:relative}
div.pb3{background:url(../../images/frontend/alpha.png) 0 -780px no-repeat;display:block;height:13px;margin:2px}
div.pb3 cite{font-size:10px;color:#F60;position:absolute;right:4px;top:2px}
div.pbnot{font-size:13px;padding:5px 0 2px}
div.pbnot cite{color:#999;font-size:13px}
div.pbnot span{color:#333}
div.pbnot a{font-weight:700;text-decoration:underline}
a.fbconnect,a.fbconnect2{background-image:url(../../images/frontend/bg.png);display:block;text-indent:-9999px;width:87px}
a.fbconnect{bottom:2px;height:22px;position:absolute;right:0;background-position:0 -575px}
a.fbconnect2{background-position:0 -523px;background-repeat:no-repeat;border-right:solid 1px #4E769B;height:39px;margin:0 5px 0 0;padding:0 4px 0 0}
input.search_date{background:#FFF url(../../images/frontend/bg.png) -100px -256px no-repeat;padding-left:26px;width:95px}
img.userAvatar{border:1px solid #DDD;display:block;margin:0 1px;padding:1px}
div.pp div.vprofile{height:auto;padding:5px 0 10px}
div.pp div.vprofile img{left:0;top:0}
div.pp div.vprofile div.title{border-bottom:3px solid #DDD;margin:0 0 0 77px;padding:0}
div.pp div.vprofile div.button{margin:3px 0 0 77px}
div.rra{border:5px solid #EEE;position:relative;margin:35px 0 15px;padding:2px 8px 3px;}
strong.rra{position:absolute;background:#FFF;top:-12px;right:10px;padding:2px 5px}
div.title h1 a,div.title h2 a,div.title h5 a{color:#333;background:url(../../images/frontend/bg.png) right -460px no-repeat;padding:0 14px 0 0}
div.title h1 a{background:url(../../images/frontend/bg.png) right -459px no-repeat}
div.title h2 a:hover,div.title h5 a:hover{background:url(../../images/frontend/bg.png) right -490px no-repeat;color:#2F5D88}
div.title h1 a:hover{background:url(../../images/frontend/bg.png) right -489px no-repeat;color:#2F5D88}
div.publi div.title{border:none;border-bottom:3px solid #EEE;margin:7px 0 0}
div.publi div.title h2 a,div.publi h2 a:hover{color:#666;text-decoration:none;background:none}
div.sssn_mini_title{border-bottom:3px solid #EEE;position:relative;height:29px;color:#666;margin:3px 0 0}
div.sssn_mini_title a{background:#0C8E22;color:#FFF;font-weight:700;position:absolute;bottom:-6px;left:0;padding:4px 6px}
div.w_preview{overflow:hidden;display:block;text-align:center;padding:5px 13px 35px}
div.w_preview_center{display:table;margin:0 auto}
div.w_preview_title{text-align:left;margin-top:6px;height:30px;color:#999}
div.w_color{height:15px;width:6px;display:block;float:left;position:relative;left:0;top:0;border:1px solid #CCC}
div.level{clear:both;display:block;height:28px;padding:0}
div.level a,div.level span{background:url(../../images/frontend/alpha.png) -1px -605px no-repeat;display:block;float:left;height:23px;margin:0 0 0 5px;padding:0 0 0 25px}
div.level a:hover{background:url(../../images/frontend/alpha.png) -1px -629px no-repeat;text-decoration:none}
div.level cite{color:#2f5d88;left:1px;position:relative;top:-2px}
div.level select{float:left;width:225px;padding:4px 3px}
div.level span{filter:alpha(opacity=30);moz-opacity:.3;opacity:.3}
div.level .button{margin-left:2px}


div.ntopix{overflow:auto;padding:10px 0 10px}
div.ntopix h2,div.ntopix h3{font-size:10px;display:inline-block;float:left}
div.ntopix a{display:inline-block;float:left;padding:4px 4px 4px; border-left: 1px solid #CCC;}
div.ntopix a:hover{text-decoration:underline;}
div.ntopix span{font-size:10px;display:block;float:left;height:15px;color:#666;padding:4px 3px 4px}

div.osxx{clear:both;border-top:1px #CCC solid;padding:3px 0 0}
a.w_generate{border:2px solid #FFB17D;background:#F60;color:#FFF;font-size:23px;letter-spacing:-1px;padding:2px 6px}
div.a1 dfn{font-style:normal;background:#FFEF98}
div.ibs{background:#FFF9D8;color:#333;margin:23px 0 18px;padding:13px 17px}
div.ibs h1{font-size:30px;letter-spacing:-2px;border-bottom:4px solid #FFDF62;line-height:33px}
div.ibs p{font-size:13px;line-height:15px;padding:7px 0 5px}
div.ibs p strong a{text-decoration:underline;color:#333}
div.ibs p em a{font-style:normal;font-weight:700;color:#FFF;background:#F30;padding:4px 7px}
div.title strong.xt2{background:url(../../images/frontend/bg.png) -815px -283px no-repeat;font-size:22px;letter-spacing:-1px;font-weight:400;display:block;padding:8px 0 0 25px}
div.view span.message{font-size:13px;margin:10px 0 0}
div.title_loc h1 a{color:#333;background:url(../../images/frontend/bg.png) right -454px no-repeat;padding:0 15px 0 0}
div.title_loc h1 a:hover{background:url(../../images/frontend/bg.png) right -484px no-repeat;color:#2F5D88;text-decoration:none}
div.buttons_loc{position:absolute;top:9px;right:0;text-align:right;width:255px;padding:5px 0}
div.buttons_loc span{color:#AAA}
div.buttons_loc strong{font-weight:400;margin:0 0 0 9px}
div.buttons_loc strong a{background:#0C8E22;color:#FFF;padding:4px 6px}
div.a1 cite em{color:#7A98B3;font-style:normal;background:none;padding:0}
div.buttonxx input.button{line-height:15px;font-size:13px; background: #cc0000; border: 1px solid #EE0000;}
div.panou_s div.title{margin-bottom:2px}
div.menu_bg{width:100%;background: url(../../images/frontend/bg.png) 0 -46px repeat-x;height:36px;position:relative;z-index:100}
div.menu_pos{width:100%;position:absolute;z-index:100}
div.menu{height:36px;width:970px;font-size:13px;overflow:visible;position:relative;margin:0 auto}
div.submenu{width:956px;display:block;height:23px; background:#EEE /*url(../../images/frontend/bg.png) 0 -112px no-repeat*/;top:37px;color:#AAA;margin:0 auto;padding:5px 7px 0; border-bottom: 1px solid #DDD;}
div.submenu a.submenu2{border-left:1px solid #AAA;margin-left:3px;padding:0 3px 0 10px}
div.submenu em{font-style:normal;padding:0 2px 0 0}
#cssdropdown ul{margin:0;padding:0}
li.mainitems{float:left;position:relative;height:32px;background:none;display:block}
li.mainitems em{font-style:normal;font-weight:400}
li:hover.mainitems,li:hover a#c61,li:hover.mainitems a.menu_on{background:#4A7297!important;color:#FFF;text-decoration:none}
a.mainitems{color:#FFF;font-weight:700;height:24px;display:block;background:none;float:left;padding:8px 6px 0}
a:hover.mainitems{text-decoration:none;background:#4A7297;color:#FFF}
a:hover.mainitems strong{border-bottom:2px solid #6587A6}
ul.subuls{display:none;width:205px;position:absolute;top:32px;left:-2px;background:#4A7297;border-left:2px #B7C7D6 solid;border-right:2px #B7C7D6 solid;border-bottom:2px #B7C7D6 solid}
ul.subuls li{display:block;border-bottom:1px #6184A4 solid}
ul.subuls li a{color:#FFF;display:block;font-size:13px;background:#4A7297 url(../../images/frontend/alpha.png) -3px -506px no-repeat;padding:3px 5px 3px 16px}
ul.subuls li a:hover{background:#6184A4 url(../../images/frontend/alpha.png) -3px -526px no-repeat;text-decoration:none}
#cssdropdown li>ul{top:32px;left:-2px}
a#c61{background-color:#F76300;height:28px;position:relative;top:-4px;padding:12px 6px 0}
a.menu_on{background:#eee!important;color:#2F5D88;text-decoration:underline;height:24px!important;top:0!important;padding:8px 6px 0!important}
a:hover.menu_on{background:#4A7297!important}
a.menu_home{background:#2F5D88 url(../../images/frontend/bg.png) -585px 0 no-repeat;text-indent:-999px;height:32px;display:block;width:32px}
a:hover.menu_home{background:#4A7297 url(../../images/frontend/bg.png) -620px 0 no-repeat!important}
a.menu_home_on,a:hover.menu_home_on{background:#EEE url(../../images/frontend/bg.png) -655px 0 no-repeat!important;text-indent:-999px;height:32px;display:block;width:32px}
a.menu_rss,a:hover.menu_rss{outline:none;text-indent:-9999px;background:url(../../images/frontend/bg.png) -525px -10px no-repeat!important;height:16px;width:16px;position:absolute;top:8px;right:5px;padding:0}
div.cm_1{background:#FFFBED}
div.cm_3{background:#FFFCF7}
div.cm_4{background:#FFF8ED}
div.added a{background:url(../../images/frontend/alpha.png) -2px -652px no-repeat;color:#FFF;display:block;float:left;height:23px;margin:2px 5px 0 0;padding:0 8px 0 19px}
div.added a strong,div.level strong{color:#2f5d88;font-size:18px;font-weight:400;line-height:15px;position:relative;top:4px}
div.added a:hover{background:url(../../images/frontend/alpha.png) -2px -676px no-repeat}
div.us_map span{color:#999;text-decoration:underline}
ul.us_list{display:block;float:left;width:270px;padding:10px 0 0}
ul.us_list li{display:block;float:left;width:90px}
ul.us_map{display:block;float:left;height:250px;position:relative;width:370px}
ul.us_map li{position:absolute}
form.world{height:360px;position:relative}
form.world div{display:block;position:absolute;width:160px}
form.world div a{background:#5A7DA2;border:1px solid #C9D9E4;color:#EFF2F6}
form.world div a,form.world span{display:block;float:left;font-size:13px;font-weight:700;margin:0 0 1px;padding:2px 4px}
form.world div a:hover{background:#2f5d88;border:1px solid #BDCFDD;color:#FFF;text-decoration:none}
form.world div select{clear:both;width:165px;margin:0;padding:2px}
form.world span{background:#F30;border:1px solid #FF9479;color:#FFF}
.ui-helper-hidden-accessible{left:-99999999px;position:absolute}
.ui-helper-reset{border:0;font-size:100%;line-height:1.3;list-style:none;outline:0;text-decoration:none;margin:0;padding:0}
.ui-helper-clearfix:after{clear:both;content:".";display:block;height:0;visibility:hidden}
* html .ui-helper-clearfix{height:1%}
.ui-helper-zfix{filter:alpha(opacity=0);height:100%;left:0;opacity:0;position:absolute;top:0;width:100%}
.ui-state-disabled{cursor:default!important}
.ui-icon{background-image:url(../../images/frontend/calendar/ui-icons_0073ea_256x240.png);background-repeat:no-repeat;display:block;height:16px;overflow:hidden;text-indent:-99999px;width:16px}
.ui-widget{font-family:Helvetica,Arial,sans-serif;font-size:1.1em}
.ui-widget-content{background:#fff;border:1px solid #ddd;color:#444}
.ui-widget-header{background:#ddd;border:1px solid #ddd;color:#444;font-weight:700}
.ui-state-default,.ui-widget-content .ui-state-default{background:#f6f6f6;border:1px solid #ddd;color:#5b7194;font-weight:700;outline:none}
.ui-state-default a,.ui-state-default a:link,.ui-state-default a:visited{color:#5b7194;outline:none;text-decoration:none}
.ui-state-hover,.ui-widget-content .ui-state-hover,.ui-state-focus,.ui-widget-content .ui-state-focus{background:#FFE57F;border:1px solid #5b7194;color:#2F5D88;font-weight:700;outline:none}
.ui-state-hover a,.ui-state-hover a:hover{color:#2F5D88;outline:none;text-decoration:none}
.ui-state-active,.ui-widget-content .ui-state-active{background:#fff;border:1px solid #ddd;color:#ff0084;font-weight:700;outline:none}
.ui-state-active a,.ui-state-active a:link,.ui-state-active a:visited{color:#ff0084;outline:none;text-decoration:none}
.ui-state-disabled,.ui-widget-content .ui-state-disabled{background-image:none;filter:alpha(opacity=35);opacity:.35}
.ui-priority-secondary,.ui-widget-content .ui-priority-secondary{filter:alpha(opacity=70);font-weight:400;opacity:.7}
.ui-icon-circle-triangle-e{background-position:-48px -192px}
.ui-icon-circle-triangle-s{background-position:-64px -192px}
.ui-icon-circle-triangle-w{background-position:-80px -192px}
.ui-icon-circle-triangle-n{background-position:-96px -192px}
.ui-datepicker{width:17em;padding:.2em .2em 0}
.ui-datepicker .ui-datepicker-header{position:relative;padding:.2em 0}
.ui-datepicker .ui-datepicker-prev,.ui-datepicker .ui-datepicker-next{height:1.8em;position:absolute;top:2px;width:1.8em}
.ui-datepicker .ui-datepicker-prev-hover,.ui-datepicker .ui-datepicker-next-hover{top:1px}
.ui-datepicker .ui-datepicker-prev{left:2px}
.ui-datepicker .ui-datepicker-next{right:2px}
.ui-datepicker .ui-datepicker-prev-hover{left:1px}
.ui-datepicker .ui-datepicker-prev span,.ui-datepicker .ui-datepicker-next span{display:block;left:50%;margin-left:-8px;margin-top:-8px;position:absolute;top:50%}
.ui-datepicker .ui-datepicker-title{line-height:1.8em;text-align:center;margin:0 2.3em}
.ui-datepicker .ui-datepicker-title select{float:left;font-size:1em;margin:1px 0}
.ui-datepicker select.ui-datepicker-month,.ui-datepicker select.ui-datepicker-year{width:49%}
.ui-datepicker table{border-collapse:collapse;font-size:.9em;width:100%;margin:0 0 .4em}
.ui-datepicker th{border:0;font-weight:700;text-align:center;padding:.7em .3em}
.ui-datepicker td{border:0;padding:1px}
.ui-datepicker td span,.ui-datepicker td a{display:block;text-align:right;text-decoration:none;padding:.2em}
.ui-datepicker .ui-datepicker-buttonpane{background-image:none;border-bottom:0;border-left:0;border-right:0;margin:.7em 0 0;padding:0 .2em}
.ui-datepicker .ui-datepicker-buttonpane button{cursor:pointer;float:right;overflow:visible;width:auto;margin:.5em .2em .4em;padding:.2em .6em .3em}
.ui-datepicker-multi .ui-datepicker-group table{width:95%;margin:0 auto .4em}
.ui-datepicker-multi-3 .ui-datepicker-group{width:33.3%}
.ui-datepicker-multi-4 .ui-datepicker-group{width:25%}
.ui-datepicker-multi .ui-datepicker-buttonpane{clear:left}
.ui-datepicker-row-break{clear:both;width:100%}
.ui-datepicker-rtl{direction:rtl}
.ui-datepicker-rtl .ui-datepicker-prev{left:auto;right:2px}
.ui-datepicker-rtl .ui-datepicker-next{left:2px;right:auto}
.ui-datepicker-rtl .ui-datepicker-prev:hover{left:auto;right:1px}
.ui-datepicker-rtl .ui-datepicker-next:hover{left:1px;right:auto}
.ui-datepicker-rtl .ui-datepicker-buttonpane{clear:right}
.ui-datepicker-cover{display:block;filter:mask();height:200px;left:-4px;position:absolute;top:-4px;width:200px;z-index:-1}
.ui-datepicker-multi .ui-datepicker-group-last .ui-datepicker-header,.ui-datepicker-multi .ui-datepicker-group-middle .ui-datepicker-header{border-left-width:0}
.ui-datepicker-rtl .ui-datepicker-group-last .ui-datepicker-header,.ui-datepicker-rtl .ui-datepicker-group-middle .ui-datepicker-header{border-left-width:1px;border-right-width:0}
div.publi2{position:absolute;right:0;top:-29px;text-transform:none!important}
div.publi2 select{width:140px;padding:3px 2px}
div.button,input.button,input.txt_1,input.txt_2,dfn.highlight,ul.sort_by li span,ul.sort_time li span,div.pmain,div.nav a,div.nav strong,div.categorie a,div.comments_more a{-webkit-border-radius:2px;-moz-border-radius:2px;border-radius:2px 2px 2px 2px}
div.ibs,div.sponsored,a.sponsored,a.w_generate,div.search_niuz,div.pgri,div.rra,div.alerte{-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px 5px 5px 5px}
div.panou_s li{background:url(../../images/frontend/alpha.png) -5px -270px no-repeat;font-size:13px;line-height:14px;padding:0 0 4px 10px}
div.panou_s li cite{position:relative;top:1px}
div.panou_s li cite em{color:#7A98B3;font-style:normal}
li.cfs a{text-decoration:none;padding:5px 0}
li.cfs a:hover{text-decoration:underline;}

ul.share{display:block;float:right;height:35px;padding:10px 15px 0 2px}
ul.share a{display:block;width:35px;height:35px;float:left;background-image:url(../../images/frontend/bg.png);background-repeat:no-repeat;text-indent:-9999px;background-color:#090;margin:0 2px 0 0}
a.share1{background-position:-380px -525px}
a.share2{background-position:-420px -525px}
div.porange{border: none;position:relative;padding-top:55px;}

div.porange h4,div.porange h5{font-size:23px;border-bottom:1px solid #999;position:absolute;top:12px;padding:0 0 3px; letter-spacing: -1px;}
    div.porange h4 strong,div.porange h5 strong {
    font-weight: normal;
    }
/*div.porange h4 span,div.porange h5 span{border-bottom:3px solid #F30;padding:0 0 2px}*/
div.iframebg div.top_header{height:47px;border-bottom:1px solid #DDD;}
div.iframebg div.header img{top:-3px;left:0}
div.iffcat{position:absolute;top:0;left:135px;border-left:1px solid #4E769B;height:27px;color:#FFF;padding:17px 0 0 0}
div.iffcat ul { float: left; padding: 0 0 0 7px;}
div.iffcat a{font-size:13px;color:#EFF2F6;border:1px solid #5C80A1;background:#3F6A91;margin:0 2px 0 0;padding: 5px 5px}
div.iffcat a:hover{background:#4E759A;border:1px solid #4E759A;color:#FFF}
li.niuzitnow a {  background: #CC0000; font-weight: bold; border: 1px solid #EE0000; }
li.niuzitnow a:hover { background: #EE0000; border: 1px solid #EE0000 }
div.iff{position:absolute;top:0;right:0;font-size:20px; letter-spacing: -1px;}
div.iff span{font-size:11px;display:block;position:relative;top:4px;padding:0 1px; letter-spacing: 0;}
div.iff li{float:left;border-left:1px solid #4E769B;height:47px}
div.iff a{color:#EFF2F6;display:block;height:43px;padding:4px 10px 0 10px}
div.iff a:hover{background:#4E759A;color:#FFF}
div.iff a em, ul.niuzitnow li a em {font-style:normal;color: #FFE488;}
li.iff1 a{background: #C20004}
li.iff3 a{background:#446E94}
li.iff4 a{ border: 1px solid #5581A8; background:#3F6A92 url(../../images/frontend/alpha.png) -2px -654px no-repeat; text-indent:-9999px;padding:0; width: 21px; height: 21px; margin: 13px 13px 0 13px; -webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}
li.iff4 a:hover{ border: 1px solid #3F6A92; background:#5581A8 url(../../images/frontend/alpha.png) -2px -654px no-repeat; }
iframe.ifrs{position:absolute;width:100%;top:48px;z-index:1;overflow:auto;padding:0}
div.content_right div.panou ul{border-left:1px solid #DDD;position:relative;top:-2px;padding:5px 0 4px 5px}
div.banner{border:1px solid #DDD;margin:20px 0 0;padding:4px}
div.banner_i{margin:0 0 10px;padding:0 0 0 86px}
div.banner_s{margin:25px 0 0;padding:0 0 0 86px; height: 75px;}
div.banner_d{margin:8px 0 25px;padding:10px 0 0 86px}
div.banner_300{border:1px solid #DDD;margin:25px 0 0;padding:4px}
div.banner_160,div.banner_234{border-top:1px solid #DDD;border-left:1px solid #DDD;margin:25px 0 0;padding:4px}
h1,h2,h3,h4,h5,div.title strong.xt1,div.acv_cnt p strong{font-weight:400}
h1:first-letter,h2:first-letter,h3:first-letter,div.comment div.content p:first-letter,div.comment div.content:first-letter,div.comment ul.header li.header_2 a{text-transform:uppercase}
div.alerte a strong,div.alerte a span,div.iffcat li{display:block;float:left}
div.tabs_menu span a:hover,a:hover,div.submenu a.submenu_on,div.footer a.submenu_on,div.map strong,div.xinvite1 label,div.acv_cnt a:hover strong,div.acv_cnt p a:hover{text-decoration:underline}
div#userLocationsSelected a:hover.categorie,div.menu a:hover,div.menu a:hover#c61{background:#4E759A}
div.curs2 strong,div.pbnot span{color:#333}
div.titlefix h1,div.title h1,div.title strong.xt1,div.title_loc h1{font-size:30px;letter-spacing:-1px;line-height:32px}
div.title,div.title_loc{border-bottom:1px solid #BBB;margin-top:20px;position:relative;height:34px; padding-bottom: 4px; }
div.publi ul,div.icat ul,div.jud div.map ul{padding:2px 0}
span.time,div.acv_cnt p span,div.vprofil_c p span{color:#BBB}
div.search_left_1 span,div.search_left_2 span,div.view cite span{color:#777}
div.view cite a,table.xxx label,div.acv_cnt p strong,div.ntopix h2{font-weight:700}
div.comment ul.image img,div.publi div.title h2{border:none}
div#recentActivities,table.faq ul{padding:5px 0 0}
div.alerte a:hover,a:hover.profil_menu,div.prieteni a:hover,div.acv_cnt a:hover,div.ibs p strong a:hover{text-decoration:none}
div.panou_s ul,.ui-dialog .ui-dialog-titlebar-close:hover,.ui-dialog .ui-dialog-titlebar-close:focus,div.pp div.vprofile div.title h1{padding:0}
.ui-helper-clearfix,.ui-accordion .ui-accordion-content-active,#cssdropdown li:hover ul,li.over ul,div.panou_s li a{display:block}
.ui-datepicker.ui-datepicker-multi,div.iframebg div.header{width:auto}
div.irelativ { position: relative; top: 45px;}
div.istatic { position: static; top: 0; width: 948px; border: 1px solid #DDD; border-top: 1px solid #DDD; padding: 5px 10px 15px 10px; }
div.cat_index { padding: 0 10px; float: left; width: 295px; }
div.cat_index ul{font-size:13px;padding: 5px 0 2px;}
div.cat_index ul li:first-child { font-weight: bold;}
div.cat_index ul li{background:url(../../images/frontend/alpha.png) -5px -281px no-repeat;line-height:14px;padding:2px 0 6px 9px; line-height: 17px;}
div.cat_index img{float:right;border-left:2px solid #FFF;margin:5px 0 0 10px}
div.istatic div.title { margin-top: 15px; }
div.banner,div.banner_300,div.ibs em a,div.sssn_mini_title a,textarea,span.message,span.error,span.notif,li.header_2 a,img.secureImage,div.tabs span,div.profil_menu,img.profileAvatar,div.vprofile_buttons a,div.button,a.adauga,form.fav_search,div.fav_search,form.world a,form.world span,li.cfs a, div.iffcat a {-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px 3px 3px 3px}
div.icat_locale{ border-top: 5px solid #EEE; }

div.iffp { float: left; background: url(../../images/frontend/preloader.gif) 6px 3px no-repeat;width:32px; height: 19px; text-indent: -9999px; margin: 15px 7px 0 0;}
------------qTBjXnmaI6qvT5AepQBBtZ
Content-Disposition: inline; filename=jquery.js
Content-Type: application/x-javascript; name=jquery.js
Content-Location: http://js.niuzer.com/common/jquery.js
Content-Transfer-Encoding: Base64

DQooZnVuY3Rpb24od2luZG93LHVuZGVmaW5lZCl7dmFyIGpRdWVyeT1mdW5jdGlv
bihzZWxlY3Rvcixjb250ZXh0KXtyZXR1cm4gbmV3IGpRdWVyeS5mbi5pbml0KHNl
bGVjdG9yLGNvbnRleHQpO30sX2pRdWVyeT13aW5kb3cualF1ZXJ5LF8kPXdpbmRv
dy4kLGRvY3VtZW50PXdpbmRvdy5kb2N1bWVudCxyb290alF1ZXJ5LHF1aWNrRXhw
cj0vXltePF0qKDxbXHdcV10rPilbXj5dKiR8XiMoW1x3LV0rKSQvLGlzU2ltcGxl
PS9eLlteOiNcW1wuLF0qJC8scm5vdHdoaXRlPS9cUy8scnRyaW09L14oXHN8XHUw
MEEwKSt8KFxzfFx1MDBBMCkrJC9nLHJzaW5nbGVUYWc9L148KFx3KylccypcLz8+
KD86PFwvXDE+KT8kLyx1c2VyQWdlbnQ9bmF2aWdhdG9yLnVzZXJBZ2VudCxicm93
c2VyTWF0Y2gscmVhZHlCb3VuZD1mYWxzZSxyZWFkeUxpc3Q9W10sRE9NQ29udGVu
dExvYWRlZCx0b1N0cmluZz1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLGhhc093
blByb3BlcnR5PU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkscHVzaD1B
cnJheS5wcm90b3R5cGUucHVzaCxzbGljZT1BcnJheS5wcm90b3R5cGUuc2xpY2Us
aW5kZXhPZj1BcnJheS5wcm90b3R5cGUuaW5kZXhPZjtqUXVlcnkuZm49alF1ZXJ5
LnByb3RvdHlwZT17aW5pdDpmdW5jdGlvbihzZWxlY3Rvcixjb250ZXh0KXt2YXIg
bWF0Y2gsZWxlbSxyZXQsZG9jO2lmKCFzZWxlY3Rvcil7cmV0dXJuIHRoaXM7fQ0K
aWYoc2VsZWN0b3Iubm9kZVR5cGUpe3RoaXMuY29udGV4dD10aGlzWzBdPXNlbGVj
dG9yO3RoaXMubGVuZ3RoPTE7cmV0dXJuIHRoaXM7fQ0KaWYoc2VsZWN0b3I9PT0i
Ym9keSImJiFjb250ZXh0KXt0aGlzLmNvbnRleHQ9ZG9jdW1lbnQ7dGhpc1swXT1k
b2N1bWVudC5ib2R5O3RoaXMuc2VsZWN0b3I9ImJvZHkiO3RoaXMubGVuZ3RoPTE7
cmV0dXJuIHRoaXM7fQ0KaWYodHlwZW9mIHNlbGVjdG9yPT09InN0cmluZyIpe21h
dGNoPXF1aWNrRXhwci5leGVjKHNlbGVjdG9yKTtpZihtYXRjaCYmKG1hdGNoWzFd
fHwhY29udGV4dCkpe2lmKG1hdGNoWzFdKXtkb2M9KGNvbnRleHQ/Y29udGV4dC5v
d25lckRvY3VtZW50fHxjb250ZXh0OmRvY3VtZW50KTtyZXQ9cnNpbmdsZVRhZy5l
eGVjKHNlbGVjdG9yKTtpZihyZXQpe2lmKGpRdWVyeS5pc1BsYWluT2JqZWN0KGNv
bnRleHQpKXtzZWxlY3Rvcj1bZG9jdW1lbnQuY3JlYXRlRWxlbWVudChyZXRbMV0p
XTtqUXVlcnkuZm4uYXR0ci5jYWxsKHNlbGVjdG9yLGNvbnRleHQsdHJ1ZSk7fWVs
c2V7c2VsZWN0b3I9W2RvYy5jcmVhdGVFbGVtZW50KHJldFsxXSldO319ZWxzZXty
ZXQ9YnVpbGRGcmFnbWVudChbbWF0Y2hbMV1dLFtkb2NdKTtzZWxlY3Rvcj0ocmV0
LmNhY2hlYWJsZT9yZXQuZnJhZ21lbnQuY2xvbmVOb2RlKHRydWUpOnJldC5mcmFn
bWVudCkuY2hpbGROb2Rlczt9DQpyZXR1cm4galF1ZXJ5Lm1lcmdlKHRoaXMsc2Vs
ZWN0b3IpO31lbHNle2VsZW09ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobWF0Y2hb
Ml0pO2lmKGVsZW0pe2lmKGVsZW0uaWQhPT1tYXRjaFsyXSl7cmV0dXJuIHJvb3Rq
UXVlcnkuZmluZChzZWxlY3Rvcik7fQ0KdGhpcy5sZW5ndGg9MTt0aGlzWzBdPWVs
ZW07fQ0KdGhpcy5jb250ZXh0PWRvY3VtZW50O3RoaXMuc2VsZWN0b3I9c2VsZWN0
b3I7cmV0dXJuIHRoaXM7fX1lbHNlIGlmKCFjb250ZXh0JiYvXlx3KyQvLnRlc3Qo
c2VsZWN0b3IpKXt0aGlzLnNlbGVjdG9yPXNlbGVjdG9yO3RoaXMuY29udGV4dD1k
b2N1bWVudDtzZWxlY3Rvcj1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShz
ZWxlY3Rvcik7cmV0dXJuIGpRdWVyeS5tZXJnZSh0aGlzLHNlbGVjdG9yKTt9ZWxz
ZSBpZighY29udGV4dHx8Y29udGV4dC5qcXVlcnkpe3JldHVybihjb250ZXh0fHxy
b290alF1ZXJ5KS5maW5kKHNlbGVjdG9yKTt9ZWxzZXtyZXR1cm4galF1ZXJ5KGNv
bnRleHQpLmZpbmQoc2VsZWN0b3IpO319ZWxzZSBpZihqUXVlcnkuaXNGdW5jdGlv
bihzZWxlY3Rvcikpe3JldHVybiByb290alF1ZXJ5LnJlYWR5KHNlbGVjdG9yKTt9
DQppZihzZWxlY3Rvci5zZWxlY3RvciE9PXVuZGVmaW5lZCl7dGhpcy5zZWxlY3Rv
cj1zZWxlY3Rvci5zZWxlY3Rvcjt0aGlzLmNvbnRleHQ9c2VsZWN0b3IuY29udGV4
dDt9DQpyZXR1cm4galF1ZXJ5Lm1ha2VBcnJheShzZWxlY3Rvcix0aGlzKTt9LHNl
bGVjdG9yOiIiLGpxdWVyeToiMS40LjIiLGxlbmd0aDowLHNpemU6ZnVuY3Rpb24o
KXtyZXR1cm4gdGhpcy5sZW5ndGg7fSx0b0FycmF5OmZ1bmN0aW9uKCl7cmV0dXJu
IHNsaWNlLmNhbGwodGhpcywwKTt9LGdldDpmdW5jdGlvbihudW0pe3JldHVybiBu
dW09PW51bGw/dGhpcy50b0FycmF5KCk6KG51bTwwP3RoaXMuc2xpY2UobnVtKVsw
XTp0aGlzW251bV0pO30scHVzaFN0YWNrOmZ1bmN0aW9uKGVsZW1zLG5hbWUsc2Vs
ZWN0b3Ipe3ZhciByZXQ9alF1ZXJ5KCk7aWYoalF1ZXJ5LmlzQXJyYXkoZWxlbXMp
KXtwdXNoLmFwcGx5KHJldCxlbGVtcyk7fWVsc2V7alF1ZXJ5Lm1lcmdlKHJldCxl
bGVtcyk7fQ0KcmV0LnByZXZPYmplY3Q9dGhpcztyZXQuY29udGV4dD10aGlzLmNv
bnRleHQ7aWYobmFtZT09PSJmaW5kIil7cmV0LnNlbGVjdG9yPXRoaXMuc2VsZWN0
b3IrKHRoaXMuc2VsZWN0b3I/IiAiOiIiKStzZWxlY3Rvcjt9ZWxzZSBpZihuYW1l
KXtyZXQuc2VsZWN0b3I9dGhpcy5zZWxlY3RvcisiLiIrbmFtZSsiKCIrc2VsZWN0
b3IrIikiO30NCnJldHVybiByZXQ7fSxlYWNoOmZ1bmN0aW9uKGNhbGxiYWNrLGFy
Z3Mpe3JldHVybiBqUXVlcnkuZWFjaCh0aGlzLGNhbGxiYWNrLGFyZ3MpO30scmVh
ZHk6ZnVuY3Rpb24oZm4pe2pRdWVyeS5iaW5kUmVhZHkoKTtpZihqUXVlcnkuaXNS
ZWFkeSl7Zm4uY2FsbChkb2N1bWVudCxqUXVlcnkpO31lbHNlIGlmKHJlYWR5TGlz
dCl7cmVhZHlMaXN0LnB1c2goZm4pO30NCnJldHVybiB0aGlzO30sZXE6ZnVuY3Rp
b24oaSl7cmV0dXJuIGk9PT0tMT90aGlzLnNsaWNlKGkpOnRoaXMuc2xpY2UoaSwr
aSsxKTt9LGZpcnN0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZXEoMCk7fSxsYXN0
OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZXEoLTEpO30sc2xpY2U6ZnVuY3Rpb24o
KXtyZXR1cm4gdGhpcy5wdXNoU3RhY2soc2xpY2UuYXBwbHkodGhpcyxhcmd1bWVu
dHMpLCJzbGljZSIsc2xpY2UuY2FsbChhcmd1bWVudHMpLmpvaW4oIiwiKSk7fSxt
YXA6ZnVuY3Rpb24oY2FsbGJhY2spe3JldHVybiB0aGlzLnB1c2hTdGFjayhqUXVl
cnkubWFwKHRoaXMsZnVuY3Rpb24oZWxlbSxpKXtyZXR1cm4gY2FsbGJhY2suY2Fs
bChlbGVtLGksZWxlbSk7fSkpO30sZW5kOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMu
cHJldk9iamVjdHx8alF1ZXJ5KG51bGwpO30scHVzaDpwdXNoLHNvcnQ6W10uc29y
dCxzcGxpY2U6W10uc3BsaWNlfTtqUXVlcnkuZm4uaW5pdC5wcm90b3R5cGU9alF1
ZXJ5LmZuO2pRdWVyeS5leHRlbmQ9alF1ZXJ5LmZuLmV4dGVuZD1mdW5jdGlvbigp
e3ZhciB0YXJnZXQ9YXJndW1lbnRzWzBdfHx7fSxpPTEsbGVuZ3RoPWFyZ3VtZW50
cy5sZW5ndGgsZGVlcD1mYWxzZSxvcHRpb25zLG5hbWUsc3JjLGNvcHk7aWYodHlw
ZW9mIHRhcmdldD09PSJib29sZWFuIil7ZGVlcD10YXJnZXQ7dGFyZ2V0PWFyZ3Vt
ZW50c1sxXXx8e307aT0yO30NCmlmKHR5cGVvZiB0YXJnZXQhPT0ib2JqZWN0IiYm
IWpRdWVyeS5pc0Z1bmN0aW9uKHRhcmdldCkpe3RhcmdldD17fTt9DQppZihsZW5n
dGg9PT1pKXt0YXJnZXQ9dGhpczstLWk7fQ0KZm9yKDtpPGxlbmd0aDtpKyspe2lm
KChvcHRpb25zPWFyZ3VtZW50c1tpXSkhPW51bGwpe2ZvcihuYW1lIGluIG9wdGlv
bnMpe3NyYz10YXJnZXRbbmFtZV07Y29weT1vcHRpb25zW25hbWVdO2lmKHRhcmdl
dD09PWNvcHkpe2NvbnRpbnVlO30NCmlmKGRlZXAmJmNvcHkmJihqUXVlcnkuaXNQ
bGFpbk9iamVjdChjb3B5KXx8alF1ZXJ5LmlzQXJyYXkoY29weSkpKXt2YXIgY2xv
bmU9c3JjJiYoalF1ZXJ5LmlzUGxhaW5PYmplY3Qoc3JjKXx8alF1ZXJ5LmlzQXJy
YXkoc3JjKSk/c3JjOmpRdWVyeS5pc0FycmF5KGNvcHkpP1tdOnt9O3RhcmdldFtu
YW1lXT1qUXVlcnkuZXh0ZW5kKGRlZXAsY2xvbmUsY29weSk7fWVsc2UgaWYoY29w
eSE9PXVuZGVmaW5lZCl7dGFyZ2V0W25hbWVdPWNvcHk7fX19fQ0KcmV0dXJuIHRh
cmdldDt9O2pRdWVyeS5leHRlbmQoe25vQ29uZmxpY3Q6ZnVuY3Rpb24oZGVlcCl7
d2luZG93LiQ9XyQ7aWYoZGVlcCl7d2luZG93LmpRdWVyeT1falF1ZXJ5O30NCnJl
dHVybiBqUXVlcnk7fSxpc1JlYWR5OmZhbHNlLHJlYWR5OmZ1bmN0aW9uKCl7aWYo
IWpRdWVyeS5pc1JlYWR5KXtpZighZG9jdW1lbnQuYm9keSl7cmV0dXJuIHNldFRp
bWVvdXQoalF1ZXJ5LnJlYWR5LDEzKTt9DQpqUXVlcnkuaXNSZWFkeT10cnVlO2lm
KHJlYWR5TGlzdCl7dmFyIGZuLGk9MDt3aGlsZSgoZm49cmVhZHlMaXN0W2krK10p
KXtmbi5jYWxsKGRvY3VtZW50LGpRdWVyeSk7fQ0KcmVhZHlMaXN0PW51bGw7fQ0K
aWYoalF1ZXJ5LmZuLnRyaWdnZXJIYW5kbGVyKXtqUXVlcnkoZG9jdW1lbnQpLnRy
aWdnZXJIYW5kbGVyKCJyZWFkeSIpO319fSxiaW5kUmVhZHk6ZnVuY3Rpb24oKXtp
ZihyZWFkeUJvdW5kKXtyZXR1cm47fQ0KcmVhZHlCb3VuZD10cnVlO2lmKGRvY3Vt
ZW50LnJlYWR5U3RhdGU9PT0iY29tcGxldGUiKXtyZXR1cm4galF1ZXJ5LnJlYWR5
KCk7fQ0KaWYoZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcil7ZG9jdW1lbnQuYWRk
RXZlbnRMaXN0ZW5lcigiRE9NQ29udGVudExvYWRlZCIsRE9NQ29udGVudExvYWRl
ZCxmYWxzZSk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoImxvYWQiLGpRdWVyeS5y
ZWFkeSxmYWxzZSk7fWVsc2UgaWYoZG9jdW1lbnQuYXR0YWNoRXZlbnQpe2RvY3Vt
ZW50LmF0dGFjaEV2ZW50KCJvbnJlYWR5c3RhdGVjaGFuZ2UiLERPTUNvbnRlbnRM
b2FkZWQpO3dpbmRvdy5hdHRhY2hFdmVudCgib25sb2FkIixqUXVlcnkucmVhZHkp
O3ZhciB0b3BsZXZlbD1mYWxzZTt0cnl7dG9wbGV2ZWw9d2luZG93LmZyYW1lRWxl
bWVudD09bnVsbDt9Y2F0Y2goZSl7fQ0KaWYoZG9jdW1lbnQuZG9jdW1lbnRFbGVt
ZW50LmRvU2Nyb2xsJiZ0b3BsZXZlbCl7ZG9TY3JvbGxDaGVjaygpO319fSxpc0Z1
bmN0aW9uOmZ1bmN0aW9uKG9iail7cmV0dXJuIHRvU3RyaW5nLmNhbGwob2JqKT09
PSJbb2JqZWN0IEZ1bmN0aW9uXSI7fSxpc0FycmF5OmZ1bmN0aW9uKG9iail7cmV0
dXJuIHRvU3RyaW5nLmNhbGwob2JqKT09PSJbb2JqZWN0IEFycmF5XSI7fSxpc1Bs
YWluT2JqZWN0OmZ1bmN0aW9uKG9iail7aWYoIW9ianx8dG9TdHJpbmcuY2FsbChv
YmopIT09IltvYmplY3QgT2JqZWN0XSJ8fG9iai5ub2RlVHlwZXx8b2JqLnNldElu
dGVydmFsKXtyZXR1cm4gZmFsc2U7fQ0KaWYob2JqLmNvbnN0cnVjdG9yJiYhaGFz
T3duUHJvcGVydHkuY2FsbChvYmosImNvbnN0cnVjdG9yIikmJiFoYXNPd25Qcm9w
ZXJ0eS5jYWxsKG9iai5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsImlzUHJvdG90eXBl
T2YiKSl7cmV0dXJuIGZhbHNlO30NCnZhciBrZXk7Zm9yKGtleSBpbiBvYmope30N
CnJldHVybiBrZXk9PT11bmRlZmluZWR8fGhhc093blByb3BlcnR5LmNhbGwob2Jq
LGtleSk7fSxpc0VtcHR5T2JqZWN0OmZ1bmN0aW9uKG9iail7Zm9yKHZhciBuYW1l
IGluIG9iail7cmV0dXJuIGZhbHNlO30NCnJldHVybiB0cnVlO30sZXJyb3I6ZnVu
Y3Rpb24obXNnKXt0aHJvdyBtc2c7fSxwYXJzZUpTT046ZnVuY3Rpb24oZGF0YSl7
aWYodHlwZW9mIGRhdGEhPT0ic3RyaW5nInx8IWRhdGEpe3JldHVybiBudWxsO30N
CmRhdGE9alF1ZXJ5LnRyaW0oZGF0YSk7aWYoL15bXF0sOnt9XHNdKiQvLnRlc3Qo
ZGF0YS5yZXBsYWNlKC9cXCg/OlsiXFxcL2JmbnJ0XXx1WzAtOWEtZkEtRl17NH0p
L2csIkAiKS5yZXBsYWNlKC8iW14iXFxcblxyXSoifHRydWV8ZmFsc2V8bnVsbHwt
P1xkKyg/OlwuXGQqKT8oPzpbZUVdWytcLV0/XGQrKT8vZywiXSIpLnJlcGxhY2Uo
Lyg/Ol58OnwsKSg/OlxzKlxbKSsvZywiIikpKXtyZXR1cm4gd2luZG93LkpTT04m
JndpbmRvdy5KU09OLnBhcnNlP3dpbmRvdy5KU09OLnBhcnNlKGRhdGEpOihuZXcg
RnVuY3Rpb24oInJldHVybiAiK2RhdGEpKSgpO31lbHNle2pRdWVyeS5lcnJvcigi
SW52YWxpZCBKU09OOiAiK2RhdGEpO319LG5vb3A6ZnVuY3Rpb24oKXt9LGdsb2Jh
bEV2YWw6ZnVuY3Rpb24oZGF0YSl7aWYoZGF0YSYmcm5vdHdoaXRlLnRlc3QoZGF0
YSkpe3ZhciBoZWFkPWRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJoZWFk
IilbMF18fGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxzY3JpcHQ9ZG9jdW1lbnQu
Y3JlYXRlRWxlbWVudCgic2NyaXB0Iik7c2NyaXB0LnR5cGU9InRleHQvamF2YXNj
cmlwdCI7aWYoalF1ZXJ5LnN1cHBvcnQuc2NyaXB0RXZhbCl7c2NyaXB0LmFwcGVu
ZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGRhdGEpKTt9ZWxzZXtzY3Jp
cHQudGV4dD1kYXRhO30NCmhlYWQuaW5zZXJ0QmVmb3JlKHNjcmlwdCxoZWFkLmZp
cnN0Q2hpbGQpO2hlYWQucmVtb3ZlQ2hpbGQoc2NyaXB0KTt9fSxub2RlTmFtZTpm
dW5jdGlvbihlbGVtLG5hbWUpe3JldHVybiBlbGVtLm5vZGVOYW1lJiZlbGVtLm5v
ZGVOYW1lLnRvVXBwZXJDYXNlKCk9PT1uYW1lLnRvVXBwZXJDYXNlKCk7fSxlYWNo
OmZ1bmN0aW9uKG9iamVjdCxjYWxsYmFjayxhcmdzKXt2YXIgbmFtZSxpPTAsbGVu
Z3RoPW9iamVjdC5sZW5ndGgsaXNPYmo9bGVuZ3RoPT09dW5kZWZpbmVkfHxqUXVl
cnkuaXNGdW5jdGlvbihvYmplY3QpO2lmKGFyZ3Mpe2lmKGlzT2JqKXtmb3IobmFt
ZSBpbiBvYmplY3Qpe2lmKGNhbGxiYWNrLmFwcGx5KG9iamVjdFtuYW1lXSxhcmdz
KT09PWZhbHNlKXticmVhazt9fX1lbHNle2Zvcig7aTxsZW5ndGg7KXtpZihjYWxs
YmFjay5hcHBseShvYmplY3RbaSsrXSxhcmdzKT09PWZhbHNlKXticmVhazt9fX19
ZWxzZXtpZihpc09iail7Zm9yKG5hbWUgaW4gb2JqZWN0KXtpZihjYWxsYmFjay5j
YWxsKG9iamVjdFtuYW1lXSxuYW1lLG9iamVjdFtuYW1lXSk9PT1mYWxzZSl7YnJl
YWs7fX19ZWxzZXtmb3IodmFyIHZhbHVlPW9iamVjdFswXTtpPGxlbmd0aCYmY2Fs
bGJhY2suY2FsbCh2YWx1ZSxpLHZhbHVlKSE9PWZhbHNlO3ZhbHVlPW9iamVjdFsr
K2ldKXt9fX0NCnJldHVybiBvYmplY3Q7fSx0cmltOmZ1bmN0aW9uKHRleHQpe3Jl
dHVybih0ZXh0fHwiIikucmVwbGFjZShydHJpbSwiIik7fSxtYWtlQXJyYXk6ZnVu
Y3Rpb24oYXJyYXkscmVzdWx0cyl7dmFyIHJldD1yZXN1bHRzfHxbXTtpZihhcnJh
eSE9bnVsbCl7aWYoYXJyYXkubGVuZ3RoPT1udWxsfHx0eXBlb2YgYXJyYXk9PT0i
c3RyaW5nInx8alF1ZXJ5LmlzRnVuY3Rpb24oYXJyYXkpfHwodHlwZW9mIGFycmF5
IT09ImZ1bmN0aW9uIiYmYXJyYXkuc2V0SW50ZXJ2YWwpKXtwdXNoLmNhbGwocmV0
LGFycmF5KTt9ZWxzZXtqUXVlcnkubWVyZ2UocmV0LGFycmF5KTt9fQ0KcmV0dXJu
IHJldDt9LGluQXJyYXk6ZnVuY3Rpb24oZWxlbSxhcnJheSl7aWYoYXJyYXkuaW5k
ZXhPZil7cmV0dXJuIGFycmF5LmluZGV4T2YoZWxlbSk7fQ0KZm9yKHZhciBpPTAs
bGVuZ3RoPWFycmF5Lmxlbmd0aDtpPGxlbmd0aDtpKyspe2lmKGFycmF5W2ldPT09
ZWxlbSl7cmV0dXJuIGk7fX0NCnJldHVybi0xO30sbWVyZ2U6ZnVuY3Rpb24oZmly
c3Qsc2Vjb25kKXt2YXIgaT1maXJzdC5sZW5ndGgsaj0wO2lmKHR5cGVvZiBzZWNv
bmQubGVuZ3RoPT09Im51bWJlciIpe2Zvcih2YXIgbD1zZWNvbmQubGVuZ3RoO2o8
bDtqKyspe2ZpcnN0W2krK109c2Vjb25kW2pdO319ZWxzZXt3aGlsZShzZWNvbmRb
al0hPT11bmRlZmluZWQpe2ZpcnN0W2krK109c2Vjb25kW2orK107fX0NCmZpcnN0
Lmxlbmd0aD1pO3JldHVybiBmaXJzdDt9LGdyZXA6ZnVuY3Rpb24oZWxlbXMsY2Fs
bGJhY2ssaW52KXt2YXIgcmV0PVtdO2Zvcih2YXIgaT0wLGxlbmd0aD1lbGVtcy5s
ZW5ndGg7aTxsZW5ndGg7aSsrKXtpZighaW52IT09IWNhbGxiYWNrKGVsZW1zW2ld
LGkpKXtyZXQucHVzaChlbGVtc1tpXSk7fX0NCnJldHVybiByZXQ7fSxtYXA6ZnVu
Y3Rpb24oZWxlbXMsY2FsbGJhY2ssYXJnKXt2YXIgcmV0PVtdLHZhbHVlO2Zvcih2
YXIgaT0wLGxlbmd0aD1lbGVtcy5sZW5ndGg7aTxsZW5ndGg7aSsrKXt2YWx1ZT1j
YWxsYmFjayhlbGVtc1tpXSxpLGFyZyk7aWYodmFsdWUhPW51bGwpe3JldFtyZXQu
bGVuZ3RoXT12YWx1ZTt9fQ0KcmV0dXJuIHJldC5jb25jYXQuYXBwbHkoW10scmV0
KTt9LGd1aWQ6MSxwcm94eTpmdW5jdGlvbihmbixwcm94eSx0aGlzT2JqZWN0KXtp
Zihhcmd1bWVudHMubGVuZ3RoPT09Mil7aWYodHlwZW9mIHByb3h5PT09InN0cmlu
ZyIpe3RoaXNPYmplY3Q9Zm47Zm49dGhpc09iamVjdFtwcm94eV07cHJveHk9dW5k
ZWZpbmVkO31lbHNlIGlmKHByb3h5JiYhalF1ZXJ5LmlzRnVuY3Rpb24ocHJveHkp
KXt0aGlzT2JqZWN0PXByb3h5O3Byb3h5PXVuZGVmaW5lZDt9fQ0KaWYoIXByb3h5
JiZmbil7cHJveHk9ZnVuY3Rpb24oKXtyZXR1cm4gZm4uYXBwbHkodGhpc09iamVj
dHx8dGhpcyxhcmd1bWVudHMpO307fQ0KaWYoZm4pe3Byb3h5Lmd1aWQ9Zm4uZ3Vp
ZD1mbi5ndWlkfHxwcm94eS5ndWlkfHxqUXVlcnkuZ3VpZCsrO30NCnJldHVybiBw
cm94eTt9LHVhTWF0Y2g6ZnVuY3Rpb24odWEpe3VhPXVhLnRvTG93ZXJDYXNlKCk7
dmFyIG1hdGNoPS8od2Via2l0KVsgXC9dKFtcdy5dKykvLmV4ZWModWEpfHwvKG9w
ZXJhKSg/Oi4qdmVyc2lvbik/WyBcL10oW1x3Ll0rKS8uZXhlYyh1YSl8fC8obXNp
ZSkgKFtcdy5dKykvLmV4ZWModWEpfHwhL2NvbXBhdGlibGUvLnRlc3QodWEpJiYv
KG1vemlsbGEpKD86Lio/IHJ2OihbXHcuXSspKT8vLmV4ZWModWEpfHxbXTtyZXR1
cm57YnJvd3NlcjptYXRjaFsxXXx8IiIsdmVyc2lvbjptYXRjaFsyXXx8IjAifTt9
LGJyb3dzZXI6e319KTticm93c2VyTWF0Y2g9alF1ZXJ5LnVhTWF0Y2godXNlckFn
ZW50KTtpZihicm93c2VyTWF0Y2guYnJvd3Nlcil7alF1ZXJ5LmJyb3dzZXJbYnJv
d3Nlck1hdGNoLmJyb3dzZXJdPXRydWU7alF1ZXJ5LmJyb3dzZXIudmVyc2lvbj1i
cm93c2VyTWF0Y2gudmVyc2lvbjt9DQppZihqUXVlcnkuYnJvd3Nlci53ZWJraXQp
e2pRdWVyeS5icm93c2VyLnNhZmFyaT10cnVlO30NCmlmKGluZGV4T2Ype2pRdWVy
eS5pbkFycmF5PWZ1bmN0aW9uKGVsZW0sYXJyYXkpe3JldHVybiBpbmRleE9mLmNh
bGwoYXJyYXksZWxlbSk7fTt9DQpyb290alF1ZXJ5PWpRdWVyeShkb2N1bWVudCk7
aWYoZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcil7RE9NQ29udGVudExvYWRlZD1m
dW5jdGlvbigpe2RvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoIkRPTUNvbnRl
bnRMb2FkZWQiLERPTUNvbnRlbnRMb2FkZWQsZmFsc2UpO2pRdWVyeS5yZWFkeSgp
O307fWVsc2UgaWYoZG9jdW1lbnQuYXR0YWNoRXZlbnQpe0RPTUNvbnRlbnRMb2Fk
ZWQ9ZnVuY3Rpb24oKXtpZihkb2N1bWVudC5yZWFkeVN0YXRlPT09ImNvbXBsZXRl
Iil7ZG9jdW1lbnQuZGV0YWNoRXZlbnQoIm9ucmVhZHlzdGF0ZWNoYW5nZSIsRE9N
Q29udGVudExvYWRlZCk7alF1ZXJ5LnJlYWR5KCk7fX07fQ0KZnVuY3Rpb24gZG9T
Y3JvbGxDaGVjaygpe2lmKGpRdWVyeS5pc1JlYWR5KXtyZXR1cm47fQ0KdHJ5e2Rv
Y3VtZW50LmRvY3VtZW50RWxlbWVudC5kb1Njcm9sbCgibGVmdCIpO31jYXRjaChl
cnJvcil7c2V0VGltZW91dChkb1Njcm9sbENoZWNrLDEpO3JldHVybjt9DQpqUXVl
cnkucmVhZHkoKTt9DQpmdW5jdGlvbiBldmFsU2NyaXB0KGksZWxlbSl7aWYoZWxl
bS5zcmMpe2pRdWVyeS5hamF4KHt1cmw6ZWxlbS5zcmMsYXN5bmM6ZmFsc2UsZGF0
YVR5cGU6InNjcmlwdCJ9KTt9ZWxzZXtqUXVlcnkuZ2xvYmFsRXZhbChlbGVtLnRl
eHR8fGVsZW0udGV4dENvbnRlbnR8fGVsZW0uaW5uZXJIVE1MfHwiIik7fQ0KaWYo
ZWxlbS5wYXJlbnROb2RlKXtlbGVtLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZWxl
bSk7fX0NCmZ1bmN0aW9uIGFjY2VzcyhlbGVtcyxrZXksdmFsdWUsZXhlYyxmbixw
YXNzKXt2YXIgbGVuZ3RoPWVsZW1zLmxlbmd0aDtpZih0eXBlb2Yga2V5PT09Im9i
amVjdCIpe2Zvcih2YXIgayBpbiBrZXkpe2FjY2VzcyhlbGVtcyxrLGtleVtrXSxl
eGVjLGZuLHZhbHVlKTt9DQpyZXR1cm4gZWxlbXM7fQ0KaWYodmFsdWUhPT11bmRl
ZmluZWQpe2V4ZWM9IXBhc3MmJmV4ZWMmJmpRdWVyeS5pc0Z1bmN0aW9uKHZhbHVl
KTtmb3IodmFyIGk9MDtpPGxlbmd0aDtpKyspe2ZuKGVsZW1zW2ldLGtleSxleGVj
P3ZhbHVlLmNhbGwoZWxlbXNbaV0saSxmbihlbGVtc1tpXSxrZXkpKTp2YWx1ZSxw
YXNzKTt9DQpyZXR1cm4gZWxlbXM7fQ0KcmV0dXJuIGxlbmd0aD9mbihlbGVtc1sw
XSxrZXkpOnVuZGVmaW5lZDt9DQpmdW5jdGlvbiBub3coKXtyZXR1cm4obmV3IERh
dGUpLmdldFRpbWUoKTt9DQooZnVuY3Rpb24oKXtqUXVlcnkuc3VwcG9ydD17fTt2
YXIgcm9vdD1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsc2NyaXB0PWRvY3VtZW50
LmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpLGRpdj1kb2N1bWVudC5jcmVhdGVFbGVt
ZW50KCJkaXYiKSxpZD0ic2NyaXB0Iitub3coKTtkaXYuc3R5bGUuZGlzcGxheT0i
bm9uZSI7ZGl2LmlubmVySFRNTD0iICAgPGxpbmsvPjx0YWJsZT48L3RhYmxlPjxh
IGhyZWY9Jy9hJyBzdHlsZT0nY29sb3I6cmVkO2Zsb2F0OmxlZnQ7b3BhY2l0eTou
NTU7Jz5hPC9hPjxpbnB1dCB0eXBlPSdjaGVja2JveCcvPiI7dmFyIGFsbD1kaXYu
Z2V0RWxlbWVudHNCeVRhZ05hbWUoIioiKSxhPWRpdi5nZXRFbGVtZW50c0J5VGFn
TmFtZSgiYSIpWzBdO2lmKCFhbGx8fCFhbGwubGVuZ3RofHwhYSl7cmV0dXJuO30N
CmpRdWVyeS5zdXBwb3J0PXtsZWFkaW5nV2hpdGVzcGFjZTpkaXYuZmlyc3RDaGls
ZC5ub2RlVHlwZT09PTMsdGJvZHk6IWRpdi5nZXRFbGVtZW50c0J5VGFnTmFtZSgi
dGJvZHkiKS5sZW5ndGgsaHRtbFNlcmlhbGl6ZTohIWRpdi5nZXRFbGVtZW50c0J5
VGFnTmFtZSgibGluayIpLmxlbmd0aCxzdHlsZTovcmVkLy50ZXN0KGEuZ2V0QXR0
cmlidXRlKCJzdHlsZSIpKSxocmVmTm9ybWFsaXplZDphLmdldEF0dHJpYnV0ZSgi
aHJlZiIpPT09Ii9hIixvcGFjaXR5Oi9eMC41NSQvLnRlc3QoYS5zdHlsZS5vcGFj
aXR5KSxjc3NGbG9hdDohIWEuc3R5bGUuY3NzRmxvYXQsY2hlY2tPbjpkaXYuZ2V0
RWxlbWVudHNCeVRhZ05hbWUoImlucHV0IilbMF0udmFsdWU9PT0ib24iLG9wdFNl
bGVjdGVkOmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNlbGVjdCIpLmFwcGVuZENo
aWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIm9wdGlvbiIpKS5zZWxlY3RlZCxw
YXJlbnROb2RlOmRpdi5yZW1vdmVDaGlsZChkaXYuYXBwZW5kQ2hpbGQoZG9jdW1l
bnQuY3JlYXRlRWxlbWVudCgiZGl2IikpKS5wYXJlbnROb2RlPT09bnVsbCxkZWxl
dGVFeHBhbmRvOnRydWUsY2hlY2tDbG9uZTpmYWxzZSxzY3JpcHRFdmFsOmZhbHNl
LG5vQ2xvbmVFdmVudDp0cnVlLGJveE1vZGVsOm51bGx9O3NjcmlwdC50eXBlPSJ0
ZXh0L2phdmFzY3JpcHQiO3RyeXtzY3JpcHQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQu
Y3JlYXRlVGV4dE5vZGUoIndpbmRvdy4iK2lkKyI9MTsiKSk7fWNhdGNoKGUpe30N
CnJvb3QuaW5zZXJ0QmVmb3JlKHNjcmlwdCxyb290LmZpcnN0Q2hpbGQpO2lmKHdp
bmRvd1tpZF0pe2pRdWVyeS5zdXBwb3J0LnNjcmlwdEV2YWw9dHJ1ZTtkZWxldGUg
d2luZG93W2lkXTt9DQp0cnl7ZGVsZXRlIHNjcmlwdC50ZXN0O31jYXRjaChlKXtq
UXVlcnkuc3VwcG9ydC5kZWxldGVFeHBhbmRvPWZhbHNlO30NCnJvb3QucmVtb3Zl
Q2hpbGQoc2NyaXB0KTtpZihkaXYuYXR0YWNoRXZlbnQmJmRpdi5maXJlRXZlbnQp
e2Rpdi5hdHRhY2hFdmVudCgib25jbGljayIsZnVuY3Rpb24gY2xpY2soKXtqUXVl
cnkuc3VwcG9ydC5ub0Nsb25lRXZlbnQ9ZmFsc2U7ZGl2LmRldGFjaEV2ZW50KCJv
bmNsaWNrIixjbGljayk7fSk7ZGl2LmNsb25lTm9kZSh0cnVlKS5maXJlRXZlbnQo
Im9uY2xpY2siKTt9DQpkaXY9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7
ZGl2LmlubmVySFRNTD0iPGlucHV0IHR5cGU9J3JhZGlvJyBuYW1lPSdyYWRpb3Rl
c3QnIGNoZWNrZWQ9J2NoZWNrZWQnLz4iO3ZhciBmcmFnbWVudD1kb2N1bWVudC5j
cmVhdGVEb2N1bWVudEZyYWdtZW50KCk7ZnJhZ21lbnQuYXBwZW5kQ2hpbGQoZGl2
LmZpcnN0Q2hpbGQpO2pRdWVyeS5zdXBwb3J0LmNoZWNrQ2xvbmU9ZnJhZ21lbnQu
Y2xvbmVOb2RlKHRydWUpLmNsb25lTm9kZSh0cnVlKS5sYXN0Q2hpbGQuY2hlY2tl
ZDtqUXVlcnkoZnVuY3Rpb24oKXt2YXIgZGl2PWRvY3VtZW50LmNyZWF0ZUVsZW1l
bnQoImRpdiIpO2Rpdi5zdHlsZS53aWR0aD1kaXYuc3R5bGUucGFkZGluZ0xlZnQ9
IjFweCI7ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkaXYpO2pRdWVyeS5ib3hN
b2RlbD1qUXVlcnkuc3VwcG9ydC5ib3hNb2RlbD1kaXYub2Zmc2V0V2lkdGg9PT0y
O2RvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoZGl2KS5zdHlsZS5kaXNwbGF5PSdu
b25lJztkaXY9bnVsbDt9KTt2YXIgZXZlbnRTdXBwb3J0ZWQ9ZnVuY3Rpb24oZXZl
bnROYW1lKXt2YXIgZWw9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7ZXZl
bnROYW1lPSJvbiIrZXZlbnROYW1lO3ZhciBpc1N1cHBvcnRlZD0oZXZlbnROYW1l
IGluIGVsKTtpZighaXNTdXBwb3J0ZWQpe2VsLnNldEF0dHJpYnV0ZShldmVudE5h
bWUsInJldHVybjsiKTtpc1N1cHBvcnRlZD10eXBlb2YgZWxbZXZlbnROYW1lXT09
PSJmdW5jdGlvbiI7fQ0KZWw9bnVsbDtyZXR1cm4gaXNTdXBwb3J0ZWQ7fTtqUXVl
cnkuc3VwcG9ydC5zdWJtaXRCdWJibGVzPWV2ZW50U3VwcG9ydGVkKCJzdWJtaXQi
KTtqUXVlcnkuc3VwcG9ydC5jaGFuZ2VCdWJibGVzPWV2ZW50U3VwcG9ydGVkKCJj
aGFuZ2UiKTtyb290PXNjcmlwdD1kaXY9YWxsPWE9bnVsbDt9KSgpO2pRdWVyeS5w
cm9wcz17ImZvciI6Imh0bWxGb3IiLCJjbGFzcyI6ImNsYXNzTmFtZSIscmVhZG9u
bHk6InJlYWRPbmx5IixtYXhsZW5ndGg6Im1heExlbmd0aCIsY2VsbHNwYWNpbmc6
ImNlbGxTcGFjaW5nIixyb3dzcGFuOiJyb3dTcGFuIixjb2xzcGFuOiJjb2xTcGFu
Iix0YWJpbmRleDoidGFiSW5kZXgiLHVzZW1hcDoidXNlTWFwIixmcmFtZWJvcmRl
cjoiZnJhbWVCb3JkZXIifTt2YXIgZXhwYW5kbz0ialF1ZXJ5Iitub3coKSx1dWlk
PTAsd2luZG93RGF0YT17fTtqUXVlcnkuZXh0ZW5kKHtjYWNoZTp7fSxleHBhbmRv
OmV4cGFuZG8sbm9EYXRhOnsiZW1iZWQiOnRydWUsIm9iamVjdCI6dHJ1ZSwiYXBw
bGV0Ijp0cnVlfSxkYXRhOmZ1bmN0aW9uKGVsZW0sbmFtZSxkYXRhKXtpZihlbGVt
Lm5vZGVOYW1lJiZqUXVlcnkubm9EYXRhW2VsZW0ubm9kZU5hbWUudG9Mb3dlckNh
c2UoKV0pe3JldHVybjt9DQplbGVtPWVsZW09PXdpbmRvdz93aW5kb3dEYXRhOmVs
ZW07dmFyIGlkPWVsZW1bZXhwYW5kb10sY2FjaGU9alF1ZXJ5LmNhY2hlLHRoaXND
YWNoZTtpZighaWQmJnR5cGVvZiBuYW1lPT09InN0cmluZyImJmRhdGE9PT11bmRl
ZmluZWQpe3JldHVybiBudWxsO30NCmlmKCFpZCl7aWQ9Kyt1dWlkO30NCmlmKHR5
cGVvZiBuYW1lPT09Im9iamVjdCIpe2VsZW1bZXhwYW5kb109aWQ7dGhpc0NhY2hl
PWNhY2hlW2lkXT1qUXVlcnkuZXh0ZW5kKHRydWUse30sbmFtZSk7fWVsc2UgaWYo
IWNhY2hlW2lkXSl7ZWxlbVtleHBhbmRvXT1pZDtjYWNoZVtpZF09e307fQ0KdGhp
c0NhY2hlPWNhY2hlW2lkXTtpZihkYXRhIT09dW5kZWZpbmVkKXt0aGlzQ2FjaGVb
bmFtZV09ZGF0YTt9DQpyZXR1cm4gdHlwZW9mIG5hbWU9PT0ic3RyaW5nIj90aGlz
Q2FjaGVbbmFtZV06dGhpc0NhY2hlO30scmVtb3ZlRGF0YTpmdW5jdGlvbihlbGVt
LG5hbWUpe2lmKGVsZW0ubm9kZU5hbWUmJmpRdWVyeS5ub0RhdGFbZWxlbS5ub2Rl
TmFtZS50b0xvd2VyQ2FzZSgpXSl7cmV0dXJuO30NCmVsZW09ZWxlbT09d2luZG93
P3dpbmRvd0RhdGE6ZWxlbTt2YXIgaWQ9ZWxlbVtleHBhbmRvXSxjYWNoZT1qUXVl
cnkuY2FjaGUsdGhpc0NhY2hlPWNhY2hlW2lkXTtpZihuYW1lKXtpZih0aGlzQ2Fj
aGUpe2RlbGV0ZSB0aGlzQ2FjaGVbbmFtZV07aWYoalF1ZXJ5LmlzRW1wdHlPYmpl
Y3QodGhpc0NhY2hlKSl7alF1ZXJ5LnJlbW92ZURhdGEoZWxlbSk7fX19ZWxzZXtp
ZihqUXVlcnkuc3VwcG9ydC5kZWxldGVFeHBhbmRvKXtkZWxldGUgZWxlbVtqUXVl
cnkuZXhwYW5kb107fWVsc2UgaWYoZWxlbS5yZW1vdmVBdHRyaWJ1dGUpe2VsZW0u
cmVtb3ZlQXR0cmlidXRlKGpRdWVyeS5leHBhbmRvKTt9DQpkZWxldGUgY2FjaGVb
aWRdO319fSk7alF1ZXJ5LmZuLmV4dGVuZCh7ZGF0YTpmdW5jdGlvbihrZXksdmFs
dWUpe2lmKHR5cGVvZiBrZXk9PT0idW5kZWZpbmVkIiYmdGhpcy5sZW5ndGgpe3Jl
dHVybiBqUXVlcnkuZGF0YSh0aGlzWzBdKTt9ZWxzZSBpZih0eXBlb2Yga2V5PT09
Im9iamVjdCIpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtqUXVlcnkuZGF0
YSh0aGlzLGtleSk7fSk7fQ0KdmFyIHBhcnRzPWtleS5zcGxpdCgiLiIpO3BhcnRz
WzFdPXBhcnRzWzFdPyIuIitwYXJ0c1sxXToiIjtpZih2YWx1ZT09PXVuZGVmaW5l
ZCl7dmFyIGRhdGE9dGhpcy50cmlnZ2VySGFuZGxlcigiZ2V0RGF0YSIrcGFydHNb
MV0rIiEiLFtwYXJ0c1swXV0pO2lmKGRhdGE9PT11bmRlZmluZWQmJnRoaXMubGVu
Z3RoKXtkYXRhPWpRdWVyeS5kYXRhKHRoaXNbMF0sa2V5KTt9DQpyZXR1cm4gZGF0
YT09PXVuZGVmaW5lZCYmcGFydHNbMV0/dGhpcy5kYXRhKHBhcnRzWzBdKTpkYXRh
O31lbHNle3JldHVybiB0aGlzLnRyaWdnZXIoInNldERhdGEiK3BhcnRzWzFdKyIh
IixbcGFydHNbMF0sdmFsdWVdKS5lYWNoKGZ1bmN0aW9uKCl7alF1ZXJ5LmRhdGEo
dGhpcyxrZXksdmFsdWUpO30pO319LHJlbW92ZURhdGE6ZnVuY3Rpb24oa2V5KXty
ZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7alF1ZXJ5LnJlbW92ZURhdGEodGhp
cyxrZXkpO30pO319KTtqUXVlcnkuZXh0ZW5kKHtxdWV1ZTpmdW5jdGlvbihlbGVt
LHR5cGUsZGF0YSl7aWYoIWVsZW0pe3JldHVybjt9DQp0eXBlPSh0eXBlfHwiZngi
KSsicXVldWUiO3ZhciBxPWpRdWVyeS5kYXRhKGVsZW0sdHlwZSk7aWYoIWRhdGEp
e3JldHVybiBxfHxbXTt9DQppZighcXx8alF1ZXJ5LmlzQXJyYXkoZGF0YSkpe3E9
alF1ZXJ5LmRhdGEoZWxlbSx0eXBlLGpRdWVyeS5tYWtlQXJyYXkoZGF0YSkpO31l
bHNle3EucHVzaChkYXRhKTt9DQpyZXR1cm4gcTt9LGRlcXVldWU6ZnVuY3Rpb24o
ZWxlbSx0eXBlKXt0eXBlPXR5cGV8fCJmeCI7dmFyIHF1ZXVlPWpRdWVyeS5xdWV1
ZShlbGVtLHR5cGUpLGZuPXF1ZXVlLnNoaWZ0KCk7aWYoZm49PT0iaW5wcm9ncmVz
cyIpe2ZuPXF1ZXVlLnNoaWZ0KCk7fQ0KaWYoZm4pe2lmKHR5cGU9PT0iZngiKXtx
dWV1ZS51bnNoaWZ0KCJpbnByb2dyZXNzIik7fQ0KZm4uY2FsbChlbGVtLGZ1bmN0
aW9uKCl7alF1ZXJ5LmRlcXVldWUoZWxlbSx0eXBlKTt9KTt9fX0pO2pRdWVyeS5m
bi5leHRlbmQoe3F1ZXVlOmZ1bmN0aW9uKHR5cGUsZGF0YSl7aWYodHlwZW9mIHR5
cGUhPT0ic3RyaW5nIil7ZGF0YT10eXBlO3R5cGU9ImZ4Ijt9DQppZihkYXRhPT09
dW5kZWZpbmVkKXtyZXR1cm4galF1ZXJ5LnF1ZXVlKHRoaXNbMF0sdHlwZSk7fQ0K
cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihpLGVsZW0pe3ZhciBxdWV1ZT1qUXVl
cnkucXVldWUodGhpcyx0eXBlLGRhdGEpO2lmKHR5cGU9PT0iZngiJiZxdWV1ZVsw
XSE9PSJpbnByb2dyZXNzIil7alF1ZXJ5LmRlcXVldWUodGhpcyx0eXBlKTt9fSk7
fSxkZXF1ZXVlOmZ1bmN0aW9uKHR5cGUpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rp
b24oKXtqUXVlcnkuZGVxdWV1ZSh0aGlzLHR5cGUpO30pO30sZGVsYXk6ZnVuY3Rp
b24odGltZSx0eXBlKXt0aW1lPWpRdWVyeS5meD9qUXVlcnkuZnguc3BlZWRzW3Rp
bWVdfHx0aW1lOnRpbWU7dHlwZT10eXBlfHwiZngiO3JldHVybiB0aGlzLnF1ZXVl
KHR5cGUsZnVuY3Rpb24oKXt2YXIgZWxlbT10aGlzO3NldFRpbWVvdXQoZnVuY3Rp
b24oKXtqUXVlcnkuZGVxdWV1ZShlbGVtLHR5cGUpO30sdGltZSk7fSk7fSxjbGVh
clF1ZXVlOmZ1bmN0aW9uKHR5cGUpe3JldHVybiB0aGlzLnF1ZXVlKHR5cGV8fCJm
eCIsW10pO319KTt2YXIgcmNsYXNzPS9bXG5cdF0vZyxyc3BhY2U9L1xzKy8scnJl
dHVybj0vXHIvZyxyc3BlY2lhbHVybD0vaHJlZnxzcmN8c3R5bGUvLHJ0eXBlPS8o
YnV0dG9ufGlucHV0KS9pLHJmb2N1c2FibGU9LyhidXR0b258aW5wdXR8b2JqZWN0
fHNlbGVjdHx0ZXh0YXJlYSkvaSxyY2xpY2thYmxlPS9eKGF8YXJlYSkkL2kscnJh
ZGlvY2hlY2s9L3JhZGlvfGNoZWNrYm94LztqUXVlcnkuZm4uZXh0ZW5kKHthdHRy
OmZ1bmN0aW9uKG5hbWUsdmFsdWUpe3JldHVybiBhY2Nlc3ModGhpcyxuYW1lLHZh
bHVlLHRydWUsalF1ZXJ5LmF0dHIpO30scmVtb3ZlQXR0cjpmdW5jdGlvbihuYW1l
LGZuKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7alF1ZXJ5LmF0dHIodGhp
cyxuYW1lLCIiKTtpZih0aGlzLm5vZGVUeXBlPT09MSl7dGhpcy5yZW1vdmVBdHRy
aWJ1dGUobmFtZSk7fX0pO30sYWRkQ2xhc3M6ZnVuY3Rpb24odmFsdWUpe2lmKGpR
dWVyeS5pc0Z1bmN0aW9uKHZhbHVlKSl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlv
bihpKXt2YXIgc2VsZj1qUXVlcnkodGhpcyk7c2VsZi5hZGRDbGFzcyh2YWx1ZS5j
YWxsKHRoaXMsaSxzZWxmLmF0dHIoImNsYXNzIikpKTt9KTt9DQppZih2YWx1ZSYm
dHlwZW9mIHZhbHVlPT09InN0cmluZyIpe3ZhciBjbGFzc05hbWVzPSh2YWx1ZXx8
IiIpLnNwbGl0KHJzcGFjZSk7Zm9yKHZhciBpPTAsbD10aGlzLmxlbmd0aDtpPGw7
aSsrKXt2YXIgZWxlbT10aGlzW2ldO2lmKGVsZW0ubm9kZVR5cGU9PT0xKXtpZigh
ZWxlbS5jbGFzc05hbWUpe2VsZW0uY2xhc3NOYW1lPXZhbHVlO31lbHNle3ZhciBj
bGFzc05hbWU9IiAiK2VsZW0uY2xhc3NOYW1lKyIgIixzZXRDbGFzcz1lbGVtLmNs
YXNzTmFtZTtmb3IodmFyIGM9MCxjbD1jbGFzc05hbWVzLmxlbmd0aDtjPGNsO2Mr
Kyl7aWYoY2xhc3NOYW1lLmluZGV4T2YoIiAiK2NsYXNzTmFtZXNbY10rIiAiKTww
KXtzZXRDbGFzcys9IiAiK2NsYXNzTmFtZXNbY107fX0NCmVsZW0uY2xhc3NOYW1l
PWpRdWVyeS50cmltKHNldENsYXNzKTt9fX19DQpyZXR1cm4gdGhpczt9LHJlbW92
ZUNsYXNzOmZ1bmN0aW9uKHZhbHVlKXtpZihqUXVlcnkuaXNGdW5jdGlvbih2YWx1
ZSkpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oaSl7dmFyIHNlbGY9alF1ZXJ5
KHRoaXMpO3NlbGYucmVtb3ZlQ2xhc3ModmFsdWUuY2FsbCh0aGlzLGksc2VsZi5h
dHRyKCJjbGFzcyIpKSk7fSk7fQ0KaWYoKHZhbHVlJiZ0eXBlb2YgdmFsdWU9PT0i
c3RyaW5nIil8fHZhbHVlPT09dW5kZWZpbmVkKXt2YXIgY2xhc3NOYW1lcz0odmFs
dWV8fCIiKS5zcGxpdChyc3BhY2UpO2Zvcih2YXIgaT0wLGw9dGhpcy5sZW5ndGg7
aTxsO2krKyl7dmFyIGVsZW09dGhpc1tpXTtpZihlbGVtLm5vZGVUeXBlPT09MSYm
ZWxlbS5jbGFzc05hbWUpe2lmKHZhbHVlKXt2YXIgY2xhc3NOYW1lPSgiICIrZWxl
bS5jbGFzc05hbWUrIiAiKS5yZXBsYWNlKHJjbGFzcywiICIpO2Zvcih2YXIgYz0w
LGNsPWNsYXNzTmFtZXMubGVuZ3RoO2M8Y2w7YysrKXtjbGFzc05hbWU9Y2xhc3NO
YW1lLnJlcGxhY2UoIiAiK2NsYXNzTmFtZXNbY10rIiAiLCIgIik7fQ0KZWxlbS5j
bGFzc05hbWU9alF1ZXJ5LnRyaW0oY2xhc3NOYW1lKTt9ZWxzZXtlbGVtLmNsYXNz
TmFtZT0iIjt9fX19DQpyZXR1cm4gdGhpczt9LHRvZ2dsZUNsYXNzOmZ1bmN0aW9u
KHZhbHVlLHN0YXRlVmFsKXt2YXIgdHlwZT10eXBlb2YgdmFsdWUsaXNCb29sPXR5
cGVvZiBzdGF0ZVZhbD09PSJib29sZWFuIjtpZihqUXVlcnkuaXNGdW5jdGlvbih2
YWx1ZSkpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oaSl7dmFyIHNlbGY9alF1
ZXJ5KHRoaXMpO3NlbGYudG9nZ2xlQ2xhc3ModmFsdWUuY2FsbCh0aGlzLGksc2Vs
Zi5hdHRyKCJjbGFzcyIpLHN0YXRlVmFsKSxzdGF0ZVZhbCk7fSk7fQ0KcmV0dXJu
IHRoaXMuZWFjaChmdW5jdGlvbigpe2lmKHR5cGU9PT0ic3RyaW5nIil7dmFyIGNs
YXNzTmFtZSxpPTAsc2VsZj1qUXVlcnkodGhpcyksc3RhdGU9c3RhdGVWYWwsY2xh
c3NOYW1lcz12YWx1ZS5zcGxpdChyc3BhY2UpO3doaWxlKChjbGFzc05hbWU9Y2xh
c3NOYW1lc1tpKytdKSl7c3RhdGU9aXNCb29sP3N0YXRlOiFzZWxmLmhhc0NsYXNz
KGNsYXNzTmFtZSk7c2VsZltzdGF0ZT8iYWRkQ2xhc3MiOiJyZW1vdmVDbGFzcyJd
KGNsYXNzTmFtZSk7fX1lbHNlIGlmKHR5cGU9PT0idW5kZWZpbmVkInx8dHlwZT09
PSJib29sZWFuIil7aWYodGhpcy5jbGFzc05hbWUpe2pRdWVyeS5kYXRhKHRoaXMs
Il9fY2xhc3NOYW1lX18iLHRoaXMuY2xhc3NOYW1lKTt9DQp0aGlzLmNsYXNzTmFt
ZT10aGlzLmNsYXNzTmFtZXx8dmFsdWU9PT1mYWxzZT8iIjpqUXVlcnkuZGF0YSh0
aGlzLCJfX2NsYXNzTmFtZV9fIil8fCIiO319KTt9LGhhc0NsYXNzOmZ1bmN0aW9u
KHNlbGVjdG9yKXt2YXIgY2xhc3NOYW1lPSIgIitzZWxlY3RvcisiICI7Zm9yKHZh
ciBpPTAsbD10aGlzLmxlbmd0aDtpPGw7aSsrKXtpZigoIiAiK3RoaXNbaV0uY2xh
c3NOYW1lKyIgIikucmVwbGFjZShyY2xhc3MsIiAiKS5pbmRleE9mKGNsYXNzTmFt
ZSk+LTEpe3JldHVybiB0cnVlO319DQpyZXR1cm4gZmFsc2U7fSx2YWw6ZnVuY3Rp
b24odmFsdWUpe2lmKHZhbHVlPT09dW5kZWZpbmVkKXt2YXIgZWxlbT10aGlzWzBd
O2lmKGVsZW0pe2lmKGpRdWVyeS5ub2RlTmFtZShlbGVtLCJvcHRpb24iKSl7cmV0
dXJuKGVsZW0uYXR0cmlidXRlcy52YWx1ZXx8e30pLnNwZWNpZmllZD9lbGVtLnZh
bHVlOmVsZW0udGV4dDt9DQppZihqUXVlcnkubm9kZU5hbWUoZWxlbSwic2VsZWN0
Iikpe3ZhciBpbmRleD1lbGVtLnNlbGVjdGVkSW5kZXgsdmFsdWVzPVtdLG9wdGlv
bnM9ZWxlbS5vcHRpb25zLG9uZT1lbGVtLnR5cGU9PT0ic2VsZWN0LW9uZSI7aWYo
aW5kZXg8MCl7cmV0dXJuIG51bGw7fQ0KZm9yKHZhciBpPW9uZT9pbmRleDowLG1h
eD1vbmU/aW5kZXgrMTpvcHRpb25zLmxlbmd0aDtpPG1heDtpKyspe3ZhciBvcHRp
b249b3B0aW9uc1tpXTtpZihvcHRpb24uc2VsZWN0ZWQpe3ZhbHVlPWpRdWVyeShv
cHRpb24pLnZhbCgpO2lmKG9uZSl7cmV0dXJuIHZhbHVlO30NCnZhbHVlcy5wdXNo
KHZhbHVlKTt9fQ0KcmV0dXJuIHZhbHVlczt9DQppZihycmFkaW9jaGVjay50ZXN0
KGVsZW0udHlwZSkmJiFqUXVlcnkuc3VwcG9ydC5jaGVja09uKXtyZXR1cm4gZWxl
bS5nZXRBdHRyaWJ1dGUoInZhbHVlIik9PT1udWxsPyJvbiI6ZWxlbS52YWx1ZTt9
DQpyZXR1cm4oZWxlbS52YWx1ZXx8IiIpLnJlcGxhY2UocnJldHVybiwiIik7fQ0K
cmV0dXJuIHVuZGVmaW5lZDt9DQp2YXIgaXNGdW5jdGlvbj1qUXVlcnkuaXNGdW5j
dGlvbih2YWx1ZSk7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihpKXt2YXIgc2Vs
Zj1qUXVlcnkodGhpcyksdmFsPXZhbHVlO2lmKHRoaXMubm9kZVR5cGUhPT0xKXty
ZXR1cm47fQ0KaWYoaXNGdW5jdGlvbil7dmFsPXZhbHVlLmNhbGwodGhpcyxpLHNl
bGYudmFsKCkpO30NCmlmKHR5cGVvZiB2YWw9PT0ibnVtYmVyIil7dmFsKz0iIjt9
DQppZihqUXVlcnkuaXNBcnJheSh2YWwpJiZycmFkaW9jaGVjay50ZXN0KHRoaXMu
dHlwZSkpe3RoaXMuY2hlY2tlZD1qUXVlcnkuaW5BcnJheShzZWxmLnZhbCgpLHZh
bCk+PTA7fWVsc2UgaWYoalF1ZXJ5Lm5vZGVOYW1lKHRoaXMsInNlbGVjdCIpKXt2
YXIgdmFsdWVzPWpRdWVyeS5tYWtlQXJyYXkodmFsKTtqUXVlcnkoIm9wdGlvbiIs
dGhpcykuZWFjaChmdW5jdGlvbigpe3RoaXMuc2VsZWN0ZWQ9alF1ZXJ5LmluQXJy
YXkoalF1ZXJ5KHRoaXMpLnZhbCgpLHZhbHVlcyk+PTA7fSk7aWYoIXZhbHVlcy5s
ZW5ndGgpe3RoaXMuc2VsZWN0ZWRJbmRleD0tMTt9fWVsc2V7dGhpcy52YWx1ZT12
YWw7fX0pO319KTtqUXVlcnkuZXh0ZW5kKHthdHRyRm46e3ZhbDp0cnVlLGNzczp0
cnVlLGh0bWw6dHJ1ZSx0ZXh0OnRydWUsZGF0YTp0cnVlLHdpZHRoOnRydWUsaGVp
Z2h0OnRydWUsb2Zmc2V0OnRydWV9LGF0dHI6ZnVuY3Rpb24oZWxlbSxuYW1lLHZh
bHVlLHBhc3Mpe2lmKCFlbGVtfHxlbGVtLm5vZGVUeXBlPT09M3x8ZWxlbS5ub2Rl
VHlwZT09PTgpe3JldHVybiB1bmRlZmluZWQ7fQ0KaWYocGFzcyYmbmFtZSBpbiBq
UXVlcnkuYXR0ckZuKXtyZXR1cm4galF1ZXJ5KGVsZW0pW25hbWVdKHZhbHVlKTt9
DQp2YXIgbm90eG1sPWVsZW0ubm9kZVR5cGUhPT0xfHwhalF1ZXJ5LmlzWE1MRG9j
KGVsZW0pLHNldD12YWx1ZSE9PXVuZGVmaW5lZDtuYW1lPW5vdHhtbCYmalF1ZXJ5
LnByb3BzW25hbWVdfHxuYW1lO2lmKGVsZW0ubm9kZVR5cGU9PT0xKXt2YXIgc3Bl
Y2lhbD1yc3BlY2lhbHVybC50ZXN0KG5hbWUpO2lmKG5hbWU9PT0ic2VsZWN0ZWQi
JiYhalF1ZXJ5LnN1cHBvcnQub3B0U2VsZWN0ZWQpe3ZhciBwYXJlbnQ9ZWxlbS5w
YXJlbnROb2RlO2lmKHBhcmVudCl7cGFyZW50LnNlbGVjdGVkSW5kZXg7aWYocGFy
ZW50LnBhcmVudE5vZGUpe3BhcmVudC5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXg7
fX19DQppZihuYW1lIGluIGVsZW0mJm5vdHhtbCYmIXNwZWNpYWwpe2lmKHNldCl7
aWYobmFtZT09PSJ0eXBlIiYmcnR5cGUudGVzdChlbGVtLm5vZGVOYW1lKSYmZWxl
bS5wYXJlbnROb2RlKXtqUXVlcnkuZXJyb3IoInR5cGUgcHJvcGVydHkgY2FuJ3Qg
YmUgY2hhbmdlZCIpO30NCmVsZW1bbmFtZV09dmFsdWU7fQ0KaWYoalF1ZXJ5Lm5v
ZGVOYW1lKGVsZW0sImZvcm0iKSYmZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKG5hbWUp
KXtyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKG5hbWUpLm5vZGVWYWx1ZTt9
DQppZihuYW1lPT09InRhYkluZGV4Iil7dmFyIGF0dHJpYnV0ZU5vZGU9ZWxlbS5n
ZXRBdHRyaWJ1dGVOb2RlKCJ0YWJJbmRleCIpO3JldHVybiBhdHRyaWJ1dGVOb2Rl
JiZhdHRyaWJ1dGVOb2RlLnNwZWNpZmllZD9hdHRyaWJ1dGVOb2RlLnZhbHVlOnJm
b2N1c2FibGUudGVzdChlbGVtLm5vZGVOYW1lKXx8cmNsaWNrYWJsZS50ZXN0KGVs
ZW0ubm9kZU5hbWUpJiZlbGVtLmhyZWY/MDp1bmRlZmluZWQ7fQ0KcmV0dXJuIGVs
ZW1bbmFtZV07fQ0KaWYoIWpRdWVyeS5zdXBwb3J0LnN0eWxlJiZub3R4bWwmJm5h
bWU9PT0ic3R5bGUiKXtpZihzZXQpe2VsZW0uc3R5bGUuY3NzVGV4dD0iIit2YWx1
ZTt9DQpyZXR1cm4gZWxlbS5zdHlsZS5jc3NUZXh0O30NCmlmKHNldCl7ZWxlbS5z
ZXRBdHRyaWJ1dGUobmFtZSwiIit2YWx1ZSk7fQ0KdmFyIGF0dHI9IWpRdWVyeS5z
dXBwb3J0LmhyZWZOb3JtYWxpemVkJiZub3R4bWwmJnNwZWNpYWw/ZWxlbS5nZXRB
dHRyaWJ1dGUobmFtZSwyKTplbGVtLmdldEF0dHJpYnV0ZShuYW1lKTtyZXR1cm4g
YXR0cj09PW51bGw/dW5kZWZpbmVkOmF0dHI7fQ0KcmV0dXJuIGpRdWVyeS5zdHls
ZShlbGVtLG5hbWUsdmFsdWUpO319KTt2YXIgcm5hbWVzcGFjZXM9L1wuKC4qKSQv
LGZjbGVhbnVwPWZ1bmN0aW9uKG5tKXtyZXR1cm4gbm0ucmVwbGFjZSgvW15cd1xz
XC5cfGBdL2csZnVuY3Rpb24oY2gpe3JldHVybiJcXCIrY2g7fSk7fTtqUXVlcnku
ZXZlbnQ9e2FkZDpmdW5jdGlvbihlbGVtLHR5cGVzLGhhbmRsZXIsZGF0YSl7aWYo
ZWxlbS5ub2RlVHlwZT09PTN8fGVsZW0ubm9kZVR5cGU9PT04KXtyZXR1cm47fQ0K
aWYoZWxlbS5zZXRJbnRlcnZhbCYmKGVsZW0hPT13aW5kb3cmJiFlbGVtLmZyYW1l
RWxlbWVudCkpe2VsZW09d2luZG93O30NCnZhciBoYW5kbGVPYmpJbixoYW5kbGVP
Ymo7aWYoaGFuZGxlci5oYW5kbGVyKXtoYW5kbGVPYmpJbj1oYW5kbGVyO2hhbmRs
ZXI9aGFuZGxlT2JqSW4uaGFuZGxlcjt9DQppZighaGFuZGxlci5ndWlkKXtoYW5k
bGVyLmd1aWQ9alF1ZXJ5Lmd1aWQrKzt9DQp2YXIgZWxlbURhdGE9alF1ZXJ5LmRh
dGEoZWxlbSk7aWYoIWVsZW1EYXRhKXtyZXR1cm47fQ0KdmFyIGV2ZW50cz1lbGVt
RGF0YS5ldmVudHM9ZWxlbURhdGEuZXZlbnRzfHx7fSxldmVudEhhbmRsZT1lbGVt
RGF0YS5oYW5kbGUsZXZlbnRIYW5kbGU7aWYoIWV2ZW50SGFuZGxlKXtlbGVtRGF0
YS5oYW5kbGU9ZXZlbnRIYW5kbGU9ZnVuY3Rpb24oKXtyZXR1cm4gdHlwZW9mIGpR
dWVyeSE9PSJ1bmRlZmluZWQiJiYhalF1ZXJ5LmV2ZW50LnRyaWdnZXJlZD9qUXVl
cnkuZXZlbnQuaGFuZGxlLmFwcGx5KGV2ZW50SGFuZGxlLmVsZW0sYXJndW1lbnRz
KTp1bmRlZmluZWQ7fTt9DQpldmVudEhhbmRsZS5lbGVtPWVsZW07dHlwZXM9dHlw
ZXMuc3BsaXQoIiAiKTt2YXIgdHlwZSxpPTAsbmFtZXNwYWNlczt3aGlsZSgodHlw
ZT10eXBlc1tpKytdKSl7aGFuZGxlT2JqPWhhbmRsZU9iakluP2pRdWVyeS5leHRl
bmQoe30saGFuZGxlT2JqSW4pOntoYW5kbGVyOmhhbmRsZXIsZGF0YTpkYXRhfTtp
Zih0eXBlLmluZGV4T2YoIi4iKT4tMSl7bmFtZXNwYWNlcz10eXBlLnNwbGl0KCIu
Iik7dHlwZT1uYW1lc3BhY2VzLnNoaWZ0KCk7aGFuZGxlT2JqLm5hbWVzcGFjZT1u
YW1lc3BhY2VzLnNsaWNlKDApLnNvcnQoKS5qb2luKCIuIik7fWVsc2V7bmFtZXNw
YWNlcz1bXTtoYW5kbGVPYmoubmFtZXNwYWNlPSIiO30NCmhhbmRsZU9iai50eXBl
PXR5cGU7aGFuZGxlT2JqLmd1aWQ9aGFuZGxlci5ndWlkO3ZhciBoYW5kbGVycz1l
dmVudHNbdHlwZV0sc3BlY2lhbD1qUXVlcnkuZXZlbnQuc3BlY2lhbFt0eXBlXXx8
e307aWYoIWhhbmRsZXJzKXtoYW5kbGVycz1ldmVudHNbdHlwZV09W107aWYoIXNw
ZWNpYWwuc2V0dXB8fHNwZWNpYWwuc2V0dXAuY2FsbChlbGVtLGRhdGEsbmFtZXNw
YWNlcyxldmVudEhhbmRsZSk9PT1mYWxzZSl7aWYoZWxlbS5hZGRFdmVudExpc3Rl
bmVyKXtlbGVtLmFkZEV2ZW50TGlzdGVuZXIodHlwZSxldmVudEhhbmRsZSxmYWxz
ZSk7fWVsc2UgaWYoZWxlbS5hdHRhY2hFdmVudCl7ZWxlbS5hdHRhY2hFdmVudCgi
b24iK3R5cGUsZXZlbnRIYW5kbGUpO319fQ0KaWYoc3BlY2lhbC5hZGQpe3NwZWNp
YWwuYWRkLmNhbGwoZWxlbSxoYW5kbGVPYmopO2lmKCFoYW5kbGVPYmouaGFuZGxl
ci5ndWlkKXtoYW5kbGVPYmouaGFuZGxlci5ndWlkPWhhbmRsZXIuZ3VpZDt9fQ0K
aGFuZGxlcnMucHVzaChoYW5kbGVPYmopO2pRdWVyeS5ldmVudC5nbG9iYWxbdHlw
ZV09dHJ1ZTt9DQplbGVtPW51bGw7fSxnbG9iYWw6e30scmVtb3ZlOmZ1bmN0aW9u
KGVsZW0sdHlwZXMsaGFuZGxlcixwb3Mpe2lmKGVsZW0ubm9kZVR5cGU9PT0zfHxl
bGVtLm5vZGVUeXBlPT09OCl7cmV0dXJuO30NCnZhciByZXQsdHlwZSxmbixpPTAs
YWxsLG5hbWVzcGFjZXMsbmFtZXNwYWNlLHNwZWNpYWwsZXZlbnRUeXBlLGhhbmRs
ZU9iaixvcmlnVHlwZSxlbGVtRGF0YT1qUXVlcnkuZGF0YShlbGVtKSxldmVudHM9
ZWxlbURhdGEmJmVsZW1EYXRhLmV2ZW50cztpZighZWxlbURhdGF8fCFldmVudHMp
e3JldHVybjt9DQppZih0eXBlcyYmdHlwZXMudHlwZSl7aGFuZGxlcj10eXBlcy5o
YW5kbGVyO3R5cGVzPXR5cGVzLnR5cGU7fQ0KaWYoIXR5cGVzfHx0eXBlb2YgdHlw
ZXM9PT0ic3RyaW5nIiYmdHlwZXMuY2hhckF0KDApPT09Ii4iKXt0eXBlcz10eXBl
c3x8IiI7Zm9yKHR5cGUgaW4gZXZlbnRzKXtqUXVlcnkuZXZlbnQucmVtb3ZlKGVs
ZW0sdHlwZSt0eXBlcyk7fQ0KcmV0dXJuO30NCnR5cGVzPXR5cGVzLnNwbGl0KCIg
Iik7d2hpbGUoKHR5cGU9dHlwZXNbaSsrXSkpe29yaWdUeXBlPXR5cGU7aGFuZGxl
T2JqPW51bGw7YWxsPXR5cGUuaW5kZXhPZigiLiIpPDA7bmFtZXNwYWNlcz1bXTtp
ZighYWxsKXtuYW1lc3BhY2VzPXR5cGUuc3BsaXQoIi4iKTt0eXBlPW5hbWVzcGFj
ZXMuc2hpZnQoKTtuYW1lc3BhY2U9bmV3IFJlZ0V4cCgiKF58XFwuKSIrDQpqUXVl
cnkubWFwKG5hbWVzcGFjZXMuc2xpY2UoMCkuc29ydCgpLGZjbGVhbnVwKS5qb2lu
KCJcXC4oPzouKlxcLik/IikrIihcXC58JCkiKX0NCmV2ZW50VHlwZT1ldmVudHNb
dHlwZV07aWYoIWV2ZW50VHlwZSl7Y29udGludWU7fQ0KaWYoIWhhbmRsZXIpe2Zv
cih2YXIgaj0wO2o8ZXZlbnRUeXBlLmxlbmd0aDtqKyspe2hhbmRsZU9iaj1ldmVu
dFR5cGVbal07aWYoYWxsfHxuYW1lc3BhY2UudGVzdChoYW5kbGVPYmoubmFtZXNw
YWNlKSl7alF1ZXJ5LmV2ZW50LnJlbW92ZShlbGVtLG9yaWdUeXBlLGhhbmRsZU9i
ai5oYW5kbGVyLGopO2V2ZW50VHlwZS5zcGxpY2Uoai0tLDEpO319DQpjb250aW51
ZTt9DQpzcGVjaWFsPWpRdWVyeS5ldmVudC5zcGVjaWFsW3R5cGVdfHx7fTtmb3Io
dmFyIGo9cG9zfHwwO2o8ZXZlbnRUeXBlLmxlbmd0aDtqKyspe2hhbmRsZU9iaj1l
dmVudFR5cGVbal07aWYoaGFuZGxlci5ndWlkPT09aGFuZGxlT2JqLmd1aWQpe2lm
KGFsbHx8bmFtZXNwYWNlLnRlc3QoaGFuZGxlT2JqLm5hbWVzcGFjZSkpe2lmKHBv
cz09bnVsbCl7ZXZlbnRUeXBlLnNwbGljZShqLS0sMSk7fQ0KaWYoc3BlY2lhbC5y
ZW1vdmUpe3NwZWNpYWwucmVtb3ZlLmNhbGwoZWxlbSxoYW5kbGVPYmopO319DQpp
Zihwb3MhPW51bGwpe2JyZWFrO319fQ0KaWYoZXZlbnRUeXBlLmxlbmd0aD09PTB8
fHBvcyE9bnVsbCYmZXZlbnRUeXBlLmxlbmd0aD09PTEpe2lmKCFzcGVjaWFsLnRl
YXJkb3dufHxzcGVjaWFsLnRlYXJkb3duLmNhbGwoZWxlbSxuYW1lc3BhY2VzKT09
PWZhbHNlKXtyZW1vdmVFdmVudChlbGVtLHR5cGUsZWxlbURhdGEuaGFuZGxlKTt9
DQpyZXQ9bnVsbDtkZWxldGUgZXZlbnRzW3R5cGVdO319DQppZihqUXVlcnkuaXNF
bXB0eU9iamVjdChldmVudHMpKXt2YXIgaGFuZGxlPWVsZW1EYXRhLmhhbmRsZTtp
ZihoYW5kbGUpe2hhbmRsZS5lbGVtPW51bGw7fQ0KZGVsZXRlIGVsZW1EYXRhLmV2
ZW50cztkZWxldGUgZWxlbURhdGEuaGFuZGxlO2lmKGpRdWVyeS5pc0VtcHR5T2Jq
ZWN0KGVsZW1EYXRhKSl7alF1ZXJ5LnJlbW92ZURhdGEoZWxlbSk7fX19LHRyaWdn
ZXI6ZnVuY3Rpb24oZXZlbnQsZGF0YSxlbGVtKXt2YXIgdHlwZT1ldmVudC50eXBl
fHxldmVudCxidWJibGluZz1hcmd1bWVudHNbM107aWYoIWJ1YmJsaW5nKXtldmVu
dD10eXBlb2YgZXZlbnQ9PT0ib2JqZWN0Ij9ldmVudFtleHBhbmRvXT9ldmVudDpq
UXVlcnkuZXh0ZW5kKGpRdWVyeS5FdmVudCh0eXBlKSxldmVudCk6alF1ZXJ5LkV2
ZW50KHR5cGUpO2lmKHR5cGUuaW5kZXhPZigiISIpPj0wKXtldmVudC50eXBlPXR5
cGU9dHlwZS5zbGljZSgwLC0xKTtldmVudC5leGNsdXNpdmU9dHJ1ZTt9DQppZigh
ZWxlbSl7ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7aWYoalF1ZXJ5LmV2ZW50Lmds
b2JhbFt0eXBlXSl7alF1ZXJ5LmVhY2goalF1ZXJ5LmNhY2hlLGZ1bmN0aW9uKCl7
aWYodGhpcy5ldmVudHMmJnRoaXMuZXZlbnRzW3R5cGVdKXtqUXVlcnkuZXZlbnQu
dHJpZ2dlcihldmVudCxkYXRhLHRoaXMuaGFuZGxlLmVsZW0pO319KTt9fQ0KaWYo
IWVsZW18fGVsZW0ubm9kZVR5cGU9PT0zfHxlbGVtLm5vZGVUeXBlPT09OCl7cmV0
dXJuIHVuZGVmaW5lZDt9DQpldmVudC5yZXN1bHQ9dW5kZWZpbmVkO2V2ZW50LnRh
cmdldD1lbGVtO2RhdGE9alF1ZXJ5Lm1ha2VBcnJheShkYXRhKTtkYXRhLnVuc2hp
ZnQoZXZlbnQpO30NCmV2ZW50LmN1cnJlbnRUYXJnZXQ9ZWxlbTt2YXIgaGFuZGxl
PWpRdWVyeS5kYXRhKGVsZW0sImhhbmRsZSIpO2lmKGhhbmRsZSl7aGFuZGxlLmFw
cGx5KGVsZW0sZGF0YSk7fQ0KdmFyIHBhcmVudD1lbGVtLnBhcmVudE5vZGV8fGVs
ZW0ub3duZXJEb2N1bWVudDt0cnl7aWYoIShlbGVtJiZlbGVtLm5vZGVOYW1lJiZq
UXVlcnkubm9EYXRhW2VsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKV0pKXtpZihl
bGVtWyJvbiIrdHlwZV0mJmVsZW1bIm9uIit0eXBlXS5hcHBseShlbGVtLGRhdGEp
PT09ZmFsc2Upe2V2ZW50LnJlc3VsdD1mYWxzZTt9fX1jYXRjaChlKXt9DQppZigh
ZXZlbnQuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSYmcGFyZW50KXtqUXVlcnkuZXZl
bnQudHJpZ2dlcihldmVudCxkYXRhLHBhcmVudCx0cnVlKTt9ZWxzZSBpZighZXZl
bnQuaXNEZWZhdWx0UHJldmVudGVkKCkpe3ZhciB0YXJnZXQ9ZXZlbnQudGFyZ2V0
LG9sZCxpc0NsaWNrPWpRdWVyeS5ub2RlTmFtZSh0YXJnZXQsImEiKSYmdHlwZT09
PSJjbGljayIsc3BlY2lhbD1qUXVlcnkuZXZlbnQuc3BlY2lhbFt0eXBlXXx8e307
aWYoKCFzcGVjaWFsLl9kZWZhdWx0fHxzcGVjaWFsLl9kZWZhdWx0LmNhbGwoZWxl
bSxldmVudCk9PT1mYWxzZSkmJiFpc0NsaWNrJiYhKHRhcmdldCYmdGFyZ2V0Lm5v
ZGVOYW1lJiZqUXVlcnkubm9EYXRhW3RhcmdldC5ub2RlTmFtZS50b0xvd2VyQ2Fz
ZSgpXSkpe3RyeXtpZih0YXJnZXRbdHlwZV0pe29sZD10YXJnZXRbIm9uIit0eXBl
XTtpZihvbGQpe3RhcmdldFsib24iK3R5cGVdPW51bGw7fQ0KalF1ZXJ5LmV2ZW50
LnRyaWdnZXJlZD10cnVlO3RhcmdldFt0eXBlXSgpO319Y2F0Y2goZSl7fQ0KaWYo
b2xkKXt0YXJnZXRbIm9uIit0eXBlXT1vbGQ7fQ0KalF1ZXJ5LmV2ZW50LnRyaWdn
ZXJlZD1mYWxzZTt9fX0saGFuZGxlOmZ1bmN0aW9uKGV2ZW50KXt2YXIgYWxsLGhh
bmRsZXJzLG5hbWVzcGFjZXMsbmFtZXNwYWNlLGV2ZW50cztldmVudD1hcmd1bWVu
dHNbMF09alF1ZXJ5LmV2ZW50LmZpeChldmVudHx8d2luZG93LmV2ZW50KTtldmVu
dC5jdXJyZW50VGFyZ2V0PXRoaXM7YWxsPWV2ZW50LnR5cGUuaW5kZXhPZigiLiIp
PDAmJiFldmVudC5leGNsdXNpdmU7aWYoIWFsbCl7bmFtZXNwYWNlcz1ldmVudC50
eXBlLnNwbGl0KCIuIik7ZXZlbnQudHlwZT1uYW1lc3BhY2VzLnNoaWZ0KCk7bmFt
ZXNwYWNlPW5ldyBSZWdFeHAoIihefFxcLikiK25hbWVzcGFjZXMuc2xpY2UoMCku
c29ydCgpLmpvaW4oIlxcLig/Oi4qXFwuKT8iKSsiKFxcLnwkKSIpO30NCnZhciBl
dmVudHM9alF1ZXJ5LmRhdGEodGhpcywiZXZlbnRzIiksaGFuZGxlcnM9ZXZlbnRz
W2V2ZW50LnR5cGVdO2lmKGV2ZW50cyYmaGFuZGxlcnMpe2hhbmRsZXJzPWhhbmRs
ZXJzLnNsaWNlKDApO2Zvcih2YXIgaj0wLGw9aGFuZGxlcnMubGVuZ3RoO2o8bDtq
Kyspe3ZhciBoYW5kbGVPYmo9aGFuZGxlcnNbal07aWYoYWxsfHxuYW1lc3BhY2Uu
dGVzdChoYW5kbGVPYmoubmFtZXNwYWNlKSl7ZXZlbnQuaGFuZGxlcj1oYW5kbGVP
YmouaGFuZGxlcjtldmVudC5kYXRhPWhhbmRsZU9iai5kYXRhO2V2ZW50LmhhbmRs
ZU9iaj1oYW5kbGVPYmo7dmFyIHJldD1oYW5kbGVPYmouaGFuZGxlci5hcHBseSh0
aGlzLGFyZ3VtZW50cyk7aWYocmV0IT09dW5kZWZpbmVkKXtldmVudC5yZXN1bHQ9
cmV0O2lmKHJldD09PWZhbHNlKXtldmVudC5wcmV2ZW50RGVmYXVsdCgpO2V2ZW50
LnN0b3BQcm9wYWdhdGlvbigpO319DQppZihldmVudC5pc0ltbWVkaWF0ZVByb3Bh
Z2F0aW9uU3RvcHBlZCgpKXticmVhazt9fX19DQpyZXR1cm4gZXZlbnQucmVzdWx0
O30scHJvcHM6ImFsdEtleSBhdHRyQ2hhbmdlIGF0dHJOYW1lIGJ1YmJsZXMgYnV0
dG9uIGNhbmNlbGFibGUgY2hhckNvZGUgY2xpZW50WCBjbGllbnRZIGN0cmxLZXkg
Y3VycmVudFRhcmdldCBkYXRhIGRldGFpbCBldmVudFBoYXNlIGZyb21FbGVtZW50
IGhhbmRsZXIga2V5Q29kZSBsYXllclggbGF5ZXJZIG1ldGFLZXkgbmV3VmFsdWUg
b2Zmc2V0WCBvZmZzZXRZIG9yaWdpbmFsVGFyZ2V0IHBhZ2VYIHBhZ2VZIHByZXZW
YWx1ZSByZWxhdGVkTm9kZSByZWxhdGVkVGFyZ2V0IHNjcmVlblggc2NyZWVuWSBz
aGlmdEtleSBzcmNFbGVtZW50IHRhcmdldCB0b0VsZW1lbnQgdmlldyB3aGVlbERl
bHRhIHdoaWNoIi5zcGxpdCgiICIpLGZpeDpmdW5jdGlvbihldmVudCl7aWYoZXZl
bnRbZXhwYW5kb10pe3JldHVybiBldmVudDt9DQp2YXIgb3JpZ2luYWxFdmVudD1l
dmVudDtldmVudD1qUXVlcnkuRXZlbnQob3JpZ2luYWxFdmVudCk7Zm9yKHZhciBp
PXRoaXMucHJvcHMubGVuZ3RoLHByb3A7aTspe3Byb3A9dGhpcy5wcm9wc1stLWld
O2V2ZW50W3Byb3BdPW9yaWdpbmFsRXZlbnRbcHJvcF07fQ0KaWYoIWV2ZW50LnRh
cmdldCl7ZXZlbnQudGFyZ2V0PWV2ZW50LnNyY0VsZW1lbnR8fGRvY3VtZW50O30N
CmlmKGV2ZW50LnRhcmdldC5ub2RlVHlwZT09PTMpe2V2ZW50LnRhcmdldD1ldmVu
dC50YXJnZXQucGFyZW50Tm9kZTt9DQppZighZXZlbnQucmVsYXRlZFRhcmdldCYm
ZXZlbnQuZnJvbUVsZW1lbnQpe2V2ZW50LnJlbGF0ZWRUYXJnZXQ9ZXZlbnQuZnJv
bUVsZW1lbnQ9PT1ldmVudC50YXJnZXQ/ZXZlbnQudG9FbGVtZW50OmV2ZW50LmZy
b21FbGVtZW50O30NCmlmKGV2ZW50LnBhZ2VYPT1udWxsJiZldmVudC5jbGllbnRY
IT1udWxsKXt2YXIgZG9jPWRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxib2R5PWRv
Y3VtZW50LmJvZHk7ZXZlbnQucGFnZVg9ZXZlbnQuY2xpZW50WCsoZG9jJiZkb2Mu
c2Nyb2xsTGVmdHx8Ym9keSYmYm9keS5zY3JvbGxMZWZ0fHwwKS0oZG9jJiZkb2Mu
Y2xpZW50TGVmdHx8Ym9keSYmYm9keS5jbGllbnRMZWZ0fHwwKTtldmVudC5wYWdl
WT1ldmVudC5jbGllbnRZKyhkb2MmJmRvYy5zY3JvbGxUb3B8fGJvZHkmJmJvZHku
c2Nyb2xsVG9wfHwwKS0oZG9jJiZkb2MuY2xpZW50VG9wfHxib2R5JiZib2R5LmNs
aWVudFRvcHx8MCk7fQ0KaWYoIWV2ZW50LndoaWNoJiYoKGV2ZW50LmNoYXJDb2Rl
fHxldmVudC5jaGFyQ29kZT09PTApP2V2ZW50LmNoYXJDb2RlOmV2ZW50LmtleUNv
ZGUpKXtldmVudC53aGljaD1ldmVudC5jaGFyQ29kZXx8ZXZlbnQua2V5Q29kZTt9
DQppZighZXZlbnQubWV0YUtleSYmZXZlbnQuY3RybEtleSl7ZXZlbnQubWV0YUtl
eT1ldmVudC5jdHJsS2V5O30NCmlmKCFldmVudC53aGljaCYmZXZlbnQuYnV0dG9u
IT09dW5kZWZpbmVkKXtldmVudC53aGljaD0oZXZlbnQuYnV0dG9uJjE/MTooZXZl
bnQuYnV0dG9uJjI/MzooZXZlbnQuYnV0dG9uJjQ/MjowKSkpO30NCnJldHVybiBl
dmVudDt9LGd1aWQ6MUU4LHByb3h5OmpRdWVyeS5wcm94eSxzcGVjaWFsOntyZWFk
eTp7c2V0dXA6alF1ZXJ5LmJpbmRSZWFkeSx0ZWFyZG93bjpqUXVlcnkubm9vcH0s
bGl2ZTp7YWRkOmZ1bmN0aW9uKGhhbmRsZU9iail7alF1ZXJ5LmV2ZW50LmFkZCh0
aGlzLGhhbmRsZU9iai5vcmlnVHlwZSxqUXVlcnkuZXh0ZW5kKHt9LGhhbmRsZU9i
aix7aGFuZGxlcjpsaXZlSGFuZGxlcn0pKTt9LHJlbW92ZTpmdW5jdGlvbihoYW5k
bGVPYmope3ZhciByZW1vdmU9dHJ1ZSx0eXBlPWhhbmRsZU9iai5vcmlnVHlwZS5y
ZXBsYWNlKHJuYW1lc3BhY2VzLCIiKTtqUXVlcnkuZWFjaChqUXVlcnkuZGF0YSh0
aGlzLCJldmVudHMiKS5saXZlfHxbXSxmdW5jdGlvbigpe2lmKHR5cGU9PT10aGlz
Lm9yaWdUeXBlLnJlcGxhY2Uocm5hbWVzcGFjZXMsIiIpKXtyZW1vdmU9ZmFsc2U7
cmV0dXJuIGZhbHNlO319KTtpZihyZW1vdmUpe2pRdWVyeS5ldmVudC5yZW1vdmUo
dGhpcyxoYW5kbGVPYmoub3JpZ1R5cGUsbGl2ZUhhbmRsZXIpO319fSxiZWZvcmV1
bmxvYWQ6e3NldHVwOmZ1bmN0aW9uKGRhdGEsbmFtZXNwYWNlcyxldmVudEhhbmRs
ZSl7aWYodGhpcy5zZXRJbnRlcnZhbCl7dGhpcy5vbmJlZm9yZXVubG9hZD1ldmVu
dEhhbmRsZTt9DQpyZXR1cm4gZmFsc2U7fSx0ZWFyZG93bjpmdW5jdGlvbihuYW1l
c3BhY2VzLGV2ZW50SGFuZGxlKXtpZih0aGlzLm9uYmVmb3JldW5sb2FkPT09ZXZl
bnRIYW5kbGUpe3RoaXMub25iZWZvcmV1bmxvYWQ9bnVsbDt9fX19fTt2YXIgcmVt
b3ZlRXZlbnQ9ZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcj9mdW5jdGlvbihl
bGVtLHR5cGUsaGFuZGxlKXtlbGVtLnJlbW92ZUV2ZW50TGlzdGVuZXIodHlwZSxo
YW5kbGUsZmFsc2UpO306ZnVuY3Rpb24oZWxlbSx0eXBlLGhhbmRsZSl7ZWxlbS5k
ZXRhY2hFdmVudCgib24iK3R5cGUsaGFuZGxlKTt9O2pRdWVyeS5FdmVudD1mdW5j
dGlvbihzcmMpe2lmKCF0aGlzLnByZXZlbnREZWZhdWx0KXtyZXR1cm4gbmV3IGpR
dWVyeS5FdmVudChzcmMpO30NCmlmKHNyYyYmc3JjLnR5cGUpe3RoaXMub3JpZ2lu
YWxFdmVudD1zcmM7dGhpcy50eXBlPXNyYy50eXBlO31lbHNle3RoaXMudHlwZT1z
cmM7fQ0KdGhpcy50aW1lU3RhbXA9bm93KCk7dGhpc1tleHBhbmRvXT10cnVlO307
ZnVuY3Rpb24gcmV0dXJuRmFsc2UoKXtyZXR1cm4gZmFsc2U7fQ0KZnVuY3Rpb24g
cmV0dXJuVHJ1ZSgpe3JldHVybiB0cnVlO30NCmpRdWVyeS5FdmVudC5wcm90b3R5
cGU9e3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5pc0RlZmF1bHRQcmV2
ZW50ZWQ9cmV0dXJuVHJ1ZTt2YXIgZT10aGlzLm9yaWdpbmFsRXZlbnQ7aWYoIWUp
e3JldHVybjt9DQppZihlLnByZXZlbnREZWZhdWx0KXtlLnByZXZlbnREZWZhdWx0
KCk7fQ0KZS5yZXR1cm5WYWx1ZT1mYWxzZTt9LHN0b3BQcm9wYWdhdGlvbjpmdW5j
dGlvbigpe3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9cmV0dXJuVHJ1ZTt2YXIg
ZT10aGlzLm9yaWdpbmFsRXZlbnQ7aWYoIWUpe3JldHVybjt9DQppZihlLnN0b3BQ
cm9wYWdhdGlvbil7ZS5zdG9wUHJvcGFnYXRpb24oKTt9DQplLmNhbmNlbEJ1YmJs
ZT10cnVlO30sc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dGhp
cy5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZD1yZXR1cm5UcnVlO3RoaXMu
c3RvcFByb3BhZ2F0aW9uKCk7fSxpc0RlZmF1bHRQcmV2ZW50ZWQ6cmV0dXJuRmFs
c2UsaXNQcm9wYWdhdGlvblN0b3BwZWQ6cmV0dXJuRmFsc2UsaXNJbW1lZGlhdGVQ
cm9wYWdhdGlvblN0b3BwZWQ6cmV0dXJuRmFsc2V9O3ZhciB3aXRoaW5FbGVtZW50
PWZ1bmN0aW9uKGV2ZW50KXt2YXIgcGFyZW50PWV2ZW50LnJlbGF0ZWRUYXJnZXQ7
dHJ5e3doaWxlKHBhcmVudCYmcGFyZW50IT09dGhpcyl7cGFyZW50PXBhcmVudC5w
YXJlbnROb2RlO30NCmlmKHBhcmVudCE9PXRoaXMpe2V2ZW50LnR5cGU9ZXZlbnQu
ZGF0YTtqUXVlcnkuZXZlbnQuaGFuZGxlLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9
fWNhdGNoKGUpe319LGRlbGVnYXRlPWZ1bmN0aW9uKGV2ZW50KXtldmVudC50eXBl
PWV2ZW50LmRhdGE7alF1ZXJ5LmV2ZW50LmhhbmRsZS5hcHBseSh0aGlzLGFyZ3Vt
ZW50cyk7fTtqUXVlcnkuZWFjaCh7bW91c2VlbnRlcjoibW91c2VvdmVyIixtb3Vz
ZWxlYXZlOiJtb3VzZW91dCJ9LGZ1bmN0aW9uKG9yaWcsZml4KXtqUXVlcnkuZXZl
bnQuc3BlY2lhbFtvcmlnXT17c2V0dXA6ZnVuY3Rpb24oZGF0YSl7alF1ZXJ5LmV2
ZW50LmFkZCh0aGlzLGZpeCxkYXRhJiZkYXRhLnNlbGVjdG9yP2RlbGVnYXRlOndp
dGhpbkVsZW1lbnQsb3JpZyk7fSx0ZWFyZG93bjpmdW5jdGlvbihkYXRhKXtqUXVl
cnkuZXZlbnQucmVtb3ZlKHRoaXMsZml4LGRhdGEmJmRhdGEuc2VsZWN0b3I/ZGVs
ZWdhdGU6d2l0aGluRWxlbWVudCk7fX07fSk7aWYoIWpRdWVyeS5zdXBwb3J0LnN1
Ym1pdEJ1YmJsZXMpe2pRdWVyeS5ldmVudC5zcGVjaWFsLnN1Ym1pdD17c2V0dXA6
ZnVuY3Rpb24oZGF0YSxuYW1lc3BhY2VzKXtpZih0aGlzLm5vZGVOYW1lLnRvTG93
ZXJDYXNlKCkhPT0iZm9ybSIpe2pRdWVyeS5ldmVudC5hZGQodGhpcywiY2xpY2su
c3BlY2lhbFN1Ym1pdCIsZnVuY3Rpb24oZSl7dmFyIGVsZW09ZS50YXJnZXQsdHlw
ZT1lbGVtLnR5cGU7aWYoKHR5cGU9PT0ic3VibWl0Inx8dHlwZT09PSJpbWFnZSIp
JiZqUXVlcnkoZWxlbSkuY2xvc2VzdCgiZm9ybSIpLmxlbmd0aCl7cmV0dXJuIHRy
aWdnZXIoInN1Ym1pdCIsdGhpcyxhcmd1bWVudHMpO319KTtqUXVlcnkuZXZlbnQu
YWRkKHRoaXMsImtleXByZXNzLnNwZWNpYWxTdWJtaXQiLGZ1bmN0aW9uKGUpe3Zh
ciBlbGVtPWUudGFyZ2V0LHR5cGU9ZWxlbS50eXBlO2lmKCh0eXBlPT09InRleHQi
fHx0eXBlPT09InBhc3N3b3JkIikmJmpRdWVyeShlbGVtKS5jbG9zZXN0KCJmb3Jt
IikubGVuZ3RoJiZlLmtleUNvZGU9PT0xMyl7cmV0dXJuIHRyaWdnZXIoInN1Ym1p
dCIsdGhpcyxhcmd1bWVudHMpO319KTt9ZWxzZXtyZXR1cm4gZmFsc2U7fX0sdGVh
cmRvd246ZnVuY3Rpb24obmFtZXNwYWNlcyl7alF1ZXJ5LmV2ZW50LnJlbW92ZSh0
aGlzLCIuc3BlY2lhbFN1Ym1pdCIpO319O30NCmlmKCFqUXVlcnkuc3VwcG9ydC5j
aGFuZ2VCdWJibGVzKXt2YXIgZm9ybUVsZW1zPS90ZXh0YXJlYXxpbnB1dHxzZWxl
Y3QvaSxjaGFuZ2VGaWx0ZXJzLGdldFZhbD1mdW5jdGlvbihlbGVtKXt2YXIgdHlw
ZT1lbGVtLnR5cGUsdmFsPWVsZW0udmFsdWU7aWYodHlwZT09PSJyYWRpbyJ8fHR5
cGU9PT0iY2hlY2tib3giKXt2YWw9ZWxlbS5jaGVja2VkO31lbHNlIGlmKHR5cGU9
PT0ic2VsZWN0LW11bHRpcGxlIil7dmFsPWVsZW0uc2VsZWN0ZWRJbmRleD4tMT9q
UXVlcnkubWFwKGVsZW0ub3B0aW9ucyxmdW5jdGlvbihlbGVtKXtyZXR1cm4gZWxl
bS5zZWxlY3RlZDt9KS5qb2luKCItIik6IiI7fWVsc2UgaWYoZWxlbS5ub2RlTmFt
ZS50b0xvd2VyQ2FzZSgpPT09InNlbGVjdCIpe3ZhbD1lbGVtLnNlbGVjdGVkSW5k
ZXg7fQ0KcmV0dXJuIHZhbDt9LHRlc3RDaGFuZ2U9ZnVuY3Rpb24gdGVzdENoYW5n
ZShlKXt2YXIgZWxlbT1lLnRhcmdldCxkYXRhLHZhbDtpZighZm9ybUVsZW1zLnRl
c3QoZWxlbS5ub2RlTmFtZSl8fGVsZW0ucmVhZE9ubHkpe3JldHVybjt9DQpkYXRh
PWpRdWVyeS5kYXRhKGVsZW0sIl9jaGFuZ2VfZGF0YSIpO3ZhbD1nZXRWYWwoZWxl
bSk7aWYoZS50eXBlIT09ImZvY3Vzb3V0Inx8ZWxlbS50eXBlIT09InJhZGlvIil7
alF1ZXJ5LmRhdGEoZWxlbSwiX2NoYW5nZV9kYXRhIix2YWwpO30NCmlmKGRhdGE9
PT11bmRlZmluZWR8fHZhbD09PWRhdGEpe3JldHVybjt9DQppZihkYXRhIT1udWxs
fHx2YWwpe2UudHlwZT0iY2hhbmdlIjtyZXR1cm4galF1ZXJ5LmV2ZW50LnRyaWdn
ZXIoZSxhcmd1bWVudHNbMV0sZWxlbSk7fX07alF1ZXJ5LmV2ZW50LnNwZWNpYWwu
Y2hhbmdlPXtmaWx0ZXJzOntmb2N1c291dDp0ZXN0Q2hhbmdlLGNsaWNrOmZ1bmN0
aW9uKGUpe3ZhciBlbGVtPWUudGFyZ2V0LHR5cGU9ZWxlbS50eXBlO2lmKHR5cGU9
PT0icmFkaW8ifHx0eXBlPT09ImNoZWNrYm94Inx8ZWxlbS5ub2RlTmFtZS50b0xv
d2VyQ2FzZSgpPT09InNlbGVjdCIpe3JldHVybiB0ZXN0Q2hhbmdlLmNhbGwodGhp
cyxlKTt9fSxrZXlkb3duOmZ1bmN0aW9uKGUpe3ZhciBlbGVtPWUudGFyZ2V0LHR5
cGU9ZWxlbS50eXBlO2lmKChlLmtleUNvZGU9PT0xMyYmZWxlbS5ub2RlTmFtZS50
b0xvd2VyQ2FzZSgpIT09InRleHRhcmVhIil8fChlLmtleUNvZGU9PT0zMiYmKHR5
cGU9PT0iY2hlY2tib3gifHx0eXBlPT09InJhZGlvIikpfHx0eXBlPT09InNlbGVj
dC1tdWx0aXBsZSIpe3JldHVybiB0ZXN0Q2hhbmdlLmNhbGwodGhpcyxlKTt9fSxi
ZWZvcmVhY3RpdmF0ZTpmdW5jdGlvbihlKXt2YXIgZWxlbT1lLnRhcmdldDtqUXVl
cnkuZGF0YShlbGVtLCJfY2hhbmdlX2RhdGEiLGdldFZhbChlbGVtKSk7fX0sc2V0
dXA6ZnVuY3Rpb24oZGF0YSxuYW1lc3BhY2VzKXtpZih0aGlzLnR5cGU9PT0iZmls
ZSIpe3JldHVybiBmYWxzZTt9DQpmb3IodmFyIHR5cGUgaW4gY2hhbmdlRmlsdGVy
cyl7alF1ZXJ5LmV2ZW50LmFkZCh0aGlzLHR5cGUrIi5zcGVjaWFsQ2hhbmdlIixj
aGFuZ2VGaWx0ZXJzW3R5cGVdKTt9DQpyZXR1cm4gZm9ybUVsZW1zLnRlc3QodGhp
cy5ub2RlTmFtZSk7fSx0ZWFyZG93bjpmdW5jdGlvbihuYW1lc3BhY2VzKXtqUXVl
cnkuZXZlbnQucmVtb3ZlKHRoaXMsIi5zcGVjaWFsQ2hhbmdlIik7cmV0dXJuIGZv
cm1FbGVtcy50ZXN0KHRoaXMubm9kZU5hbWUpO319O2NoYW5nZUZpbHRlcnM9alF1
ZXJ5LmV2ZW50LnNwZWNpYWwuY2hhbmdlLmZpbHRlcnM7fQ0KZnVuY3Rpb24gdHJp
Z2dlcih0eXBlLGVsZW0sYXJncyl7YXJnc1swXS50eXBlPXR5cGU7cmV0dXJuIGpR
dWVyeS5ldmVudC5oYW5kbGUuYXBwbHkoZWxlbSxhcmdzKTt9DQppZihkb2N1bWVu
dC5hZGRFdmVudExpc3RlbmVyKXtqUXVlcnkuZWFjaCh7Zm9jdXM6ImZvY3VzaW4i
LGJsdXI6ImZvY3Vzb3V0In0sZnVuY3Rpb24ob3JpZyxmaXgpe2pRdWVyeS5ldmVu
dC5zcGVjaWFsW2ZpeF09e3NldHVwOmZ1bmN0aW9uKCl7dGhpcy5hZGRFdmVudExp
c3RlbmVyKG9yaWcsaGFuZGxlcix0cnVlKTt9LHRlYXJkb3duOmZ1bmN0aW9uKCl7
dGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKG9yaWcsaGFuZGxlcix0cnVlKTt9fTtm
dW5jdGlvbiBoYW5kbGVyKGUpe2U9alF1ZXJ5LmV2ZW50LmZpeChlKTtlLnR5cGU9
Zml4O3JldHVybiBqUXVlcnkuZXZlbnQuaGFuZGxlLmNhbGwodGhpcyxlKTt9fSk7
fQ0KalF1ZXJ5LmVhY2goWyJiaW5kIiwib25lIl0sZnVuY3Rpb24oaSxuYW1lKXtq
UXVlcnkuZm5bbmFtZV09ZnVuY3Rpb24odHlwZSxkYXRhLGZuKXtpZih0eXBlb2Yg
dHlwZT09PSJvYmplY3QiKXtmb3IodmFyIGtleSBpbiB0eXBlKXt0aGlzW25hbWVd
KGtleSxkYXRhLHR5cGVba2V5XSxmbik7fQ0KcmV0dXJuIHRoaXM7fQ0KaWYoalF1
ZXJ5LmlzRnVuY3Rpb24oZGF0YSkpe2ZuPWRhdGE7ZGF0YT11bmRlZmluZWQ7fQ0K
dmFyIGhhbmRsZXI9bmFtZT09PSJvbmUiP2pRdWVyeS5wcm94eShmbixmdW5jdGlv
bihldmVudCl7alF1ZXJ5KHRoaXMpLnVuYmluZChldmVudCxoYW5kbGVyKTtyZXR1
cm4gZm4uYXBwbHkodGhpcyxhcmd1bWVudHMpO30pOmZuO2lmKHR5cGU9PT0idW5s
b2FkIiYmbmFtZSE9PSJvbmUiKXt0aGlzLm9uZSh0eXBlLGRhdGEsZm4pO31lbHNl
e2Zvcih2YXIgaT0wLGw9dGhpcy5sZW5ndGg7aTxsO2krKyl7alF1ZXJ5LmV2ZW50
LmFkZCh0aGlzW2ldLHR5cGUsaGFuZGxlcixkYXRhKTt9fQ0KcmV0dXJuIHRoaXM7
fTt9KTtqUXVlcnkuZm4uZXh0ZW5kKHt1bmJpbmQ6ZnVuY3Rpb24odHlwZSxmbil7
aWYodHlwZW9mIHR5cGU9PT0ib2JqZWN0IiYmIXR5cGUucHJldmVudERlZmF1bHQp
e2Zvcih2YXIga2V5IGluIHR5cGUpe3RoaXMudW5iaW5kKGtleSx0eXBlW2tleV0p
O319ZWxzZXtmb3IodmFyIGk9MCxsPXRoaXMubGVuZ3RoO2k8bDtpKyspe2pRdWVy
eS5ldmVudC5yZW1vdmUodGhpc1tpXSx0eXBlLGZuKTt9fQ0KcmV0dXJuIHRoaXM7
fSxkZWxlZ2F0ZTpmdW5jdGlvbihzZWxlY3Rvcix0eXBlcyxkYXRhLGZuKXtyZXR1
cm4gdGhpcy5saXZlKHR5cGVzLGRhdGEsZm4sc2VsZWN0b3IpO30sdW5kZWxlZ2F0
ZTpmdW5jdGlvbihzZWxlY3Rvcix0eXBlcyxmbil7aWYoYXJndW1lbnRzLmxlbmd0
aD09PTApe3JldHVybiB0aGlzLnVuYmluZCgibGl2ZSIpO31lbHNle3JldHVybiB0
aGlzLmRpZSh0eXBlcyxudWxsLGZuLHNlbGVjdG9yKTt9fSx0cmlnZ2VyOmZ1bmN0
aW9uKHR5cGUsZGF0YSl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe2pRdWVy
eS5ldmVudC50cmlnZ2VyKHR5cGUsZGF0YSx0aGlzKTt9KTt9LHRyaWdnZXJIYW5k
bGVyOmZ1bmN0aW9uKHR5cGUsZGF0YSl7aWYodGhpc1swXSl7dmFyIGV2ZW50PWpR
dWVyeS5FdmVudCh0eXBlKTtldmVudC5wcmV2ZW50RGVmYXVsdCgpO2V2ZW50LnN0
b3BQcm9wYWdhdGlvbigpO2pRdWVyeS5ldmVudC50cmlnZ2VyKGV2ZW50LGRhdGEs
dGhpc1swXSk7cmV0dXJuIGV2ZW50LnJlc3VsdDt9fSx0b2dnbGU6ZnVuY3Rpb24o
Zm4pe3ZhciBhcmdzPWFyZ3VtZW50cyxpPTE7d2hpbGUoaTxhcmdzLmxlbmd0aCl7
alF1ZXJ5LnByb3h5KGZuLGFyZ3NbaSsrXSk7fQ0KcmV0dXJuIHRoaXMuY2xpY2so
alF1ZXJ5LnByb3h5KGZuLGZ1bmN0aW9uKGV2ZW50KXt2YXIgbGFzdFRvZ2dsZT0o
alF1ZXJ5LmRhdGEodGhpcywibGFzdFRvZ2dsZSIrZm4uZ3VpZCl8fDApJWk7alF1
ZXJ5LmRhdGEodGhpcywibGFzdFRvZ2dsZSIrZm4uZ3VpZCxsYXN0VG9nZ2xlKzEp
O2V2ZW50LnByZXZlbnREZWZhdWx0KCk7cmV0dXJuIGFyZ3NbbGFzdFRvZ2dsZV0u
YXBwbHkodGhpcyxhcmd1bWVudHMpfHxmYWxzZTt9KSk7fSxob3ZlcjpmdW5jdGlv
bihmbk92ZXIsZm5PdXQpe3JldHVybiB0aGlzLm1vdXNlZW50ZXIoZm5PdmVyKS5t
b3VzZWxlYXZlKGZuT3V0fHxmbk92ZXIpO319KTt2YXIgbGl2ZU1hcD17Zm9jdXM6
ImZvY3VzaW4iLGJsdXI6ImZvY3Vzb3V0Iixtb3VzZWVudGVyOiJtb3VzZW92ZXIi
LG1vdXNlbGVhdmU6Im1vdXNlb3V0In07alF1ZXJ5LmVhY2goWyJsaXZlIiwiZGll
Il0sZnVuY3Rpb24oaSxuYW1lKXtqUXVlcnkuZm5bbmFtZV09ZnVuY3Rpb24odHlw
ZXMsZGF0YSxmbixvcmlnU2VsZWN0b3Ipe3ZhciB0eXBlLGk9MCxtYXRjaCxuYW1l
c3BhY2VzLHByZVR5cGUsc2VsZWN0b3I9b3JpZ1NlbGVjdG9yfHx0aGlzLnNlbGVj
dG9yLGNvbnRleHQ9b3JpZ1NlbGVjdG9yP3RoaXM6alF1ZXJ5KHRoaXMuY29udGV4
dCk7aWYoalF1ZXJ5LmlzRnVuY3Rpb24oZGF0YSkpe2ZuPWRhdGE7ZGF0YT11bmRl
ZmluZWQ7fQ0KdHlwZXM9KHR5cGVzfHwiIikuc3BsaXQoIiAiKTt3aGlsZSgodHlw
ZT10eXBlc1tpKytdKSE9bnVsbCl7bWF0Y2g9cm5hbWVzcGFjZXMuZXhlYyh0eXBl
KTtuYW1lc3BhY2VzPSIiO2lmKG1hdGNoKXtuYW1lc3BhY2VzPW1hdGNoWzBdO3R5
cGU9dHlwZS5yZXBsYWNlKHJuYW1lc3BhY2VzLCIiKTt9DQppZih0eXBlPT09Imhv
dmVyIil7dHlwZXMucHVzaCgibW91c2VlbnRlciIrbmFtZXNwYWNlcywibW91c2Vs
ZWF2ZSIrbmFtZXNwYWNlcyk7Y29udGludWU7fQ0KcHJlVHlwZT10eXBlO2lmKHR5
cGU9PT0iZm9jdXMifHx0eXBlPT09ImJsdXIiKXt0eXBlcy5wdXNoKGxpdmVNYXBb
dHlwZV0rbmFtZXNwYWNlcyk7dHlwZT10eXBlK25hbWVzcGFjZXM7fWVsc2V7dHlw
ZT0obGl2ZU1hcFt0eXBlXXx8dHlwZSkrbmFtZXNwYWNlczt9DQppZihuYW1lPT09
ImxpdmUiKXtjb250ZXh0LmVhY2goZnVuY3Rpb24oKXtqUXVlcnkuZXZlbnQuYWRk
KHRoaXMsbGl2ZUNvbnZlcnQodHlwZSxzZWxlY3Rvcikse2RhdGE6ZGF0YSxzZWxl
Y3RvcjpzZWxlY3RvcixoYW5kbGVyOmZuLG9yaWdUeXBlOnR5cGUsb3JpZ0hhbmRs
ZXI6Zm4scHJlVHlwZTpwcmVUeXBlfSk7fSk7fWVsc2V7Y29udGV4dC51bmJpbmQo
bGl2ZUNvbnZlcnQodHlwZSxzZWxlY3RvciksZm4pO319DQpyZXR1cm4gdGhpczt9
fSk7ZnVuY3Rpb24gbGl2ZUhhbmRsZXIoZXZlbnQpe3ZhciBzdG9wLGVsZW1zPVtd
LHNlbGVjdG9ycz1bXSxhcmdzPWFyZ3VtZW50cyxyZWxhdGVkLG1hdGNoLGhhbmRs
ZU9iaixlbGVtLGosaSxsLGRhdGEsZXZlbnRzPWpRdWVyeS5kYXRhKHRoaXMsImV2
ZW50cyIpO2lmKGV2ZW50LmxpdmVGaXJlZD09PXRoaXN8fCFldmVudHN8fCFldmVu
dHMubGl2ZXx8ZXZlbnQuYnV0dG9uJiZldmVudC50eXBlPT09ImNsaWNrIil7cmV0
dXJuO30NCmV2ZW50LmxpdmVGaXJlZD10aGlzO3ZhciBsaXZlPWV2ZW50cy5saXZl
LnNsaWNlKDApO2ZvcihqPTA7ajxsaXZlLmxlbmd0aDtqKyspe2hhbmRsZU9iaj1s
aXZlW2pdO2lmKGhhbmRsZU9iai5vcmlnVHlwZS5yZXBsYWNlKHJuYW1lc3BhY2Vz
LCIiKT09PWV2ZW50LnR5cGUpe3NlbGVjdG9ycy5wdXNoKGhhbmRsZU9iai5zZWxl
Y3Rvcik7fWVsc2V7bGl2ZS5zcGxpY2Uoai0tLDEpO319DQptYXRjaD1qUXVlcnko
ZXZlbnQudGFyZ2V0KS5jbG9zZXN0KHNlbGVjdG9ycyxldmVudC5jdXJyZW50VGFy
Z2V0KTtmb3IoaT0wLGw9bWF0Y2gubGVuZ3RoO2k8bDtpKyspe2ZvcihqPTA7ajxs
aXZlLmxlbmd0aDtqKyspe2hhbmRsZU9iaj1saXZlW2pdO2lmKG1hdGNoW2ldLnNl
bGVjdG9yPT09aGFuZGxlT2JqLnNlbGVjdG9yKXtlbGVtPW1hdGNoW2ldLmVsZW07
cmVsYXRlZD1udWxsO2lmKGhhbmRsZU9iai5wcmVUeXBlPT09Im1vdXNlZW50ZXIi
fHxoYW5kbGVPYmoucHJlVHlwZT09PSJtb3VzZWxlYXZlIil7cmVsYXRlZD1qUXVl
cnkoZXZlbnQucmVsYXRlZFRhcmdldCkuY2xvc2VzdChoYW5kbGVPYmouc2VsZWN0
b3IpWzBdO30NCmlmKCFyZWxhdGVkfHxyZWxhdGVkIT09ZWxlbSl7ZWxlbXMucHVz
aCh7ZWxlbTplbGVtLGhhbmRsZU9iajpoYW5kbGVPYmp9KTt9fX19DQpmb3IoaT0w
LGw9ZWxlbXMubGVuZ3RoO2k8bDtpKyspe21hdGNoPWVsZW1zW2ldO2V2ZW50LmN1
cnJlbnRUYXJnZXQ9bWF0Y2guZWxlbTtldmVudC5kYXRhPW1hdGNoLmhhbmRsZU9i
ai5kYXRhO2V2ZW50LmhhbmRsZU9iaj1tYXRjaC5oYW5kbGVPYmo7aWYobWF0Y2gu
aGFuZGxlT2JqLm9yaWdIYW5kbGVyLmFwcGx5KG1hdGNoLmVsZW0sYXJncyk9PT1m
YWxzZSl7c3RvcD1mYWxzZTticmVhazt9fQ0KcmV0dXJuIHN0b3A7fQ0KZnVuY3Rp
b24gbGl2ZUNvbnZlcnQodHlwZSxzZWxlY3Rvcil7cmV0dXJuImxpdmUuIisodHlw
ZSYmdHlwZSE9PSIqIj90eXBlKyIuIjoiIikrc2VsZWN0b3IucmVwbGFjZSgvXC4v
ZywiYCIpLnJlcGxhY2UoLyAvZywiJiIpO30NCmpRdWVyeS5lYWNoKCgiYmx1ciBm
b2N1cyBmb2N1c2luIGZvY3Vzb3V0IGxvYWQgcmVzaXplIHNjcm9sbCB1bmxvYWQg
Y2xpY2sgZGJsY2xpY2sgIisibW91c2Vkb3duIG1vdXNldXAgbW91c2Vtb3ZlIG1v
dXNlb3ZlciBtb3VzZW91dCBtb3VzZWVudGVyIG1vdXNlbGVhdmUgIisiY2hhbmdl
IHNlbGVjdCBzdWJtaXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBlcnJvciIpLnNw
bGl0KCIgIiksZnVuY3Rpb24oaSxuYW1lKXtqUXVlcnkuZm5bbmFtZV09ZnVuY3Rp
b24oZm4pe3JldHVybiBmbj90aGlzLmJpbmQobmFtZSxmbik6dGhpcy50cmlnZ2Vy
KG5hbWUpO307aWYoalF1ZXJ5LmF0dHJGbil7alF1ZXJ5LmF0dHJGbltuYW1lXT10
cnVlO319KTtpZih3aW5kb3cuYXR0YWNoRXZlbnQmJiF3aW5kb3cuYWRkRXZlbnRM
aXN0ZW5lcil7d2luZG93LmF0dGFjaEV2ZW50KCJvbnVubG9hZCIsZnVuY3Rpb24o
KXtmb3IodmFyIGlkIGluIGpRdWVyeS5jYWNoZSl7aWYoalF1ZXJ5LmNhY2hlW2lk
XS5oYW5kbGUpe3RyeXtqUXVlcnkuZXZlbnQucmVtb3ZlKGpRdWVyeS5jYWNoZVtp
ZF0uaGFuZGxlLmVsZW0pO31jYXRjaChlKXt9fX19KTt9DQooZnVuY3Rpb24oKXt2
YXIgY2h1bmtlcj0vKCg/OlwoKD86XChbXigpXStcKXxbXigpXSspK1wpfFxbKD86
XFtbXltcXV0qXF18WyciXVteJyJdKlsnIl18W15bXF0nIl0rKStcXXxcXC58W14g
Pit+LChcW1xcXSspK3xbPit+XSkoXHMqLFxzKik/KCg/Oi58XHJ8XG4pKikvZyxk
b25lPTAsdG9TdHJpbmc9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZyxoYXNEdXBs
aWNhdGU9ZmFsc2UsYmFzZUhhc0R1cGxpY2F0ZT10cnVlO1swLDBdLnNvcnQoZnVu
Y3Rpb24oKXtiYXNlSGFzRHVwbGljYXRlPWZhbHNlO3JldHVybiAwO30pO3ZhciBT
aXp6bGU9ZnVuY3Rpb24oc2VsZWN0b3IsY29udGV4dCxyZXN1bHRzLHNlZWQpe3Jl
c3VsdHM9cmVzdWx0c3x8W107dmFyIG9yaWdDb250ZXh0PWNvbnRleHQ9Y29udGV4
dHx8ZG9jdW1lbnQ7aWYoY29udGV4dC5ub2RlVHlwZSE9PTEmJmNvbnRleHQubm9k
ZVR5cGUhPT05KXtyZXR1cm5bXTt9DQppZighc2VsZWN0b3J8fHR5cGVvZiBzZWxl
Y3RvciE9PSJzdHJpbmciKXtyZXR1cm4gcmVzdWx0czt9DQp2YXIgcGFydHM9W10s
bSxzZXQsY2hlY2tTZXQsZXh0cmEscHJ1bmU9dHJ1ZSxjb250ZXh0WE1MPWlzWE1M
KGNvbnRleHQpLHNvRmFyPXNlbGVjdG9yO3doaWxlKChjaHVua2VyLmV4ZWMoIiIp
LG09Y2h1bmtlci5leGVjKHNvRmFyKSkhPT1udWxsKXtzb0Zhcj1tWzNdO3BhcnRz
LnB1c2gobVsxXSk7aWYobVsyXSl7ZXh0cmE9bVszXTticmVhazt9fQ0KaWYocGFy
dHMubGVuZ3RoPjEmJm9yaWdQT1MuZXhlYyhzZWxlY3Rvcikpe2lmKHBhcnRzLmxl
bmd0aD09PTImJkV4cHIucmVsYXRpdmVbcGFydHNbMF1dKXtzZXQ9cG9zUHJvY2Vz
cyhwYXJ0c1swXStwYXJ0c1sxXSxjb250ZXh0KTt9ZWxzZXtzZXQ9RXhwci5yZWxh
dGl2ZVtwYXJ0c1swXV0/W2NvbnRleHRdOlNpenpsZShwYXJ0cy5zaGlmdCgpLGNv
bnRleHQpO3doaWxlKHBhcnRzLmxlbmd0aCl7c2VsZWN0b3I9cGFydHMuc2hpZnQo
KTtpZihFeHByLnJlbGF0aXZlW3NlbGVjdG9yXSl7c2VsZWN0b3IrPXBhcnRzLnNo
aWZ0KCk7fQ0Kc2V0PXBvc1Byb2Nlc3Moc2VsZWN0b3Isc2V0KTt9fX1lbHNle2lm
KCFzZWVkJiZwYXJ0cy5sZW5ndGg+MSYmY29udGV4dC5ub2RlVHlwZT09PTkmJiFj
b250ZXh0WE1MJiZFeHByLm1hdGNoLklELnRlc3QocGFydHNbMF0pJiYhRXhwci5t
YXRjaC5JRC50ZXN0KHBhcnRzW3BhcnRzLmxlbmd0aC0xXSkpe3ZhciByZXQ9U2l6
emxlLmZpbmQocGFydHMuc2hpZnQoKSxjb250ZXh0LGNvbnRleHRYTUwpO2NvbnRl
eHQ9cmV0LmV4cHI/U2l6emxlLmZpbHRlcihyZXQuZXhwcixyZXQuc2V0KVswXTpy
ZXQuc2V0WzBdO30NCmlmKGNvbnRleHQpe3ZhciByZXQ9c2VlZD97ZXhwcjpwYXJ0
cy5wb3AoKSxzZXQ6bWFrZUFycmF5KHNlZWQpfTpTaXp6bGUuZmluZChwYXJ0cy5w
b3AoKSxwYXJ0cy5sZW5ndGg9PT0xJiYocGFydHNbMF09PT0ifiJ8fHBhcnRzWzBd
PT09IisiKSYmY29udGV4dC5wYXJlbnROb2RlP2NvbnRleHQucGFyZW50Tm9kZTpj
b250ZXh0LGNvbnRleHRYTUwpO3NldD1yZXQuZXhwcj9TaXp6bGUuZmlsdGVyKHJl
dC5leHByLHJldC5zZXQpOnJldC5zZXQ7aWYocGFydHMubGVuZ3RoPjApe2NoZWNr
U2V0PW1ha2VBcnJheShzZXQpO31lbHNle3BydW5lPWZhbHNlO30NCndoaWxlKHBh
cnRzLmxlbmd0aCl7dmFyIGN1cj1wYXJ0cy5wb3AoKSxwb3A9Y3VyO2lmKCFFeHBy
LnJlbGF0aXZlW2N1cl0pe2N1cj0iIjt9ZWxzZXtwb3A9cGFydHMucG9wKCk7fQ0K
aWYocG9wPT1udWxsKXtwb3A9Y29udGV4dDt9DQpFeHByLnJlbGF0aXZlW2N1cl0o
Y2hlY2tTZXQscG9wLGNvbnRleHRYTUwpO319ZWxzZXtjaGVja1NldD1wYXJ0cz1b
XTt9fQ0KaWYoIWNoZWNrU2V0KXtjaGVja1NldD1zZXQ7fQ0KaWYoIWNoZWNrU2V0
KXtTaXp6bGUuZXJyb3IoY3VyfHxzZWxlY3Rvcik7fQ0KaWYodG9TdHJpbmcuY2Fs
bChjaGVja1NldCk9PT0iW29iamVjdCBBcnJheV0iKXtpZighcHJ1bmUpe3Jlc3Vs
dHMucHVzaC5hcHBseShyZXN1bHRzLGNoZWNrU2V0KTt9ZWxzZSBpZihjb250ZXh0
JiZjb250ZXh0Lm5vZGVUeXBlPT09MSl7Zm9yKHZhciBpPTA7Y2hlY2tTZXRbaV0h
PW51bGw7aSsrKXtpZihjaGVja1NldFtpXSYmKGNoZWNrU2V0W2ldPT09dHJ1ZXx8
Y2hlY2tTZXRbaV0ubm9kZVR5cGU9PT0xJiZjb250YWlucyhjb250ZXh0LGNoZWNr
U2V0W2ldKSkpe3Jlc3VsdHMucHVzaChzZXRbaV0pO319fWVsc2V7Zm9yKHZhciBp
PTA7Y2hlY2tTZXRbaV0hPW51bGw7aSsrKXtpZihjaGVja1NldFtpXSYmY2hlY2tT
ZXRbaV0ubm9kZVR5cGU9PT0xKXtyZXN1bHRzLnB1c2goc2V0W2ldKTt9fX19ZWxz
ZXttYWtlQXJyYXkoY2hlY2tTZXQscmVzdWx0cyk7fQ0KaWYoZXh0cmEpe1Npenps
ZShleHRyYSxvcmlnQ29udGV4dCxyZXN1bHRzLHNlZWQpO1NpenpsZS51bmlxdWVT
b3J0KHJlc3VsdHMpO30NCnJldHVybiByZXN1bHRzO307U2l6emxlLnVuaXF1ZVNv
cnQ9ZnVuY3Rpb24ocmVzdWx0cyl7aWYoc29ydE9yZGVyKXtoYXNEdXBsaWNhdGU9
YmFzZUhhc0R1cGxpY2F0ZTtyZXN1bHRzLnNvcnQoc29ydE9yZGVyKTtpZihoYXNE
dXBsaWNhdGUpe2Zvcih2YXIgaT0xO2k8cmVzdWx0cy5sZW5ndGg7aSsrKXtpZihy
ZXN1bHRzW2ldPT09cmVzdWx0c1tpLTFdKXtyZXN1bHRzLnNwbGljZShpLS0sMSk7
fX19fQ0KcmV0dXJuIHJlc3VsdHM7fTtTaXp6bGUubWF0Y2hlcz1mdW5jdGlvbihl
eHByLHNldCl7cmV0dXJuIFNpenpsZShleHByLG51bGwsbnVsbCxzZXQpO307U2l6
emxlLmZpbmQ9ZnVuY3Rpb24oZXhwcixjb250ZXh0LGlzWE1MKXt2YXIgc2V0LG1h
dGNoO2lmKCFleHByKXtyZXR1cm5bXTt9DQpmb3IodmFyIGk9MCxsPUV4cHIub3Jk
ZXIubGVuZ3RoO2k8bDtpKyspe3ZhciB0eXBlPUV4cHIub3JkZXJbaV0sbWF0Y2g7
aWYoKG1hdGNoPUV4cHIubGVmdE1hdGNoW3R5cGVdLmV4ZWMoZXhwcikpKXt2YXIg
bGVmdD1tYXRjaFsxXTttYXRjaC5zcGxpY2UoMSwxKTtpZihsZWZ0LnN1YnN0cihs
ZWZ0Lmxlbmd0aC0xKSE9PSJcXCIpe21hdGNoWzFdPShtYXRjaFsxXXx8IiIpLnJl
cGxhY2UoL1xcL2csIiIpO3NldD1FeHByLmZpbmRbdHlwZV0obWF0Y2gsY29udGV4
dCxpc1hNTCk7aWYoc2V0IT1udWxsKXtleHByPWV4cHIucmVwbGFjZShFeHByLm1h
dGNoW3R5cGVdLCIiKTticmVhazt9fX19DQppZighc2V0KXtzZXQ9Y29udGV4dC5n
ZXRFbGVtZW50c0J5VGFnTmFtZSgiKiIpO30NCnJldHVybntzZXQ6c2V0LGV4cHI6
ZXhwcn07fTtTaXp6bGUuZmlsdGVyPWZ1bmN0aW9uKGV4cHIsc2V0LGlucGxhY2Us
bm90KXt2YXIgb2xkPWV4cHIscmVzdWx0PVtdLGN1ckxvb3A9c2V0LG1hdGNoLGFu
eUZvdW5kLGlzWE1MRmlsdGVyPXNldCYmc2V0WzBdJiZpc1hNTChzZXRbMF0pO3do
aWxlKGV4cHImJnNldC5sZW5ndGgpe2Zvcih2YXIgdHlwZSBpbiBFeHByLmZpbHRl
cil7aWYoKG1hdGNoPUV4cHIubGVmdE1hdGNoW3R5cGVdLmV4ZWMoZXhwcikpIT1u
dWxsJiZtYXRjaFsyXSl7dmFyIGZpbHRlcj1FeHByLmZpbHRlclt0eXBlXSxmb3Vu
ZCxpdGVtLGxlZnQ9bWF0Y2hbMV07YW55Rm91bmQ9ZmFsc2U7bWF0Y2guc3BsaWNl
KDEsMSk7aWYobGVmdC5zdWJzdHIobGVmdC5sZW5ndGgtMSk9PT0iXFwiKXtjb250
aW51ZTt9DQppZihjdXJMb29wPT09cmVzdWx0KXtyZXN1bHQ9W107fQ0KaWYoRXhw
ci5wcmVGaWx0ZXJbdHlwZV0pe21hdGNoPUV4cHIucHJlRmlsdGVyW3R5cGVdKG1h
dGNoLGN1ckxvb3AsaW5wbGFjZSxyZXN1bHQsbm90LGlzWE1MRmlsdGVyKTtpZigh
bWF0Y2gpe2FueUZvdW5kPWZvdW5kPXRydWU7fWVsc2UgaWYobWF0Y2g9PT10cnVl
KXtjb250aW51ZTt9fQ0KaWYobWF0Y2gpe2Zvcih2YXIgaT0wOyhpdGVtPWN1ckxv
b3BbaV0pIT1udWxsO2krKyl7aWYoaXRlbSl7Zm91bmQ9ZmlsdGVyKGl0ZW0sbWF0
Y2gsaSxjdXJMb29wKTt2YXIgcGFzcz1ub3ReISFmb3VuZDtpZihpbnBsYWNlJiZm
b3VuZCE9bnVsbCl7aWYocGFzcyl7YW55Rm91bmQ9dHJ1ZTt9ZWxzZXtjdXJMb29w
W2ldPWZhbHNlO319ZWxzZSBpZihwYXNzKXtyZXN1bHQucHVzaChpdGVtKTthbnlG
b3VuZD10cnVlO319fX0NCmlmKGZvdW5kIT09dW5kZWZpbmVkKXtpZighaW5wbGFj
ZSl7Y3VyTG9vcD1yZXN1bHQ7fQ0KZXhwcj1leHByLnJlcGxhY2UoRXhwci5tYXRj
aFt0eXBlXSwiIik7aWYoIWFueUZvdW5kKXtyZXR1cm5bXTt9DQpicmVhazt9fX0N
CmlmKGV4cHI9PT1vbGQpe2lmKGFueUZvdW5kPT1udWxsKXtTaXp6bGUuZXJyb3Io
ZXhwcik7fWVsc2V7YnJlYWs7fX0NCm9sZD1leHByO30NCnJldHVybiBjdXJMb29w
O307U2l6emxlLmVycm9yPWZ1bmN0aW9uKG1zZyl7dGhyb3ciU3ludGF4IGVycm9y
LCB1bnJlY29nbml6ZWQgZXhwcmVzc2lvbjogIittc2c7fTt2YXIgRXhwcj1TaXp6
bGUuc2VsZWN0b3JzPXtvcmRlcjpbIklEIiwiTkFNRSIsIlRBRyJdLG1hdGNoOntJ
RDovIygoPzpbXHdcdTAwYzAtXHVGRkZGLV18XFwuKSspLyxDTEFTUzovXC4oKD86
W1x3XHUwMGMwLVx1RkZGRi1dfFxcLikrKS8sTkFNRTovXFtuYW1lPVsnIl0qKCg/
Oltcd1x1MDBjMC1cdUZGRkYtXXxcXC4pKylbJyJdKlxdLyxBVFRSOi9cW1xzKigo
PzpbXHdcdTAwYzAtXHVGRkZGLV18XFwuKSspXHMqKD86KFxTPz0pXHMqKFsnIl0q
KSguKj8pXDN8KVxzKlxdLyxUQUc6L14oKD86W1x3XHUwMGMwLVx1RkZGRlwqLV18
XFwuKSspLyxDSElMRDovOihvbmx5fG50aHxsYXN0fGZpcnN0KS1jaGlsZCg/Olwo
KGV2ZW58b2RkfFtcZG4rLV0qKVwpKT8vLFBPUzovOihudGh8ZXF8Z3R8bHR8Zmly
c3R8bGFzdHxldmVufG9kZCkoPzpcKChcZCopXCkpPyg/PVteLV18JCkvLFBTRVVE
TzovOigoPzpbXHdcdTAwYzAtXHVGRkZGLV18XFwuKSspKD86XCgoWyciXT8pKCg/
OlwoW15cKV0rXCl8W15cKFwpXSopKylcMlwpKT8vfSxsZWZ0TWF0Y2g6e30sYXR0
ck1hcDp7ImNsYXNzIjoiY2xhc3NOYW1lIiwiZm9yIjoiaHRtbEZvciJ9LGF0dHJI
YW5kbGU6e2hyZWY6ZnVuY3Rpb24oZWxlbSl7cmV0dXJuIGVsZW0uZ2V0QXR0cmli
dXRlKCJocmVmIik7fX0scmVsYXRpdmU6eyIrIjpmdW5jdGlvbihjaGVja1NldCxw
YXJ0KXt2YXIgaXNQYXJ0U3RyPXR5cGVvZiBwYXJ0PT09InN0cmluZyIsaXNUYWc9
aXNQYXJ0U3RyJiYhL1xXLy50ZXN0KHBhcnQpLGlzUGFydFN0ck5vdFRhZz1pc1Bh
cnRTdHImJiFpc1RhZztpZihpc1RhZyl7cGFydD1wYXJ0LnRvTG93ZXJDYXNlKCk7
fQ0KZm9yKHZhciBpPTAsbD1jaGVja1NldC5sZW5ndGgsZWxlbTtpPGw7aSsrKXtp
ZigoZWxlbT1jaGVja1NldFtpXSkpe3doaWxlKChlbGVtPWVsZW0ucHJldmlvdXNT
aWJsaW5nKSYmZWxlbS5ub2RlVHlwZSE9PTEpe30NCmNoZWNrU2V0W2ldPWlzUGFy
dFN0ck5vdFRhZ3x8ZWxlbSYmZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpPT09
cGFydD9lbGVtfHxmYWxzZTplbGVtPT09cGFydDt9fQ0KaWYoaXNQYXJ0U3RyTm90
VGFnKXtTaXp6bGUuZmlsdGVyKHBhcnQsY2hlY2tTZXQsdHJ1ZSk7fX0sIj4iOmZ1
bmN0aW9uKGNoZWNrU2V0LHBhcnQpe3ZhciBpc1BhcnRTdHI9dHlwZW9mIHBhcnQ9
PT0ic3RyaW5nIjtpZihpc1BhcnRTdHImJiEvXFcvLnRlc3QocGFydCkpe3BhcnQ9
cGFydC50b0xvd2VyQ2FzZSgpO2Zvcih2YXIgaT0wLGw9Y2hlY2tTZXQubGVuZ3Ro
O2k8bDtpKyspe3ZhciBlbGVtPWNoZWNrU2V0W2ldO2lmKGVsZW0pe3ZhciBwYXJl
bnQ9ZWxlbS5wYXJlbnROb2RlO2NoZWNrU2V0W2ldPXBhcmVudC5ub2RlTmFtZS50
b0xvd2VyQ2FzZSgpPT09cGFydD9wYXJlbnQ6ZmFsc2U7fX19ZWxzZXtmb3IodmFy
IGk9MCxsPWNoZWNrU2V0Lmxlbmd0aDtpPGw7aSsrKXt2YXIgZWxlbT1jaGVja1Nl
dFtpXTtpZihlbGVtKXtjaGVja1NldFtpXT1pc1BhcnRTdHI/ZWxlbS5wYXJlbnRO
b2RlOmVsZW0ucGFyZW50Tm9kZT09PXBhcnQ7fX0NCmlmKGlzUGFydFN0cil7U2l6
emxlLmZpbHRlcihwYXJ0LGNoZWNrU2V0LHRydWUpO319fSwiIjpmdW5jdGlvbihj
aGVja1NldCxwYXJ0LGlzWE1MKXt2YXIgZG9uZU5hbWU9ZG9uZSsrLGNoZWNrRm49
ZGlyQ2hlY2s7aWYodHlwZW9mIHBhcnQ9PT0ic3RyaW5nIiYmIS9cVy8udGVzdChw
YXJ0KSl7dmFyIG5vZGVDaGVjaz1wYXJ0PXBhcnQudG9Mb3dlckNhc2UoKTtjaGVj
a0ZuPWRpck5vZGVDaGVjazt9DQpjaGVja0ZuKCJwYXJlbnROb2RlIixwYXJ0LGRv
bmVOYW1lLGNoZWNrU2V0LG5vZGVDaGVjayxpc1hNTCk7fSwifiI6ZnVuY3Rpb24o
Y2hlY2tTZXQscGFydCxpc1hNTCl7dmFyIGRvbmVOYW1lPWRvbmUrKyxjaGVja0Zu
PWRpckNoZWNrO2lmKHR5cGVvZiBwYXJ0PT09InN0cmluZyImJiEvXFcvLnRlc3Qo
cGFydCkpe3ZhciBub2RlQ2hlY2s9cGFydD1wYXJ0LnRvTG93ZXJDYXNlKCk7Y2hl
Y2tGbj1kaXJOb2RlQ2hlY2s7fQ0KY2hlY2tGbigicHJldmlvdXNTaWJsaW5nIixw
YXJ0LGRvbmVOYW1lLGNoZWNrU2V0LG5vZGVDaGVjayxpc1hNTCk7fX0sZmluZDp7
SUQ6ZnVuY3Rpb24obWF0Y2gsY29udGV4dCxpc1hNTCl7aWYodHlwZW9mIGNvbnRl
eHQuZ2V0RWxlbWVudEJ5SWQhPT0idW5kZWZpbmVkIiYmIWlzWE1MKXt2YXIgbT1j
b250ZXh0LmdldEVsZW1lbnRCeUlkKG1hdGNoWzFdKTtyZXR1cm4gbT9bbV06W107
fX0sTkFNRTpmdW5jdGlvbihtYXRjaCxjb250ZXh0KXtpZih0eXBlb2YgY29udGV4
dC5nZXRFbGVtZW50c0J5TmFtZSE9PSJ1bmRlZmluZWQiKXt2YXIgcmV0PVtdLHJl
c3VsdHM9Y29udGV4dC5nZXRFbGVtZW50c0J5TmFtZShtYXRjaFsxXSk7Zm9yKHZh
ciBpPTAsbD1yZXN1bHRzLmxlbmd0aDtpPGw7aSsrKXtpZihyZXN1bHRzW2ldLmdl
dEF0dHJpYnV0ZSgibmFtZSIpPT09bWF0Y2hbMV0pe3JldC5wdXNoKHJlc3VsdHNb
aV0pO319DQpyZXR1cm4gcmV0Lmxlbmd0aD09PTA/bnVsbDpyZXQ7fX0sVEFHOmZ1
bmN0aW9uKG1hdGNoLGNvbnRleHQpe3JldHVybiBjb250ZXh0LmdldEVsZW1lbnRz
QnlUYWdOYW1lKG1hdGNoWzFdKTt9fSxwcmVGaWx0ZXI6e0NMQVNTOmZ1bmN0aW9u
KG1hdGNoLGN1ckxvb3AsaW5wbGFjZSxyZXN1bHQsbm90LGlzWE1MKXttYXRjaD0i
ICIrbWF0Y2hbMV0ucmVwbGFjZSgvXFwvZywiIikrIiAiO2lmKGlzWE1MKXtyZXR1
cm4gbWF0Y2g7fQ0KZm9yKHZhciBpPTAsZWxlbTsoZWxlbT1jdXJMb29wW2ldKSE9
bnVsbDtpKyspe2lmKGVsZW0pe2lmKG5vdF4oZWxlbS5jbGFzc05hbWUmJigiICIr
ZWxlbS5jbGFzc05hbWUrIiAiKS5yZXBsYWNlKC9bXHRcbl0vZywiICIpLmluZGV4
T2YobWF0Y2gpPj0wKSl7aWYoIWlucGxhY2Upe3Jlc3VsdC5wdXNoKGVsZW0pO319
ZWxzZSBpZihpbnBsYWNlKXtjdXJMb29wW2ldPWZhbHNlO319fQ0KcmV0dXJuIGZh
bHNlO30sSUQ6ZnVuY3Rpb24obWF0Y2gpe3JldHVybiBtYXRjaFsxXS5yZXBsYWNl
KC9cXC9nLCIiKTt9LFRBRzpmdW5jdGlvbihtYXRjaCxjdXJMb29wKXtyZXR1cm4g
bWF0Y2hbMV0udG9Mb3dlckNhc2UoKTt9LENISUxEOmZ1bmN0aW9uKG1hdGNoKXtp
ZihtYXRjaFsxXT09PSJudGgiKXt2YXIgdGVzdD0vKC0/KShcZCopbigoPzpcK3wt
KT9cZCopLy5leGVjKG1hdGNoWzJdPT09ImV2ZW4iJiYiMm4ifHxtYXRjaFsyXT09
PSJvZGQiJiYiMm4rMSJ8fCEvXEQvLnRlc3QobWF0Y2hbMl0pJiYiMG4rIittYXRj
aFsyXXx8bWF0Y2hbMl0pO21hdGNoWzJdPSh0ZXN0WzFdKyh0ZXN0WzJdfHwxKSkt
MDttYXRjaFszXT10ZXN0WzNdLTA7fQ0KbWF0Y2hbMF09ZG9uZSsrO3JldHVybiBt
YXRjaDt9LEFUVFI6ZnVuY3Rpb24obWF0Y2gsY3VyTG9vcCxpbnBsYWNlLHJlc3Vs
dCxub3QsaXNYTUwpe3ZhciBuYW1lPW1hdGNoWzFdLnJlcGxhY2UoL1xcL2csIiIp
O2lmKCFpc1hNTCYmRXhwci5hdHRyTWFwW25hbWVdKXttYXRjaFsxXT1FeHByLmF0
dHJNYXBbbmFtZV07fQ0KaWYobWF0Y2hbMl09PT0ifj0iKXttYXRjaFs0XT0iICIr
bWF0Y2hbNF0rIiAiO30NCnJldHVybiBtYXRjaDt9LFBTRVVETzpmdW5jdGlvbiht
YXRjaCxjdXJMb29wLGlucGxhY2UscmVzdWx0LG5vdCl7aWYobWF0Y2hbMV09PT0i
bm90Iil7aWYoKGNodW5rZXIuZXhlYyhtYXRjaFszXSl8fCIiKS5sZW5ndGg+MXx8
L15cdy8udGVzdChtYXRjaFszXSkpe21hdGNoWzNdPVNpenpsZShtYXRjaFszXSxu
dWxsLG51bGwsY3VyTG9vcCk7fWVsc2V7dmFyIHJldD1TaXp6bGUuZmlsdGVyKG1h
dGNoWzNdLGN1ckxvb3AsaW5wbGFjZSx0cnVlXm5vdCk7aWYoIWlucGxhY2Upe3Jl
c3VsdC5wdXNoLmFwcGx5KHJlc3VsdCxyZXQpO30NCnJldHVybiBmYWxzZTt9fWVs
c2UgaWYoRXhwci5tYXRjaC5QT1MudGVzdChtYXRjaFswXSl8fEV4cHIubWF0Y2gu
Q0hJTEQudGVzdChtYXRjaFswXSkpe3JldHVybiB0cnVlO30NCnJldHVybiBtYXRj
aDt9LFBPUzpmdW5jdGlvbihtYXRjaCl7bWF0Y2gudW5zaGlmdCh0cnVlKTtyZXR1
cm4gbWF0Y2g7fX0sZmlsdGVyczp7ZW5hYmxlZDpmdW5jdGlvbihlbGVtKXtyZXR1
cm4gZWxlbS5kaXNhYmxlZD09PWZhbHNlJiZlbGVtLnR5cGUhPT0iaGlkZGVuIjt9
LGRpc2FibGVkOmZ1bmN0aW9uKGVsZW0pe3JldHVybiBlbGVtLmRpc2FibGVkPT09
dHJ1ZTt9LGNoZWNrZWQ6ZnVuY3Rpb24oZWxlbSl7cmV0dXJuIGVsZW0uY2hlY2tl
ZD09PXRydWU7fSxzZWxlY3RlZDpmdW5jdGlvbihlbGVtKXtlbGVtLnBhcmVudE5v
ZGUuc2VsZWN0ZWRJbmRleDtyZXR1cm4gZWxlbS5zZWxlY3RlZD09PXRydWU7fSxw
YXJlbnQ6ZnVuY3Rpb24oZWxlbSl7cmV0dXJuISFlbGVtLmZpcnN0Q2hpbGQ7fSxl
bXB0eTpmdW5jdGlvbihlbGVtKXtyZXR1cm4hZWxlbS5maXJzdENoaWxkO30saGFz
OmZ1bmN0aW9uKGVsZW0saSxtYXRjaCl7cmV0dXJuISFTaXp6bGUobWF0Y2hbM10s
ZWxlbSkubGVuZ3RoO30saGVhZGVyOmZ1bmN0aW9uKGVsZW0pe3JldHVybi9oXGQv
aS50ZXN0KGVsZW0ubm9kZU5hbWUpO30sdGV4dDpmdW5jdGlvbihlbGVtKXtyZXR1
cm4idGV4dCI9PT1lbGVtLnR5cGU7fSxyYWRpbzpmdW5jdGlvbihlbGVtKXtyZXR1
cm4icmFkaW8iPT09ZWxlbS50eXBlO30sY2hlY2tib3g6ZnVuY3Rpb24oZWxlbSl7
cmV0dXJuImNoZWNrYm94Ij09PWVsZW0udHlwZTt9LGZpbGU6ZnVuY3Rpb24oZWxl
bSl7cmV0dXJuImZpbGUiPT09ZWxlbS50eXBlO30scGFzc3dvcmQ6ZnVuY3Rpb24o
ZWxlbSl7cmV0dXJuInBhc3N3b3JkIj09PWVsZW0udHlwZTt9LHN1Ym1pdDpmdW5j
dGlvbihlbGVtKXtyZXR1cm4ic3VibWl0Ij09PWVsZW0udHlwZTt9LGltYWdlOmZ1
bmN0aW9uKGVsZW0pe3JldHVybiJpbWFnZSI9PT1lbGVtLnR5cGU7fSxyZXNldDpm
dW5jdGlvbihlbGVtKXtyZXR1cm4icmVzZXQiPT09ZWxlbS50eXBlO30sYnV0dG9u
OmZ1bmN0aW9uKGVsZW0pe3JldHVybiJidXR0b24iPT09ZWxlbS50eXBlfHxlbGVt
Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk9PT0iYnV0dG9uIjt9LGlucHV0OmZ1bmN0
aW9uKGVsZW0pe3JldHVybi9pbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9uL2ku
dGVzdChlbGVtLm5vZGVOYW1lKTt9fSxzZXRGaWx0ZXJzOntmaXJzdDpmdW5jdGlv
bihlbGVtLGkpe3JldHVybiBpPT09MDt9LGxhc3Q6ZnVuY3Rpb24oZWxlbSxpLG1h
dGNoLGFycmF5KXtyZXR1cm4gaT09PWFycmF5Lmxlbmd0aC0xO30sZXZlbjpmdW5j
dGlvbihlbGVtLGkpe3JldHVybiBpJTI9PT0wO30sb2RkOmZ1bmN0aW9uKGVsZW0s
aSl7cmV0dXJuIGklMj09PTE7fSxsdDpmdW5jdGlvbihlbGVtLGksbWF0Y2gpe3Jl
dHVybiBpPG1hdGNoWzNdLTA7fSxndDpmdW5jdGlvbihlbGVtLGksbWF0Y2gpe3Jl
dHVybiBpPm1hdGNoWzNdLTA7fSxudGg6ZnVuY3Rpb24oZWxlbSxpLG1hdGNoKXty
ZXR1cm4gbWF0Y2hbM10tMD09PWk7fSxlcTpmdW5jdGlvbihlbGVtLGksbWF0Y2gp
e3JldHVybiBtYXRjaFszXS0wPT09aTt9fSxmaWx0ZXI6e1BTRVVETzpmdW5jdGlv
bihlbGVtLG1hdGNoLGksYXJyYXkpe3ZhciBuYW1lPW1hdGNoWzFdLGZpbHRlcj1F
eHByLmZpbHRlcnNbbmFtZV07aWYoZmlsdGVyKXtyZXR1cm4gZmlsdGVyKGVsZW0s
aSxtYXRjaCxhcnJheSk7fWVsc2UgaWYobmFtZT09PSJjb250YWlucyIpe3JldHVy
bihlbGVtLnRleHRDb250ZW50fHxlbGVtLmlubmVyVGV4dHx8Z2V0VGV4dChbZWxl
bV0pfHwiIikuaW5kZXhPZihtYXRjaFszXSk+PTA7fWVsc2UgaWYobmFtZT09PSJu
b3QiKXt2YXIgbm90PW1hdGNoWzNdO2Zvcih2YXIgaT0wLGw9bm90Lmxlbmd0aDtp
PGw7aSsrKXtpZihub3RbaV09PT1lbGVtKXtyZXR1cm4gZmFsc2U7fX0NCnJldHVy
biB0cnVlO31lbHNle1NpenpsZS5lcnJvcigiU3ludGF4IGVycm9yLCB1bnJlY29n
bml6ZWQgZXhwcmVzc2lvbjogIituYW1lKTt9fSxDSElMRDpmdW5jdGlvbihlbGVt
LG1hdGNoKXt2YXIgdHlwZT1tYXRjaFsxXSxub2RlPWVsZW07c3dpdGNoKHR5cGUp
e2Nhc2Unb25seSc6Y2FzZSdmaXJzdCc6d2hpbGUoKG5vZGU9bm9kZS5wcmV2aW91
c1NpYmxpbmcpKXtpZihub2RlLm5vZGVUeXBlPT09MSl7cmV0dXJuIGZhbHNlO319
DQppZih0eXBlPT09ImZpcnN0Iil7cmV0dXJuIHRydWU7fQ0Kbm9kZT1lbGVtO2Nh
c2UnbGFzdCc6d2hpbGUoKG5vZGU9bm9kZS5uZXh0U2libGluZykpe2lmKG5vZGUu
bm9kZVR5cGU9PT0xKXtyZXR1cm4gZmFsc2U7fX0NCnJldHVybiB0cnVlO2Nhc2Un
bnRoJzp2YXIgZmlyc3Q9bWF0Y2hbMl0sbGFzdD1tYXRjaFszXTtpZihmaXJzdD09
PTEmJmxhc3Q9PT0wKXtyZXR1cm4gdHJ1ZTt9DQp2YXIgZG9uZU5hbWU9bWF0Y2hb
MF0scGFyZW50PWVsZW0ucGFyZW50Tm9kZTtpZihwYXJlbnQmJihwYXJlbnQuc2l6
Y2FjaGUhPT1kb25lTmFtZXx8IWVsZW0ubm9kZUluZGV4KSl7dmFyIGNvdW50PTA7
Zm9yKG5vZGU9cGFyZW50LmZpcnN0Q2hpbGQ7bm9kZTtub2RlPW5vZGUubmV4dFNp
Ymxpbmcpe2lmKG5vZGUubm9kZVR5cGU9PT0xKXtub2RlLm5vZGVJbmRleD0rK2Nv
dW50O319DQpwYXJlbnQuc2l6Y2FjaGU9ZG9uZU5hbWU7fQ0KdmFyIGRpZmY9ZWxl
bS5ub2RlSW5kZXgtbGFzdDtpZihmaXJzdD09PTApe3JldHVybiBkaWZmPT09MDt9
ZWxzZXtyZXR1cm4oZGlmZiVmaXJzdD09PTAmJmRpZmYvZmlyc3Q+PTApO319fSxJ
RDpmdW5jdGlvbihlbGVtLG1hdGNoKXtyZXR1cm4gZWxlbS5ub2RlVHlwZT09PTEm
JmVsZW0uZ2V0QXR0cmlidXRlKCJpZCIpPT09bWF0Y2g7fSxUQUc6ZnVuY3Rpb24o
ZWxlbSxtYXRjaCl7cmV0dXJuKG1hdGNoPT09IioiJiZlbGVtLm5vZGVUeXBlPT09
MSl8fGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKT09PW1hdGNoO30sQ0xBU1M6
ZnVuY3Rpb24oZWxlbSxtYXRjaCl7cmV0dXJuKCIgIisoZWxlbS5jbGFzc05hbWV8
fGVsZW0uZ2V0QXR0cmlidXRlKCJjbGFzcyIpKSsiICIpLmluZGV4T2YobWF0Y2gp
Pi0xO30sQVRUUjpmdW5jdGlvbihlbGVtLG1hdGNoKXt2YXIgbmFtZT1tYXRjaFsx
XSxyZXN1bHQ9RXhwci5hdHRySGFuZGxlW25hbWVdP0V4cHIuYXR0ckhhbmRsZVtu
YW1lXShlbGVtKTplbGVtW25hbWVdIT1udWxsP2VsZW1bbmFtZV06ZWxlbS5nZXRB
dHRyaWJ1dGUobmFtZSksdmFsdWU9cmVzdWx0KyIiLHR5cGU9bWF0Y2hbMl0sY2hl
Y2s9bWF0Y2hbNF07cmV0dXJuIHJlc3VsdD09bnVsbD90eXBlPT09IiE9Ijp0eXBl
PT09Ij0iP3ZhbHVlPT09Y2hlY2s6dHlwZT09PSIqPSI/dmFsdWUuaW5kZXhPZihj
aGVjayk+PTA6dHlwZT09PSJ+PSI/KCIgIit2YWx1ZSsiICIpLmluZGV4T2YoY2hl
Y2spPj0wOiFjaGVjaz92YWx1ZSYmcmVzdWx0IT09ZmFsc2U6dHlwZT09PSIhPSI/
dmFsdWUhPT1jaGVjazp0eXBlPT09Il49Ij92YWx1ZS5pbmRleE9mKGNoZWNrKT09
PTA6dHlwZT09PSIkPSI/dmFsdWUuc3Vic3RyKHZhbHVlLmxlbmd0aC1jaGVjay5s
ZW5ndGgpPT09Y2hlY2s6dHlwZT09PSJ8PSI/dmFsdWU9PT1jaGVja3x8dmFsdWUu
c3Vic3RyKDAsY2hlY2subGVuZ3RoKzEpPT09Y2hlY2srIi0iOmZhbHNlO30sUE9T
OmZ1bmN0aW9uKGVsZW0sbWF0Y2gsaSxhcnJheSl7dmFyIG5hbWU9bWF0Y2hbMl0s
ZmlsdGVyPUV4cHIuc2V0RmlsdGVyc1tuYW1lXTtpZihmaWx0ZXIpe3JldHVybiBm
aWx0ZXIoZWxlbSxpLG1hdGNoLGFycmF5KTt9fX19O3ZhciBvcmlnUE9TPUV4cHIu
bWF0Y2guUE9TO2Zvcih2YXIgdHlwZSBpbiBFeHByLm1hdGNoKXtFeHByLm1hdGNo
W3R5cGVdPW5ldyBSZWdFeHAoRXhwci5tYXRjaFt0eXBlXS5zb3VyY2UrLyg/IVte
XFtdKlxdKSg/IVteXChdKlwpKS8uc291cmNlKTtFeHByLmxlZnRNYXRjaFt0eXBl
XT1uZXcgUmVnRXhwKC8oXig/Oi58XHJ8XG4pKj8pLy5zb3VyY2UrRXhwci5tYXRj
aFt0eXBlXS5zb3VyY2UucmVwbGFjZSgvXFwoXGQrKS9nLGZ1bmN0aW9uKGFsbCxu
dW0pe3JldHVybiJcXCIrKG51bS0wKzEpO30pKTt9DQp2YXIgbWFrZUFycmF5PWZ1
bmN0aW9uKGFycmF5LHJlc3VsdHMpe2FycmF5PUFycmF5LnByb3RvdHlwZS5zbGlj
ZS5jYWxsKGFycmF5LDApO2lmKHJlc3VsdHMpe3Jlc3VsdHMucHVzaC5hcHBseShy
ZXN1bHRzLGFycmF5KTtyZXR1cm4gcmVzdWx0czt9DQpyZXR1cm4gYXJyYXk7fTt0
cnl7QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZG9jdW1lbnQuZG9jdW1lbnRF
bGVtZW50LmNoaWxkTm9kZXMsMClbMF0ubm9kZVR5cGU7fWNhdGNoKGUpe21ha2VB
cnJheT1mdW5jdGlvbihhcnJheSxyZXN1bHRzKXt2YXIgcmV0PXJlc3VsdHN8fFtd
O2lmKHRvU3RyaW5nLmNhbGwoYXJyYXkpPT09IltvYmplY3QgQXJyYXldIil7QXJy
YXkucHJvdG90eXBlLnB1c2guYXBwbHkocmV0LGFycmF5KTt9ZWxzZXtpZih0eXBl
b2YgYXJyYXkubGVuZ3RoPT09Im51bWJlciIpe2Zvcih2YXIgaT0wLGw9YXJyYXku
bGVuZ3RoO2k8bDtpKyspe3JldC5wdXNoKGFycmF5W2ldKTt9fWVsc2V7Zm9yKHZh
ciBpPTA7YXJyYXlbaV07aSsrKXtyZXQucHVzaChhcnJheVtpXSk7fX19DQpyZXR1
cm4gcmV0O307fQ0KdmFyIHNvcnRPcmRlcjtpZihkb2N1bWVudC5kb2N1bWVudEVs
ZW1lbnQuY29tcGFyZURvY3VtZW50UG9zaXRpb24pe3NvcnRPcmRlcj1mdW5jdGlv
bihhLGIpe2lmKCFhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9ufHwhYi5jb21wYXJl
RG9jdW1lbnRQb3NpdGlvbil7aWYoYT09Yil7aGFzRHVwbGljYXRlPXRydWU7fQ0K
cmV0dXJuIGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/LTE6MTt9DQp2YXIgcmV0
PWEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmND8tMTphPT09Yj8wOjE7aWYo
cmV0PT09MCl7aGFzRHVwbGljYXRlPXRydWU7fQ0KcmV0dXJuIHJldDt9O31lbHNl
IGlmKCJzb3VyY2VJbmRleCJpbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpe3Nv
cnRPcmRlcj1mdW5jdGlvbihhLGIpe2lmKCFhLnNvdXJjZUluZGV4fHwhYi5zb3Vy
Y2VJbmRleCl7aWYoYT09Yil7aGFzRHVwbGljYXRlPXRydWU7fQ0KcmV0dXJuIGEu
c291cmNlSW5kZXg/LTE6MTt9DQp2YXIgcmV0PWEuc291cmNlSW5kZXgtYi5zb3Vy
Y2VJbmRleDtpZihyZXQ9PT0wKXtoYXNEdXBsaWNhdGU9dHJ1ZTt9DQpyZXR1cm4g
cmV0O307fWVsc2UgaWYoZG9jdW1lbnQuY3JlYXRlUmFuZ2Upe3NvcnRPcmRlcj1m
dW5jdGlvbihhLGIpe2lmKCFhLm93bmVyRG9jdW1lbnR8fCFiLm93bmVyRG9jdW1l
bnQpe2lmKGE9PWIpe2hhc0R1cGxpY2F0ZT10cnVlO30NCnJldHVybiBhLm93bmVy
RG9jdW1lbnQ/LTE6MTt9DQp2YXIgYVJhbmdlPWEub3duZXJEb2N1bWVudC5jcmVh
dGVSYW5nZSgpLGJSYW5nZT1iLm93bmVyRG9jdW1lbnQuY3JlYXRlUmFuZ2UoKTth
UmFuZ2Uuc2V0U3RhcnQoYSwwKTthUmFuZ2Uuc2V0RW5kKGEsMCk7YlJhbmdlLnNl
dFN0YXJ0KGIsMCk7YlJhbmdlLnNldEVuZChiLDApO3ZhciByZXQ9YVJhbmdlLmNv
bXBhcmVCb3VuZGFyeVBvaW50cyhSYW5nZS5TVEFSVF9UT19FTkQsYlJhbmdlKTtp
ZihyZXQ9PT0wKXtoYXNEdXBsaWNhdGU9dHJ1ZTt9DQpyZXR1cm4gcmV0O307fQ0K
ZnVuY3Rpb24gZ2V0VGV4dChlbGVtcyl7dmFyIHJldD0iIixlbGVtO2Zvcih2YXIg
aT0wO2VsZW1zW2ldO2krKyl7ZWxlbT1lbGVtc1tpXTtpZihlbGVtLm5vZGVUeXBl
PT09M3x8ZWxlbS5ub2RlVHlwZT09PTQpe3JldCs9ZWxlbS5ub2RlVmFsdWU7fWVs
c2UgaWYoZWxlbS5ub2RlVHlwZSE9PTgpe3JldCs9Z2V0VGV4dChlbGVtLmNoaWxk
Tm9kZXMpO319DQpyZXR1cm4gcmV0O30NCihmdW5jdGlvbigpe3ZhciBmb3JtPWRv
Y3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpLGlkPSJzY3JpcHQiKyhuZXcgRGF0
ZSkuZ2V0VGltZSgpO2Zvcm0uaW5uZXJIVE1MPSI8YSBuYW1lPSciK2lkKyInLz4i
O3ZhciByb290PWRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtyb290Lmluc2VydEJl
Zm9yZShmb3JtLHJvb3QuZmlyc3RDaGlsZCk7aWYoZG9jdW1lbnQuZ2V0RWxlbWVu
dEJ5SWQoaWQpKXtFeHByLmZpbmQuSUQ9ZnVuY3Rpb24obWF0Y2gsY29udGV4dCxp
c1hNTCl7aWYodHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQhPT0idW5kZWZp
bmVkIiYmIWlzWE1MKXt2YXIgbT1jb250ZXh0LmdldEVsZW1lbnRCeUlkKG1hdGNo
WzFdKTtyZXR1cm4gbT9tLmlkPT09bWF0Y2hbMV18fHR5cGVvZiBtLmdldEF0dHJp
YnV0ZU5vZGUhPT0idW5kZWZpbmVkIiYmbS5nZXRBdHRyaWJ1dGVOb2RlKCJpZCIp
Lm5vZGVWYWx1ZT09PW1hdGNoWzFdP1ttXTp1bmRlZmluZWQ6W107fX07RXhwci5m
aWx0ZXIuSUQ9ZnVuY3Rpb24oZWxlbSxtYXRjaCl7dmFyIG5vZGU9dHlwZW9mIGVs
ZW0uZ2V0QXR0cmlidXRlTm9kZSE9PSJ1bmRlZmluZWQiJiZlbGVtLmdldEF0dHJp
YnV0ZU5vZGUoImlkIik7cmV0dXJuIGVsZW0ubm9kZVR5cGU9PT0xJiZub2RlJiZu
b2RlLm5vZGVWYWx1ZT09PW1hdGNoO307fQ0Kcm9vdC5yZW1vdmVDaGlsZChmb3Jt
KTtyb290PWZvcm09bnVsbDt9KSgpOyhmdW5jdGlvbigpe3ZhciBkaXY9ZG9jdW1l
bnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7ZGl2LmFwcGVuZENoaWxkKGRvY3VtZW50
LmNyZWF0ZUNvbW1lbnQoIiIpKTtpZihkaXYuZ2V0RWxlbWVudHNCeVRhZ05hbWUo
IioiKS5sZW5ndGg+MCl7RXhwci5maW5kLlRBRz1mdW5jdGlvbihtYXRjaCxjb250
ZXh0KXt2YXIgcmVzdWx0cz1jb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKG1h
dGNoWzFdKTtpZihtYXRjaFsxXT09PSIqIil7dmFyIHRtcD1bXTtmb3IodmFyIGk9
MDtyZXN1bHRzW2ldO2krKyl7aWYocmVzdWx0c1tpXS5ub2RlVHlwZT09PTEpe3Rt
cC5wdXNoKHJlc3VsdHNbaV0pO319DQpyZXN1bHRzPXRtcDt9DQpyZXR1cm4gcmVz
dWx0czt9O30NCmRpdi5pbm5lckhUTUw9IjxhIGhyZWY9JyMnPjwvYT4iO2lmKGRp
di5maXJzdENoaWxkJiZ0eXBlb2YgZGl2LmZpcnN0Q2hpbGQuZ2V0QXR0cmlidXRl
IT09InVuZGVmaW5lZCImJmRpdi5maXJzdENoaWxkLmdldEF0dHJpYnV0ZSgiaHJl
ZiIpIT09IiMiKXtFeHByLmF0dHJIYW5kbGUuaHJlZj1mdW5jdGlvbihlbGVtKXty
ZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoImhyZWYiLDIpO307fQ0KZGl2PW51bGw7
fSkoKTtpZihkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKXsoZnVuY3Rpb24oKXt2
YXIgb2xkU2l6emxlPVNpenpsZSxkaXY9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgi
ZGl2Iik7ZGl2LmlubmVySFRNTD0iPHAgY2xhc3M9J1RFU1QnPjwvcD4iO2lmKGRp
di5xdWVyeVNlbGVjdG9yQWxsJiZkaXYucXVlcnlTZWxlY3RvckFsbCgiLlRFU1Qi
KS5sZW5ndGg9PT0wKXtyZXR1cm47fQ0KU2l6emxlPWZ1bmN0aW9uKHF1ZXJ5LGNv
bnRleHQsZXh0cmEsc2VlZCl7Y29udGV4dD1jb250ZXh0fHxkb2N1bWVudDtpZigh
c2VlZCYmY29udGV4dC5ub2RlVHlwZT09PTkmJiFpc1hNTChjb250ZXh0KSl7dHJ5
e3JldHVybiBtYWtlQXJyYXkoY29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKHF1ZXJ5
KSxleHRyYSk7fWNhdGNoKGUpe319DQpyZXR1cm4gb2xkU2l6emxlKHF1ZXJ5LGNv
bnRleHQsZXh0cmEsc2VlZCk7fTtmb3IodmFyIHByb3AgaW4gb2xkU2l6emxlKXtT
aXp6bGVbcHJvcF09b2xkU2l6emxlW3Byb3BdO30NCmRpdj1udWxsO30pKCk7fQ0K
KGZ1bmN0aW9uKCl7dmFyIGRpdj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYi
KTtkaXYuaW5uZXJIVE1MPSI8ZGl2IGNsYXNzPSd0ZXN0IGUnPjwvZGl2PjxkaXYg
Y2xhc3M9J3Rlc3QnPjwvZGl2PiI7aWYoIWRpdi5nZXRFbGVtZW50c0J5Q2xhc3NO
YW1lfHxkaXYuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZSIpLmxlbmd0aD09PTAp
e3JldHVybjt9DQpkaXYubGFzdENoaWxkLmNsYXNzTmFtZT0iZSI7aWYoZGl2Lmdl
dEVsZW1lbnRzQnlDbGFzc05hbWUoImUiKS5sZW5ndGg9PT0xKXtyZXR1cm47fQ0K
RXhwci5vcmRlci5zcGxpY2UoMSwwLCJDTEFTUyIpO0V4cHIuZmluZC5DTEFTUz1m
dW5jdGlvbihtYXRjaCxjb250ZXh0LGlzWE1MKXtpZih0eXBlb2YgY29udGV4dC5n
ZXRFbGVtZW50c0J5Q2xhc3NOYW1lIT09InVuZGVmaW5lZCImJiFpc1hNTCl7cmV0
dXJuIGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShtYXRjaFsxXSk7fX07
ZGl2PW51bGw7fSkoKTtmdW5jdGlvbiBkaXJOb2RlQ2hlY2soZGlyLGN1cixkb25l
TmFtZSxjaGVja1NldCxub2RlQ2hlY2ssaXNYTUwpe2Zvcih2YXIgaT0wLGw9Y2hl
Y2tTZXQubGVuZ3RoO2k8bDtpKyspe3ZhciBlbGVtPWNoZWNrU2V0W2ldO2lmKGVs
ZW0pe2VsZW09ZWxlbVtkaXJdO3ZhciBtYXRjaD1mYWxzZTt3aGlsZShlbGVtKXtp
ZihlbGVtLnNpemNhY2hlPT09ZG9uZU5hbWUpe21hdGNoPWNoZWNrU2V0W2VsZW0u
c2l6c2V0XTticmVhazt9DQppZihlbGVtLm5vZGVUeXBlPT09MSYmIWlzWE1MKXtl
bGVtLnNpemNhY2hlPWRvbmVOYW1lO2VsZW0uc2l6c2V0PWk7fQ0KaWYoZWxlbS5u
b2RlTmFtZS50b0xvd2VyQ2FzZSgpPT09Y3VyKXttYXRjaD1lbGVtO2JyZWFrO30N
CmVsZW09ZWxlbVtkaXJdO30NCmNoZWNrU2V0W2ldPW1hdGNoO319fQ0KZnVuY3Rp
b24gZGlyQ2hlY2soZGlyLGN1cixkb25lTmFtZSxjaGVja1NldCxub2RlQ2hlY2ss
aXNYTUwpe2Zvcih2YXIgaT0wLGw9Y2hlY2tTZXQubGVuZ3RoO2k8bDtpKyspe3Zh
ciBlbGVtPWNoZWNrU2V0W2ldO2lmKGVsZW0pe2VsZW09ZWxlbVtkaXJdO3ZhciBt
YXRjaD1mYWxzZTt3aGlsZShlbGVtKXtpZihlbGVtLnNpemNhY2hlPT09ZG9uZU5h
bWUpe21hdGNoPWNoZWNrU2V0W2VsZW0uc2l6c2V0XTticmVhazt9DQppZihlbGVt
Lm5vZGVUeXBlPT09MSl7aWYoIWlzWE1MKXtlbGVtLnNpemNhY2hlPWRvbmVOYW1l
O2VsZW0uc2l6c2V0PWk7fQ0KaWYodHlwZW9mIGN1ciE9PSJzdHJpbmciKXtpZihl
bGVtPT09Y3VyKXttYXRjaD10cnVlO2JyZWFrO319ZWxzZSBpZihTaXp6bGUuZmls
dGVyKGN1cixbZWxlbV0pLmxlbmd0aD4wKXttYXRjaD1lbGVtO2JyZWFrO319DQpl
bGVtPWVsZW1bZGlyXTt9DQpjaGVja1NldFtpXT1tYXRjaDt9fX0NCnZhciBjb250
YWlucz1kb2N1bWVudC5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj9mdW5jdGlvbihh
LGIpe3JldHVybiEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpO306
ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYSE9PWImJihhLmNvbnRhaW5zP2EuY29udGFp
bnMoYik6dHJ1ZSk7fTt2YXIgaXNYTUw9ZnVuY3Rpb24oZWxlbSl7dmFyIGRvY3Vt
ZW50RWxlbWVudD0oZWxlbT9lbGVtLm93bmVyRG9jdW1lbnR8fGVsZW06MCkuZG9j
dW1lbnRFbGVtZW50O3JldHVybiBkb2N1bWVudEVsZW1lbnQ/ZG9jdW1lbnRFbGVt
ZW50Lm5vZGVOYW1lIT09IkhUTUwiOmZhbHNlO307dmFyIHBvc1Byb2Nlc3M9ZnVu
Y3Rpb24oc2VsZWN0b3IsY29udGV4dCl7dmFyIHRtcFNldD1bXSxsYXRlcj0iIixt
YXRjaCxyb290PWNvbnRleHQubm9kZVR5cGU/W2NvbnRleHRdOmNvbnRleHQ7d2hp
bGUoKG1hdGNoPUV4cHIubWF0Y2guUFNFVURPLmV4ZWMoc2VsZWN0b3IpKSl7bGF0
ZXIrPW1hdGNoWzBdO3NlbGVjdG9yPXNlbGVjdG9yLnJlcGxhY2UoRXhwci5tYXRj
aC5QU0VVRE8sIiIpO30NCnNlbGVjdG9yPUV4cHIucmVsYXRpdmVbc2VsZWN0b3Jd
P3NlbGVjdG9yKyIqIjpzZWxlY3Rvcjtmb3IodmFyIGk9MCxsPXJvb3QubGVuZ3Ro
O2k8bDtpKyspe1NpenpsZShzZWxlY3Rvcixyb290W2ldLHRtcFNldCk7fQ0KcmV0
dXJuIFNpenpsZS5maWx0ZXIobGF0ZXIsdG1wU2V0KTt9O2pRdWVyeS5maW5kPVNp
enpsZTtqUXVlcnkuZXhwcj1TaXp6bGUuc2VsZWN0b3JzO2pRdWVyeS5leHByWyI6
Il09alF1ZXJ5LmV4cHIuZmlsdGVycztqUXVlcnkudW5pcXVlPVNpenpsZS51bmlx
dWVTb3J0O2pRdWVyeS50ZXh0PWdldFRleHQ7alF1ZXJ5LmlzWE1MRG9jPWlzWE1M
O2pRdWVyeS5jb250YWlucz1jb250YWlucztyZXR1cm47d2luZG93LlNpenpsZT1T
aXp6bGU7fSkoKTt2YXIgcnVudGlsPS9VbnRpbCQvLHJwYXJlbnRzcHJldj0vXig/
OnBhcmVudHN8cHJldlVudGlsfHByZXZBbGwpLyxybXVsdGlzZWxlY3Rvcj0vLC8s
c2xpY2U9QXJyYXkucHJvdG90eXBlLnNsaWNlO3ZhciB3aW5ub3c9ZnVuY3Rpb24o
ZWxlbWVudHMscXVhbGlmaWVyLGtlZXApe2lmKGpRdWVyeS5pc0Z1bmN0aW9uKHF1
YWxpZmllcikpe3JldHVybiBqUXVlcnkuZ3JlcChlbGVtZW50cyxmdW5jdGlvbihl
bGVtLGkpe3JldHVybiEhcXVhbGlmaWVyLmNhbGwoZWxlbSxpLGVsZW0pPT09a2Vl
cDt9KTt9ZWxzZSBpZihxdWFsaWZpZXIubm9kZVR5cGUpe3JldHVybiBqUXVlcnku
Z3JlcChlbGVtZW50cyxmdW5jdGlvbihlbGVtLGkpe3JldHVybihlbGVtPT09cXVh
bGlmaWVyKT09PWtlZXA7fSk7fWVsc2UgaWYodHlwZW9mIHF1YWxpZmllcj09PSJz
dHJpbmciKXt2YXIgZmlsdGVyZWQ9alF1ZXJ5LmdyZXAoZWxlbWVudHMsZnVuY3Rp
b24oZWxlbSl7cmV0dXJuIGVsZW0ubm9kZVR5cGU9PT0xO30pO2lmKGlzU2ltcGxl
LnRlc3QocXVhbGlmaWVyKSl7cmV0dXJuIGpRdWVyeS5maWx0ZXIocXVhbGlmaWVy
LGZpbHRlcmVkLCFrZWVwKTt9ZWxzZXtxdWFsaWZpZXI9alF1ZXJ5LmZpbHRlcihx
dWFsaWZpZXIsZmlsdGVyZWQpO319DQpyZXR1cm4galF1ZXJ5LmdyZXAoZWxlbWVu
dHMsZnVuY3Rpb24oZWxlbSxpKXtyZXR1cm4oalF1ZXJ5LmluQXJyYXkoZWxlbSxx
dWFsaWZpZXIpPj0wKT09PWtlZXA7fSk7fTtqUXVlcnkuZm4uZXh0ZW5kKHtmaW5k
OmZ1bmN0aW9uKHNlbGVjdG9yKXt2YXIgcmV0PXRoaXMucHVzaFN0YWNrKCIiLCJm
aW5kIixzZWxlY3RvciksbGVuZ3RoPTA7Zm9yKHZhciBpPTAsbD10aGlzLmxlbmd0
aDtpPGw7aSsrKXtsZW5ndGg9cmV0Lmxlbmd0aDtqUXVlcnkuZmluZChzZWxlY3Rv
cix0aGlzW2ldLHJldCk7aWYoaT4wKXtmb3IodmFyIG49bGVuZ3RoO248cmV0Lmxl
bmd0aDtuKyspe2Zvcih2YXIgcj0wO3I8bGVuZ3RoO3IrKyl7aWYocmV0W3JdPT09
cmV0W25dKXtyZXQuc3BsaWNlKG4tLSwxKTticmVhazt9fX19fQ0KcmV0dXJuIHJl
dDt9LGhhczpmdW5jdGlvbih0YXJnZXQpe3ZhciB0YXJnZXRzPWpRdWVyeSh0YXJn
ZXQpO3JldHVybiB0aGlzLmZpbHRlcihmdW5jdGlvbigpe2Zvcih2YXIgaT0wLGw9
dGFyZ2V0cy5sZW5ndGg7aTxsO2krKyl7aWYoalF1ZXJ5LmNvbnRhaW5zKHRoaXMs
dGFyZ2V0c1tpXSkpe3JldHVybiB0cnVlO319fSk7fSxub3Q6ZnVuY3Rpb24oc2Vs
ZWN0b3Ipe3JldHVybiB0aGlzLnB1c2hTdGFjayh3aW5ub3codGhpcyxzZWxlY3Rv
cixmYWxzZSksIm5vdCIsc2VsZWN0b3IpO30sZmlsdGVyOmZ1bmN0aW9uKHNlbGVj
dG9yKXtyZXR1cm4gdGhpcy5wdXNoU3RhY2sod2lubm93KHRoaXMsc2VsZWN0b3Is
dHJ1ZSksImZpbHRlciIsc2VsZWN0b3IpO30saXM6ZnVuY3Rpb24oc2VsZWN0b3Ip
e3JldHVybiEhc2VsZWN0b3ImJmpRdWVyeS5maWx0ZXIoc2VsZWN0b3IsdGhpcyku
bGVuZ3RoPjA7fSxjbG9zZXN0OmZ1bmN0aW9uKHNlbGVjdG9ycyxjb250ZXh0KXtp
ZihqUXVlcnkuaXNBcnJheShzZWxlY3RvcnMpKXt2YXIgcmV0PVtdLGN1cj10aGlz
WzBdLG1hdGNoLG1hdGNoZXM9e30sc2VsZWN0b3I7aWYoY3VyJiZzZWxlY3RvcnMu
bGVuZ3RoKXtmb3IodmFyIGk9MCxsPXNlbGVjdG9ycy5sZW5ndGg7aTxsO2krKyl7
c2VsZWN0b3I9c2VsZWN0b3JzW2ldO2lmKCFtYXRjaGVzW3NlbGVjdG9yXSl7bWF0
Y2hlc1tzZWxlY3Rvcl09alF1ZXJ5LmV4cHIubWF0Y2guUE9TLnRlc3Qoc2VsZWN0
b3IpP2pRdWVyeShzZWxlY3Rvcixjb250ZXh0fHx0aGlzLmNvbnRleHQpOnNlbGVj
dG9yO319DQp3aGlsZShjdXImJmN1ci5vd25lckRvY3VtZW50JiZjdXIhPT1jb250
ZXh0KXtmb3Ioc2VsZWN0b3IgaW4gbWF0Y2hlcyl7bWF0Y2g9bWF0Y2hlc1tzZWxl
Y3Rvcl07aWYobWF0Y2guanF1ZXJ5P21hdGNoLmluZGV4KGN1cik+LTE6alF1ZXJ5
KGN1cikuaXMobWF0Y2gpKXtyZXQucHVzaCh7c2VsZWN0b3I6c2VsZWN0b3IsZWxl
bTpjdXJ9KTtkZWxldGUgbWF0Y2hlc1tzZWxlY3Rvcl07fX0NCmN1cj1jdXIucGFy
ZW50Tm9kZTt9fQ0KcmV0dXJuIHJldDt9DQp2YXIgcG9zPWpRdWVyeS5leHByLm1h
dGNoLlBPUy50ZXN0KHNlbGVjdG9ycyk/alF1ZXJ5KHNlbGVjdG9ycyxjb250ZXh0
fHx0aGlzLmNvbnRleHQpOm51bGw7cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uKGks
Y3VyKXt3aGlsZShjdXImJmN1ci5vd25lckRvY3VtZW50JiZjdXIhPT1jb250ZXh0
KXtpZihwb3M/cG9zLmluZGV4KGN1cik+LTE6alF1ZXJ5KGN1cikuaXMoc2VsZWN0
b3JzKSl7cmV0dXJuIGN1cjt9DQpjdXI9Y3VyLnBhcmVudE5vZGU7fQ0KcmV0dXJu
IG51bGw7fSk7fSxpbmRleDpmdW5jdGlvbihlbGVtKXtpZighZWxlbXx8dHlwZW9m
IGVsZW09PT0ic3RyaW5nIil7cmV0dXJuIGpRdWVyeS5pbkFycmF5KHRoaXNbMF0s
ZWxlbT9qUXVlcnkoZWxlbSk6dGhpcy5wYXJlbnQoKS5jaGlsZHJlbigpKTt9DQpy
ZXR1cm4galF1ZXJ5LmluQXJyYXkoZWxlbS5qcXVlcnk/ZWxlbVswXTplbGVtLHRo
aXMpO30sYWRkOmZ1bmN0aW9uKHNlbGVjdG9yLGNvbnRleHQpe3ZhciBzZXQ9dHlw
ZW9mIHNlbGVjdG9yPT09InN0cmluZyI/alF1ZXJ5KHNlbGVjdG9yLGNvbnRleHR8
fHRoaXMuY29udGV4dCk6alF1ZXJ5Lm1ha2VBcnJheShzZWxlY3RvciksYWxsPWpR
dWVyeS5tZXJnZSh0aGlzLmdldCgpLHNldCk7cmV0dXJuIHRoaXMucHVzaFN0YWNr
KGlzRGlzY29ubmVjdGVkKHNldFswXSl8fGlzRGlzY29ubmVjdGVkKGFsbFswXSk/
YWxsOmpRdWVyeS51bmlxdWUoYWxsKSk7fSxhbmRTZWxmOmZ1bmN0aW9uKCl7cmV0
dXJuIHRoaXMuYWRkKHRoaXMucHJldk9iamVjdCk7fX0pO2Z1bmN0aW9uIGlzRGlz
Y29ubmVjdGVkKG5vZGUpe3JldHVybiFub2RlfHwhbm9kZS5wYXJlbnROb2RlfHxu
b2RlLnBhcmVudE5vZGUubm9kZVR5cGU9PT0xMTt9DQpqUXVlcnkuZWFjaCh7cGFy
ZW50OmZ1bmN0aW9uKGVsZW0pe3ZhciBwYXJlbnQ9ZWxlbS5wYXJlbnROb2RlO3Jl
dHVybiBwYXJlbnQmJnBhcmVudC5ub2RlVHlwZSE9PTExP3BhcmVudDpudWxsO30s
cGFyZW50czpmdW5jdGlvbihlbGVtKXtyZXR1cm4galF1ZXJ5LmRpcihlbGVtLCJw
YXJlbnROb2RlIik7fSxwYXJlbnRzVW50aWw6ZnVuY3Rpb24oZWxlbSxpLHVudGls
KXtyZXR1cm4galF1ZXJ5LmRpcihlbGVtLCJwYXJlbnROb2RlIix1bnRpbCk7fSxu
ZXh0OmZ1bmN0aW9uKGVsZW0pe3JldHVybiBqUXVlcnkubnRoKGVsZW0sMiwibmV4
dFNpYmxpbmciKTt9LHByZXY6ZnVuY3Rpb24oZWxlbSl7cmV0dXJuIGpRdWVyeS5u
dGgoZWxlbSwyLCJwcmV2aW91c1NpYmxpbmciKTt9LG5leHRBbGw6ZnVuY3Rpb24o
ZWxlbSl7cmV0dXJuIGpRdWVyeS5kaXIoZWxlbSwibmV4dFNpYmxpbmciKTt9LHBy
ZXZBbGw6ZnVuY3Rpb24oZWxlbSl7cmV0dXJuIGpRdWVyeS5kaXIoZWxlbSwicHJl
dmlvdXNTaWJsaW5nIik7fSxuZXh0VW50aWw6ZnVuY3Rpb24oZWxlbSxpLHVudGls
KXtyZXR1cm4galF1ZXJ5LmRpcihlbGVtLCJuZXh0U2libGluZyIsdW50aWwpO30s
cHJldlVudGlsOmZ1bmN0aW9uKGVsZW0saSx1bnRpbCl7cmV0dXJuIGpRdWVyeS5k
aXIoZWxlbSwicHJldmlvdXNTaWJsaW5nIix1bnRpbCk7fSxzaWJsaW5nczpmdW5j
dGlvbihlbGVtKXtyZXR1cm4galF1ZXJ5LnNpYmxpbmcoZWxlbS5wYXJlbnROb2Rl
LmZpcnN0Q2hpbGQsZWxlbSk7fSxjaGlsZHJlbjpmdW5jdGlvbihlbGVtKXtyZXR1
cm4galF1ZXJ5LnNpYmxpbmcoZWxlbS5maXJzdENoaWxkKTt9LGNvbnRlbnRzOmZ1
bmN0aW9uKGVsZW0pe3JldHVybiBqUXVlcnkubm9kZU5hbWUoZWxlbSwiaWZyYW1l
Iik/ZWxlbS5jb250ZW50RG9jdW1lbnR8fGVsZW0uY29udGVudFdpbmRvdy5kb2N1
bWVudDpqUXVlcnkubWFrZUFycmF5KGVsZW0uY2hpbGROb2Rlcyk7fX0sZnVuY3Rp
b24obmFtZSxmbil7alF1ZXJ5LmZuW25hbWVdPWZ1bmN0aW9uKHVudGlsLHNlbGVj
dG9yKXt2YXIgcmV0PWpRdWVyeS5tYXAodGhpcyxmbix1bnRpbCk7aWYoIXJ1bnRp
bC50ZXN0KG5hbWUpKXtzZWxlY3Rvcj11bnRpbDt9DQppZihzZWxlY3RvciYmdHlw
ZW9mIHNlbGVjdG9yPT09InN0cmluZyIpe3JldD1qUXVlcnkuZmlsdGVyKHNlbGVj
dG9yLHJldCk7fQ0KcmV0PXRoaXMubGVuZ3RoPjE/alF1ZXJ5LnVuaXF1ZShyZXQp
OnJldDtpZigodGhpcy5sZW5ndGg+MXx8cm11bHRpc2VsZWN0b3IudGVzdChzZWxl
Y3RvcikpJiZycGFyZW50c3ByZXYudGVzdChuYW1lKSl7cmV0PXJldC5yZXZlcnNl
KCk7fQ0KcmV0dXJuIHRoaXMucHVzaFN0YWNrKHJldCxuYW1lLHNsaWNlLmNhbGwo
YXJndW1lbnRzKS5qb2luKCIsIikpO307fSk7alF1ZXJ5LmV4dGVuZCh7ZmlsdGVy
OmZ1bmN0aW9uKGV4cHIsZWxlbXMsbm90KXtpZihub3Qpe2V4cHI9Ijpub3QoIitl
eHByKyIpIjt9DQpyZXR1cm4galF1ZXJ5LmZpbmQubWF0Y2hlcyhleHByLGVsZW1z
KTt9LGRpcjpmdW5jdGlvbihlbGVtLGRpcix1bnRpbCl7dmFyIG1hdGNoZWQ9W10s
Y3VyPWVsZW1bZGlyXTt3aGlsZShjdXImJmN1ci5ub2RlVHlwZSE9PTkmJih1bnRp
bD09PXVuZGVmaW5lZHx8Y3VyLm5vZGVUeXBlIT09MXx8IWpRdWVyeShjdXIpLmlz
KHVudGlsKSkpe2lmKGN1ci5ub2RlVHlwZT09PTEpe21hdGNoZWQucHVzaChjdXIp
O30NCmN1cj1jdXJbZGlyXTt9DQpyZXR1cm4gbWF0Y2hlZDt9LG50aDpmdW5jdGlv
bihjdXIscmVzdWx0LGRpcixlbGVtKXtyZXN1bHQ9cmVzdWx0fHwxO3ZhciBudW09
MDtmb3IoO2N1cjtjdXI9Y3VyW2Rpcl0pe2lmKGN1ci5ub2RlVHlwZT09PTEmJisr
bnVtPT09cmVzdWx0KXticmVhazt9fQ0KcmV0dXJuIGN1cjt9LHNpYmxpbmc6ZnVu
Y3Rpb24obixlbGVtKXt2YXIgcj1bXTtmb3IoO247bj1uLm5leHRTaWJsaW5nKXtp
ZihuLm5vZGVUeXBlPT09MSYmbiE9PWVsZW0pe3IucHVzaChuKTt9fQ0KcmV0dXJu
IHI7fX0pO3ZhciByaW5saW5lalF1ZXJ5PS8galF1ZXJ5XGQrPSIoPzpcZCt8bnVs
bCkiL2cscmxlYWRpbmdXaGl0ZXNwYWNlPS9eXHMrLyxyeGh0bWxUYWc9Lyg8KFtc
dzpdKylbXj5dKj8pXC8+L2cscnNlbGZDbG9zaW5nPS9eKD86YXJlYXxicnxjb2x8
ZW1iZWR8aHJ8aW1nfGlucHV0fGxpbmt8bWV0YXxwYXJhbSkkL2kscnRhZ05hbWU9
LzwoW1x3Ol0rKS8scnRib2R5PS88dGJvZHkvaSxyaHRtbD0vPHwmIz9cdys7Lyxy
bm9jYWNoZT0vPHNjcmlwdHw8b2JqZWN0fDxlbWJlZHw8b3B0aW9ufDxzdHlsZS9p
LHJjaGVja2VkPS9jaGVja2VkXHMqKD86W149XXw9XHMqLmNoZWNrZWQuKS9pLGZj
bG9zZVRhZz1mdW5jdGlvbihhbGwsZnJvbnQsdGFnKXtyZXR1cm4gcnNlbGZDbG9z
aW5nLnRlc3QodGFnKT9hbGw6ZnJvbnQrIj48LyIrdGFnKyI+Ijt9LHdyYXBNYXA9
e29wdGlvbjpbMSwiPHNlbGVjdCBtdWx0aXBsZT0nbXVsdGlwbGUnPiIsIjwvc2Vs
ZWN0PiJdLGxlZ2VuZDpbMSwiPGZpZWxkc2V0PiIsIjwvZmllbGRzZXQ+Il0sdGhl
YWQ6WzEsIjx0YWJsZT4iLCI8L3RhYmxlPiJdLHRyOlsyLCI8dGFibGU+PHRib2R5
PiIsIjwvdGJvZHk+PC90YWJsZT4iXSx0ZDpbMywiPHRhYmxlPjx0Ym9keT48dHI+
IiwiPC90cj48L3Rib2R5PjwvdGFibGU+Il0sY29sOlsyLCI8dGFibGU+PHRib2R5
PjwvdGJvZHk+PGNvbGdyb3VwPiIsIjwvY29sZ3JvdXA+PC90YWJsZT4iXSxhcmVh
OlsxLCI8bWFwPiIsIjwvbWFwPiJdLF9kZWZhdWx0OlswLCIiLCIiXX07d3JhcE1h
cC5vcHRncm91cD13cmFwTWFwLm9wdGlvbjt3cmFwTWFwLnRib2R5PXdyYXBNYXAu
dGZvb3Q9d3JhcE1hcC5jb2xncm91cD13cmFwTWFwLmNhcHRpb249d3JhcE1hcC50
aGVhZDt3cmFwTWFwLnRoPXdyYXBNYXAudGQ7aWYoIWpRdWVyeS5zdXBwb3J0Lmh0
bWxTZXJpYWxpemUpe3dyYXBNYXAuX2RlZmF1bHQ9WzEsImRpdjxkaXY+IiwiPC9k
aXY+Il07fQ0KalF1ZXJ5LmZuLmV4dGVuZCh7dGV4dDpmdW5jdGlvbih0ZXh0KXtp
ZihqUXVlcnkuaXNGdW5jdGlvbih0ZXh0KSl7cmV0dXJuIHRoaXMuZWFjaChmdW5j
dGlvbihpKXt2YXIgc2VsZj1qUXVlcnkodGhpcyk7c2VsZi50ZXh0KHRleHQuY2Fs
bCh0aGlzLGksc2VsZi50ZXh0KCkpKTt9KTt9DQppZih0eXBlb2YgdGV4dCE9PSJv
YmplY3QiJiZ0ZXh0IT09dW5kZWZpbmVkKXtyZXR1cm4gdGhpcy5lbXB0eSgpLmFw
cGVuZCgodGhpc1swXSYmdGhpc1swXS5vd25lckRvY3VtZW50fHxkb2N1bWVudCku
Y3JlYXRlVGV4dE5vZGUodGV4dCkpO30NCnJldHVybiBqUXVlcnkudGV4dCh0aGlz
KTt9LHdyYXBBbGw6ZnVuY3Rpb24oaHRtbCl7aWYoalF1ZXJ5LmlzRnVuY3Rpb24o
aHRtbCkpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oaSl7alF1ZXJ5KHRoaXMp
LndyYXBBbGwoaHRtbC5jYWxsKHRoaXMsaSkpO30pO30NCmlmKHRoaXNbMF0pe3Zh
ciB3cmFwPWpRdWVyeShodG1sLHRoaXNbMF0ub3duZXJEb2N1bWVudCkuZXEoMCku
Y2xvbmUodHJ1ZSk7aWYodGhpc1swXS5wYXJlbnROb2RlKXt3cmFwLmluc2VydEJl
Zm9yZSh0aGlzWzBdKTt9DQp3cmFwLm1hcChmdW5jdGlvbigpe3ZhciBlbGVtPXRo
aXM7d2hpbGUoZWxlbS5maXJzdENoaWxkJiZlbGVtLmZpcnN0Q2hpbGQubm9kZVR5
cGU9PT0xKXtlbGVtPWVsZW0uZmlyc3RDaGlsZDt9DQpyZXR1cm4gZWxlbTt9KS5h
cHBlbmQodGhpcyk7fQ0KcmV0dXJuIHRoaXM7fSx3cmFwSW5uZXI6ZnVuY3Rpb24o
aHRtbCl7aWYoalF1ZXJ5LmlzRnVuY3Rpb24oaHRtbCkpe3JldHVybiB0aGlzLmVh
Y2goZnVuY3Rpb24oaSl7alF1ZXJ5KHRoaXMpLndyYXBJbm5lcihodG1sLmNhbGwo
dGhpcyxpKSk7fSk7fQ0KcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBz
ZWxmPWpRdWVyeSh0aGlzKSxjb250ZW50cz1zZWxmLmNvbnRlbnRzKCk7aWYoY29u
dGVudHMubGVuZ3RoKXtjb250ZW50cy53cmFwQWxsKGh0bWwpO31lbHNle3NlbGYu
YXBwZW5kKGh0bWwpO319KTt9LHdyYXA6ZnVuY3Rpb24oaHRtbCl7cmV0dXJuIHRo
aXMuZWFjaChmdW5jdGlvbigpe2pRdWVyeSh0aGlzKS53cmFwQWxsKGh0bWwpO30p
O30sdW53cmFwOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucGFyZW50KCkuZWFjaChm
dW5jdGlvbigpe2lmKCFqUXVlcnkubm9kZU5hbWUodGhpcywiYm9keSIpKXtqUXVl
cnkodGhpcykucmVwbGFjZVdpdGgodGhpcy5jaGlsZE5vZGVzKTt9fSkuZW5kKCk7
fSxhcHBlbmQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kb21NYW5pcChhcmd1bWVu
dHMsdHJ1ZSxmdW5jdGlvbihlbGVtKXtpZih0aGlzLm5vZGVUeXBlPT09MSl7dGhp
cy5hcHBlbmRDaGlsZChlbGVtKTt9fSk7fSxwcmVwZW5kOmZ1bmN0aW9uKCl7cmV0
dXJuIHRoaXMuZG9tTWFuaXAoYXJndW1lbnRzLHRydWUsZnVuY3Rpb24oZWxlbSl7
aWYodGhpcy5ub2RlVHlwZT09PTEpe3RoaXMuaW5zZXJ0QmVmb3JlKGVsZW0sdGhp
cy5maXJzdENoaWxkKTt9fSk7fSxiZWZvcmU6ZnVuY3Rpb24oKXtpZih0aGlzWzBd
JiZ0aGlzWzBdLnBhcmVudE5vZGUpe3JldHVybiB0aGlzLmRvbU1hbmlwKGFyZ3Vt
ZW50cyxmYWxzZSxmdW5jdGlvbihlbGVtKXt0aGlzLnBhcmVudE5vZGUuaW5zZXJ0
QmVmb3JlKGVsZW0sdGhpcyk7fSk7fWVsc2UgaWYoYXJndW1lbnRzLmxlbmd0aCl7
dmFyIHNldD1qUXVlcnkoYXJndW1lbnRzWzBdKTtzZXQucHVzaC5hcHBseShzZXQs
dGhpcy50b0FycmF5KCkpO3JldHVybiB0aGlzLnB1c2hTdGFjayhzZXQsImJlZm9y
ZSIsYXJndW1lbnRzKTt9fSxhZnRlcjpmdW5jdGlvbigpe2lmKHRoaXNbMF0mJnRo
aXNbMF0ucGFyZW50Tm9kZSl7cmV0dXJuIHRoaXMuZG9tTWFuaXAoYXJndW1lbnRz
LGZhbHNlLGZ1bmN0aW9uKGVsZW0pe3RoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZv
cmUoZWxlbSx0aGlzLm5leHRTaWJsaW5nKTt9KTt9ZWxzZSBpZihhcmd1bWVudHMu
bGVuZ3RoKXt2YXIgc2V0PXRoaXMucHVzaFN0YWNrKHRoaXMsImFmdGVyIixhcmd1
bWVudHMpO3NldC5wdXNoLmFwcGx5KHNldCxqUXVlcnkoYXJndW1lbnRzWzBdKS50
b0FycmF5KCkpO3JldHVybiBzZXQ7fX0scmVtb3ZlOmZ1bmN0aW9uKHNlbGVjdG9y
LGtlZXBEYXRhKXtmb3IodmFyIGk9MCxlbGVtOyhlbGVtPXRoaXNbaV0pIT1udWxs
O2krKyl7aWYoIXNlbGVjdG9yfHxqUXVlcnkuZmlsdGVyKHNlbGVjdG9yLFtlbGVt
XSkubGVuZ3RoKXtpZigha2VlcERhdGEmJmVsZW0ubm9kZVR5cGU9PT0xKXtqUXVl
cnkuY2xlYW5EYXRhKGVsZW0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoIioiKSk7alF1
ZXJ5LmNsZWFuRGF0YShbZWxlbV0pO30NCmlmKGVsZW0ucGFyZW50Tm9kZSl7ZWxl
bS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGVsZW0pO319fQ0KcmV0dXJuIHRoaXM7
fSxlbXB0eTpmdW5jdGlvbigpe2Zvcih2YXIgaT0wLGVsZW07KGVsZW09dGhpc1tp
XSkhPW51bGw7aSsrKXtpZihlbGVtLm5vZGVUeXBlPT09MSl7alF1ZXJ5LmNsZWFu
RGF0YShlbGVtLmdldEVsZW1lbnRzQnlUYWdOYW1lKCIqIikpO30NCndoaWxlKGVs
ZW0uZmlyc3RDaGlsZCl7ZWxlbS5yZW1vdmVDaGlsZChlbGVtLmZpcnN0Q2hpbGQp
O319DQpyZXR1cm4gdGhpczt9LGNsb25lOmZ1bmN0aW9uKGV2ZW50cyl7dmFyIHJl
dD10aGlzLm1hcChmdW5jdGlvbigpe2lmKCFqUXVlcnkuc3VwcG9ydC5ub0Nsb25l
RXZlbnQmJiFqUXVlcnkuaXNYTUxEb2ModGhpcykpe3ZhciBodG1sPXRoaXMub3V0
ZXJIVE1MLG93bmVyRG9jdW1lbnQ9dGhpcy5vd25lckRvY3VtZW50O2lmKCFodG1s
KXt2YXIgZGl2PW93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7ZGl2
LmFwcGVuZENoaWxkKHRoaXMuY2xvbmVOb2RlKHRydWUpKTtodG1sPWRpdi5pbm5l
ckhUTUw7fQ0KcmV0dXJuIGpRdWVyeS5jbGVhbihbaHRtbC5yZXBsYWNlKHJpbmxp
bmVqUXVlcnksIiIpLnJlcGxhY2UoLz0oW149Iic+XHNdK1wvKT4vZywnPSIkMSI+
JykucmVwbGFjZShybGVhZGluZ1doaXRlc3BhY2UsIiIpXSxvd25lckRvY3VtZW50
KVswXTt9ZWxzZXtyZXR1cm4gdGhpcy5jbG9uZU5vZGUodHJ1ZSk7fX0pO2lmKGV2
ZW50cz09PXRydWUpe2Nsb25lQ29weUV2ZW50KHRoaXMscmV0KTtjbG9uZUNvcHlF
dmVudCh0aGlzLmZpbmQoIioiKSxyZXQuZmluZCgiKiIpKTt9DQpyZXR1cm4gcmV0
O30saHRtbDpmdW5jdGlvbih2YWx1ZSl7aWYodmFsdWU9PT11bmRlZmluZWQpe3Jl
dHVybiB0aGlzWzBdJiZ0aGlzWzBdLm5vZGVUeXBlPT09MT90aGlzWzBdLmlubmVy
SFRNTC5yZXBsYWNlKHJpbmxpbmVqUXVlcnksIiIpOm51bGw7fWVsc2UgaWYodHlw
ZW9mIHZhbHVlPT09InN0cmluZyImJiFybm9jYWNoZS50ZXN0KHZhbHVlKSYmKGpR
dWVyeS5zdXBwb3J0LmxlYWRpbmdXaGl0ZXNwYWNlfHwhcmxlYWRpbmdXaGl0ZXNw
YWNlLnRlc3QodmFsdWUpKSYmIXdyYXBNYXBbKHJ0YWdOYW1lLmV4ZWModmFsdWUp
fHxbIiIsIiJdKVsxXS50b0xvd2VyQ2FzZSgpXSl7dmFsdWU9dmFsdWUucmVwbGFj
ZShyeGh0bWxUYWcsZmNsb3NlVGFnKTt0cnl7Zm9yKHZhciBpPTAsbD10aGlzLmxl
bmd0aDtpPGw7aSsrKXtpZih0aGlzW2ldLm5vZGVUeXBlPT09MSl7alF1ZXJ5LmNs
ZWFuRGF0YSh0aGlzW2ldLmdldEVsZW1lbnRzQnlUYWdOYW1lKCIqIikpO3RoaXNb
aV0uaW5uZXJIVE1MPXZhbHVlO319fWNhdGNoKGUpe3RoaXMuZW1wdHkoKS5hcHBl
bmQodmFsdWUpO319ZWxzZSBpZihqUXVlcnkuaXNGdW5jdGlvbih2YWx1ZSkpe3Ro
aXMuZWFjaChmdW5jdGlvbihpKXt2YXIgc2VsZj1qUXVlcnkodGhpcyksb2xkPXNl
bGYuaHRtbCgpO3NlbGYuZW1wdHkoKS5hcHBlbmQoZnVuY3Rpb24oKXtyZXR1cm4g
dmFsdWUuY2FsbCh0aGlzLGksb2xkKTt9KTt9KTt9ZWxzZXt0aGlzLmVtcHR5KCku
YXBwZW5kKHZhbHVlKTt9DQpyZXR1cm4gdGhpczt9LHJlcGxhY2VXaXRoOmZ1bmN0
aW9uKHZhbHVlKXtpZih0aGlzWzBdJiZ0aGlzWzBdLnBhcmVudE5vZGUpe2lmKGpR
dWVyeS5pc0Z1bmN0aW9uKHZhbHVlKSl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlv
bihpKXt2YXIgc2VsZj1qUXVlcnkodGhpcyksb2xkPXNlbGYuaHRtbCgpO3NlbGYu
cmVwbGFjZVdpdGgodmFsdWUuY2FsbCh0aGlzLGksb2xkKSk7fSk7fQ0KaWYodHlw
ZW9mIHZhbHVlIT09InN0cmluZyIpe3ZhbHVlPWpRdWVyeSh2YWx1ZSkuZGV0YWNo
KCk7fQ0KcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBuZXh0PXRoaXMu
bmV4dFNpYmxpbmcscGFyZW50PXRoaXMucGFyZW50Tm9kZTtqUXVlcnkodGhpcyku
cmVtb3ZlKCk7aWYobmV4dCl7alF1ZXJ5KG5leHQpLmJlZm9yZSh2YWx1ZSk7fWVs
c2V7alF1ZXJ5KHBhcmVudCkuYXBwZW5kKHZhbHVlKTt9fSk7fWVsc2V7cmV0dXJu
IHRoaXMucHVzaFN0YWNrKGpRdWVyeShqUXVlcnkuaXNGdW5jdGlvbih2YWx1ZSk/
dmFsdWUoKTp2YWx1ZSksInJlcGxhY2VXaXRoIix2YWx1ZSk7fX0sZGV0YWNoOmZ1
bmN0aW9uKHNlbGVjdG9yKXtyZXR1cm4gdGhpcy5yZW1vdmUoc2VsZWN0b3IsdHJ1
ZSk7fSxkb21NYW5pcDpmdW5jdGlvbihhcmdzLHRhYmxlLGNhbGxiYWNrKXt2YXIg
cmVzdWx0cyxmaXJzdCx2YWx1ZT1hcmdzWzBdLHNjcmlwdHM9W10sZnJhZ21lbnQs
cGFyZW50O2lmKCFqUXVlcnkuc3VwcG9ydC5jaGVja0Nsb25lJiZhcmd1bWVudHMu
bGVuZ3RoPT09MyYmdHlwZW9mIHZhbHVlPT09InN0cmluZyImJnJjaGVja2VkLnRl
c3QodmFsdWUpKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7alF1ZXJ5KHRo
aXMpLmRvbU1hbmlwKGFyZ3MsdGFibGUsY2FsbGJhY2ssdHJ1ZSk7fSk7fQ0KaWYo
alF1ZXJ5LmlzRnVuY3Rpb24odmFsdWUpKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0
aW9uKGkpe3ZhciBzZWxmPWpRdWVyeSh0aGlzKTthcmdzWzBdPXZhbHVlLmNhbGwo
dGhpcyxpLHRhYmxlP3NlbGYuaHRtbCgpOnVuZGVmaW5lZCk7c2VsZi5kb21NYW5p
cChhcmdzLHRhYmxlLGNhbGxiYWNrKTt9KTt9DQppZih0aGlzWzBdKXtwYXJlbnQ9
dmFsdWUmJnZhbHVlLnBhcmVudE5vZGU7aWYoalF1ZXJ5LnN1cHBvcnQucGFyZW50
Tm9kZSYmcGFyZW50JiZwYXJlbnQubm9kZVR5cGU9PT0xMSYmcGFyZW50LmNoaWxk
Tm9kZXMubGVuZ3RoPT09dGhpcy5sZW5ndGgpe3Jlc3VsdHM9e2ZyYWdtZW50OnBh
cmVudH07fWVsc2V7cmVzdWx0cz1idWlsZEZyYWdtZW50KGFyZ3MsdGhpcyxzY3Jp
cHRzKTt9DQpmcmFnbWVudD1yZXN1bHRzLmZyYWdtZW50O2lmKGZyYWdtZW50LmNo
aWxkTm9kZXMubGVuZ3RoPT09MSl7Zmlyc3Q9ZnJhZ21lbnQ9ZnJhZ21lbnQuZmly
c3RDaGlsZDt9ZWxzZXtmaXJzdD1mcmFnbWVudC5maXJzdENoaWxkO30NCmlmKGZp
cnN0KXt0YWJsZT10YWJsZSYmalF1ZXJ5Lm5vZGVOYW1lKGZpcnN0LCJ0ciIpO2Zv
cih2YXIgaT0wLGw9dGhpcy5sZW5ndGg7aTxsO2krKyl7Y2FsbGJhY2suY2FsbCh0
YWJsZT9yb290KHRoaXNbaV0sZmlyc3QpOnRoaXNbaV0saT4wfHxyZXN1bHRzLmNh
Y2hlYWJsZXx8dGhpcy5sZW5ndGg+MT9mcmFnbWVudC5jbG9uZU5vZGUodHJ1ZSk6
ZnJhZ21lbnQpO319DQppZihzY3JpcHRzLmxlbmd0aCl7alF1ZXJ5LmVhY2goc2Ny
aXB0cyxldmFsU2NyaXB0KTt9fQ0KcmV0dXJuIHRoaXM7ZnVuY3Rpb24gcm9vdChl
bGVtLGN1cil7cmV0dXJuIGpRdWVyeS5ub2RlTmFtZShlbGVtLCJ0YWJsZSIpPyhl
bGVtLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJ0Ym9keSIpWzBdfHxlbGVtLmFwcGVu
ZENoaWxkKGVsZW0ub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0Ym9keSIp
KSk6ZWxlbTt9fX0pO2Z1bmN0aW9uIGNsb25lQ29weUV2ZW50KG9yaWcscmV0KXt2
YXIgaT0wO3JldC5lYWNoKGZ1bmN0aW9uKCl7aWYodGhpcy5ub2RlTmFtZSE9PShv
cmlnW2ldJiZvcmlnW2ldLm5vZGVOYW1lKSl7cmV0dXJuO30NCnZhciBvbGREYXRh
PWpRdWVyeS5kYXRhKG9yaWdbaSsrXSksY3VyRGF0YT1qUXVlcnkuZGF0YSh0aGlz
LG9sZERhdGEpLGV2ZW50cz1vbGREYXRhJiZvbGREYXRhLmV2ZW50cztpZihldmVu
dHMpe2RlbGV0ZSBjdXJEYXRhLmhhbmRsZTtjdXJEYXRhLmV2ZW50cz17fTtmb3Io
dmFyIHR5cGUgaW4gZXZlbnRzKXtmb3IodmFyIGhhbmRsZXIgaW4gZXZlbnRzW3R5
cGVdKXtqUXVlcnkuZXZlbnQuYWRkKHRoaXMsdHlwZSxldmVudHNbdHlwZV1baGFu
ZGxlcl0sZXZlbnRzW3R5cGVdW2hhbmRsZXJdLmRhdGEpO319fX0pO30NCmZ1bmN0
aW9uIGJ1aWxkRnJhZ21lbnQoYXJncyxub2RlcyxzY3JpcHRzKXt2YXIgZnJhZ21l
bnQsY2FjaGVhYmxlLGNhY2hlcmVzdWx0cyxkb2M9KG5vZGVzJiZub2Rlc1swXT9u
b2Rlc1swXS5vd25lckRvY3VtZW50fHxub2Rlc1swXTpkb2N1bWVudCk7aWYoYXJn
cy5sZW5ndGg9PT0xJiZ0eXBlb2YgYXJnc1swXT09PSJzdHJpbmciJiZhcmdzWzBd
Lmxlbmd0aDw1MTImJmRvYz09PWRvY3VtZW50JiYhcm5vY2FjaGUudGVzdChhcmdz
WzBdKSYmKGpRdWVyeS5zdXBwb3J0LmNoZWNrQ2xvbmV8fCFyY2hlY2tlZC50ZXN0
KGFyZ3NbMF0pKSl7Y2FjaGVhYmxlPXRydWU7Y2FjaGVyZXN1bHRzPWpRdWVyeS5m
cmFnbWVudHNbYXJnc1swXV07aWYoY2FjaGVyZXN1bHRzKXtpZihjYWNoZXJlc3Vs
dHMhPT0xKXtmcmFnbWVudD1jYWNoZXJlc3VsdHM7fX19DQppZighZnJhZ21lbnQp
e2ZyYWdtZW50PWRvYy5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7alF1ZXJ5LmNs
ZWFuKGFyZ3MsZG9jLGZyYWdtZW50LHNjcmlwdHMpO30NCmlmKGNhY2hlYWJsZSl7
alF1ZXJ5LmZyYWdtZW50c1thcmdzWzBdXT1jYWNoZXJlc3VsdHM/ZnJhZ21lbnQ6
MTt9DQpyZXR1cm57ZnJhZ21lbnQ6ZnJhZ21lbnQsY2FjaGVhYmxlOmNhY2hlYWJs
ZX07fQ0KalF1ZXJ5LmZyYWdtZW50cz17fTtqUXVlcnkuZWFjaCh7YXBwZW5kVG86
ImFwcGVuZCIscHJlcGVuZFRvOiJwcmVwZW5kIixpbnNlcnRCZWZvcmU6ImJlZm9y
ZSIsaW5zZXJ0QWZ0ZXI6ImFmdGVyIixyZXBsYWNlQWxsOiJyZXBsYWNlV2l0aCJ9
LGZ1bmN0aW9uKG5hbWUsb3JpZ2luYWwpe2pRdWVyeS5mbltuYW1lXT1mdW5jdGlv
bihzZWxlY3Rvcil7dmFyIHJldD1bXSxpbnNlcnQ9alF1ZXJ5KHNlbGVjdG9yKSxw
YXJlbnQ9dGhpcy5sZW5ndGg9PT0xJiZ0aGlzWzBdLnBhcmVudE5vZGU7aWYocGFy
ZW50JiZwYXJlbnQubm9kZVR5cGU9PT0xMSYmcGFyZW50LmNoaWxkTm9kZXMubGVu
Z3RoPT09MSYmaW5zZXJ0Lmxlbmd0aD09PTEpe2luc2VydFtvcmlnaW5hbF0odGhp
c1swXSk7cmV0dXJuIHRoaXM7fWVsc2V7Zm9yKHZhciBpPTAsbD1pbnNlcnQubGVu
Z3RoO2k8bDtpKyspe3ZhciBlbGVtcz0oaT4wP3RoaXMuY2xvbmUodHJ1ZSk6dGhp
cykuZ2V0KCk7alF1ZXJ5LmZuW29yaWdpbmFsXS5hcHBseShqUXVlcnkoaW5zZXJ0
W2ldKSxlbGVtcyk7cmV0PXJldC5jb25jYXQoZWxlbXMpO30NCnJldHVybiB0aGlz
LnB1c2hTdGFjayhyZXQsbmFtZSxpbnNlcnQuc2VsZWN0b3IpO319O30pO2pRdWVy
eS5leHRlbmQoe2NsZWFuOmZ1bmN0aW9uKGVsZW1zLGNvbnRleHQsZnJhZ21lbnQs
c2NyaXB0cyl7Y29udGV4dD1jb250ZXh0fHxkb2N1bWVudDtpZih0eXBlb2YgY29u
dGV4dC5jcmVhdGVFbGVtZW50PT09InVuZGVmaW5lZCIpe2NvbnRleHQ9Y29udGV4
dC5vd25lckRvY3VtZW50fHxjb250ZXh0WzBdJiZjb250ZXh0WzBdLm93bmVyRG9j
dW1lbnR8fGRvY3VtZW50O30NCnZhciByZXQ9W107Zm9yKHZhciBpPTAsZWxlbTso
ZWxlbT1lbGVtc1tpXSkhPW51bGw7aSsrKXtpZih0eXBlb2YgZWxlbT09PSJudW1i
ZXIiKXtlbGVtKz0iIjt9DQppZighZWxlbSl7Y29udGludWU7fQ0KaWYodHlwZW9m
IGVsZW09PT0ic3RyaW5nIiYmIXJodG1sLnRlc3QoZWxlbSkpe2VsZW09Y29udGV4
dC5jcmVhdGVUZXh0Tm9kZShlbGVtKTt9ZWxzZSBpZih0eXBlb2YgZWxlbT09PSJz
dHJpbmciKXtlbGVtPWVsZW0ucmVwbGFjZShyeGh0bWxUYWcsZmNsb3NlVGFnKTt2
YXIgdGFnPShydGFnTmFtZS5leGVjKGVsZW0pfHxbIiIsIiJdKVsxXS50b0xvd2Vy
Q2FzZSgpLHdyYXA9d3JhcE1hcFt0YWddfHx3cmFwTWFwLl9kZWZhdWx0LGRlcHRo
PXdyYXBbMF0sZGl2PWNvbnRleHQuY3JlYXRlRWxlbWVudCgiZGl2Iik7ZGl2Lmlu
bmVySFRNTD13cmFwWzFdK2VsZW0rd3JhcFsyXTt3aGlsZShkZXB0aC0tKXtkaXY9
ZGl2Lmxhc3RDaGlsZDt9DQppZighalF1ZXJ5LnN1cHBvcnQudGJvZHkpe3ZhciBo
YXNCb2R5PXJ0Ym9keS50ZXN0KGVsZW0pLHRib2R5PXRhZz09PSJ0YWJsZSImJiFo
YXNCb2R5P2Rpdi5maXJzdENoaWxkJiZkaXYuZmlyc3RDaGlsZC5jaGlsZE5vZGVz
OndyYXBbMV09PT0iPHRhYmxlPiImJiFoYXNCb2R5P2Rpdi5jaGlsZE5vZGVzOltd
O2Zvcih2YXIgaj10Ym9keS5sZW5ndGgtMTtqPj0wOy0tail7aWYoalF1ZXJ5Lm5v
ZGVOYW1lKHRib2R5W2pdLCJ0Ym9keSIpJiYhdGJvZHlbal0uY2hpbGROb2Rlcy5s
ZW5ndGgpe3Rib2R5W2pdLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGJvZHlbal0p
O319fQ0KaWYoIWpRdWVyeS5zdXBwb3J0LmxlYWRpbmdXaGl0ZXNwYWNlJiZybGVh
ZGluZ1doaXRlc3BhY2UudGVzdChlbGVtKSl7ZGl2Lmluc2VydEJlZm9yZShjb250
ZXh0LmNyZWF0ZVRleHROb2RlKHJsZWFkaW5nV2hpdGVzcGFjZS5leGVjKGVsZW0p
WzBdKSxkaXYuZmlyc3RDaGlsZCk7fQ0KZWxlbT1kaXYuY2hpbGROb2Rlczt9DQpp
ZihlbGVtLm5vZGVUeXBlKXtyZXQucHVzaChlbGVtKTt9ZWxzZXtyZXQ9alF1ZXJ5
Lm1lcmdlKHJldCxlbGVtKTt9fQ0KaWYoZnJhZ21lbnQpe2Zvcih2YXIgaT0wO3Jl
dFtpXTtpKyspe2lmKHNjcmlwdHMmJmpRdWVyeS5ub2RlTmFtZShyZXRbaV0sInNj
cmlwdCIpJiYoIXJldFtpXS50eXBlfHxyZXRbaV0udHlwZS50b0xvd2VyQ2FzZSgp
PT09InRleHQvamF2YXNjcmlwdCIpKXtzY3JpcHRzLnB1c2gocmV0W2ldLnBhcmVu
dE5vZGU/cmV0W2ldLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQocmV0W2ldKTpyZXRb
aV0pO31lbHNle2lmKHJldFtpXS5ub2RlVHlwZT09PTEpe3JldC5zcGxpY2UuYXBw
bHkocmV0LFtpKzEsMF0uY29uY2F0KGpRdWVyeS5tYWtlQXJyYXkocmV0W2ldLmdl
dEVsZW1lbnRzQnlUYWdOYW1lKCJzY3JpcHQiKSkpKTt9DQpmcmFnbWVudC5hcHBl
bmRDaGlsZChyZXRbaV0pO319fQ0KcmV0dXJuIHJldDt9LGNsZWFuRGF0YTpmdW5j
dGlvbihlbGVtcyl7dmFyIGRhdGEsaWQsY2FjaGU9alF1ZXJ5LmNhY2hlLHNwZWNp
YWw9alF1ZXJ5LmV2ZW50LnNwZWNpYWwsZGVsZXRlRXhwYW5kbz1qUXVlcnkuc3Vw
cG9ydC5kZWxldGVFeHBhbmRvO2Zvcih2YXIgaT0wLGVsZW07KGVsZW09ZWxlbXNb
aV0pIT1udWxsO2krKyl7aWQ9ZWxlbVtqUXVlcnkuZXhwYW5kb107aWYoaWQpe2Rh
dGE9Y2FjaGVbaWRdO2lmKGRhdGEuZXZlbnRzKXtmb3IodmFyIHR5cGUgaW4gZGF0
YS5ldmVudHMpe2lmKHNwZWNpYWxbdHlwZV0pe2pRdWVyeS5ldmVudC5yZW1vdmUo
ZWxlbSx0eXBlKTt9ZWxzZXtyZW1vdmVFdmVudChlbGVtLHR5cGUsZGF0YS5oYW5k
bGUpO319fQ0KaWYoZGVsZXRlRXhwYW5kbyl7ZGVsZXRlIGVsZW1balF1ZXJ5LmV4
cGFuZG9dO31lbHNlIGlmKGVsZW0ucmVtb3ZlQXR0cmlidXRlKXtlbGVtLnJlbW92
ZUF0dHJpYnV0ZShqUXVlcnkuZXhwYW5kbyk7fQ0KZGVsZXRlIGNhY2hlW2lkXTt9
fX19KTt2YXIgcmV4Y2x1ZGU9L3otP2luZGV4fGZvbnQtP3dlaWdodHxvcGFjaXR5
fHpvb218bGluZS0/aGVpZ2h0L2kscmFscGhhPS9hbHBoYVwoW14pXSpcKS8scm9w
YWNpdHk9L29wYWNpdHk9KFteKV0qKS8scmZsb2F0PS9mbG9hdC9pLHJkYXNoQWxw
aGE9Ly0oW2Etel0pL2lnLHJ1cHBlcj0vKFtBLVpdKS9nLHJudW1weD0vXi0/XGQr
KD86cHgpPyQvaSxybnVtPS9eLT9cZC8sY3NzU2hvdz17cG9zaXRpb246ImFic29s
dXRlIix2aXNpYmlsaXR5OiJoaWRkZW4iLGRpc3BsYXk6ImJsb2NrIn0sY3NzV2lk
dGg9WyJMZWZ0IiwiUmlnaHQiXSxjc3NIZWlnaHQ9WyJUb3AiLCJCb3R0b20iXSxn
ZXRDb21wdXRlZFN0eWxlPWRvY3VtZW50LmRlZmF1bHRWaWV3JiZkb2N1bWVudC5k
ZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0eWxlLHN0eWxlRmxvYXQ9alF1ZXJ5LnN1
cHBvcnQuY3NzRmxvYXQ/ImNzc0Zsb2F0Ijoic3R5bGVGbG9hdCIsZmNhbWVsQ2Fz
ZT1mdW5jdGlvbihhbGwsbGV0dGVyKXtyZXR1cm4gbGV0dGVyLnRvVXBwZXJDYXNl
KCk7fTtqUXVlcnkuZm4uY3NzPWZ1bmN0aW9uKG5hbWUsdmFsdWUpe3JldHVybiBh
Y2Nlc3ModGhpcyxuYW1lLHZhbHVlLHRydWUsZnVuY3Rpb24oZWxlbSxuYW1lLHZh
bHVlKXtpZih2YWx1ZT09PXVuZGVmaW5lZCl7cmV0dXJuIGpRdWVyeS5jdXJDU1Mo
ZWxlbSxuYW1lKTt9DQppZih0eXBlb2YgdmFsdWU9PT0ibnVtYmVyIiYmIXJleGNs
dWRlLnRlc3QobmFtZSkpe3ZhbHVlKz0icHgiO30NCmpRdWVyeS5zdHlsZShlbGVt
LG5hbWUsdmFsdWUpO30pO307alF1ZXJ5LmV4dGVuZCh7c3R5bGU6ZnVuY3Rpb24o
ZWxlbSxuYW1lLHZhbHVlKXtpZighZWxlbXx8ZWxlbS5ub2RlVHlwZT09PTN8fGVs
ZW0ubm9kZVR5cGU9PT04KXtyZXR1cm4gdW5kZWZpbmVkO30NCmlmKChuYW1lPT09
IndpZHRoInx8bmFtZT09PSJoZWlnaHQiKSYmcGFyc2VGbG9hdCh2YWx1ZSk8MCl7
dmFsdWU9dW5kZWZpbmVkO30NCnZhciBzdHlsZT1lbGVtLnN0eWxlfHxlbGVtLHNl
dD12YWx1ZSE9PXVuZGVmaW5lZDtpZighalF1ZXJ5LnN1cHBvcnQub3BhY2l0eSYm
bmFtZT09PSJvcGFjaXR5Iil7aWYoc2V0KXtzdHlsZS56b29tPTE7dmFyIG9wYWNp
dHk9cGFyc2VJbnQodmFsdWUsMTApKyIiPT09Ik5hTiI/IiI6ImFscGhhKG9wYWNp
dHk9Iit2YWx1ZSoxMDArIikiO3ZhciBmaWx0ZXI9c3R5bGUuZmlsdGVyfHxqUXVl
cnkuY3VyQ1NTKGVsZW0sImZpbHRlciIpfHwiIjtzdHlsZS5maWx0ZXI9cmFscGhh
LnRlc3QoZmlsdGVyKT9maWx0ZXIucmVwbGFjZShyYWxwaGEsb3BhY2l0eSk6b3Bh
Y2l0eTt9DQpyZXR1cm4gc3R5bGUuZmlsdGVyJiZzdHlsZS5maWx0ZXIuaW5kZXhP
Zigib3BhY2l0eT0iKT49MD8ocGFyc2VGbG9hdChyb3BhY2l0eS5leGVjKHN0eWxl
LmZpbHRlcilbMV0pLzEwMCkrIiI6IiI7fQ0KaWYocmZsb2F0LnRlc3QobmFtZSkp
e25hbWU9c3R5bGVGbG9hdDt9DQpuYW1lPW5hbWUucmVwbGFjZShyZGFzaEFscGhh
LGZjYW1lbENhc2UpO2lmKHNldCl7c3R5bGVbbmFtZV09dmFsdWU7fQ0KcmV0dXJu
IHN0eWxlW25hbWVdO30sY3NzOmZ1bmN0aW9uKGVsZW0sbmFtZSxmb3JjZSxleHRy
YSl7aWYobmFtZT09PSJ3aWR0aCJ8fG5hbWU9PT0iaGVpZ2h0Iil7dmFyIHZhbCxw
cm9wcz1jc3NTaG93LHdoaWNoPW5hbWU9PT0id2lkdGgiP2Nzc1dpZHRoOmNzc0hl
aWdodDtmdW5jdGlvbiBnZXRXSCgpe3ZhbD1uYW1lPT09IndpZHRoIj9lbGVtLm9m
ZnNldFdpZHRoOmVsZW0ub2Zmc2V0SGVpZ2h0O2lmKGV4dHJhPT09ImJvcmRlciIp
e3JldHVybjt9DQpqUXVlcnkuZWFjaCh3aGljaCxmdW5jdGlvbigpe2lmKCFleHRy
YSl7dmFsLT1wYXJzZUZsb2F0KGpRdWVyeS5jdXJDU1MoZWxlbSwicGFkZGluZyIr
dGhpcyx0cnVlKSl8fDA7fQ0KaWYoZXh0cmE9PT0ibWFyZ2luIil7dmFsKz1wYXJz
ZUZsb2F0KGpRdWVyeS5jdXJDU1MoZWxlbSwibWFyZ2luIit0aGlzLHRydWUpKXx8
MDt9ZWxzZXt2YWwtPXBhcnNlRmxvYXQoalF1ZXJ5LmN1ckNTUyhlbGVtLCJib3Jk
ZXIiK3RoaXMrIldpZHRoIix0cnVlKSl8fDA7fX0pO30NCmlmKGVsZW0ub2Zmc2V0
V2lkdGghPT0wKXtnZXRXSCgpO31lbHNle2pRdWVyeS5zd2FwKGVsZW0scHJvcHMs
Z2V0V0gpO30NCnJldHVybiBNYXRoLm1heCgwLE1hdGgucm91bmQodmFsKSk7fQ0K
cmV0dXJuIGpRdWVyeS5jdXJDU1MoZWxlbSxuYW1lLGZvcmNlKTt9LGN1ckNTUzpm
dW5jdGlvbihlbGVtLG5hbWUsZm9yY2Upe3ZhciByZXQsc3R5bGU9ZWxlbS5zdHls
ZSxmaWx0ZXI7aWYoIWpRdWVyeS5zdXBwb3J0Lm9wYWNpdHkmJm5hbWU9PT0ib3Bh
Y2l0eSImJmVsZW0uY3VycmVudFN0eWxlKXtyZXQ9cm9wYWNpdHkudGVzdChlbGVt
LmN1cnJlbnRTdHlsZS5maWx0ZXJ8fCIiKT8ocGFyc2VGbG9hdChSZWdFeHAuJDEp
LzEwMCkrIiI6IiI7cmV0dXJuIHJldD09PSIiPyIxIjpyZXQ7fQ0KaWYocmZsb2F0
LnRlc3QobmFtZSkpe25hbWU9c3R5bGVGbG9hdDt9DQppZighZm9yY2UmJnN0eWxl
JiZzdHlsZVtuYW1lXSl7cmV0PXN0eWxlW25hbWVdO31lbHNlIGlmKGdldENvbXB1
dGVkU3R5bGUpe2lmKHJmbG9hdC50ZXN0KG5hbWUpKXtuYW1lPSJmbG9hdCI7fQ0K
bmFtZT1uYW1lLnJlcGxhY2UocnVwcGVyLCItJDEiKS50b0xvd2VyQ2FzZSgpO3Zh
ciBkZWZhdWx0Vmlldz1lbGVtLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXc7aWYo
IWRlZmF1bHRWaWV3KXtyZXR1cm4gbnVsbDt9DQp2YXIgY29tcHV0ZWRTdHlsZT1k
ZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0eWxlKGVsZW0sbnVsbCk7aWYoY29tcHV0
ZWRTdHlsZSl7cmV0PWNvbXB1dGVkU3R5bGUuZ2V0UHJvcGVydHlWYWx1ZShuYW1l
KTt9DQppZihuYW1lPT09Im9wYWNpdHkiJiZyZXQ9PT0iIil7cmV0PSIxIjt9fWVs
c2UgaWYoZWxlbS5jdXJyZW50U3R5bGUpe3ZhciBjYW1lbENhc2U9bmFtZS5yZXBs
YWNlKHJkYXNoQWxwaGEsZmNhbWVsQ2FzZSk7cmV0PWVsZW0uY3VycmVudFN0eWxl
W25hbWVdfHxlbGVtLmN1cnJlbnRTdHlsZVtjYW1lbENhc2VdO2lmKCFybnVtcHgu
dGVzdChyZXQpJiZybnVtLnRlc3QocmV0KSl7dmFyIGxlZnQ9c3R5bGUubGVmdCxy
c0xlZnQ9ZWxlbS5ydW50aW1lU3R5bGUubGVmdDtlbGVtLnJ1bnRpbWVTdHlsZS5s
ZWZ0PWVsZW0uY3VycmVudFN0eWxlLmxlZnQ7c3R5bGUubGVmdD1jYW1lbENhc2U9
PT0iZm9udFNpemUiPyIxZW0iOihyZXR8fDApO3JldD1zdHlsZS5waXhlbExlZnQr
InB4IjtzdHlsZS5sZWZ0PWxlZnQ7ZWxlbS5ydW50aW1lU3R5bGUubGVmdD1yc0xl
ZnQ7fX0NCnJldHVybiByZXQ7fSxzd2FwOmZ1bmN0aW9uKGVsZW0sb3B0aW9ucyxj
YWxsYmFjayl7dmFyIG9sZD17fTtmb3IodmFyIG5hbWUgaW4gb3B0aW9ucyl7b2xk
W25hbWVdPWVsZW0uc3R5bGVbbmFtZV07ZWxlbS5zdHlsZVtuYW1lXT1vcHRpb25z
W25hbWVdO30NCmNhbGxiYWNrLmNhbGwoZWxlbSk7Zm9yKHZhciBuYW1lIGluIG9w
dGlvbnMpe2VsZW0uc3R5bGVbbmFtZV09b2xkW25hbWVdO319fSk7aWYoalF1ZXJ5
LmV4cHImJmpRdWVyeS5leHByLmZpbHRlcnMpe2pRdWVyeS5leHByLmZpbHRlcnMu
aGlkZGVuPWZ1bmN0aW9uKGVsZW0pe3ZhciB3aWR0aD1lbGVtLm9mZnNldFdpZHRo
LGhlaWdodD1lbGVtLm9mZnNldEhlaWdodCxza2lwPWVsZW0ubm9kZU5hbWUudG9M
b3dlckNhc2UoKT09PSJ0ciI7cmV0dXJuIHdpZHRoPT09MCYmaGVpZ2h0PT09MCYm
IXNraXA/dHJ1ZTp3aWR0aD4wJiZoZWlnaHQ+MCYmIXNraXA/ZmFsc2U6alF1ZXJ5
LmN1ckNTUyhlbGVtLCJkaXNwbGF5Iik9PT0ibm9uZSI7fTtqUXVlcnkuZXhwci5m
aWx0ZXJzLnZpc2libGU9ZnVuY3Rpb24oZWxlbSl7cmV0dXJuIWpRdWVyeS5leHBy
LmZpbHRlcnMuaGlkZGVuKGVsZW0pO307fQ0KdmFyIGpzYz1ub3coKSxyc2NyaXB0
PS88c2NyaXB0KC58XHMpKj9cL3NjcmlwdD4vZ2kscnNlbGVjdFRleHRhcmVhPS9z
ZWxlY3R8dGV4dGFyZWEvaSxyaW5wdXQ9L2NvbG9yfGRhdGV8ZGF0ZXRpbWV8ZW1h
aWx8aGlkZGVufG1vbnRofG51bWJlcnxwYXNzd29yZHxyYW5nZXxzZWFyY2h8dGVs
fHRleHR8dGltZXx1cmx8d2Vlay9pLGpzcmU9Lz1cPygmfCQpLyxycXVlcnk9L1w/
LyxydHM9LyhcP3wmKV89Lio/KCZ8JCkvLHJ1cmw9L14oXHcrOik/XC9cLyhbXlwv
PyNdKykvLHIyMD0vJTIwL2csX2xvYWQ9alF1ZXJ5LmZuLmxvYWQ7alF1ZXJ5LmZu
LmV4dGVuZCh7bG9hZDpmdW5jdGlvbih1cmwscGFyYW1zLGNhbGxiYWNrKXtpZih0
eXBlb2YgdXJsIT09InN0cmluZyIpe3JldHVybiBfbG9hZC5jYWxsKHRoaXMsdXJs
KTt9ZWxzZSBpZighdGhpcy5sZW5ndGgpe3JldHVybiB0aGlzO30NCnZhciBvZmY9
dXJsLmluZGV4T2YoIiAiKTtpZihvZmY+PTApe3ZhciBzZWxlY3Rvcj11cmwuc2xp
Y2Uob2ZmLHVybC5sZW5ndGgpO3VybD11cmwuc2xpY2UoMCxvZmYpO30NCnZhciB0
eXBlPSJHRVQiO2lmKHBhcmFtcyl7aWYoalF1ZXJ5LmlzRnVuY3Rpb24ocGFyYW1z
KSl7Y2FsbGJhY2s9cGFyYW1zO3BhcmFtcz1udWxsO31lbHNlIGlmKHR5cGVvZiBw
YXJhbXM9PT0ib2JqZWN0Iil7cGFyYW1zPWpRdWVyeS5wYXJhbShwYXJhbXMsalF1
ZXJ5LmFqYXhTZXR0aW5ncy50cmFkaXRpb25hbCk7dHlwZT0iUE9TVCI7fX0NCnZh
ciBzZWxmPXRoaXM7alF1ZXJ5LmFqYXgoe3VybDp1cmwsdHlwZTp0eXBlLGRhdGFU
eXBlOiJodG1sIixkYXRhOnBhcmFtcyxjb21wbGV0ZTpmdW5jdGlvbihyZXMsc3Rh
dHVzKXtpZihzdGF0dXM9PT0ic3VjY2VzcyJ8fHN0YXR1cz09PSJub3Rtb2RpZmll
ZCIpe3NlbGYuaHRtbChzZWxlY3Rvcj9qUXVlcnkoIjxkaXYgLz4iKS5hcHBlbmQo
cmVzLnJlc3BvbnNlVGV4dC5yZXBsYWNlKHJzY3JpcHQsIiIpKS5maW5kKHNlbGVj
dG9yKTpyZXMucmVzcG9uc2VUZXh0KTt9DQppZihjYWxsYmFjayl7c2VsZi5lYWNo
KGNhbGxiYWNrLFtyZXMucmVzcG9uc2VUZXh0LHN0YXR1cyxyZXNdKTt9fX0pO3Jl
dHVybiB0aGlzO30sc2VyaWFsaXplOmZ1bmN0aW9uKCl7cmV0dXJuIGpRdWVyeS5w
YXJhbSh0aGlzLnNlcmlhbGl6ZUFycmF5KCkpO30sc2VyaWFsaXplQXJyYXk6ZnVu
Y3Rpb24oKXtyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5l
bGVtZW50cz9qUXVlcnkubWFrZUFycmF5KHRoaXMuZWxlbWVudHMpOnRoaXM7fSku
ZmlsdGVyKGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubmFtZSYmIXRoaXMuZGlzYWJs
ZWQmJih0aGlzLmNoZWNrZWR8fHJzZWxlY3RUZXh0YXJlYS50ZXN0KHRoaXMubm9k
ZU5hbWUpfHxyaW5wdXQudGVzdCh0aGlzLnR5cGUpKTt9KS5tYXAoZnVuY3Rpb24o
aSxlbGVtKXt2YXIgdmFsPWpRdWVyeSh0aGlzKS52YWwoKTtyZXR1cm4gdmFsPT1u
dWxsP251bGw6alF1ZXJ5LmlzQXJyYXkodmFsKT9qUXVlcnkubWFwKHZhbCxmdW5j
dGlvbih2YWwsaSl7cmV0dXJue25hbWU6ZWxlbS5uYW1lLHZhbHVlOnZhbH07fSk6
e25hbWU6ZWxlbS5uYW1lLHZhbHVlOnZhbH07fSkuZ2V0KCk7fX0pO2pRdWVyeS5l
YWNoKCJhamF4U3RhcnQgYWpheFN0b3AgYWpheENvbXBsZXRlIGFqYXhFcnJvciBh
amF4U3VjY2VzcyBhamF4U2VuZCIuc3BsaXQoIiAiKSxmdW5jdGlvbihpLG8pe2pR
dWVyeS5mbltvXT1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5iaW5kKG8sZik7fTt9
KTtqUXVlcnkuZXh0ZW5kKHtnZXQ6ZnVuY3Rpb24odXJsLGRhdGEsY2FsbGJhY2ss
dHlwZSl7aWYoalF1ZXJ5LmlzRnVuY3Rpb24oZGF0YSkpe3R5cGU9dHlwZXx8Y2Fs
bGJhY2s7Y2FsbGJhY2s9ZGF0YTtkYXRhPW51bGw7fQ0KcmV0dXJuIGpRdWVyeS5h
amF4KHt0eXBlOiJHRVQiLHVybDp1cmwsZGF0YTpkYXRhLHN1Y2Nlc3M6Y2FsbGJh
Y2ssZGF0YVR5cGU6dHlwZX0pO30sZ2V0U2NyaXB0OmZ1bmN0aW9uKHVybCxjYWxs
YmFjayl7cmV0dXJuIGpRdWVyeS5nZXQodXJsLG51bGwsY2FsbGJhY2ssInNjcmlw
dCIpO30sZ2V0SlNPTjpmdW5jdGlvbih1cmwsZGF0YSxjYWxsYmFjayl7cmV0dXJu
IGpRdWVyeS5nZXQodXJsLGRhdGEsY2FsbGJhY2ssImpzb24iKTt9LHBvc3Q6ZnVu
Y3Rpb24odXJsLGRhdGEsY2FsbGJhY2ssdHlwZSl7aWYoalF1ZXJ5LmlzRnVuY3Rp
b24oZGF0YSkpe3R5cGU9dHlwZXx8Y2FsbGJhY2s7Y2FsbGJhY2s9ZGF0YTtkYXRh
PXt9O30NCnJldHVybiBqUXVlcnkuYWpheCh7dHlwZToiUE9TVCIsdXJsOnVybCxk
YXRhOmRhdGEsc3VjY2VzczpjYWxsYmFjayxkYXRhVHlwZTp0eXBlfSk7fSxhamF4
U2V0dXA6ZnVuY3Rpb24oc2V0dGluZ3Mpe2pRdWVyeS5leHRlbmQoalF1ZXJ5LmFq
YXhTZXR0aW5ncyxzZXR0aW5ncyk7fSxhamF4U2V0dGluZ3M6e3VybDpsb2NhdGlv
bi5ocmVmLGdsb2JhbDp0cnVlLHR5cGU6IkdFVCIsY29udGVudFR5cGU6ImFwcGxp
Y2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIscHJvY2Vzc0RhdGE6dHJ1ZSxh
c3luYzp0cnVlLHhocjp3aW5kb3cuWE1MSHR0cFJlcXVlc3QmJih3aW5kb3cubG9j
YXRpb24ucHJvdG9jb2whPT0iZmlsZToifHwhd2luZG93LkFjdGl2ZVhPYmplY3Qp
P2Z1bmN0aW9uKCl7cmV0dXJuIG5ldyB3aW5kb3cuWE1MSHR0cFJlcXVlc3QoKTt9
OmZ1bmN0aW9uKCl7dHJ5e3JldHVybiBuZXcgd2luZG93LkFjdGl2ZVhPYmplY3Qo
Ik1pY3Jvc29mdC5YTUxIVFRQIik7fWNhdGNoKGUpe319LGFjY2VwdHM6e3htbDoi
YXBwbGljYXRpb24veG1sLCB0ZXh0L3htbCIsaHRtbDoidGV4dC9odG1sIixzY3Jp
cHQ6InRleHQvamF2YXNjcmlwdCwgYXBwbGljYXRpb24vamF2YXNjcmlwdCIsanNv
bjoiYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0Iix0ZXh0OiJ0ZXh0
L3BsYWluIixfZGVmYXVsdDoiKi8qIn19LGxhc3RNb2RpZmllZDp7fSxldGFnOnt9
LGFqYXg6ZnVuY3Rpb24ob3JpZ1NldHRpbmdzKXt2YXIgcz1qUXVlcnkuZXh0ZW5k
KHRydWUse30salF1ZXJ5LmFqYXhTZXR0aW5ncyxvcmlnU2V0dGluZ3MpO3ZhciBq
c29ucCxzdGF0dXMsZGF0YSxjYWxsYmFja0NvbnRleHQ9b3JpZ1NldHRpbmdzJiZv
cmlnU2V0dGluZ3MuY29udGV4dHx8cyx0eXBlPXMudHlwZS50b1VwcGVyQ2FzZSgp
O2lmKHMuZGF0YSYmcy5wcm9jZXNzRGF0YSYmdHlwZW9mIHMuZGF0YSE9PSJzdHJp
bmciKXtzLmRhdGE9alF1ZXJ5LnBhcmFtKHMuZGF0YSxzLnRyYWRpdGlvbmFsKTt9
DQppZihzLmRhdGFUeXBlPT09Impzb25wIil7aWYodHlwZT09PSJHRVQiKXtpZigh
anNyZS50ZXN0KHMudXJsKSl7cy51cmwrPShycXVlcnkudGVzdChzLnVybCk/IiYi
OiI/IikrKHMuanNvbnB8fCJjYWxsYmFjayIpKyI9PyI7fX1lbHNlIGlmKCFzLmRh
dGF8fCFqc3JlLnRlc3Qocy5kYXRhKSl7cy5kYXRhPShzLmRhdGE/cy5kYXRhKyIm
IjoiIikrKHMuanNvbnB8fCJjYWxsYmFjayIpKyI9PyI7fQ0Kcy5kYXRhVHlwZT0i
anNvbiI7fQ0KaWYocy5kYXRhVHlwZT09PSJqc29uIiYmKHMuZGF0YSYmanNyZS50
ZXN0KHMuZGF0YSl8fGpzcmUudGVzdChzLnVybCkpKXtqc29ucD1zLmpzb25wQ2Fs
bGJhY2t8fCgianNvbnAiK2pzYysrKTtpZihzLmRhdGEpe3MuZGF0YT0ocy5kYXRh
KyIiKS5yZXBsYWNlKGpzcmUsIj0iK2pzb25wKyIkMSIpO30NCnMudXJsPXMudXJs
LnJlcGxhY2UoanNyZSwiPSIranNvbnArIiQxIik7cy5kYXRhVHlwZT0ic2NyaXB0
Ijt3aW5kb3dbanNvbnBdPXdpbmRvd1tqc29ucF18fGZ1bmN0aW9uKHRtcCl7ZGF0
YT10bXA7c3VjY2VzcygpO2NvbXBsZXRlKCk7d2luZG93W2pzb25wXT11bmRlZmlu
ZWQ7dHJ5e2RlbGV0ZSB3aW5kb3dbanNvbnBdO31jYXRjaChlKXt9DQppZihoZWFk
KXtoZWFkLnJlbW92ZUNoaWxkKHNjcmlwdCk7fX07fQ0KaWYocy5kYXRhVHlwZT09
PSJzY3JpcHQiJiZzLmNhY2hlPT09bnVsbCl7cy5jYWNoZT1mYWxzZTt9DQppZihz
LmNhY2hlPT09ZmFsc2UmJnR5cGU9PT0iR0VUIil7dmFyIHRzPW5vdygpO3ZhciBy
ZXQ9cy51cmwucmVwbGFjZShydHMsIiQxXz0iK3RzKyIkMiIpO3MudXJsPXJldCso
KHJldD09PXMudXJsKT8ocnF1ZXJ5LnRlc3Qocy51cmwpPyImIjoiPyIpKyJfPSIr
dHM6IiIpO30NCmlmKHMuZGF0YSYmdHlwZT09PSJHRVQiKXtzLnVybCs9KHJxdWVy
eS50ZXN0KHMudXJsKT8iJiI6Ij8iKStzLmRhdGE7fQ0KaWYocy5nbG9iYWwmJiFq
UXVlcnkuYWN0aXZlKyspe2pRdWVyeS5ldmVudC50cmlnZ2VyKCJhamF4U3RhcnQi
KTt9DQp2YXIgcGFydHM9cnVybC5leGVjKHMudXJsKSxyZW1vdGU9cGFydHMmJihw
YXJ0c1sxXSYmcGFydHNbMV0hPT1sb2NhdGlvbi5wcm90b2NvbHx8cGFydHNbMl0h
PT1sb2NhdGlvbi5ob3N0KTtpZihzLmRhdGFUeXBlPT09InNjcmlwdCImJnR5cGU9
PT0iR0VUIiYmcmVtb3RlKXt2YXIgaGVhZD1kb2N1bWVudC5nZXRFbGVtZW50c0J5
VGFnTmFtZSgiaGVhZCIpWzBdfHxkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7dmFy
IHNjcmlwdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTtzY3JpcHQu
c3JjPXMudXJsO2lmKHMuc2NyaXB0Q2hhcnNldCl7c2NyaXB0LmNoYXJzZXQ9cy5z
Y3JpcHRDaGFyc2V0O30NCmlmKCFqc29ucCl7dmFyIGRvbmU9ZmFsc2U7c2NyaXB0
Lm9ubG9hZD1zY3JpcHQub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKCl7aWYo
IWRvbmUmJighdGhpcy5yZWFkeVN0YXRlfHx0aGlzLnJlYWR5U3RhdGU9PT0ibG9h
ZGVkInx8dGhpcy5yZWFkeVN0YXRlPT09ImNvbXBsZXRlIikpe2RvbmU9dHJ1ZTtz
dWNjZXNzKCk7Y29tcGxldGUoKTtzY3JpcHQub25sb2FkPXNjcmlwdC5vbnJlYWR5
c3RhdGVjaGFuZ2U9bnVsbDtpZihoZWFkJiZzY3JpcHQucGFyZW50Tm9kZSl7aGVh
ZC5yZW1vdmVDaGlsZChzY3JpcHQpO319fTt9DQpoZWFkLmluc2VydEJlZm9yZShz
Y3JpcHQsaGVhZC5maXJzdENoaWxkKTtyZXR1cm4gdW5kZWZpbmVkO30NCnZhciBy
ZXF1ZXN0RG9uZT1mYWxzZTt2YXIgeGhyPXMueGhyKCk7aWYoIXhocil7cmV0dXJu
O30NCmlmKHMudXNlcm5hbWUpe3hoci5vcGVuKHR5cGUscy51cmwscy5hc3luYyxz
LnVzZXJuYW1lLHMucGFzc3dvcmQpO31lbHNle3hoci5vcGVuKHR5cGUscy51cmws
cy5hc3luYyk7fQ0KdHJ5e2lmKHMuZGF0YXx8b3JpZ1NldHRpbmdzJiZvcmlnU2V0
dGluZ3MuY29udGVudFR5cGUpe3hoci5zZXRSZXF1ZXN0SGVhZGVyKCJDb250ZW50
LVR5cGUiLHMuY29udGVudFR5cGUpO30NCmlmKHMuaWZNb2RpZmllZCl7aWYoalF1
ZXJ5Lmxhc3RNb2RpZmllZFtzLnVybF0pe3hoci5zZXRSZXF1ZXN0SGVhZGVyKCJJ
Zi1Nb2RpZmllZC1TaW5jZSIsalF1ZXJ5Lmxhc3RNb2RpZmllZFtzLnVybF0pO30N
CmlmKGpRdWVyeS5ldGFnW3MudXJsXSl7eGhyLnNldFJlcXVlc3RIZWFkZXIoIklm
LU5vbmUtTWF0Y2giLGpRdWVyeS5ldGFnW3MudXJsXSk7fX0NCmlmKCFyZW1vdGUp
e3hoci5zZXRSZXF1ZXN0SGVhZGVyKCJYLVJlcXVlc3RlZC1XaXRoIiwiWE1MSHR0
cFJlcXVlc3QiKTt9DQp4aHIuc2V0UmVxdWVzdEhlYWRlcigiQWNjZXB0IixzLmRh
dGFUeXBlJiZzLmFjY2VwdHNbcy5kYXRhVHlwZV0/cy5hY2NlcHRzW3MuZGF0YVR5
cGVdKyIsICovKiI6cy5hY2NlcHRzLl9kZWZhdWx0KTt9Y2F0Y2goZSl7fQ0KaWYo
cy5iZWZvcmVTZW5kJiZzLmJlZm9yZVNlbmQuY2FsbChjYWxsYmFja0NvbnRleHQs
eGhyLHMpPT09ZmFsc2Upe2lmKHMuZ2xvYmFsJiYhLS1qUXVlcnkuYWN0aXZlKXtq
UXVlcnkuZXZlbnQudHJpZ2dlcigiYWpheFN0b3AiKTt9DQp4aHIuYWJvcnQoKTty
ZXR1cm4gZmFsc2U7fQ0KaWYocy5nbG9iYWwpe3RyaWdnZXIoImFqYXhTZW5kIixb
eGhyLHNdKTt9DQp2YXIgb25yZWFkeXN0YXRlY2hhbmdlPXhoci5vbnJlYWR5c3Rh
dGVjaGFuZ2U9ZnVuY3Rpb24oaXNUaW1lb3V0KXtpZigheGhyfHx4aHIucmVhZHlT
dGF0ZT09PTB8fGlzVGltZW91dD09PSJhYm9ydCIpe2lmKCFyZXF1ZXN0RG9uZSl7
Y29tcGxldGUoKTt9DQpyZXF1ZXN0RG9uZT10cnVlO2lmKHhocil7eGhyLm9ucmVh
ZHlzdGF0ZWNoYW5nZT1qUXVlcnkubm9vcDt9fWVsc2UgaWYoIXJlcXVlc3REb25l
JiZ4aHImJih4aHIucmVhZHlTdGF0ZT09PTR8fGlzVGltZW91dD09PSJ0aW1lb3V0
Iikpe3JlcXVlc3REb25lPXRydWU7eGhyLm9ucmVhZHlzdGF0ZWNoYW5nZT1qUXVl
cnkubm9vcDtzdGF0dXM9aXNUaW1lb3V0PT09InRpbWVvdXQiPyJ0aW1lb3V0Ijoh
alF1ZXJ5Lmh0dHBTdWNjZXNzKHhocik/ImVycm9yIjpzLmlmTW9kaWZpZWQmJmpR
dWVyeS5odHRwTm90TW9kaWZpZWQoeGhyLHMudXJsKT8ibm90bW9kaWZpZWQiOiJz
dWNjZXNzIjt2YXIgZXJyTXNnO2lmKHN0YXR1cz09PSJzdWNjZXNzIil7dHJ5e2Rh
dGE9alF1ZXJ5Lmh0dHBEYXRhKHhocixzLmRhdGFUeXBlLHMpO31jYXRjaChlcnIp
e3N0YXR1cz0icGFyc2VyZXJyb3IiO2Vyck1zZz1lcnI7fX0NCmlmKHN0YXR1cz09
PSJzdWNjZXNzInx8c3RhdHVzPT09Im5vdG1vZGlmaWVkIil7aWYoIWpzb25wKXtz
dWNjZXNzKCk7fX1lbHNle2pRdWVyeS5oYW5kbGVFcnJvcihzLHhocixzdGF0dXMs
ZXJyTXNnKTt9DQpjb21wbGV0ZSgpO2lmKGlzVGltZW91dD09PSJ0aW1lb3V0Iil7
eGhyLmFib3J0KCk7fQ0KaWYocy5hc3luYyl7eGhyPW51bGw7fX19O3RyeXt2YXIg
b2xkQWJvcnQ9eGhyLmFib3J0O3hoci5hYm9ydD1mdW5jdGlvbigpe2lmKHhocil7
b2xkQWJvcnQuY2FsbCh4aHIpO30NCm9ucmVhZHlzdGF0ZWNoYW5nZSgiYWJvcnQi
KTt9O31jYXRjaChlKXt9DQppZihzLmFzeW5jJiZzLnRpbWVvdXQ+MCl7c2V0VGlt
ZW91dChmdW5jdGlvbigpe2lmKHhociYmIXJlcXVlc3REb25lKXtvbnJlYWR5c3Rh
dGVjaGFuZ2UoInRpbWVvdXQiKTt9fSxzLnRpbWVvdXQpO30NCnRyeXt4aHIuc2Vu
ZCh0eXBlPT09IlBPU1QifHx0eXBlPT09IlBVVCJ8fHR5cGU9PT0iREVMRVRFIj9z
LmRhdGE6bnVsbCk7fWNhdGNoKGUpe2pRdWVyeS5oYW5kbGVFcnJvcihzLHhocixu
dWxsLGUpO2NvbXBsZXRlKCk7fQ0KaWYoIXMuYXN5bmMpe29ucmVhZHlzdGF0ZWNo
YW5nZSgpO30NCmZ1bmN0aW9uIHN1Y2Nlc3MoKXtpZihzLnN1Y2Nlc3Mpe3Muc3Vj
Y2Vzcy5jYWxsKGNhbGxiYWNrQ29udGV4dCxkYXRhLHN0YXR1cyx4aHIpO30NCmlm
KHMuZ2xvYmFsKXt0cmlnZ2VyKCJhamF4U3VjY2VzcyIsW3hocixzXSk7fX0NCmZ1
bmN0aW9uIGNvbXBsZXRlKCl7aWYocy5jb21wbGV0ZSl7cy5jb21wbGV0ZS5jYWxs
KGNhbGxiYWNrQ29udGV4dCx4aHIsc3RhdHVzKTt9DQppZihzLmdsb2JhbCl7dHJp
Z2dlcigiYWpheENvbXBsZXRlIixbeGhyLHNdKTt9DQppZihzLmdsb2JhbCYmIS0t
alF1ZXJ5LmFjdGl2ZSl7alF1ZXJ5LmV2ZW50LnRyaWdnZXIoImFqYXhTdG9wIik7
fX0NCmZ1bmN0aW9uIHRyaWdnZXIodHlwZSxhcmdzKXsocy5jb250ZXh0P2pRdWVy
eShzLmNvbnRleHQpOmpRdWVyeS5ldmVudCkudHJpZ2dlcih0eXBlLGFyZ3MpO30N
CnJldHVybiB4aHI7fSxoYW5kbGVFcnJvcjpmdW5jdGlvbihzLHhocixzdGF0dXMs
ZSl7aWYocy5lcnJvcil7cy5lcnJvci5jYWxsKHMuY29udGV4dHx8cyx4aHIsc3Rh
dHVzLGUpO30NCmlmKHMuZ2xvYmFsKXsocy5jb250ZXh0P2pRdWVyeShzLmNvbnRl
eHQpOmpRdWVyeS5ldmVudCkudHJpZ2dlcigiYWpheEVycm9yIixbeGhyLHMsZV0p
O319LGFjdGl2ZTowLGh0dHBTdWNjZXNzOmZ1bmN0aW9uKHhocil7dHJ5e3JldHVy
biF4aHIuc3RhdHVzJiZsb2NhdGlvbi5wcm90b2NvbD09PSJmaWxlOiJ8fCh4aHIu
c3RhdHVzPj0yMDAmJnhoci5zdGF0dXM8MzAwKXx8eGhyLnN0YXR1cz09PTMwNHx8
eGhyLnN0YXR1cz09PTEyMjN8fHhoci5zdGF0dXM9PT0wO31jYXRjaChlKXt9DQpy
ZXR1cm4gZmFsc2U7fSxodHRwTm90TW9kaWZpZWQ6ZnVuY3Rpb24oeGhyLHVybCl7
dmFyIGxhc3RNb2RpZmllZD14aHIuZ2V0UmVzcG9uc2VIZWFkZXIoIkxhc3QtTW9k
aWZpZWQiKSxldGFnPXhoci5nZXRSZXNwb25zZUhlYWRlcigiRXRhZyIpO2lmKGxh
c3RNb2RpZmllZCl7alF1ZXJ5Lmxhc3RNb2RpZmllZFt1cmxdPWxhc3RNb2RpZmll
ZDt9DQppZihldGFnKXtqUXVlcnkuZXRhZ1t1cmxdPWV0YWc7fQ0KcmV0dXJuIHho
ci5zdGF0dXM9PT0zMDR8fHhoci5zdGF0dXM9PT0wO30saHR0cERhdGE6ZnVuY3Rp
b24oeGhyLHR5cGUscyl7dmFyIGN0PXhoci5nZXRSZXNwb25zZUhlYWRlcigiY29u
dGVudC10eXBlIil8fCIiLHhtbD10eXBlPT09InhtbCJ8fCF0eXBlJiZjdC5pbmRl
eE9mKCJ4bWwiKT49MCxkYXRhPXhtbD94aHIucmVzcG9uc2VYTUw6eGhyLnJlc3Bv
bnNlVGV4dDtpZih4bWwmJmRhdGEuZG9jdW1lbnRFbGVtZW50Lm5vZGVOYW1lPT09
InBhcnNlcmVycm9yIil7alF1ZXJ5LmVycm9yKCJwYXJzZXJlcnJvciIpO30NCmlm
KHMmJnMuZGF0YUZpbHRlcil7ZGF0YT1zLmRhdGFGaWx0ZXIoZGF0YSx0eXBlKTt9
DQppZih0eXBlb2YgZGF0YT09PSJzdHJpbmciKXtpZih0eXBlPT09Impzb24ifHwh
dHlwZSYmY3QuaW5kZXhPZigianNvbiIpPj0wKXtkYXRhPWpRdWVyeS5wYXJzZUpT
T04oZGF0YSk7fWVsc2UgaWYodHlwZT09PSJzY3JpcHQifHwhdHlwZSYmY3QuaW5k
ZXhPZigiamF2YXNjcmlwdCIpPj0wKXtqUXVlcnkuZ2xvYmFsRXZhbChkYXRhKTt9
fQ0KcmV0dXJuIGRhdGE7fSxwYXJhbTpmdW5jdGlvbihhLHRyYWRpdGlvbmFsKXt2
YXIgcz1bXTtpZih0cmFkaXRpb25hbD09PXVuZGVmaW5lZCl7dHJhZGl0aW9uYWw9
alF1ZXJ5LmFqYXhTZXR0aW5ncy50cmFkaXRpb25hbDt9DQppZihqUXVlcnkuaXNB
cnJheShhKXx8YS5qcXVlcnkpe2pRdWVyeS5lYWNoKGEsZnVuY3Rpb24oKXthZGQo
dGhpcy5uYW1lLHRoaXMudmFsdWUpO30pO31lbHNle2Zvcih2YXIgcHJlZml4IGlu
IGEpe2J1aWxkUGFyYW1zKHByZWZpeCxhW3ByZWZpeF0pO319DQpyZXR1cm4gcy5q
b2luKCImIikucmVwbGFjZShyMjAsIisiKTtmdW5jdGlvbiBidWlsZFBhcmFtcyhw
cmVmaXgsb2JqKXtpZihqUXVlcnkuaXNBcnJheShvYmopKXtqUXVlcnkuZWFjaChv
YmosZnVuY3Rpb24oaSx2KXtpZih0cmFkaXRpb25hbHx8L1xbXF0kLy50ZXN0KHBy
ZWZpeCkpe2FkZChwcmVmaXgsdik7fWVsc2V7YnVpbGRQYXJhbXMocHJlZml4KyJb
IisodHlwZW9mIHY9PT0ib2JqZWN0Inx8alF1ZXJ5LmlzQXJyYXkodik/aToiIikr
Il0iLHYpO319KTt9ZWxzZSBpZighdHJhZGl0aW9uYWwmJm9iaiE9bnVsbCYmdHlw
ZW9mIG9iaj09PSJvYmplY3QiKXtqUXVlcnkuZWFjaChvYmosZnVuY3Rpb24oayx2
KXtidWlsZFBhcmFtcyhwcmVmaXgrIlsiK2srIl0iLHYpO30pO31lbHNle2FkZChw
cmVmaXgsb2JqKTt9fQ0KZnVuY3Rpb24gYWRkKGtleSx2YWx1ZSl7dmFsdWU9alF1
ZXJ5LmlzRnVuY3Rpb24odmFsdWUpP3ZhbHVlKCk6dmFsdWU7c1tzLmxlbmd0aF09
ZW5jb2RlVVJJQ29tcG9uZW50KGtleSkrIj0iK2VuY29kZVVSSUNvbXBvbmVudCh2
YWx1ZSk7fX19KTt2YXIgZWxlbWRpc3BsYXk9e30scmZ4dHlwZXM9L3RvZ2dsZXxz
aG93fGhpZGUvLHJmeG51bT0vXihbKy1dPSk/KFtcZCstLl0rKSguKikkLyx0aW1l
cklkLGZ4QXR0cnM9W1siaGVpZ2h0IiwibWFyZ2luVG9wIiwibWFyZ2luQm90dG9t
IiwicGFkZGluZ1RvcCIsInBhZGRpbmdCb3R0b20iXSxbIndpZHRoIiwibWFyZ2lu
TGVmdCIsIm1hcmdpblJpZ2h0IiwicGFkZGluZ0xlZnQiLCJwYWRkaW5nUmlnaHQi
XSxbIm9wYWNpdHkiXV07alF1ZXJ5LmZuLmV4dGVuZCh7c2hvdzpmdW5jdGlvbihz
cGVlZCxjYWxsYmFjayl7aWYoc3BlZWR8fHNwZWVkPT09MCl7cmV0dXJuIHRoaXMu
YW5pbWF0ZShnZW5GeCgic2hvdyIsMyksc3BlZWQsY2FsbGJhY2spO31lbHNle2Zv
cih2YXIgaT0wLGw9dGhpcy5sZW5ndGg7aTxsO2krKyl7dmFyIG9sZD1qUXVlcnku
ZGF0YSh0aGlzW2ldLCJvbGRkaXNwbGF5Iik7dGhpc1tpXS5zdHlsZS5kaXNwbGF5
PW9sZHx8IiI7aWYoalF1ZXJ5LmNzcyh0aGlzW2ldLCJkaXNwbGF5Iik9PT0ibm9u
ZSIpe3ZhciBub2RlTmFtZT10aGlzW2ldLm5vZGVOYW1lLGRpc3BsYXk7aWYoZWxl
bWRpc3BsYXlbbm9kZU5hbWVdKXtkaXNwbGF5PWVsZW1kaXNwbGF5W25vZGVOYW1l
XTt9ZWxzZXt2YXIgZWxlbT1qUXVlcnkoIjwiK25vZGVOYW1lKyIgLz4iKS5hcHBl
bmRUbygiYm9keSIpO2Rpc3BsYXk9ZWxlbS5jc3MoImRpc3BsYXkiKTtpZihkaXNw
bGF5PT09Im5vbmUiKXtkaXNwbGF5PSJibG9jayI7fQ0KZWxlbS5yZW1vdmUoKTtl
bGVtZGlzcGxheVtub2RlTmFtZV09ZGlzcGxheTt9DQpqUXVlcnkuZGF0YSh0aGlz
W2ldLCJvbGRkaXNwbGF5IixkaXNwbGF5KTt9fQ0KZm9yKHZhciBqPTAsaz10aGlz
Lmxlbmd0aDtqPGs7aisrKXt0aGlzW2pdLnN0eWxlLmRpc3BsYXk9alF1ZXJ5LmRh
dGEodGhpc1tqXSwib2xkZGlzcGxheSIpfHwiIjt9DQpyZXR1cm4gdGhpczt9fSxo
aWRlOmZ1bmN0aW9uKHNwZWVkLGNhbGxiYWNrKXtpZihzcGVlZHx8c3BlZWQ9PT0w
KXtyZXR1cm4gdGhpcy5hbmltYXRlKGdlbkZ4KCJoaWRlIiwzKSxzcGVlZCxjYWxs
YmFjayk7fWVsc2V7Zm9yKHZhciBpPTAsbD10aGlzLmxlbmd0aDtpPGw7aSsrKXt2
YXIgb2xkPWpRdWVyeS5kYXRhKHRoaXNbaV0sIm9sZGRpc3BsYXkiKTtpZighb2xk
JiZvbGQhPT0ibm9uZSIpe2pRdWVyeS5kYXRhKHRoaXNbaV0sIm9sZGRpc3BsYXki
LGpRdWVyeS5jc3ModGhpc1tpXSwiZGlzcGxheSIpKTt9fQ0KZm9yKHZhciBqPTAs
az10aGlzLmxlbmd0aDtqPGs7aisrKXt0aGlzW2pdLnN0eWxlLmRpc3BsYXk9Im5v
bmUiO30NCnJldHVybiB0aGlzO319LF90b2dnbGU6alF1ZXJ5LmZuLnRvZ2dsZSx0
b2dnbGU6ZnVuY3Rpb24oZm4sZm4yKXt2YXIgYm9vbD10eXBlb2YgZm49PT0iYm9v
bGVhbiI7aWYoalF1ZXJ5LmlzRnVuY3Rpb24oZm4pJiZqUXVlcnkuaXNGdW5jdGlv
bihmbjIpKXt0aGlzLl90b2dnbGUuYXBwbHkodGhpcyxhcmd1bWVudHMpO31lbHNl
IGlmKGZuPT1udWxsfHxib29sKXt0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgc3Rh
dGU9Ym9vbD9mbjpqUXVlcnkodGhpcykuaXMoIjpoaWRkZW4iKTtqUXVlcnkodGhp
cylbc3RhdGU/InNob3ciOiJoaWRlIl0oKTt9KTt9ZWxzZXt0aGlzLmFuaW1hdGUo
Z2VuRngoInRvZ2dsZSIsMyksZm4sZm4yKTt9DQpyZXR1cm4gdGhpczt9LGZhZGVU
bzpmdW5jdGlvbihzcGVlZCx0byxjYWxsYmFjayl7cmV0dXJuIHRoaXMuZmlsdGVy
KCI6aGlkZGVuIikuY3NzKCJvcGFjaXR5IiwwKS5zaG93KCkuZW5kKCkuYW5pbWF0
ZSh7b3BhY2l0eTp0b30sc3BlZWQsY2FsbGJhY2spO30sYW5pbWF0ZTpmdW5jdGlv
bihwcm9wLHNwZWVkLGVhc2luZyxjYWxsYmFjayl7dmFyIG9wdGFsbD1qUXVlcnku
c3BlZWQoc3BlZWQsZWFzaW5nLGNhbGxiYWNrKTtpZihqUXVlcnkuaXNFbXB0eU9i
amVjdChwcm9wKSl7cmV0dXJuIHRoaXMuZWFjaChvcHRhbGwuY29tcGxldGUpO30N
CnJldHVybiB0aGlzW29wdGFsbC5xdWV1ZT09PWZhbHNlPyJlYWNoIjoicXVldWUi
XShmdW5jdGlvbigpe3ZhciBvcHQ9alF1ZXJ5LmV4dGVuZCh7fSxvcHRhbGwpLHAs
aGlkZGVuPXRoaXMubm9kZVR5cGU9PT0xJiZqUXVlcnkodGhpcykuaXMoIjpoaWRk
ZW4iKSxzZWxmPXRoaXM7Zm9yKHAgaW4gcHJvcCl7dmFyIG5hbWU9cC5yZXBsYWNl
KHJkYXNoQWxwaGEsZmNhbWVsQ2FzZSk7aWYocCE9PW5hbWUpe3Byb3BbbmFtZV09
cHJvcFtwXTtkZWxldGUgcHJvcFtwXTtwPW5hbWU7fQ0KaWYocHJvcFtwXT09PSJo
aWRlIiYmaGlkZGVufHxwcm9wW3BdPT09InNob3ciJiYhaGlkZGVuKXtyZXR1cm4g
b3B0LmNvbXBsZXRlLmNhbGwodGhpcyk7fQ0KaWYoKHA9PT0iaGVpZ2h0Inx8cD09
PSJ3aWR0aCIpJiZ0aGlzLnN0eWxlKXtvcHQuZGlzcGxheT1qUXVlcnkuY3NzKHRo
aXMsImRpc3BsYXkiKTtvcHQub3ZlcmZsb3c9dGhpcy5zdHlsZS5vdmVyZmxvdzt9
DQppZihqUXVlcnkuaXNBcnJheShwcm9wW3BdKSl7KG9wdC5zcGVjaWFsRWFzaW5n
PW9wdC5zcGVjaWFsRWFzaW5nfHx7fSlbcF09cHJvcFtwXVsxXTtwcm9wW3BdPXBy
b3BbcF1bMF07fX0NCmlmKG9wdC5vdmVyZmxvdyE9bnVsbCl7dGhpcy5zdHlsZS5v
dmVyZmxvdz0iaGlkZGVuIjt9DQpvcHQuY3VyQW5pbT1qUXVlcnkuZXh0ZW5kKHt9
LHByb3ApO2pRdWVyeS5lYWNoKHByb3AsZnVuY3Rpb24obmFtZSx2YWwpe3ZhciBl
PW5ldyBqUXVlcnkuZngoc2VsZixvcHQsbmFtZSk7aWYocmZ4dHlwZXMudGVzdCh2
YWwpKXtlW3ZhbD09PSJ0b2dnbGUiP2hpZGRlbj8ic2hvdyI6ImhpZGUiOnZhbF0o
cHJvcCk7fWVsc2V7dmFyIHBhcnRzPXJmeG51bS5leGVjKHZhbCksc3RhcnQ9ZS5j
dXIodHJ1ZSl8fDA7aWYocGFydHMpe3ZhciBlbmQ9cGFyc2VGbG9hdChwYXJ0c1sy
XSksdW5pdD1wYXJ0c1szXXx8InB4IjtpZih1bml0IT09InB4Iil7c2VsZi5zdHls
ZVtuYW1lXT0oZW5kfHwxKSt1bml0O3N0YXJ0PSgoZW5kfHwxKS9lLmN1cih0cnVl
KSkqc3RhcnQ7c2VsZi5zdHlsZVtuYW1lXT1zdGFydCt1bml0O30NCmlmKHBhcnRz
WzFdKXtlbmQ9KChwYXJ0c1sxXT09PSItPSI/LTE6MSkqZW5kKStzdGFydDt9DQpl
LmN1c3RvbShzdGFydCxlbmQsdW5pdCk7fWVsc2V7ZS5jdXN0b20oc3RhcnQsdmFs
LCIiKTt9fX0pO3JldHVybiB0cnVlO30pO30sc3RvcDpmdW5jdGlvbihjbGVhclF1
ZXVlLGdvdG9FbmQpe3ZhciB0aW1lcnM9alF1ZXJ5LnRpbWVycztpZihjbGVhclF1
ZXVlKXt0aGlzLnF1ZXVlKFtdKTt9DQp0aGlzLmVhY2goZnVuY3Rpb24oKXtmb3Io
dmFyIGk9dGltZXJzLmxlbmd0aC0xO2k+PTA7aS0tKXtpZih0aW1lcnNbaV0uZWxl
bT09PXRoaXMpe2lmKGdvdG9FbmQpe3RpbWVyc1tpXSh0cnVlKTt9DQp0aW1lcnMu
c3BsaWNlKGksMSk7fX19KTtpZighZ290b0VuZCl7dGhpcy5kZXF1ZXVlKCk7fQ0K
cmV0dXJuIHRoaXM7fX0pO2pRdWVyeS5lYWNoKHtzbGlkZURvd246Z2VuRngoInNo
b3ciLDEpLHNsaWRlVXA6Z2VuRngoImhpZGUiLDEpLHNsaWRlVG9nZ2xlOmdlbkZ4
KCJ0b2dnbGUiLDEpLGZhZGVJbjp7b3BhY2l0eToic2hvdyJ9LGZhZGVPdXQ6e29w
YWNpdHk6ImhpZGUifX0sZnVuY3Rpb24obmFtZSxwcm9wcyl7alF1ZXJ5LmZuW25h
bWVdPWZ1bmN0aW9uKHNwZWVkLGNhbGxiYWNrKXtyZXR1cm4gdGhpcy5hbmltYXRl
KHByb3BzLHNwZWVkLGNhbGxiYWNrKTt9O30pO2pRdWVyeS5leHRlbmQoe3NwZWVk
OmZ1bmN0aW9uKHNwZWVkLGVhc2luZyxmbil7dmFyIG9wdD1zcGVlZCYmdHlwZW9m
IHNwZWVkPT09Im9iamVjdCI/c3BlZWQ6e2NvbXBsZXRlOmZufHwhZm4mJmVhc2lu
Z3x8alF1ZXJ5LmlzRnVuY3Rpb24oc3BlZWQpJiZzcGVlZCxkdXJhdGlvbjpzcGVl
ZCxlYXNpbmc6Zm4mJmVhc2luZ3x8ZWFzaW5nJiYhalF1ZXJ5LmlzRnVuY3Rpb24o
ZWFzaW5nKSYmZWFzaW5nfTtvcHQuZHVyYXRpb249alF1ZXJ5LmZ4Lm9mZj8wOnR5
cGVvZiBvcHQuZHVyYXRpb249PT0ibnVtYmVyIj9vcHQuZHVyYXRpb246alF1ZXJ5
LmZ4LnNwZWVkc1tvcHQuZHVyYXRpb25dfHxqUXVlcnkuZnguc3BlZWRzLl9kZWZh
dWx0O29wdC5vbGQ9b3B0LmNvbXBsZXRlO29wdC5jb21wbGV0ZT1mdW5jdGlvbigp
e2lmKG9wdC5xdWV1ZSE9PWZhbHNlKXtqUXVlcnkodGhpcykuZGVxdWV1ZSgpO30N
CmlmKGpRdWVyeS5pc0Z1bmN0aW9uKG9wdC5vbGQpKXtvcHQub2xkLmNhbGwodGhp
cyk7fX07cmV0dXJuIG9wdDt9LGVhc2luZzp7bGluZWFyOmZ1bmN0aW9uKHAsbixm
aXJzdE51bSxkaWZmKXtyZXR1cm4gZmlyc3ROdW0rZGlmZipwO30sc3dpbmc6ZnVu
Y3Rpb24ocCxuLGZpcnN0TnVtLGRpZmYpe3JldHVybigoLU1hdGguY29zKHAqTWF0
aC5QSSkvMikrMC41KSpkaWZmK2ZpcnN0TnVtO319LHRpbWVyczpbXSxmeDpmdW5j
dGlvbihlbGVtLG9wdGlvbnMscHJvcCl7dGhpcy5vcHRpb25zPW9wdGlvbnM7dGhp
cy5lbGVtPWVsZW07dGhpcy5wcm9wPXByb3A7aWYoIW9wdGlvbnMub3JpZyl7b3B0
aW9ucy5vcmlnPXt9O319fSk7alF1ZXJ5LmZ4LnByb3RvdHlwZT17dXBkYXRlOmZ1
bmN0aW9uKCl7aWYodGhpcy5vcHRpb25zLnN0ZXApe3RoaXMub3B0aW9ucy5zdGVw
LmNhbGwodGhpcy5lbGVtLHRoaXMubm93LHRoaXMpO30NCihqUXVlcnkuZnguc3Rl
cFt0aGlzLnByb3BdfHxqUXVlcnkuZnguc3RlcC5fZGVmYXVsdCkodGhpcyk7aWYo
KHRoaXMucHJvcD09PSJoZWlnaHQifHx0aGlzLnByb3A9PT0id2lkdGgiKSYmdGhp
cy5lbGVtLnN0eWxlKXt0aGlzLmVsZW0uc3R5bGUuZGlzcGxheT0iYmxvY2siO319
LGN1cjpmdW5jdGlvbihmb3JjZSl7aWYodGhpcy5lbGVtW3RoaXMucHJvcF0hPW51
bGwmJighdGhpcy5lbGVtLnN0eWxlfHx0aGlzLmVsZW0uc3R5bGVbdGhpcy5wcm9w
XT09bnVsbCkpe3JldHVybiB0aGlzLmVsZW1bdGhpcy5wcm9wXTt9DQp2YXIgcj1w
YXJzZUZsb2F0KGpRdWVyeS5jc3ModGhpcy5lbGVtLHRoaXMucHJvcCxmb3JjZSkp
O3JldHVybiByJiZyPi0xMDAwMD9yOnBhcnNlRmxvYXQoalF1ZXJ5LmN1ckNTUyh0
aGlzLmVsZW0sdGhpcy5wcm9wKSl8fDA7fSxjdXN0b206ZnVuY3Rpb24oZnJvbSx0
byx1bml0KXt0aGlzLnN0YXJ0VGltZT1ub3coKTt0aGlzLnN0YXJ0PWZyb207dGhp
cy5lbmQ9dG87dGhpcy51bml0PXVuaXR8fHRoaXMudW5pdHx8InB4Ijt0aGlzLm5v
dz10aGlzLnN0YXJ0O3RoaXMucG9zPXRoaXMuc3RhdGU9MDt2YXIgc2VsZj10aGlz
O2Z1bmN0aW9uIHQoZ290b0VuZCl7cmV0dXJuIHNlbGYuc3RlcChnb3RvRW5kKTt9
DQp0LmVsZW09dGhpcy5lbGVtO2lmKHQoKSYmalF1ZXJ5LnRpbWVycy5wdXNoKHQp
JiYhdGltZXJJZCl7dGltZXJJZD1zZXRJbnRlcnZhbChqUXVlcnkuZngudGljaywx
Myk7fX0sc2hvdzpmdW5jdGlvbigpe3RoaXMub3B0aW9ucy5vcmlnW3RoaXMucHJv
cF09alF1ZXJ5LnN0eWxlKHRoaXMuZWxlbSx0aGlzLnByb3ApO3RoaXMub3B0aW9u
cy5zaG93PXRydWU7dGhpcy5jdXN0b20odGhpcy5wcm9wPT09IndpZHRoInx8dGhp
cy5wcm9wPT09ImhlaWdodCI/MTowLHRoaXMuY3VyKCkpO2pRdWVyeSh0aGlzLmVs
ZW0pLnNob3coKTt9LGhpZGU6ZnVuY3Rpb24oKXt0aGlzLm9wdGlvbnMub3JpZ1t0
aGlzLnByb3BdPWpRdWVyeS5zdHlsZSh0aGlzLmVsZW0sdGhpcy5wcm9wKTt0aGlz
Lm9wdGlvbnMuaGlkZT10cnVlO3RoaXMuY3VzdG9tKHRoaXMuY3VyKCksMCk7fSxz
dGVwOmZ1bmN0aW9uKGdvdG9FbmQpe3ZhciB0PW5vdygpLGRvbmU9dHJ1ZTtpZihn
b3RvRW5kfHx0Pj10aGlzLm9wdGlvbnMuZHVyYXRpb24rdGhpcy5zdGFydFRpbWUp
e3RoaXMubm93PXRoaXMuZW5kO3RoaXMucG9zPXRoaXMuc3RhdGU9MTt0aGlzLnVw
ZGF0ZSgpO3RoaXMub3B0aW9ucy5jdXJBbmltW3RoaXMucHJvcF09dHJ1ZTtmb3Io
dmFyIGkgaW4gdGhpcy5vcHRpb25zLmN1ckFuaW0pe2lmKHRoaXMub3B0aW9ucy5j
dXJBbmltW2ldIT09dHJ1ZSl7ZG9uZT1mYWxzZTt9fQ0KaWYoZG9uZSl7aWYodGhp
cy5vcHRpb25zLmRpc3BsYXkhPW51bGwpe3RoaXMuZWxlbS5zdHlsZS5vdmVyZmxv
dz10aGlzLm9wdGlvbnMub3ZlcmZsb3c7dmFyIG9sZD1qUXVlcnkuZGF0YSh0aGlz
LmVsZW0sIm9sZGRpc3BsYXkiKTt0aGlzLmVsZW0uc3R5bGUuZGlzcGxheT1vbGQ/
b2xkOnRoaXMub3B0aW9ucy5kaXNwbGF5O2lmKGpRdWVyeS5jc3ModGhpcy5lbGVt
LCJkaXNwbGF5Iik9PT0ibm9uZSIpe3RoaXMuZWxlbS5zdHlsZS5kaXNwbGF5PSJi
bG9jayI7fX0NCmlmKHRoaXMub3B0aW9ucy5oaWRlKXtqUXVlcnkodGhpcy5lbGVt
KS5oaWRlKCk7fQ0KaWYodGhpcy5vcHRpb25zLmhpZGV8fHRoaXMub3B0aW9ucy5z
aG93KXtmb3IodmFyIHAgaW4gdGhpcy5vcHRpb25zLmN1ckFuaW0pe2pRdWVyeS5z
dHlsZSh0aGlzLmVsZW0scCx0aGlzLm9wdGlvbnMub3JpZ1twXSk7fX0NCnRoaXMu
b3B0aW9ucy5jb21wbGV0ZS5jYWxsKHRoaXMuZWxlbSk7fQ0KcmV0dXJuIGZhbHNl
O31lbHNle3ZhciBuPXQtdGhpcy5zdGFydFRpbWU7dGhpcy5zdGF0ZT1uL3RoaXMu
b3B0aW9ucy5kdXJhdGlvbjt2YXIgc3BlY2lhbEVhc2luZz10aGlzLm9wdGlvbnMu
c3BlY2lhbEVhc2luZyYmdGhpcy5vcHRpb25zLnNwZWNpYWxFYXNpbmdbdGhpcy5w
cm9wXTt2YXIgZGVmYXVsdEVhc2luZz10aGlzLm9wdGlvbnMuZWFzaW5nfHwoalF1
ZXJ5LmVhc2luZy5zd2luZz8ic3dpbmciOiJsaW5lYXIiKTt0aGlzLnBvcz1qUXVl
cnkuZWFzaW5nW3NwZWNpYWxFYXNpbmd8fGRlZmF1bHRFYXNpbmddKHRoaXMuc3Rh
dGUsbiwwLDEsdGhpcy5vcHRpb25zLmR1cmF0aW9uKTt0aGlzLm5vdz10aGlzLnN0
YXJ0KygodGhpcy5lbmQtdGhpcy5zdGFydCkqdGhpcy5wb3MpO3RoaXMudXBkYXRl
KCk7fQ0KcmV0dXJuIHRydWU7fX07alF1ZXJ5LmV4dGVuZChqUXVlcnkuZngse3Rp
Y2s6ZnVuY3Rpb24oKXt2YXIgdGltZXJzPWpRdWVyeS50aW1lcnM7Zm9yKHZhciBp
PTA7aTx0aW1lcnMubGVuZ3RoO2krKyl7aWYoIXRpbWVyc1tpXSgpKXt0aW1lcnMu
c3BsaWNlKGktLSwxKTt9fQ0KaWYoIXRpbWVycy5sZW5ndGgpe2pRdWVyeS5meC5z
dG9wKCk7fX0sc3RvcDpmdW5jdGlvbigpe2NsZWFySW50ZXJ2YWwodGltZXJJZCk7
dGltZXJJZD1udWxsO30sc3BlZWRzOntzbG93OjYwMCxmYXN0OjIwMCxfZGVmYXVs
dDo0MDB9LHN0ZXA6e29wYWNpdHk6ZnVuY3Rpb24oZngpe2pRdWVyeS5zdHlsZShm
eC5lbGVtLCJvcGFjaXR5IixmeC5ub3cpO30sX2RlZmF1bHQ6ZnVuY3Rpb24oZngp
e2lmKGZ4LmVsZW0uc3R5bGUmJmZ4LmVsZW0uc3R5bGVbZngucHJvcF0hPW51bGwp
e2Z4LmVsZW0uc3R5bGVbZngucHJvcF09KGZ4LnByb3A9PT0id2lkdGgifHxmeC5w
cm9wPT09ImhlaWdodCI/TWF0aC5tYXgoMCxmeC5ub3cpOmZ4Lm5vdykrZngudW5p
dDt9ZWxzZXtmeC5lbGVtW2Z4LnByb3BdPWZ4Lm5vdzt9fX19KTtpZihqUXVlcnku
ZXhwciYmalF1ZXJ5LmV4cHIuZmlsdGVycyl7alF1ZXJ5LmV4cHIuZmlsdGVycy5h
bmltYXRlZD1mdW5jdGlvbihlbGVtKXtyZXR1cm4galF1ZXJ5LmdyZXAoalF1ZXJ5
LnRpbWVycyxmdW5jdGlvbihmbil7cmV0dXJuIGVsZW09PT1mbi5lbGVtO30pLmxl
bmd0aDt9O30NCmZ1bmN0aW9uIGdlbkZ4KHR5cGUsbnVtKXt2YXIgb2JqPXt9O2pR
dWVyeS5lYWNoKGZ4QXR0cnMuY29uY2F0LmFwcGx5KFtdLGZ4QXR0cnMuc2xpY2Uo
MCxudW0pKSxmdW5jdGlvbigpe29ialt0aGlzXT10eXBlO30pO3JldHVybiBvYmo7
fQ0KaWYoImdldEJvdW5kaW5nQ2xpZW50UmVjdCJpbiBkb2N1bWVudC5kb2N1bWVu
dEVsZW1lbnQpe2pRdWVyeS5mbi5vZmZzZXQ9ZnVuY3Rpb24ob3B0aW9ucyl7dmFy
IGVsZW09dGhpc1swXTtpZihvcHRpb25zKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0
aW9uKGkpe2pRdWVyeS5vZmZzZXQuc2V0T2Zmc2V0KHRoaXMsb3B0aW9ucyxpKTt9
KTt9DQppZighZWxlbXx8IWVsZW0ub3duZXJEb2N1bWVudCl7cmV0dXJuIG51bGw7
fQ0KaWYoZWxlbT09PWVsZW0ub3duZXJEb2N1bWVudC5ib2R5KXtyZXR1cm4galF1
ZXJ5Lm9mZnNldC5ib2R5T2Zmc2V0KGVsZW0pO30NCnZhciBib3g9ZWxlbS5nZXRC
b3VuZGluZ0NsaWVudFJlY3QoKSxkb2M9ZWxlbS5vd25lckRvY3VtZW50LGJvZHk9
ZG9jLmJvZHksZG9jRWxlbT1kb2MuZG9jdW1lbnRFbGVtZW50LGNsaWVudFRvcD1k
b2NFbGVtLmNsaWVudFRvcHx8Ym9keS5jbGllbnRUb3B8fDAsY2xpZW50TGVmdD1k
b2NFbGVtLmNsaWVudExlZnR8fGJvZHkuY2xpZW50TGVmdHx8MCx0b3A9Ym94LnRv
cCsoc2VsZi5wYWdlWU9mZnNldHx8alF1ZXJ5LnN1cHBvcnQuYm94TW9kZWwmJmRv
Y0VsZW0uc2Nyb2xsVG9wfHxib2R5LnNjcm9sbFRvcCktY2xpZW50VG9wLGxlZnQ9
Ym94LmxlZnQrKHNlbGYucGFnZVhPZmZzZXR8fGpRdWVyeS5zdXBwb3J0LmJveE1v
ZGVsJiZkb2NFbGVtLnNjcm9sbExlZnR8fGJvZHkuc2Nyb2xsTGVmdCktY2xpZW50
TGVmdDtyZXR1cm57dG9wOnRvcCxsZWZ0OmxlZnR9O307fWVsc2V7alF1ZXJ5LmZu
Lm9mZnNldD1mdW5jdGlvbihvcHRpb25zKXt2YXIgZWxlbT10aGlzWzBdO2lmKG9w
dGlvbnMpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oaSl7alF1ZXJ5Lm9mZnNl
dC5zZXRPZmZzZXQodGhpcyxvcHRpb25zLGkpO30pO30NCmlmKCFlbGVtfHwhZWxl
bS5vd25lckRvY3VtZW50KXtyZXR1cm4gbnVsbDt9DQppZihlbGVtPT09ZWxlbS5v
d25lckRvY3VtZW50LmJvZHkpe3JldHVybiBqUXVlcnkub2Zmc2V0LmJvZHlPZmZz
ZXQoZWxlbSk7fQ0KalF1ZXJ5Lm9mZnNldC5pbml0aWFsaXplKCk7dmFyIG9mZnNl
dFBhcmVudD1lbGVtLm9mZnNldFBhcmVudCxwcmV2T2Zmc2V0UGFyZW50PWVsZW0s
ZG9jPWVsZW0ub3duZXJEb2N1bWVudCxjb21wdXRlZFN0eWxlLGRvY0VsZW09ZG9j
LmRvY3VtZW50RWxlbWVudCxib2R5PWRvYy5ib2R5LGRlZmF1bHRWaWV3PWRvYy5k
ZWZhdWx0VmlldyxwcmV2Q29tcHV0ZWRTdHlsZT1kZWZhdWx0Vmlldz9kZWZhdWx0
Vmlldy5nZXRDb21wdXRlZFN0eWxlKGVsZW0sbnVsbCk6ZWxlbS5jdXJyZW50U3R5
bGUsdG9wPWVsZW0ub2Zmc2V0VG9wLGxlZnQ9ZWxlbS5vZmZzZXRMZWZ0O3doaWxl
KChlbGVtPWVsZW0ucGFyZW50Tm9kZSkmJmVsZW0hPT1ib2R5JiZlbGVtIT09ZG9j
RWxlbSl7aWYoalF1ZXJ5Lm9mZnNldC5zdXBwb3J0c0ZpeGVkUG9zaXRpb24mJnBy
ZXZDb21wdXRlZFN0eWxlLnBvc2l0aW9uPT09ImZpeGVkIil7YnJlYWs7fQ0KY29t
cHV0ZWRTdHlsZT1kZWZhdWx0Vmlldz9kZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0
eWxlKGVsZW0sbnVsbCk6ZWxlbS5jdXJyZW50U3R5bGU7dG9wLT1lbGVtLnNjcm9s
bFRvcDtsZWZ0LT1lbGVtLnNjcm9sbExlZnQ7aWYoZWxlbT09PW9mZnNldFBhcmVu
dCl7dG9wKz1lbGVtLm9mZnNldFRvcDtsZWZ0Kz1lbGVtLm9mZnNldExlZnQ7aWYo
alF1ZXJ5Lm9mZnNldC5kb2VzTm90QWRkQm9yZGVyJiYhKGpRdWVyeS5vZmZzZXQu
ZG9lc0FkZEJvcmRlckZvclRhYmxlQW5kQ2VsbHMmJi9edChhYmxlfGR8aCkkL2ku
dGVzdChlbGVtLm5vZGVOYW1lKSkpe3RvcCs9cGFyc2VGbG9hdChjb21wdXRlZFN0
eWxlLmJvcmRlclRvcFdpZHRoKXx8MDtsZWZ0Kz1wYXJzZUZsb2F0KGNvbXB1dGVk
U3R5bGUuYm9yZGVyTGVmdFdpZHRoKXx8MDt9DQpwcmV2T2Zmc2V0UGFyZW50PW9m
ZnNldFBhcmVudCxvZmZzZXRQYXJlbnQ9ZWxlbS5vZmZzZXRQYXJlbnQ7fQ0KaWYo
alF1ZXJ5Lm9mZnNldC5zdWJ0cmFjdHNCb3JkZXJGb3JPdmVyZmxvd05vdFZpc2li
bGUmJmNvbXB1dGVkU3R5bGUub3ZlcmZsb3chPT0idmlzaWJsZSIpe3RvcCs9cGFy
c2VGbG9hdChjb21wdXRlZFN0eWxlLmJvcmRlclRvcFdpZHRoKXx8MDtsZWZ0Kz1w
YXJzZUZsb2F0KGNvbXB1dGVkU3R5bGUuYm9yZGVyTGVmdFdpZHRoKXx8MDt9DQpw
cmV2Q29tcHV0ZWRTdHlsZT1jb21wdXRlZFN0eWxlO30NCmlmKHByZXZDb21wdXRl
ZFN0eWxlLnBvc2l0aW9uPT09InJlbGF0aXZlInx8cHJldkNvbXB1dGVkU3R5bGUu
cG9zaXRpb249PT0ic3RhdGljIil7dG9wKz1ib2R5Lm9mZnNldFRvcDtsZWZ0Kz1i
b2R5Lm9mZnNldExlZnQ7fQ0KaWYoalF1ZXJ5Lm9mZnNldC5zdXBwb3J0c0ZpeGVk
UG9zaXRpb24mJnByZXZDb21wdXRlZFN0eWxlLnBvc2l0aW9uPT09ImZpeGVkIil7
dG9wKz1NYXRoLm1heChkb2NFbGVtLnNjcm9sbFRvcCxib2R5LnNjcm9sbFRvcCk7
bGVmdCs9TWF0aC5tYXgoZG9jRWxlbS5zY3JvbGxMZWZ0LGJvZHkuc2Nyb2xsTGVm
dCk7fQ0KcmV0dXJue3RvcDp0b3AsbGVmdDpsZWZ0fTt9O30NCmpRdWVyeS5vZmZz
ZXQ9e2luaXRpYWxpemU6ZnVuY3Rpb24oKXt2YXIgYm9keT1kb2N1bWVudC5ib2R5
LGNvbnRhaW5lcj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKSxpbm5lckRp
dixjaGVja0Rpdix0YWJsZSx0ZCxib2R5TWFyZ2luVG9wPXBhcnNlRmxvYXQoalF1
ZXJ5LmN1ckNTUyhib2R5LCJtYXJnaW5Ub3AiLHRydWUpKXx8MCxodG1sPSI8ZGl2
IHN0eWxlPSdwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjA7bWFyZ2luOjA7
Ym9yZGVyOjVweCBzb2xpZCAjMDAwO3BhZGRpbmc6MDt3aWR0aDoxcHg7aGVpZ2h0
OjFweDsnPjxkaXY+PC9kaXY+PC9kaXY+PHRhYmxlIHN0eWxlPSdwb3NpdGlvbjph
YnNvbHV0ZTt0b3A6MDtsZWZ0OjA7bWFyZ2luOjA7Ym9yZGVyOjVweCBzb2xpZCAj
MDAwO3BhZGRpbmc6MDt3aWR0aDoxcHg7aGVpZ2h0OjFweDsnIGNlbGxwYWRkaW5n
PScwJyBjZWxsc3BhY2luZz0nMCc+PHRyPjx0ZD48L3RkPjwvdHI+PC90YWJsZT4i
O2pRdWVyeS5leHRlbmQoY29udGFpbmVyLnN0eWxlLHtwb3NpdGlvbjoiYWJzb2x1
dGUiLHRvcDowLGxlZnQ6MCxtYXJnaW46MCxib3JkZXI6MCx3aWR0aDoiMXB4Iixo
ZWlnaHQ6IjFweCIsdmlzaWJpbGl0eToiaGlkZGVuIn0pO2NvbnRhaW5lci5pbm5l
ckhUTUw9aHRtbDtib2R5Lmluc2VydEJlZm9yZShjb250YWluZXIsYm9keS5maXJz
dENoaWxkKTtpbm5lckRpdj1jb250YWluZXIuZmlyc3RDaGlsZDtjaGVja0Rpdj1p
bm5lckRpdi5maXJzdENoaWxkO3RkPWlubmVyRGl2Lm5leHRTaWJsaW5nLmZpcnN0
Q2hpbGQuZmlyc3RDaGlsZDt0aGlzLmRvZXNOb3RBZGRCb3JkZXI9KGNoZWNrRGl2
Lm9mZnNldFRvcCE9PTUpO3RoaXMuZG9lc0FkZEJvcmRlckZvclRhYmxlQW5kQ2Vs
bHM9KHRkLm9mZnNldFRvcD09PTUpO2NoZWNrRGl2LnN0eWxlLnBvc2l0aW9uPSJm
aXhlZCIsY2hlY2tEaXYuc3R5bGUudG9wPSIyMHB4Ijt0aGlzLnN1cHBvcnRzRml4
ZWRQb3NpdGlvbj0oY2hlY2tEaXYub2Zmc2V0VG9wPT09MjB8fGNoZWNrRGl2Lm9m
ZnNldFRvcD09PTE1KTtjaGVja0Rpdi5zdHlsZS5wb3NpdGlvbj1jaGVja0Rpdi5z
dHlsZS50b3A9IiI7aW5uZXJEaXYuc3R5bGUub3ZlcmZsb3c9ImhpZGRlbiIsaW5u
ZXJEaXYuc3R5bGUucG9zaXRpb249InJlbGF0aXZlIjt0aGlzLnN1YnRyYWN0c0Jv
cmRlckZvck92ZXJmbG93Tm90VmlzaWJsZT0oY2hlY2tEaXYub2Zmc2V0VG9wPT09
LTUpO3RoaXMuZG9lc05vdEluY2x1ZGVNYXJnaW5JbkJvZHlPZmZzZXQ9KGJvZHku
b2Zmc2V0VG9wIT09Ym9keU1hcmdpblRvcCk7Ym9keS5yZW1vdmVDaGlsZChjb250
YWluZXIpO2JvZHk9Y29udGFpbmVyPWlubmVyRGl2PWNoZWNrRGl2PXRhYmxlPXRk
PW51bGw7alF1ZXJ5Lm9mZnNldC5pbml0aWFsaXplPWpRdWVyeS5ub29wO30sYm9k
eU9mZnNldDpmdW5jdGlvbihib2R5KXt2YXIgdG9wPWJvZHkub2Zmc2V0VG9wLGxl
ZnQ9Ym9keS5vZmZzZXRMZWZ0O2pRdWVyeS5vZmZzZXQuaW5pdGlhbGl6ZSgpO2lm
KGpRdWVyeS5vZmZzZXQuZG9lc05vdEluY2x1ZGVNYXJnaW5JbkJvZHlPZmZzZXQp
e3RvcCs9cGFyc2VGbG9hdChqUXVlcnkuY3VyQ1NTKGJvZHksIm1hcmdpblRvcCIs
dHJ1ZSkpfHwwO2xlZnQrPXBhcnNlRmxvYXQoalF1ZXJ5LmN1ckNTUyhib2R5LCJt
YXJnaW5MZWZ0Iix0cnVlKSl8fDA7fQ0KcmV0dXJue3RvcDp0b3AsbGVmdDpsZWZ0
fTt9LHNldE9mZnNldDpmdW5jdGlvbihlbGVtLG9wdGlvbnMsaSl7aWYoL3N0YXRp
Yy8udGVzdChqUXVlcnkuY3VyQ1NTKGVsZW0sInBvc2l0aW9uIikpKXtlbGVtLnN0
eWxlLnBvc2l0aW9uPSJyZWxhdGl2ZSI7fQ0KdmFyIGN1ckVsZW09alF1ZXJ5KGVs
ZW0pLGN1ck9mZnNldD1jdXJFbGVtLm9mZnNldCgpLGN1clRvcD1wYXJzZUludChq
UXVlcnkuY3VyQ1NTKGVsZW0sInRvcCIsdHJ1ZSksMTApfHwwLGN1ckxlZnQ9cGFy
c2VJbnQoalF1ZXJ5LmN1ckNTUyhlbGVtLCJsZWZ0Iix0cnVlKSwxMCl8fDA7aWYo
alF1ZXJ5LmlzRnVuY3Rpb24ob3B0aW9ucykpe29wdGlvbnM9b3B0aW9ucy5jYWxs
KGVsZW0saSxjdXJPZmZzZXQpO30NCnZhciBwcm9wcz17dG9wOihvcHRpb25zLnRv
cC1jdXJPZmZzZXQudG9wKStjdXJUb3AsbGVmdDoob3B0aW9ucy5sZWZ0LWN1ck9m
ZnNldC5sZWZ0KStjdXJMZWZ0fTtpZigidXNpbmciaW4gb3B0aW9ucyl7b3B0aW9u
cy51c2luZy5jYWxsKGVsZW0scHJvcHMpO31lbHNle2N1ckVsZW0uY3NzKHByb3Bz
KTt9fX07alF1ZXJ5LmZuLmV4dGVuZCh7cG9zaXRpb246ZnVuY3Rpb24oKXtpZigh
dGhpc1swXSl7cmV0dXJuIG51bGw7fQ0KdmFyIGVsZW09dGhpc1swXSxvZmZzZXRQ
YXJlbnQ9dGhpcy5vZmZzZXRQYXJlbnQoKSxvZmZzZXQ9dGhpcy5vZmZzZXQoKSxw
YXJlbnRPZmZzZXQ9L15ib2R5fGh0bWwkL2kudGVzdChvZmZzZXRQYXJlbnRbMF0u
bm9kZU5hbWUpP3t0b3A6MCxsZWZ0OjB9Om9mZnNldFBhcmVudC5vZmZzZXQoKTtv
ZmZzZXQudG9wLT1wYXJzZUZsb2F0KGpRdWVyeS5jdXJDU1MoZWxlbSwibWFyZ2lu
VG9wIix0cnVlKSl8fDA7b2Zmc2V0LmxlZnQtPXBhcnNlRmxvYXQoalF1ZXJ5LmN1
ckNTUyhlbGVtLCJtYXJnaW5MZWZ0Iix0cnVlKSl8fDA7cGFyZW50T2Zmc2V0LnRv
cCs9cGFyc2VGbG9hdChqUXVlcnkuY3VyQ1NTKG9mZnNldFBhcmVudFswXSwiYm9y
ZGVyVG9wV2lkdGgiLHRydWUpKXx8MDtwYXJlbnRPZmZzZXQubGVmdCs9cGFyc2VG
bG9hdChqUXVlcnkuY3VyQ1NTKG9mZnNldFBhcmVudFswXSwiYm9yZGVyTGVmdFdp
ZHRoIix0cnVlKSl8fDA7cmV0dXJue3RvcDpvZmZzZXQudG9wLXBhcmVudE9mZnNl
dC50b3AsbGVmdDpvZmZzZXQubGVmdC1wYXJlbnRPZmZzZXQubGVmdH07fSxvZmZz
ZXRQYXJlbnQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oKXt2
YXIgb2Zmc2V0UGFyZW50PXRoaXMub2Zmc2V0UGFyZW50fHxkb2N1bWVudC5ib2R5
O3doaWxlKG9mZnNldFBhcmVudCYmKCEvXmJvZHl8aHRtbCQvaS50ZXN0KG9mZnNl
dFBhcmVudC5ub2RlTmFtZSkmJmpRdWVyeS5jc3Mob2Zmc2V0UGFyZW50LCJwb3Np
dGlvbiIpPT09InN0YXRpYyIpKXtvZmZzZXRQYXJlbnQ9b2Zmc2V0UGFyZW50Lm9m
ZnNldFBhcmVudDt9DQpyZXR1cm4gb2Zmc2V0UGFyZW50O30pO319KTtqUXVlcnku
ZWFjaChbIkxlZnQiLCJUb3AiXSxmdW5jdGlvbihpLG5hbWUpe3ZhciBtZXRob2Q9
InNjcm9sbCIrbmFtZTtqUXVlcnkuZm5bbWV0aG9kXT1mdW5jdGlvbih2YWwpe3Zh
ciBlbGVtPXRoaXNbMF0sd2luO2lmKCFlbGVtKXtyZXR1cm4gbnVsbDt9DQppZih2
YWwhPT11bmRlZmluZWQpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXt3aW49
Z2V0V2luZG93KHRoaXMpO2lmKHdpbil7d2luLnNjcm9sbFRvKCFpP3ZhbDpqUXVl
cnkod2luKS5zY3JvbGxMZWZ0KCksaT92YWw6alF1ZXJ5KHdpbikuc2Nyb2xsVG9w
KCkpO31lbHNle3RoaXNbbWV0aG9kXT12YWw7fX0pO31lbHNle3dpbj1nZXRXaW5k
b3coZWxlbSk7cmV0dXJuIHdpbj8oInBhZ2VYT2Zmc2V0ImluIHdpbik/d2luW2k/
InBhZ2VZT2Zmc2V0IjoicGFnZVhPZmZzZXQiXTpqUXVlcnkuc3VwcG9ydC5ib3hN
b2RlbCYmd2luLmRvY3VtZW50LmRvY3VtZW50RWxlbWVudFttZXRob2RdfHx3aW4u
ZG9jdW1lbnQuYm9keVttZXRob2RdOmVsZW1bbWV0aG9kXTt9fTt9KTtmdW5jdGlv
biBnZXRXaW5kb3coZWxlbSl7cmV0dXJuKCJzY3JvbGxUbyJpbiBlbGVtJiZlbGVt
LmRvY3VtZW50KT9lbGVtOmVsZW0ubm9kZVR5cGU9PT05P2VsZW0uZGVmYXVsdFZp
ZXd8fGVsZW0ucGFyZW50V2luZG93OmZhbHNlO30NCmpRdWVyeS5lYWNoKFsiSGVp
Z2h0IiwiV2lkdGgiXSxmdW5jdGlvbihpLG5hbWUpe3ZhciB0eXBlPW5hbWUudG9M
b3dlckNhc2UoKTtqUXVlcnkuZm5bImlubmVyIituYW1lXT1mdW5jdGlvbigpe3Jl
dHVybiB0aGlzWzBdP2pRdWVyeS5jc3ModGhpc1swXSx0eXBlLGZhbHNlLCJwYWRk
aW5nIik6bnVsbDt9O2pRdWVyeS5mblsib3V0ZXIiK25hbWVdPWZ1bmN0aW9uKG1h
cmdpbil7cmV0dXJuIHRoaXNbMF0/alF1ZXJ5LmNzcyh0aGlzWzBdLHR5cGUsZmFs
c2UsbWFyZ2luPyJtYXJnaW4iOiJib3JkZXIiKTpudWxsO307alF1ZXJ5LmZuW3R5
cGVdPWZ1bmN0aW9uKHNpemUpe3ZhciBlbGVtPXRoaXNbMF07aWYoIWVsZW0pe3Jl
dHVybiBzaXplPT1udWxsP251bGw6dGhpczt9DQppZihqUXVlcnkuaXNGdW5jdGlv
bihzaXplKSl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihpKXt2YXIgc2VsZj1q
UXVlcnkodGhpcyk7c2VsZlt0eXBlXShzaXplLmNhbGwodGhpcyxpLHNlbGZbdHlw
ZV0oKSkpO30pO30NCnJldHVybigic2Nyb2xsVG8iaW4gZWxlbSYmZWxlbS5kb2N1
bWVudCk/ZWxlbS5kb2N1bWVudC5jb21wYXRNb2RlPT09IkNTUzFDb21wYXQiJiZl
bGVtLmRvY3VtZW50LmRvY3VtZW50RWxlbWVudFsiY2xpZW50IituYW1lXXx8ZWxl
bS5kb2N1bWVudC5ib2R5WyJjbGllbnQiK25hbWVdOihlbGVtLm5vZGVUeXBlPT09
OSk/TWF0aC5tYXgoZWxlbS5kb2N1bWVudEVsZW1lbnRbImNsaWVudCIrbmFtZV0s
ZWxlbS5ib2R5WyJzY3JvbGwiK25hbWVdLGVsZW0uZG9jdW1lbnRFbGVtZW50WyJz
Y3JvbGwiK25hbWVdLGVsZW0uYm9keVsib2Zmc2V0IituYW1lXSxlbGVtLmRvY3Vt
ZW50RWxlbWVudFsib2Zmc2V0IituYW1lXSk6c2l6ZT09PXVuZGVmaW5lZD9qUXVl
cnkuY3NzKGVsZW0sdHlwZSk6dGhpcy5jc3ModHlwZSx0eXBlb2Ygc2l6ZT09PSJz
dHJpbmciP3NpemU6c2l6ZSsicHgiKTt9O30pO3dpbmRvdy5qUXVlcnk9d2luZG93
LiQ9alF1ZXJ5O30pKHdpbmRvdyk7

------------qTBjXnmaI6qvT5AepQBBtZ
Content-Disposition: inline; filename=notices.js
Content-Type: application/x-javascript; name=notices.js
Content-Location: http://js.niuzer.com/frontend/notices.js
Content-Transfer-Encoding: Base64

dmFyIF9fTk9USUNFU19fID0geyJ1c2VyZ3JvdXBzIjp7InVzZXJncm91cF9hZGRl
ZCI6Ij8/Pz8/IiwidXNlcmdyb3VwX2FkZF9mYWlsZWQiOiI/Pz8/PyIsInVzZXJn
cm91cF91cGRhdGVkIjoiPz8/Pz8iLCJ1c2VyZ3JvdXBfdXBkYXRlX2ZhaWxlZCI6
IkZhaWxlZCB0byB1cGRhdGUgdXNlcmdyb3VwIiwic3Vic2NyaWJlX3N1Y2Nlc3Mi
OiI8c3Ryb25nPkFpIGZvc3QgaW5zY3JpczxcL3N0cm9uZz4gY3Ugc3VjY2VzcyBp
biBncnVwISIsInN1YnNjcmliZV9mYWlsIjoiPHN0cm9uZz5OdSB0ZS1haSBwdXR1
dCBpbnNjcmllPFwvc3Ryb25nPiBpbiBncnVwIGluIGFjZXN0IG1vbWVudCEiLCJp
bnZpdGVzX3NlbnQiOiJQcmlldGVuaWkgdGFpIDxzdHJvbmc+YXUgZm9zdCBpbnZp
dGF0aTxcL3N0cm9uZz4gaW4gZ3J1cCEiLCJub19zZWxlY3Rpb24iOiJOdSBhaSBz
ZWxlY3RhdCBuaWNpdW4gcHJpZXRlbiEiLCJkZWxldGVkX21lbWJlciI6IjxzdHJv
bmc+TWVtYnJ1bDxcL3N0cm9uZz4gYSBmb3N0IHNjb3MgZGluIGdydXAhIiwiZGVs
ZXRlX2ZhaWxlZCI6Ik5lIHBhcmUgcmF1LiA8c3Ryb25nPk1lbWJydWw8XC9zdHJv
bmc+IG51IHBvYXRlIGZpIHNjb3MgZGluIGdydXAhIiwibGVhdmVfc3VjY2VzcyI6
IkRlY2l6aWEgdGEgZGUgYSBwYXJhc2kgZ3J1cHVsIGEgZm9zdCBjb25maXJtYXRh
ISIsImxlYXZlX2ZhaWwiOiJOZSBwYXJlIHJhdS4gTnUgcG90aSBwYXJhc2kgZ3J1
cHVsIGFjdW0hIiwiZGVsX2F2YXRhcl9zdWNjZXNzIjoiPHN0cm9uZz5BdmF0YXJ1
bDxcL3N0cm9uZz4gYSBmb3N0IHN0ZXJzIGN1IHN1Y2NlcyEiLCJkZWxfYXZhdGFy
X2ZhaWwiOiJOZSBwYXJlIHJhdS4gPHN0cm9uZz5BdmF0YXJ1bDxcL3N0cm9uZz4g
bnUgcG9hdGUgZmkgc3RlcnMgYWN1bSEiLCJjcmVhdGVfc3VjY2VzcyI6IjxzdHJv
bmc+R3J1cHVsPFwvc3Ryb25nPiBhIGZvc3QgY3JlYXQgY3Ugc3VjY2VzISIsImNy
ZWF0ZV9mYWlsIjoiTmUgcGFyZSByYXUuIDxzdHJvbmc+R3J1cHVsPFwvc3Ryb25n
PiBudSBhIHB1dHV0IGZpIGNyZWF0ISIsImFscmVhZHlfZXhpc3RzIjoiRXhpc3Rh
IGRlamEgdW4gPHN0cm9uZz5ncnVwPFwvc3Ryb25nPiBjdSBhY2VzdCBudW1lISIs
Imludml0ZV9zZW50IjoiPHN0cm9uZz5JbnZpdGF0aWE8XC9zdHJvbmc+IHRhIGEg
Zm9zdCB0cmltaXNhISIsImludml0ZV9mYWlsZWQiOiJOZSBwYXJlIHJhdS4gPHN0
cm9uZz5JbnZpdGF0aWE8XC9zdHJvbmc+IHRhIG51IHBvYXRlIGZpIHRyaW1pc2Eg
YWN1bSIsImludml0ZV9hbHJlYWR5IjoiPHN0cm9uZz5JbnZpdGF0aWE8XC9zdHJv
bmc+IGEgZm9zdCB0cmltaXNhIGRlamEhIiwid3JvbmdfY2FwdGNoYSI6IjxzdHJv
bmc+VmVyaWZpY2F0aW9uIENvZGU8XC9zdHJvbmc+IGlzIHdyb25nISBQbGVhc2Ug
dHJ5IGFnYWluLiIsInB1dGJhY2tfc3VjY2VzcyI6Ik1lbWJydWwgYXJlIGRpbiBu
b3UgYWNjZXNzIGxhIGdydXAhIiwicHV0YmFja19mYWlsIjoiPHN0cm9uZz5Tb21l
dGhpbmcgd2VudCB3cm9uZzxcL3N0cm9uZz4uIFBsZWFzZSB0cnkgYWdhaW4hIn0s
DQoicGFnZXMiOnsicGFnZV9hZGRlZCI6IlBhZ2UgaGFzIGJlZW4gYWRkZWQiLCJw
YWdlX2FkZF9mYWlsZWQiOiJQYWdlIGFkZCBmYWlsZWQiLCJwYWdlX3VwZGF0ZWQi
OiJQYWdlIGhhcyBiZWVuIHVwZGF0ZWQiLCJwYWdlX3VwZGF0ZV9mYWlsZWQiOiJQ
YWdlIHVwZGF0ZSBmYWlsZWQiLCJtZXNzYWdlX3NlbnQiOiJZb3VyIDxzdHJvbmc+
bWVzc2FnZTxcL3N0cm9uZz4gaGFzIGJlZW4gc2VudCEiLCJtZXNzYWdlX2ZhaWxl
ZCI6IllvdXIgPHN0cm9uZz5tZXNzYWdlPFwvc3Ryb25nPiBoYXMgbm90IGJlZW4g
c2VudCEiLCJwdWJsaWNhdGlvbl9yZWNvcmRlZCI6IjxzdHJvbmc+U3VnZ2VzdGlv
biBzZW50PFwvc3Ryb25nPiEgVGhhbmsgeW91ISIsInB1YmxpY2F0aW9uX2VudGVy
X3N1YmplY3QiOiJZb3UgbXVzdCBmaWxsIGluIDxzdHJvbmc+YWxsIGZpZWxkczxc
L3N0cm9uZz4gYmVmb3JlIHN1Ym1pdHRpbmchIiwicHVibGljYXRpb25fYmFkX3Vy
bCI6IllvdSBtdXN0IGZpbGwgaW4gPHN0cm9uZz5hbGwgZmllbGRzPFwvc3Ryb25n
PiBiZWZvcmUgc3VibWl0dGluZyEiLCJwdWJsaWNhdGlvbl9lbnRlcl9ib2R5Ijoi
WW91IG11c3QgZmlsbCBpbiA8c3Ryb25nPmFsbCBmaWVsZHM8XC9zdHJvbmc+IGJl
Zm9yZSBzdWJtaXR0aW5nISIsInB1YmxpY2F0aW9uX2VudGVyX2ZlZWQiOiJZb3Ug
bXVzdCBmaWxsIGluIDxzdHJvbmc+YWxsIGZpZWxkczxcL3N0cm9uZz4gYmVmb3Jl
IHN1Ym1pdHRpbmchIiwiY29udGFjdF9yZXF1aXJlX25hbWUiOiJZb3UgbXVzdCBm
aWxsIGluIDxzdHJvbmc+YWxsIGZpZWxkczxcL3N0cm9uZz4gYmVmb3JlIHN1Ym1p
dHRpbmchIiwiY29udGFjdF9yZXF1aXJlX2VtYWlsIjoiWW91IG11c3QgZmlsbCBp
biA8c3Ryb25nPmFsbCBmaWVsZHM8XC9zdHJvbmc+IGJlZm9yZSBzdWJtaXR0aW5n
ISIsImNvbnRhY3RfcmVxdWlyZWRfc3ViamVjdCI6IlBsZWFzZSA8c3Ryb25nPnNl
bGVjdCB0aGUgc3ViamVjdDxcL3N0cm9uZz4hIiwiY29udGFjdF9yZXF1aXJlX2Jv
ZHkiOiJZb3UgbXVzdCBmaWxsIGluIDxzdHJvbmc+YWxsIGZpZWxkczxcL3N0cm9u
Zz4gYmVmb3JlIHN1Ym1pdHRpbmchIiwiZ2VuZXJhbF9lcnJvciI6IjxzdHJvbmc+
U29tZXRoaW5nIHdlbnQgd3Jvbmc8XC9zdHJvbmc+LiBQbGVhc2UgdHJ5IGFnYWlu
ISIsImZhdl9lbnRlcl90aXRsZSI6IlZhIHJ1Z2FtLCBjb21wbGV0YXRpIDxzdHJv
bmc+dGl0bHVsPFwvc3Ryb25nPiBzdGF0aXN0aWNpaSEiLCJmYXZfYmFkX2RhdGUi
OiI8c3Ryb25nPkludGVydmFsdWwgZGUgdGltcDxcL3N0cm9uZz4gc2VsZWN0YXQg
ZXN0ZSBpbnZhbGlkISIsImZhdl9lbnRlcl9rZXl3b3JkIjoiSW50cm9kdWNldGkg
Y2VsIHB1dGluIHVuIDxzdHJvbmc+Y3V2YW50IGNoZWllPFwvc3Ryb25nPiEiLCJm
YXZfc2VsZWN0X2NhdCI6IlNlbGVjdGF0aSBjZWwgcHV0aW4gbyBjYXRlZ29yaWUi
LCJzdGF0X2JhZF9ncmFwaCI6IlNvbWV0aGluZyB3ZW50IHdyb25nLCBwbGVhc2Ug
PHN0cm9uZz50cnkgYWdhaW48XC9zdHJvbmc+ISIsInN0YXRfYmFkX2ludGVydmFs
IjoiSW50ZXJ2YWx1bCBkZSB0aW1wIHRyZWJ1aWUgc2EgZmllIGRlIG1pbmltIDcg
emlsZSEiLCJ2YV9ydWdhbV9zZWxlY3RhdGlfc3ViaWVjdHVsIjoiUGxlYXNlIDxz
dHJvbmc+c2VsZWN0IHRoZSBzdWJqZWN0PFwvc3Ryb25nPiEiLCJpbmNoaWRlX2xh
YmVsIjoiQ2xvc2UiLCJpbmFwb2lfbGFiZWwiOiJQcmV2aW91cyIsImluYWludGVf
bGFiZWwiOiJOZXh0IiwiZGVzY2hpZGVfbGFiZWwiOiJPcGVuIiwiaW50cmFfaW5f
Y29udF9sYWJlbCI6IkxvZ2luIHRvIE5pdXplciIsImFkcmVzYV9kZV9lbWFpbF9s
YWJlbCI6IkVtYWlsIGFkZHJlc3M6IiwicGFyb2xhX2xhYmVsIjoiUGFzc3dvcmQ6
IiwidGluZW1hX21pbnRlX2xhYmVsIjoiS2VlcCBtZSBsb2dnZWQgaW4iLCJhdXRl
bnRpZmljYXJlX2xhYmVsIjoiTG9naW4iLCJpbnJlZ2lzdHJlYXphdGVfbGFiZWwi
OiJKb2luIE5pdXplciIsInJlY3VwZXJlYXphX3Bhcm9sYV9sYWJlbCI6IlBhc3N3
b3JkIHJlY292ZXJ5Iiwic3RpcmlfbGFiZWwiOiJOZXdzIiwiZGlzY3V0aWlfbGFi
ZWwiOiJEaXNjdXNzaW9ucyIsIm5pY2l1bl9yZXp1bHRhdCI6IjxiPk5vIHJlc3Vs
dHMgZm91bmQ8XC9iPiEgUGxlYXNlIHRyeSBhZ2Fpbi4iLCJjYXRlZ29yaWFfZXhp
c3RhX2RlamFfaW5fbGlzdGEiOiI8Yj5UaGUgY2F0ZWdvcnk8XC9iPiBpcyBhbHJl
YWR5IGluIHlvdXIgZmF2b3JpdGVzIGxpc3QhIiwibmljaW9fY2F0ZWdvcmllX2Zh
dm9yaXRhIjoiWW91IGRvbid0IGhhdmUgYW55IGZhdm9yaXRlIDxiPmNhdGVnb3Jp
ZXM8XC9iPiEiLCJpbnRyb2R1Y2V0aV9udW1lbGVfdW51aV9qdWRldF9zYXVfb3Jh
cyI6IlBsZWFzZSBpbnNlcnQgdGhlIDxiPkNpdHk8XC9iPiBuYW1lLCA8Yj5Db3Vu
dHJ5PFwvYj4gb3IgPGI+VVMgU3RhdGU8XC9iPiIsInN0aXJpX2xvY2FsZV9sYWJl
bCI6Ik15IExvY2F0aW9ucyIsImNhdGVnb3JpaWxlX21lbGVfbGFiZWwiOiJNeSBD
YXRlZ29yaWVzIiwic2VsZWN0ZWF6YV9vX2NhdGVnb3JpZV9sYWJlbCI6IlNlbGVj
dCBjYXRlZ29yeSIsImZhdm9yaXRlX2xhYmVsIjoiRmF2b3JpdGUiLCJmYXZvcml0
YV9sYWJlbCI6IkZhdm9yaXQiLCJhZGF1Z2FfbGFfZmF2b3JpdGVfbGFiZWwiOiJB
ZGQgdG8gZmF2b3JpdGUiLCJzdGlyZWFfYV9mb3N0X2FkYXVnYXRhX2xhX2Zhdm9y
aXRlIjoiQWRkZWQgdG8gPGEgaHJlZj1cImZhdm9yaXRlLW5ld3MuaHRtbFwiPjxz
dHJvbmc+RkFWT1JJVEVTPFwvc3Ryb25nPjxcL2E+ISIsImluY2hpZGVfZmVyZWFz
dHJhX2xhYmVsIjoiQ2xvc2UgV2luZG93IiwiYXZhdGFydWxfYV9mb3N0X3NjaGlt
YmF0IjoiPHN0cm9uZz5Zb3VyIGF2YXRhcjxcL3N0cm9uZz4gaXMgdXBkYXRlZCEi
LCJlcm9hcmVfdmVyaWZpY2F0aV9wYXJhbWV0cmlpIjoiVGhlcmUgd2FzIGEgZXJy
b3Igd2l0aCB5b3VyIHJlcXVlc3QuIFBsZWFzZSB0cnkgYWdhaW4hIiwiaW5fcGVy
aW9hZGFfc2F1X2lucmVnaXN0cmF0IjoiU3RhdGlzdGljcyBmb3IgJXMgLSAlczoi
LCJzdGF0X2NhdGVnb3JpYV9sYWJlbCI6IkNhdGVnb3J5Iiwic3RhdF9taW5pbV9s
YWJlbCI6Ik1pbiIsInN0YXRfbWVkaWFfbGFiZWwiOiJBdmVyYWdlIiwic3RhdF9t
YXhpbV9sYWJlbCI6Ik1heCIsInN0YXRfdG90YWxfc3RpcmlfbGFiZWwiOiJUb3Rh
bCBuZXdzIn0sDQoiZGlzY3Vzc2lvbnNfZ3JvdXBzIjp7ImRpc2N1c3Npb25fYWRk
ZWQiOiJXZWxsIGRvbmUhIDxzdHJvbmc+WW91ciBkaXNjdXNzaW9uPFwvc3Ryb25n
PiB3YXMgc3VjY2Vzc2Z1bGx5IGNyZWF0ZWQuIiwiZGlzY3Vzc2lvbl9hZGRfZmFp
bGVkIjoiPHN0cm9uZz5Tb21ldGhpbmcgd2VudCB3cm9uZzxcL3N0cm9uZz4uIFBs
ZWFzZSB0cnkgYWdhaW4hIiwiZGlzY3Vzc2lvbnNncm91cF91cGRhdGVkIjoiV2Vs
bCBkb25lISA8c3Ryb25nPllvdXIgZGlzY3Vzc2lvbjxcL3N0cm9uZz4gd2FzIHN1
Y2Nlc3NmdWxseSBjcmVhdGVkLiIsImRpc2N1c3Npb25zZ3JvdXBfdXBkYXRlX2Zh
aWxlZCI6IjxzdHJvbmc+U29tZXRoaW5nIHdlbnQgd3Jvbmc8XC9zdHJvbmc+LiBQ
bGVhc2UgdHJ5IGFnYWluISJ9LA0KImZyaWVuZHMiOnsicmVtb3ZlX3N1Y2Nlc3Mi
OiJZb3UgPHN0cm9uZz5zdG9wcGVkIGZvbGxvd2luZzxcL3N0cm9uZz4gdGhpcyB1
c2VyISIsInJlbW92ZV9mYWlsZWQiOiI8c3Ryb25nPlNvbWV0aGluZyB3ZW50IHdy
b25nPFwvc3Ryb25nPi4gUGxlYXNlIHRyeSBhZ2FpbiEiLCJhYm9ydF9zdWNjZXNz
IjoiWW91IDxzdHJvbmc+c3RvcHBlZCBmb2xsb3dpbmc8XC9zdHJvbmc+IHRoaXMg
dXNlciEiLCJhYm9ydF9mYWlsZWQiOiI8c3Ryb25nPlNvbWV0aGluZyB3ZW50IHdy
b25nPFwvc3Ryb25nPi4gUGxlYXNlIHRyeSBhZ2FpbiEiLCJkZW55X3N1Y2Nlc3Mi
OiJUaGUgcmVxdWVzdCB3YXMgc3VjY2Vzc2Z1bGx5IDxzdHJvbmc+aWdub3JlZDxc
L3N0cm9uZz4hIiwiZGVueV9mYWlsZWQiOiI8c3Ryb25nPlNvbWV0aGluZyB3ZW50
IHdyb25nPFwvc3Ryb25nPi4gUGxlYXNlIHRyeSBhZ2FpbiEiLCJhY2NlcHRfc3Vj
Y2VzcyI6IllvdSBhcmUgbm93IDxzdHJvbmc+Zm9sbG93aW5nPFwvc3Ryb25nPiB0
aGlzIHVzZXIgb24gTml1emVyISIsImFjY2VwdF9mYWlsZWQiOiI8c3Ryb25nPlNv
bWV0aGluZyB3ZW50IHdyb25nPFwvc3Ryb25nPi4gUGxlYXNlIHRyeSBhZ2FpbiEi
LCJhZGRfc3VjY2VzcyI6IllvdXIgPHN0cm9uZz5yZXF1ZXN0IHdhcyBzZW50PFwv
c3Ryb25nPiBzdWNjZXNzZnVsbHkhIiwiYWRkX2ZhaWxlZCI6IjxzdHJvbmc+U29t
ZXRoaW5nIHdlbnQgd3Jvbmc8XC9zdHJvbmc+LiBQbGVhc2UgdHJ5IGFnYWluISIs
InRlY2hfZXJyb3IiOiI8c3Ryb25nPlNvbWV0aGluZyB3ZW50IHdyb25nPFwvc3Ry
b25nPi4gUGxlYXNlIHRyeSBhZ2FpbiEiLCJmcmllbmRfcmVtb3ZlX3N1Y2Nlc3Mi
OiJZb3UgPHN0cm9uZz5zdG9wcGVkIGZvbGxvd2luZzxcL3N0cm9uZz4gdGhpcyB1
c2VyISIsImZyaWVuZF9yZW1vdmVfZmFpbCI6IjxzdHJvbmc+U29tZXRoaW5nIHdl
bnQgd3Jvbmc8XC9zdHJvbmc+LiBQbGVhc2UgdHJ5IGFnYWluISIsInN1Z2dlc3Rp
b25zX3N1Y2Nlc3MiOiJHcmVhdCEgWW91ciA8c3Ryb25nPnN1Z2dlc3Rpb25zIHdl
cmUgc2VudDxcL3N0cm9uZz4uIiwic3VnZ2VzdGlvbnNfZmFpbCI6IjxzdHJvbmc+
U29tZXRoaW5nIHdlbnQgd3Jvbmc8XC9zdHJvbmc+LiBQbGVhc2UgdHJ5IGFnYWlu
ISIsInN1Z2dlc3Rpb25zX2lnbm9yZWQiOiJTdWdnZXN0aW9uIDxzdHJvbmc+aWdu
b3JlZDxcL3N0cm9uZz4hIiwid3JvbmdfY2FwdGNoYSI6IjxzdHJvbmc+VmVyaWZp
Y2F0aW9uIENvZGU8XC9zdHJvbmc+IGlzIHdyb25nISBQbGVhc2UgdHJ5IGFnYWlu
LiIsIm5vX2ZyaWVuZHNfc3VnZ2VzdGlvbnMiOiJZb3UgZG9uJ3QgaGF2ZSBhbnkg
PHN0cm9uZz5mb2xsb3dlcnMgc3VnZ2VzdGlvbnM8XC9zdHJvbmc+LiBUcnkgYWdh
aW4gbGF0ZXIhIiwianNfbm9fZnJpZW5kc19zdWciOiJZb3UgZG9uJ3QgaGF2ZSBh
bnkgPHN0cm9uZz5mb2xsb3dlcnMgc3VnZ2VzdGlvbnM8XC9zdHJvbmc+LiBUcnkg
YWdhaW4gbGF0ZXIhIiwic3ByZV9hcHJvYmFyZSI6IjxzcGFuPjxzdHJvbmc+UGVu
ZGluZzxcL3N0cm9uZz48XC9zcGFuPjxjaXRlPlRoZSA8c3Ryb25nPmZvbGxvdyBy
ZXF1ZXN0IGhhcyBiZWVuIHN1Y2Nlc2Z1bGx5IHNlbnQ8XC9zdHJvbmc+PGJyIFwv
PiBhbmQgYXdhaXRzIGFwcHJvdmFsITxcL2NpdGU+In0sDQoiYmxvZ19wb3N0cyI6
eyJibG9ncG9zdF9hZGRlZCI6IkJsb2cgcG9zdCBoYXMgYmVlbiBhZGRlZCIsImJs
b2dwb3N0X2FkZF9mYWlsZWQiOiJCbG9nIHBvc3QgYWRkIGZhaWxlZCIsImJsb2dw
b3N0X3VwZGF0ZWQiOiJCbG9nIHBvc3QgaGFzIGJlZW4gdXBkYXRlZCIsImJsb2dw
b3N0X3VwZGF0ZV9mYWlsZWQiOiJCbG9nIHBvc3QgdXBkYXRlIGZhaWxlZCJ9LA0K
InB1YmxpY2F0aW9ucyI6eyJwdWJsaWNhdGlvbl9taXNzaW5nIjoiPz8/Pz8iLCJw
dWJsaWNhdGlvbl9kZWxldGVfc3VjY2VzcyI6Ij8/Pz8/IiwicHVibGljYXRpb25f
ZGVsZXRlX2ZhaWwiOiI8c3Ryb25nPlNvbWV0aGluZyB3ZW50IHdyb25nPFwvc3Ry
b25nPi4gUGxlYXNlIHRyeSBhZ2FpbiEifSwNCiJtZXNzYWdlcyI6eyJ0ZWNoX3By
b2JsZW0iOiI8c3Ryb25nPlNvbWV0aGluZyB3ZW50IHdyb25nPFwvc3Ryb25nPi4g
UGxlYXNlIHRyeSBhZ2FpbiEiLCJtZXNzYWdlX3NlbnQiOiI/Pz8/PyIsImVudGVy
X3JlY3AiOiI/Pz8/PyIsImVudGVyX3N1YmplY3QiOiI/Pz8/PyIsImVudGVyX2Jv
ZHkiOiI/Pz8/PyJ9LA0KImJsb2dfY2F0ZWdvcmllcyI6eyJibG9nY2F0X2FkZGVk
IjoiQmxvZyBjYXRlZ29yeSBoYXMgYmVlbiBhZGRlZCIsImJsb2djYXRfYWRkX2Zh
aWxlZCI6IkJsb2cgY2F0ZWdvcnkgYWRkIGZhaWxlZCIsImJsb2djYXRfdXBkYXRl
ZCI6IkJsb2cgY2F0ZWdvcnkgaGFzIGJlZW4gdXBkYXRlZCIsImJsb2djYXRfdXBk
YXRlX2ZhaWxlZCI6IkJsb2cgY2F0ZWdvcnkgdXBkYXRlIGZhaWxlZCJ9LA0KImxp
c3RpbmdzIjp7Im5vX25ld3MiOiJUaGVyZSBhcmVuJ3QgPHN0cm9uZz5hbnkgbmV3
czxcL3N0cm9uZz4gaW4gdGhpcyBjYXRlZ29yeVwvdGltZXNwYW4hIiwibm9fZmF2
X25ld3MiOiJZb3UgZG9uJ3QgaGF2ZSBhbnkgPHN0cm9uZz5mYXZvcml0ZSBuZXdz
PFwvc3Ryb25nPi4iLCJub19uZXdzX3Jlc3VsdHMiOiJXZSBjb3VsZG4ndCBmaW5k
IGFueSBuZXdzLiA8c3Ryb25nPlRyeSBhIGRpZmZlcmVudCBzZWFyY2g8XC9zdHJv
bmc+IG9yIDxzdHJvbmc+Y2hhbmdlIHRoZSB0aW1lc3BhbjxcL3N0cm9uZz4uIiwi
YmFkX2tleXdvcmQiOiJXZSBjb3VsZG4ndCBmaW5kIGFueSBuZXdzLiA8c3Ryb25n
PlRyeSBhIGRpZmZlcmVudCBzZWFyY2g8XC9zdHJvbmc+IG9yIDxzdHJvbmc+Y2hh
bmdlIHRoZSB0aW1lc3BhbjxcL3N0cm9uZz4uIiwic2F2ZWRfZmF2X2NhdCI6Illv
dXIgPHN0cm9uZz5wcmVmZXJlbmNlczxcL3N0cm9uZz4gd2VyZSBzdWNjZXNzZnVs
bHkgdXBkYXRlZCEiLCJub3Rfc2F2ZWRfZmF2X2NhdCI6IjxzdHJvbmc+U29tZXRo
aW5nIHdlbnQgd3Jvbmc8XC9zdHJvbmc+LiBQbGVhc2UgdHJ5IGFnYWluISIsInNh
dmVkX2Zhdl9sb2MiOiJZb3VyIDxzdHJvbmc+cHJlZmVyZW5jZXM8XC9zdHJvbmc+
IHdlcmUgc3VjY2Vzc2Z1bGx5IHVwZGF0ZWQhIiwibm90X3NhdmVkX2Zhdl9sb2Mi
OiI8c3Ryb25nPlNvbWV0aGluZyB3ZW50IHdyb25nPFwvc3Ryb25nPi4gUGxlYXNl
IHRyeSBhZ2FpbiEiLCJzZWFyY2hfYmFkX2tleSI6IldlIGNvdWxkbid0IGZpbmQg
YW55IG5ld3MuIDxzdHJvbmc+VHJ5IGEgZGlmZmVyZW50IHNlYXJjaDxcL3N0cm9u
Zz4gb3IgPHN0cm9uZz5jaGFuZ2UgdGhlIHRpbWVzcGFuPFwvc3Ryb25nPi4iLCJz
ZWFyY2hfYmFkX2RhdGUiOiJUaGUgPHN0cm9uZz50aW1lc3BhbjxcL3N0cm9uZz4g
eW91IHNlbGVjdGVkIGlzIGludmFsaWQhIiwiY29tZW50YXJpdWxfYV9mb3N0X2Fk
YXVnYV9pYXJfZGlzY3V0aWFfYV9mb3N0X2NyZWF0YSI6IjxzdHJvbmc+V2VsbCBk
b25lPFwvc3Ryb25nPiEgWW91ciBjb21tZW50IHdhcyBhZGRlZCwgdGhlcmVmb3Jl
IGEgPHN0cm9uZz5kaXNjdXNzaW9uIHdhcyBzdGFydGVkPFwvc3Ryb25nPiEifSwN
CiJhdXRoIjp7ImluY29ycmVjdF9sb2dpbiI6IllvdXIgPHN0cm9uZz5lLW1haWw8
XC9zdHJvbmc+XC88c3Ryb25nPnBhc3N3b3JkPFwvc3Ryb25nPiBpcyBpbmNvcnJl
Y3QuIFBsZWFzZSB0cnkgYWdhaW4hIiwid3JvbmdfcGFzc3dvcmQiOiI8c3Ryb25n
PlBhc3N3b3JkPFwvc3Ryb25nPiBpbmNvcmVjdGEhIiwicmVnaXN0cmF0aW9uX2Zh
aWxlZCI6IjxzdHJvbmc+U29tZXRoaW5nIHdlbnQgd3Jvbmc8XC9zdHJvbmc+LiBQ
bGVhc2UgdHJ5IGFnYWluISIsImNhbm5vdF9sb2dpbiI6IllvdXIgPHN0cm9uZz5l
LW1haWw8XC9zdHJvbmc+XC88c3Ryb25nPnBhc3N3b3JkPFwvc3Ryb25nPiBpcyBp
bmNvcnJlY3QuIFBsZWFzZSB0cnkgYWdhaW4hIiwic3VzcGVuZGVkX2FjY291bnQi
OiJXZSBhcmUgc29ycnkgYnV0IHlvdXIgPHN0cm9uZz5hY2NvdW50IGhhcyBiZWVu
IHN1c3BlbmRlZDxcL3N0cm9uZz4hIiwicmVnaXN0ZXJfZGF0ZSI6IlBsZWFzZSBz
ZWxlY3QgeW91ciA8c3Ryb25nPkJpcnRoZGF5PFwvc3Ryb25nPiEiLCJyZWdpc3Rl
cl9jb3VudHJ5IjoiUGxlYXNlIHNlbGVjdCB5b3VyIDxzdHJvbmc+Q291bnRyeTxc
L3N0cm9uZz4hISIsInJlZ2lzdGVyX2NpdHkiOiJQbGVhc2Ugc2VsZWN0IHlvdXIg
PHN0cm9uZz5DaXR5PFwvc3Ryb25nPiEhIiwicmVnaXN0ZXJfY291bnR5IjoiPz8/
Pz8iLCJwYXNzX21pc21hdGNoIjoiRmlsbCBpbiB5b3VyIDxzdHJvbmc+cGFzc3dv
cmQ8XC9zdHJvbmc+ISIsImVtYWlsX2V4aXN0cyI6IlRoaXMgPHN0cm9uZz5lLW1h
aWw8XC9zdHJvbmc+IGlzIGFscmVhZHkgaW4gdXNlISIsImludmFsaWRfZW1haWwi
OiJUaGlzIDxzdHJvbmc+ZS1tYWlsPFwvc3Ryb25nPiBpcyBpbnZhbGlkISIsInNv
bWVfYW1iaWd1b3VzX2phdmFzY3JpcHRfZXJyb3IiOiI8c3Ryb25nPlNvbWV0aGlu
ZyB3ZW50IHdyb25nPFwvc3Ryb25nPi4gUGxlYXNlIHRyeSBhZ2FpbiEiLCJjb3Jy
ZWN0X2NhcHRjaGEiOiI8c3Ryb25nPlZlcmlmaWNhdGlvbiBDb2RlPFwvc3Ryb25n
PiBpcyB3cm9uZyEgUGxlYXNlIHRyeSBhZ2Fpbi4iLCJpbnZhbGlkX2NhcHRjaGEi
OiI8c3Ryb25nPlZlcmlmaWNhdGlvbiBDb2RlPFwvc3Ryb25nPiBpcyB3cm9uZyEg
UGxlYXNlIHRyeSBhZ2Fpbi4iLCJyZXNldHBhc3Nfc3VjY2VzcyI6IjxzdHJvbmc+
UGFzc3dvcmQ8XC9zdHJvbmc+IGNoYW5nZWQgc3VjY2Vzc2Z1bGx5ISIsInJlc2V0
cGFzc19mYWlsZWQiOiI8c3Ryb25nPlNvbWV0aGluZyB3ZW50IHdyb25nPFwvc3Ry
b25nPi4gUGxlYXNlIHRyeSBhZ2FpbiEiLCJyZXNldHBhc3Nfbm9tYWlsIjoiVGhp
cyA8c3Ryb25nPmUtbWFpbDxcL3N0cm9uZz4gaXMgYWxyZWFkeSBpbiB1c2UhIiwi
cmVzZXRwYXNzX2ludmFsaWQiOiJUaGlzIDxzdHJvbmc+ZS1tYWlsPFwvc3Ryb25n
PiBpcyBpbnZhbGlkISIsInJlc2V0cGFzc19ib3RocmVxIjoiRmlsbCBpbiB5b3Vy
IDxzdHJvbmc+cGFzc3dvcmQ8XC9zdHJvbmc+IVwiIiwicmVzZXRwYXNzX25vbWF0
Y2giOiJGaWxsIGluIHlvdXIgPHN0cm9uZz5wYXNzd29yZDxcL3N0cm9uZz4hIiwi
cmVzZXRQYXNzT2siOiI8c3Ryb25nPlRoZSBpbmZvcm1hdGlvbiByZXF1aXJlZDxc
L3N0cm9uZz4gdG8gcmVzZXQgeW91ciBwYXNzd29yZCA8c3Ryb25nPmhhcyBiZWVu
IHNlbnQ8XC9zdHJvbmc+IHRvOjxiciBcLz4gPHN0cm9uZyBzdHlsZT1cImZvbnQt
c2l6ZTogMTNweDtcIj48dT4lczxcL3U+PFwvc3Ryb25nPiEiLCJjaGFuZ2VwYXNz
X3JlcXVpcmVfb2xkIjoiWW91IG11c3QgZmlsbCBpbiA8c3Ryb25nPmFsbCBmaWVs
ZHM8XC9zdHJvbmc+IGJlZm9yZSBzdWJtaXR0aW5nISIsImNoYW5nZXBhc3NfcmVx
dWlyZV9uZXciOiJZb3UgbXVzdCBmaWxsIGluIDxzdHJvbmc+YWxsIGZpZWxkczxc
L3N0cm9uZz4gYmVmb3JlIHN1Ym1pdHRpbmchIiwiY2hhbmdlcGFzc19yZXF1aXJl
X2NvbmZpcm0iOiJZb3UgbXVzdCBmaWxsIGluIDxzdHJvbmc+YWxsIGZpZWxkczxc
L3N0cm9uZz4gYmVmb3JlIHN1Ym1pdHRpbmchIiwiY2hhbmdlcGFzc193cm9uZ29s
ZCI6IllvdXIgPHN0cm9uZz5jdXJyZW50IHBhc3N3b3JkPFwvc3Ryb25nPiBpcyB3
cm9uZyEgUGxlYXNlIHRyeSBhZ2Fpbi4iLCJjaGFuZ2VwYXNzX25vbWF0Y2giOiJG
aWxsIGluIHlvdXIgPHN0cm9uZz5wYXNzd29yZDxcL3N0cm9uZz4hIiwiY2hhbmdl
cGFzc19ib3RocmVxIjoiWW91IG11c3QgZmlsbCBpbiA8c3Ryb25nPmFsbCBmaWVs
ZHM8XC9zdHJvbmc+IGJlZm9yZSBzdWJtaXR0aW5nIVwiIiwiY2hhbmdlcGFzc19z
dWNjZXNzIjoiWW91IDxzdHJvbmc+c3VjY2VzZnVsbHk8XC9zdHJvbmc+IGNoYW5n
ZWQgeW91ciBwYXNzd29yZCEiLCJ0ZWNoX2Vycm9yIjoiPHN0cm9uZz5Tb21ldGhp
bmcgd2VudCB3cm9uZzxcL3N0cm9uZz4uIFBsZWFzZSB0cnkgYWdhaW4hIiwiYXZh
dGFyX3VwbG9hZF9lcnJvciI6IlRoZSA8c3Ryb25nPnVwbG9hZCBwYXRoPFwvc3Ry
b25nPiBkb2VzIG5vdCBhcHBlYXIgdG8gYmUgdmFsaWQhIiwicmVnaXN0ZXJfZW1h
aWxfZXhpc3RzIjoiVGhpcyA8c3Ryb25nPmUtbWFpbDxcL3N0cm9uZz4gaXMgYWxy
ZWFkeSBpbiB1c2UhIiwicHJvZmlsZV91cGRhdGVfc3VjY2VzcyI6IjxzdHJvbmc+
WW91ciBwcm9maWxlPFwvc3Ryb25nPiB3YXMgc3VjY2Vzc2Z1bGx5IHVwZGF0ZWQh
IiwicHJvZmlsZV91cGRhdGVfZXJyb3IiOiI8c3Ryb25nPlNvbWV0aGluZyB3ZW50
IHdyb25nPFwvc3Ryb25nPi4gUGxlYXNlIHRyeSBhZ2FpbiEiLCJjb25maXJtX3N1
Y2Nlc3MiOiJDb250dWwgZHVtbmVhdm9hc3RyYSBhIGZvc3QgY29uZmlybWF0LiBC
aW5lIGF0aSB2ZW5pdCBwZSA8YSBocmVmPVwiXC9cIj48dT5OaXVaZXIucm88XC91
PjxcL2E+IiwiY29uZmlybV9lcnJvciI6IkNvbmZpcm1hcmVhIGNvbnR1bHVpIGEg
ZXN1YXQuIFZhIHJ1Z2FtIGluY2VyY2F0aSBkaW4gbm91IHNhdSA8YSBocmVmPVwi
XC9jb250YWN0Lmh0bWxcIj48dT5jb250YWN0YXRpLW5lPFwvdT48XC9hPiEiLCJh
Y2NvdW50X2Rpc2FibGVkIjoiWW91IGFjY291bnQgaGFzIGJlZW4gPHN0cm9uZz5k
aXNhYmxlPFwvc3Ryb25nPiEiLCJpbnRyb2R1Y2V0aV9hZHJlc2FfdmFsaWRhIjoi
VGhpcyA8c3Ryb25nPmUtbWFpbDxcL3N0cm9uZz4gaXMgaW52YWxpZCEiLCJpbnRy
b2R1Y2V0aV9wYXJvbGEiOiJZb3UgbXVzdCBmaWxsIGluIDxzdHJvbmc+YWxsIGZp
ZWxkczxcL3N0cm9uZz4gYmVmb3JlIHN1Ym1pdHRpbmchIn0sDQoicHJvZmlsZSI6
eyJub3RfdXBkYXRlZCI6IjxzdHJvbmc+U29tZXRoaW5nIHdlbnQgd3Jvbmc8XC9z
dHJvbmc+LiBQbGVhc2UgdHJ5IGFnYWluISIsIm5vX2Zhdm9yaXRlcyI6IjxzdHJv
bmc+PHU+JXM8XC91PjxcL3N0cm9uZz4gZG9lc24ndCBoYXZlIGFueSBmYXZvcml0
ZSBuZXdzISIsImF2YXRhcl9kZWxldGVkIjoiWW91ciBhdmF0YXIgd2FzIDxzdHJv
bmc+ZGVsZXRlZDxcL3N0cm9uZz4ifSwNCiJjb25maWciOnsiY29udGFjdHNfdXBk
YXRlZCI6IkNvbnRhY3QgcGFnZSBjb25maWd1cmF0aW9uIHVwZGF0ZWQhIiwiY29u
dGFjdHNfdXBkYXRlX2ZhaWxlZCI6IkVycm9yIGluIHVwZGF0aW5nIGNvbnRhY3Qg
aW5mb3JtYXRpb24ifSwNCiJkaXNjdXNzaW9ucyI6eyJkaXNjdXNzaW9uX2FkZGVk
IjoiV2VsbCBkb25lISA8c3Ryb25nPllvdXIgZGlzY3Vzc2lvbjxcL3N0cm9uZz4g
d2FzIHN1Y2Nlc3NmdWxseSBjcmVhdGVkLiIsImRpc2N1c3Npb25fYWRkZWRfYXBw
cm92ZSI6IkFsbW9zdCB0aGVyZSEgQW4gYWRtaW5pc3RyYXRvciB3aWxsIHJldmll
dyB5b3VyIGRpc2N1c3Npb24gYXMgc29vbiBhcyBwb3NzaWJsZS4iLCJkaXNjdXNz
aW9uX2FkZF9mYWlsZWQiOiI8c3Ryb25nPlNvbWV0aGluZyB3ZW50IHdyb25nPFwv
c3Ryb25nPi4gUGxlYXNlIHRyeSBhZ2FpbiEiLCJkaXNjdXNzaW9uX2VkaXRlZCI6
IlRoZSBkaXNjdXNzaW9uIGhhcyBiZWVuIHN1Y2Nlc3NmdWxseSA8c3Ryb25nPnVw
ZGF0ZWQ8XC9zdHJvbmc+ISIsImRpc2N1c3Npb25fZWRpdGVkX2ZhaWxlZCI6Ijxz
dHJvbmc+U29tZXRoaW5nIHdlbnQgd3Jvbmc8XC9zdHJvbmc+LiBQbGVhc2UgdHJ5
IGFnYWluISIsImRpc2N1c3Npb25fdXBsb2FkX2ZhaWxlZCI6IjxzdHJvbmc+VGhl
IGltYWdlPFwvc3Ryb25nPiBjb3VsZCBub3QgYmUgd3JpdHRlbiB0byBkaXNrISIs
ImRpc2N1c3Npb25fdXBkYXRlZCI6IlRoZSBkaXNjdXNzaW9uIGhhcyBiZWVuIHN1
Y2Nlc3NmdWxseSA8c3Ryb25nPnVwZGF0ZWQ8XC9zdHJvbmc+ISIsImRpc2N1c3Np
b25fdXBkYXRlX2ZhaWxlZCI6IjxzdHJvbmc+U29tZXRoaW5nIHdlbnQgd3Jvbmc8
XC9zdHJvbmc+LiBQbGVhc2UgdHJ5IGFnYWluISIsIm5vX2Rpc2N1c3Npb25zX3Jl
c3VsdHMiOiJXZSBjb3VsZG4ndCBmaW5kIHRoZSBkaXNjdXNzaW9uIHlvdSB3ZXJl
IGxvb2tpbmcgZm9yLiA8c3Ryb25nPlRyeSBhIGRpZmZlcmVudCBzZWFyY2g8XC9z
dHJvbmc+IG9yIDxzdHJvbmc+Y2hhbmdlIHRoZSB0aW1lc3BhbjxcL3N0cm9uZz4u
Iiwibm9fZGlzY3Vzc2lvbnNfaW5fY2F0ZWdvcnkiOiJUaGVyZSBhcmUgPHN0cm9u
Zz5ubyBkaXNjdXNzaW9uczxcL3N0cm9uZz4gZm9yIHRoaXMgY2F0ZWdvcnlcL3Rp
bWVzcGFuISIsIm5vX2Zhdl9kaXNjIjoiWW91IGRvbid0IGhhdmUgYW55IDxzdHJv
bmc+ZmF2b3JpdGUgZGlzY3Vzc2lvbnM8XC9zdHJvbmc+LiIsIm5vX2ZhdiI6Illv
dSBkb24ndCBoYXZlIGFueSBmYXZvcml0ZSA8c3Ryb25nPm5ld3M8XC9zdHJvbmc+
IG9yIDxzdHJvbmc+ZGlzY3Vzc2lvbnM8XC9zdHJvbmc+ISIsImNvbW1lbnRfYWRk
ZWQiOiJXZWxsIGRvbmUhIFlvdXIgPHN0cm9uZz5jb21tZW50PFwvc3Ryb25nPiB3
YXMgc3VjY2Vzc2Z1bGx5IGFkZGVkLiIsImNvbW1lbnRfZmFpbGVkIjoiPHN0cm9u
Zz5Tb21ldGhpbmcgd2VudCB3cm9uZzxcL3N0cm9uZz4uIFBsZWFzZSB0cnkgYWdh
aW4hIiwiY29tbWVudF9yZXF1aXJlX2F1dGhvciI6IllvdSBtdXN0IGZpbGwgaW4g
PHN0cm9uZz5hbGwgZmllbGRzPFwvc3Ryb25nPiBiZWZvcmUgc3VibWl0dGluZyEi
LCJjb21tZW50X3JlcXVpcmVfYm9keSI6IllvdSBtdXN0IGZpbGwgaW4gPHN0cm9u
Zz5hbGwgZmllbGRzPFwvc3Ryb25nPiBiZWZvcmUgc3VibWl0dGluZyEiLCJ1cGRh
dGVfcmFua19tc2ciOiI8c3Bhbj5EaXNjdXNzaW9ucyBhZGRlZCB0byA8YSBocmVm
PVwiZmF2b3JpdGUtZGlzY3Vzc2lvbnMuaHRtbFwiPjxzdHJvbmc+RkFWT1JJVEVT
PFwvc3Ryb25nPjxcL2E+ITxcL3NwYW4+IiwiZW50ZXJfc3ViamVjdCI6IlBsZWFz
ZSBmaWxsIGluIHRoZSA8c3Ryb25nPnN1YmplY3Q8XC9zdHJvbmc+IGZpZWxkISIs
ImlsbGVnYWxfc3ViamVjdCI6IlRoZSA8c3Ryb25nPmRpc2N1c3Npb24gc3ViamVj
dDxcL3N0cm9uZz4gY29udGFpbnMgaW52YWxpZCBjaGFyYWN0ZXJzLiIsImVudGVy
X2JvZHkiOiJQbGVhc2Ugd3JpdGUgYXQgbGVhc3QgPHN0cm9uZz43NSBjaGFyYWN0
ZXJzPFwvc3Ryb25nPiBpbiB0aGUgXCJjb250ZW50XCIgZmllbGQhIiwiZW50ZXJf
dGFnIjoiUGxlYXNlIGluc2VydCBhdCBsZWFzdCA8c3Ryb25nPm9uZSB0YWc8XC9z
dHJvbmc+ISIsImVudGVyX2NhdCI6IlBsZWFzZSA8c3Ryb25nPnNlbGVjdCBhIGNh
dGVnb3J5PFwvc3Ryb25nPiEiLCJiYWRfcG9sbCI6Ij8/Pz8/IiwibG9uZ19wb2xs
X2Fuc3dlciI6Ij8/Pz8/IiwiZGlzY3Vzc2lvbl9kZWxldGVkX29rIjoiVGhlIGRp
c2N1c3Npb24gd2FzIHN1Y2Nlc3NmdWxseSA8c3Ryb25nPmRlbGV0ZWQ8XC9zdHJv
bmc+ISIsImRpc2N1c3Npb25fZGVsZXRlZF9iYWQiOiJUaGUgZGlzY3Vzc2lvbiA8
c3Ryb25nPmNvdWxkbid0IGJlIGRlbGV0ZWQ8XC9zdHJvbmc+LiBQbGVhc2UgdHJ5
IGFnYWluLiIsImNvbnRpbnV0dWxfZGlzY3V0aWVpX2ludmFsaWQiOiJUaGUgPHN0
cm9uZz5kaXNjdXNzaW9uIGNvbnRlbnQ8XC9zdHJvbmc+IGNvbnRhaW5zIGludmFs
aWQgY2hhcmFjdGVycy4iLCJ0YWd1cmlfaW52YWxpZGUiOiJUaGUgPHN0cm9uZz5k
aXNjdXNzaW9uIHRhZzxcL3N0cm9uZz4gY29udGFpbnMgaW52YWxpZCBjaGFyYWN0
ZXJzLiIsImNvbnRpbnV0dWxfY29tZW50YXJpdWx1aV90cmVidWllX3NhX2NvbnRp
bmEiOiJZb3VyIGNvbW1lbnQgaGFzIHRvIGJlIGF0IGxlYXN0IDxzdHJvbmc+JXMg
Y2hhcmFjdGVyczxcL3N0cm9uZz4hIiwiY29tbWVudHNfY29udHJvbHNfdGV4dCI6
Ij8/Pz8/In0sDQoiZ2VuZXJhbCI6eyJ3cm9uZ19jYXB0Y2hhIjoiPHN0cm9uZz5W
ZXJpZmljYXRpb24gQ29kZTxcL3N0cm9uZz4gaXMgd3JvbmchIFBsZWFzZSB0cnkg
YWdhaW4uIiwicmVnaXN0cmF0aW9uX2ZhaWxlZCI6IjxzdHJvbmc+U29tZXRoaW5n
IHdlbnQgd3Jvbmc8XC9zdHJvbmc+LiBQbGVhc2UgdHJ5IGFnYWluISIsInN0YXRf
c3VnZ2VzdGlvbl9vayI6IkdyZWF0ISBZb3VyIDxzdHJvbmc+c3VnZ2VzdGlvbiB3
YXMgc2VudDxcL3N0cm9uZz4uIiwic3RhdF9zdWdnZXN0aW9uX3Byb2JsZW0iOiI8
c3Ryb25nPlNvbWV0aGluZyB3ZW50IHdyb25nPFwvc3Ryb25nPi4gUGxlYXNlIHRy
eSBhZ2FpbiEiLCJzdGF0X2RhdGVfcHJvYmxlbSI6IlRoZSA8c3Ryb25nPnRpbWVz
cGFuPFwvc3Ryb25nPiB5b3Ugc2VsZWN0ZWQgaXMgaW52YWxpZCEifSwNCiJhZG1p
bl91c2VycyI6eyJ1c2VyX2FkZGVkIjoiVXNlciBoYXMgYmVlbiBhZGRlZCIsInVz
ZXJfYWRkX2ZhaWxlZCI6IkFuIGVycm9yIG9jdXJlZCB3aGlsZSBhZGRpbmcgdXNl
ciJ9fTsNCg0KZnVuY3Rpb24gX2dldE5vdGljZShzZWN0aW9uLCBtZXNzYWdlLCBy
ZXBsYWNlbWVudHMpIHsNCgl2YXIgbm90aWNlID0gZXZhbCgnX19OT1RJQ0VTX18u
JytzZWN0aW9uKycuJyttZXNzYWdlKTsNCgkNCglpZih0eXBlb2Yobm90aWNlKSA9
PSAndW5kZWZpbmVkJykgew0KCQlyZXR1cm4gJyc7DQoJfQ0KCQ0KCWlmKGFyZ3Vt
ZW50cy5sZW5ndGggPT0gMikgew0KCQlyZXR1cm4gbm90aWNlOw0KCX0NCgkNCgkN
CgkNCgl2YXIgX3JlcGxhY2VtZW50cyA9IG5ldyBBcnJheTsNCgkNCglfcmVwbGFj
ZW1lbnRzLnB1c2gobm90aWNlKTsNCgkNCglmb3IoaSA9IDI7IGkgPCBhcmd1bWVu
dHMubGVuZ3RoOyBpKyspIHsNCgkJaWYodHlwZW9mKGFyZ3VtZW50c1tpXSkgPT0g
J2FycmF5JyB8fCB0eXBlb2YoYXJndW1lbnRzW2ldKSA9PSAnb2JqZWN0Jykgew0K
CQkJZm9yKGogaW4gYXJndW1lbnRzW2ldKSB7DQoJCQkJX3JlcGxhY2VtZW50cy5w
dXNoKGFyZ3VtZW50c1tpXVtqXSk7DQoJCQl9DQoJCX0gZWxzZSB7DQoJCQlfcmVw
bGFjZW1lbnRzLnB1c2goYXJndW1lbnRzW2ldKTsNCgkJfQ0KCQkNCgl9Ow0KCQ0K
CW5vdGljZSA9IHNwcmludGYuYXBwbHkobnVsbCwgX3JlcGxhY2VtZW50cyk7DQoJ
DQoJcmV0dXJuIG5vdGljZTsNCn0=

------------qTBjXnmaI6qvT5AepQBBtZ
Content-Disposition: inline; filename=scripts1.js
Content-Type: application/x-javascript; name=scripts1.js
Content-Location: http://js.niuzer.com/frontend/scripts1.js
Content-Transfer-Encoding: Base64

ZnVuY3Rpb24gdXBkYXRlTmV3c1ZpZXcoYSxiKXskLnBvc3QoSE9TVCsibGlzdGlu
Z3MvdXBkYXRlVmlldyIse246YSxzOmJ9KX1mdW5jdGlvbiBtYWtlSWQoYSxiKXty
ZXR1cm4iIyIrYStifWZ1bmN0aW9uIHVwZGF0ZVRpbWVyKCl7dGltZT1uZXcgRGF0
ZTttPXBhZGRUaW1lKHRpbWUuZ2V0TWludXRlcygpKTskKCIjdGltZXJDb3VudCIp
Lmh0bWwobSl9ZnVuY3Rpb24gcGFkZFRpbWUoYSl7YTwxMCYmKGE9IjAiK2EpO3Jl
dHVybiBhfWZ1bmN0aW9uIGlzSUU2KCl7aWYobmF2aWdhdG9yLnVzZXJBZ2VudC5p
bmRleE9mKCJNU0lFIDYiKT09LTEmJihkb2N1bWVudC5jcmVhdGVSYW5nZSE9bnVs
bHx8ZG9jdW1lbnQuY3JlYXRlUmFuZ2UhPS0xKSlyZXR1cm4hMTtyZXR1cm4hMH0K
ZnVuY3Rpb24gc2V0Q29va2llKGEsYixjKXt2YXIgZD1uZXcgRGF0ZSxlPWQuZ2V0
RGF0ZSgpLGY9ZC5nZXRIb3VycygpLGg9ZC5nZXRNaW51dGVzKCksZz1IT1NULnJl
cGxhY2UoImh0dHA6Ly8iLCIiKSxnPWcucmVwbGFjZSgiLyIsIiIpO2lmKHBhcnNl
SW50KGMpKWQuc2V0RGF0ZShlK2MpO2Vsc2V7dmFyIGo9Yy50b1N0cmluZygpLnNw
bGl0KCIuIiwyKTtkLnNldERhdGUoZSk7alsxXS5sZW5ndGg9PTE/ZC5zZXRIb3Vy
cyhmK3BhcnNlSW50KGMqMTApKTpqWzFdLmxlbmd0aD09MiYmZC5zZXRNaW51dGVz
KGgrcGFyc2VJbnQoYyoxMDApKX1kb2N1bWVudC5jb29raWU9YSsiPSIrZXNjYXBl
KGIpKyI7IGV4cGlyZXM9IitkLnRvR01UU3RyaW5nKCkrIjsgcGF0aD0vOyBkb21h
aW49IitnfQpmdW5jdGlvbiBnZXRDb29raWUoYSl7aWYoZG9jdW1lbnQuY29va2ll
Lmxlbmd0aD4wJiYoY19zdGFydD1kb2N1bWVudC5jb29raWUuaW5kZXhPZihhKyI9
IiksY19zdGFydCE9LTEpKXtjX3N0YXJ0PWNfc3RhcnQrYS5sZW5ndGgrMTtjX2Vu
ZD1kb2N1bWVudC5jb29raWUuaW5kZXhPZigiOyIsY19zdGFydCk7aWYoY19lbmQ9
PS0xKWNfZW5kPWRvY3VtZW50LmNvb2tpZS5sZW5ndGg7cmV0dXJuIHVuZXNjYXBl
KGRvY3VtZW50LmNvb2tpZS5zdWJzdHJpbmcoY19zdGFydCxjX2VuZCkpfXJldHVy
biIifVN0cmluZy5wcm90b3R5cGUudHJpbT1mdW5jdGlvbigpe3JldHVybiB0aGlz
LnJlcGxhY2UoL15ccyt8XHMrJC9nLCIiKX07CmZ1bmN0aW9uIHNwcmludGYoKXtp
ZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm4iIjt2YXIgYT1hcmd1bWVudHNbMF0s
Yj1bXTtmb3IoaT0xO2k8YXJndW1lbnRzLmxlbmd0aDtpKyspYi5wdXNoKGFyZ3Vt
ZW50c1tpXSk7aWYoIWIubGVuZ3RoKXJldHVybiBhO2ZvcihpIGluIGIpYT1hLnJl
cGxhY2UoLyVbc2ZkXS8sYltpXSk7cmV0dXJuIGF9JChkb2N1bWVudCkucmVhZHko
ZnVuY3Rpb24oKXt1cGRhdGVUaW1lcigpO3NldEludGVydmFsKCJ1cGRhdGVUaW1l
cigpIiw2RTQpfSk7CmZ1bmN0aW9uIHN0cmlwX3RhZ3MoYSl7aWYoYXJndW1lbnRz
Lmxlbmd0aDwzKWE9YS5yZXBsYWNlKC88XC8/KD8hXCEpW14+XSo+L2dpLCIiKTtl
bHNlIHZhciBiPWFyZ3VtZW50c1sxXSxjPWV2YWwoIlsiK2FyZ3VtZW50c1syXSsi
XSIpLGI9Yj8iPC8/KD8hKCIrYy5qb2luKCJ8IikrIikpXHUwMDA4W14+XSo+Ijoi
PC8/KCIrYy5qb2luKCJ8IikrIilcdTAwMDhbXj5dKj4iLGE9YS5yZXBsYWNlKFJl
Z0V4cChiLCJnaSIpLCIiKTthPWEucmVwbGFjZSgvKCZbQS1aYS16XS4qPzspL2cs
IiIpO3JldHVybiBhPWEucmVwbGFjZSgvXG4vZywiIil9CnZhciBfX2NhcHRjaGFQ
b3B1cD1uZXcgZnVuY3Rpb24oKXt0aGlzLmNhcHRjaGFQb3B1cD1udWxsO3RoaXMu
Y2FwdGNoYUlkPSIiO3RoaXMuY2FwdGNoYVZhbGlkPSExO3RoaXMuY2FsbGJhY2s9
bnVsbDt0aGlzLmNhcHRjaGFWaXNpYmxlPTA7dGhpcy5zaG93PWZ1bmN0aW9uKGEp
e2lmKCF0aGlzLmNhcHRjaGFWaXNpYmxlKWFuY2hvcj13aW5kb3cubG9jYXRpb24u
aHJlZi5yZXBsYWNlKC8oIy4qKSQvLCIiKSx3aW5kb3cubG9jYXRpb24uaHJlZj1h
bmNob3IrIiMiLHRoaXMuY2FwdGNoYVZpc2libGU9MSxjYXB0Y2hhSWQ9ImNhcHRj
aGFDaGVjayIsdGhpcy5jYWxsYmFjaz1hLHRoaXMuY2FwdGNoYUlkPWNhcHRjaGFJ
ZCx0aGlzLmNhcHRjaGFQb3B1cD1hPW5ldyBJbmxpbmVQb3B1cChjYXB0Y2hhSWQp
LGEuc2hvdygiLm1haW4iLHtjYWxsYmFjazpmdW5jdGlvbihhKXtfX2NhcHRjaGFQ
b3B1cC5fX2luaXRDYXB0Y2hhKGEpfSxydW5DYWxsYmFjazoiYmVmb3JlIn0pfTt0
aGlzLl9faW5pdENhcHRjaGE9CmZ1bmN0aW9uKGEpeyQuZ2V0KCIvbWVzc2FnZXMv
Y2FwdGNoYUNoZWNrLyIrY2FwdGNoYUlkKyIvIitNYXRoLnJhbmRvbSgpKzEyMzQ1
NjcsZnVuY3Rpb24oYil7JCgiIyIrYS5wbGFjZUhvbGRlcikuaHRtbChiKTtSZWNh
cHRjaGEuY3JlYXRlKFhZWiwiY2FwdGNoYUNvbnRhaW5lciIse3RoZW1lOiJ3aGl0
ZSJ9KTskKCIjY2FwdGNoYUNsb3NlQnV0dG9uIitfX2NhcHRjaGFQb3B1cC5jYXB0
Y2hhSWQpLmF0dHIoImhyZWYiLCJqYXZhc2NyaXB0Ol9fY2FwdGNoYVBvcHVwLmNh
cHRjaGFDbG9zZSgpIik7JCgiI2Zvcm0iK19fY2FwdGNoYVBvcHVwLmNhcHRjaGFJ
ZCkuc3VibWl0KGZ1bmN0aW9uKCl7aWYoX19jYXB0Y2hhUG9wdXAuY2FwdGNoYVZh
bGlkYXRpb24oKSl0cnl7X19jYXB0Y2hhUG9wdXAucnVuQ2FsbGJhY2soKX1jYXRj
aChhKXt9X19jYXB0Y2hhUG9wdXAuY2FwdGNoYVJlc3VsdCgpO3JldHVybiExfSl9
KX07dGhpcy5ydW5DYWxsYmFjaz1mdW5jdGlvbigpe3RoaXMuY2FsbGJhY2shPQpu
dWxsJiZ0aGlzLmNhbGxiYWNrLmNhbGwoKX07dGhpcy5jYXB0Y2hhQ2xvc2U9ZnVu
Y3Rpb24oKXskKCIjZm9ybSIrdGhpcy5jYXB0Y2hhSWQpLnVuYmluZCgpO3RoaXMu
Y2FwdGNoYVBvcHVwLnJlbW92ZSgpO3RoaXMuY2FwdGNoYVZpc2libGU9MH07dGhp
cy5jYXB0Y2hhVmFsaWRhdGlvbj1mdW5jdGlvbigpe3RoaXMuY2FwdGNoYVZhbGlk
PSExO3ZhciBhPVJlY2FwdGNoYS5nZXRfcmVzcG9uc2UoKSxiPVJlY2FwdGNoYS5n
ZXRfY2hhbGxlbmdlKCksYT0kLmFqYXgoe3VybDoiL2F1dGgvdmFsaWRDYXB0Y2hh
LyIrYSsiLyIrYisiLzEvIitNYXRoLnJhbmRvbSgpKzEyMzQ1NjcsYXN5bmM6ITF9
KS5yZXNwb25zZVRleHQsYj0xO3RyeXthPWV2YWwoIigiK2ErIikiKSxiPSFwYXJz
ZUludChhLnN0YXR1cyl9Y2F0Y2goYyl7Yj0wfWlmKGI9PTEpdGhpcy5jYXB0Y2hh
VmFsaWQ9ITA7cmV0dXJuIGJ9O3RoaXMuY2FwdGNoYVJlc3VsdD1mdW5jdGlvbigp
e2lmKHRoaXMuY2FwdGNoYVZhbGlkKXRoaXMuY2FwdGNoYUNsb3NlKCk7CmVsc2V7
JCgiI25vdGlmaWNhdGlvbiIrdGhpcy5jYXB0Y2hhSWQpLmNzcygiZGlzcGxheSIs
ImJsb2NrIik7dHJ5e1JlY2FwdGNoYS5yZWxvYWQoKX1jYXRjaChhKXt9fX19LHNl
YXJjaD1uZXcgZnVuY3Rpb24oKXt0aGlzLmNoYW5nZVNlYXJjaFR5cGU9ZnVuY3Rp
b24oYSxiKXtiPT0xPyhzVHlwZT0iQWR2IixzUGFyYW09IiwxIik6c1BhcmFtPXNU
eXBlPSIiO3N0aXJpT2JqPSQoIiNjaGFuZ2UiK3NUeXBlKyJTZWFyY2hUbzEiKTtk
aXNjT2JqPSQoIiNjaGFuZ2UiK3NUeXBlKyJTZWFyY2hUbzQiKTthPT00PyhzdGly
aU9iai5odG1sKCc8YSByZWw9Im5vZm9sbG93IiBjbGFzcz0ic2VhcmNoX3N0aXJp
IiBocmVmPSJqYXZhc2NyaXB0OnNlYXJjaC5jaGFuZ2VTZWFyY2hUeXBlKDEnK3NQ
YXJhbSsnKSI+JytfZ2V0Tm90aWNlKCJwYWdlcyIsInN0aXJpX2xhYmVsIikrIjwv
YT4iKSxkaXNjT2JqLmh0bWwoJzxzcGFuIGNsYXNzPSJzZWFyY2hfZGlzY3V0aWki
PicrX2dldE5vdGljZSgicGFnZXMiLAoiZGlzY3V0aWlfbGFiZWwiKSsiPC9zcGFu
PiIpKTooc3RpcmlPYmouaHRtbCgnPHNwYW4gY2xhc3M9InNlYXJjaF9zdGlyaSI+
JytfZ2V0Tm90aWNlKCJwYWdlcyIsInN0aXJpX2xhYmVsIikrIjwvc3Bhbj4iKSxk
aXNjT2JqLmh0bWwoJzxhIHJlbD0ibm9mb2xsb3ciIGNsYXNzPSJzZWFyY2hfZGlz
Y3V0aWkiIGhyZWY9ImphdmFzY3JpcHQ6c2VhcmNoLmNoYW5nZVNlYXJjaFR5cGUo
NCcrc1BhcmFtKycpIj4nK19nZXROb3RpY2UoInBhZ2VzIiwiZGlzY3V0aWlfbGFi
ZWwiKSsiPC9hPiIpKTskKCIjc2VhcmNoVHlwZSIrc1R5cGUpLnZhbChhKX07dGhp
cy5jbG9zZUFkdlNlYXJjaD1mdW5jdGlvbigpeyQoIiNhZHZTZWFyY2hGb3JtIiku
c2xpZGVVcCgiZmFzdCIsZnVuY3Rpb24oKXskKCIjYWR2U2VhcmNoQ29udHJvbCIp
LnJlbW92ZUNsYXNzKCJ1cDMiKTskKCIjYWR2U2VhcmNoQ29udHJvbCIpLmFkZENs
YXNzKCJkb3duIik7JCgiI2FkdlNlYXJjaENvbnRyb2wiKS5hdHRyKCJocmVmIiwK
ImphdmFzY3JpcHQ6c2VhcmNoLm9wZW5BZHZTZWFyY2goKSIpOyQoIiNhZHZTZWFy
Y2hDb250cm9sIikudGV4dChfZ2V0Tm90aWNlKCJwYWdlcyIsImRlc2NoaWRlX2xh
YmVsIikpfSl9O3RoaXMub3BlbkFkdlNlYXJjaD1mdW5jdGlvbigpeyQoIiNhZHZT
ZWFyY2hGb3JtIikuc2xpZGVEb3duKCJmYXN0IixmdW5jdGlvbigpeyQoIiNhZHZT
ZWFyY2hDb250cm9sIikucmVtb3ZlQ2xhc3MoImRvd24iKTskKCIjYWR2U2VhcmNo
Q29udHJvbCIpLmFkZENsYXNzKCJ1cDMiKTskKCIjYWR2U2VhcmNoQ29udHJvbCIp
LmF0dHIoImhyZWYiLCJqYXZhc2NyaXB0OnNlYXJjaC5jbG9zZUFkdlNlYXJjaCgp
Iik7JCgiI2FkdlNlYXJjaENvbnRyb2wiKS50ZXh0KF9nZXROb3RpY2UoInBhZ2Vz
IiwiaW5jaGlkZV9sYWJlbCIpKX0pfTt0aGlzLnNlYXJjaE5ld3M9ZnVuY3Rpb24o
KXskKCIjc2VhcmNoVHlwZUFkdiIpLnZhbCgxKTskKCIjYWR2YW5jZWRTZWFyY2hG
b3JtIikuc3VibWl0KCl9O3RoaXMuc2VhcmNoRGlzY3Vzc2lvbnM9CmZ1bmN0aW9u
KCl7JCgiI3NlYXJjaFR5cGVBZHYiKS52YWwoNCk7JCgiI2FkdmFuY2VkU2VhcmNo
Rm9ybSIpLnN1Ym1pdCgpfTt0aGlzLmNoZWNrQWR2Rm9ybT1mdW5jdGlvbigpe2tl
eXdvcmQ9JCgiI2FkdlNlYXJjaEtleXdvcmQiKS52YWwoKTtpZihrZXl3b3JkLmxl
bmd0aDwzKXJldHVybiAkKCIjYWR2Rm9ybUVycm9yTXNnIikuaHRtbChfZ2V0Tm90
aWNlKCJsaXN0aW5ncyIsInNlYXJjaF9iYWRfa2V5IikpLCQoIiNhZHZGb3JtRXJy
b3IiKS5zbGlkZURvd24oImZhc3QiKSwhMTtpZigkKCIjc1N0YW1wIikudmFsKCk+
JCgiI2VTdGFtcCIpLnZhbCgpKXJldHVybiAkKCIjYWR2Rm9ybUVycm9yTXNnIiku
aHRtbChfZ2V0Tm90aWNlKCJsaXN0aW5ncyIsInNlYXJjaF9iYWRfZGF0ZSIpKSwk
KCIjYWR2Rm9ybUVycm9yIikuc2xpZGVEb3duKCJmYXN0IiksITE7cmV0dXJuITB9
O3RoaXMuY29udmVydFRvU3RhbXA9ZnVuY3Rpb24oYSl7ZGF0ZVBhcnRzPWEuc3Bs
aXQoIi8iKTthPW5ldyBEYXRlKERhdGUuVVRDKGRhdGVQYXJ0c1syXSwKZGF0ZVBh
cnRzWzFdLTEsZGF0ZVBhcnRzWzBdKSk7cmV0dXJuIGEuZ2V0VGltZSgpLzFFM307
dGhpcy5jb250YWluZXJIaWRkZW49ITE7dGhpcy5sYXN0U2VsZWN0ZWQ9dGhpcy5z
ZWxlY3RlZD10aGlzLnRpbWVPdXRIYW5kbGVyPW51bGw7dGhpcy5RdWlja1NlYXJj
aEluaXQ9ZnVuY3Rpb24oKXskKCIja2V5d29yZCIpLmtleWRvd24oZnVuY3Rpb24o
YSl7a2V5PWEuY2hhckNvZGU/YS5jaGFyQ29kZTphLmtleUNvZGU/YS5rZXlDb2Rl
OjA7aWYoa2V5PT0zOHx8a2V5PT00MClzZWFyY2gubmF2aWdhdGVRdWlja1NlYXJj
aExpc3Qoa2V5KTtlbHNlIGlmKGtleT09MjcpdHJ5e3JldHVybiBzZWFyY2guY2xl
YXJRdWlja1NlYXJjaCgpLCExfWNhdGNoKGIpe319KTskKCIja2V5d29yZCIpLmtl
eXVwKGZ1bmN0aW9uKGEpe2tleT1hLmNoYXJDb2RlP2EuY2hhckNvZGU6YS5rZXlD
b2RlP2Eua2V5Q29kZTowO2lmKGtleT09MjcpdHJ5e3JldHVybiBzZWFyY2guY2xl
YXJRdWlja1NlYXJjaCgpLAohMX1jYXRjaChiKXt9ZWxzZSBpZihrZXk+OCYma2V5
PDQ2fHxrZXk+OTApcmV0dXJuOyQoIiNrZXl3b3JkIikudmFsKCkubGVuZ3RoJiYo
JCgiI2tleXdvcmQiKS5sZW5ndGg+PTEmJiQoIiNrZXl3b3JkIikudmFsKCkubGVu
Z3RoPDMyPyQuZ2V0SlNPTihIT1NUKyJzZWFyY2gvcXVpY2tTZWFyY2g/cT0iKyQo
IiNrZXl3b3JkIikudmFsKCksZnVuY3Rpb24oYSl7dGhpcy5zZWxlY3RlZD1udWxs
O3RyeXskKCIjcXVpY2tTZWFyY2giKS5jc3MoImRpc3BsYXkiKT09Im5vbmUiJiYk
KCIjcXVpY2tTZWFyY2giKS5jc3MoImRpc3BsYXkiLCJibG9jayIpLHNlYXJjaC5w
cmludEVsZW1lbnQoYSksJCgiI3F1aWNrU2VhcmNoIikuY3NzKCJkaXNwbGF5Iiwi
YmxvY2siKX1jYXRjaChiKXt9fSk6JCgiI3F1aWNrU2VhcmNoIikuY3NzKCJkaXNw
bGF5Iiwibm9uZSIpKX0pOyQoIiNxdWlja1NlYXJjaCIpLm1vdXNlb3V0KGZ1bmN0
aW9uKCl7c2VhcmNoLmNvbnRhaW5lckhpZGRlbj0hMDtzZWFyY2gudGltZU91dEhh
bmRsZXI9CnNldFRpbWVvdXQoInNlYXJjaC5oaWRlUXVpY2tTZWFyY2goKSIsMUUz
KTtvYmplY3RzPSQoIi5xdWlja1NlYXJjaEl0ZW1zIik7Zm9yKGk9MDtpPG9iamVj
dHMubGVuZ3RoO2krKykkKG9iamVjdHNbaV0pLnJlbW92ZUF0dHIoInN0eWxlIil9
KTskKCIjcXVpY2tTZWFyY2giKS5tb3VzZW92ZXIoZnVuY3Rpb24oKXtjbGVhclRp
bWVvdXQoc2VhcmNoLnRpbWVPdXRIYW5kbGVyKTskKCIjcXVpY2tTZWFyY2giKS5j
c3MoImRpc3BsYXkiLCJibG9jayIpO29iamVjdHM9JCgiLnF1aWNrU2VhcmNoSXRl
bSIpO2ZvcihpPTA7aTxvYmplY3RzLmxlbmd0aDtpKyspJChvYmplY3RzW2ldKS5y
ZW1vdmVBdHRyKCJzdHlsZSIpfSl9O3RoaXMuaGlkZVF1aWNrU2VhcmNoPWZ1bmN0
aW9uKCl7aWYodGhpcy5jb250YWluZXJIaWRkZW4pJCgiI3F1aWNrU2VhcmNoIiku
Y3NzKCJkaXNwbGF5Iiwibm9uZSIpLHRoaXMuY29udGFpbmVySGlkZGVuPSExfTt0
aGlzLnByaW50RWxlbWVudD1mdW5jdGlvbihhKXtodG1sPQoiIjskKCIjcXVpY2tT
ZWFyY2giKS5odG1sKCIiKTtmb3IoaT0wO2k8YS5sZW5ndGg7aSsrKXVybD1IT1NU
KyJzZWFyY2g/cT0iK2FbaV0ucGhyYXNlLnJlcGxhY2UoIiAiLCIrIikrIiZ4eD0x
IixodG1sKz0nPGRpdiBjbGFzcz0icXVpY2tTZWFyY2hJdGVtIj4nLHJlcz1wYXJz
ZUludChhW2ldLnJlc3VsdHMpPyIgPHN0cm9uZz4iK2FbaV0ucmVzdWx0cysiPC9z
dHJvbmc+IjoiIixodG1sKz0nPGEgcmVsPSJub2ZvbGxvdyIgaHJlZj0iJyt1cmwr
JyI+JythW2ldLnBocmFzZStyZXMrIjwvYT4iLGh0bWwrPSI8L2Rpdj4iOyQoIiNx
dWlja1NlYXJjaCIpLmFwcGVuZChodG1sKX07dGhpcy5uYXZpZ2F0ZVF1aWNrU2Vh
cmNoTGlzdD1mdW5jdGlvbihhKXtpZigkKCIjcXVpY2tTZWFyY2giKS5jc3MoImRp
c3BsYXkiKSE9Im5vbmUiJiYoaXRlbXM9JCgiLnF1aWNrU2VhcmNoSXRlbSIpLGl0
ZW1zLmxlbmd0aCE9MCkpdGhpcy5zZWxlY3RlZD09bnVsbD90aGlzLnNlbGVjdGVk
PTA6YT09MzgmJgp0aGlzLnNlbGVjdGVkPj0xP3RoaXMuc2VsZWN0ZWQtLTphPT00
MCYmdGhpcy5zZWxlY3RlZDxpdGVtcy5sZW5ndGgtMSYmdGhpcy5zZWxlY3RlZCsr
LCQoaXRlbXNbdGhpcy5zZWxlY3RlZF0pLmNzcygiYmFja2dyb3VuZCIsIiNkZmU4
ZjYiKSx0aGlzLmxhc3RTZWxlY3RlZCE9bnVsbCYmdGhpcy5sYXN0U2VsZWN0ZWQh
PXRoaXMuc2VsZWN0ZWQmJiQoaXRlbXNbdGhpcy5sYXN0U2VsZWN0ZWRdKS5jc3Mo
ImJhY2tncm91bmQiLCIjZmYwMDAwIiksdGhpcy5sYXN0U2VsZWN0ZWQ9dGhpcy5z
ZWxlY3RlZCx2YWx1ZT0kKGl0ZW1zW3RoaXMuc2VsZWN0ZWRdKS50ZXh0KCksdmFs
dWU9dmFsdWUucmVwbGFjZSgvXChbMC05XSo/XCkvLCIiKSwkKCIja2V5d29yZCIp
LnZhbCh2YWx1ZSl9O3RoaXMuY2xlYXJRdWlja1NlYXJjaD1mdW5jdGlvbigpeyQo
IiNxdWlja1NlYXJjaCIpLmh0bWwoIiIpOyQoIi5xdWlja3NlYXJjaGl0ZW0iKS5y
ZW1vdmUoKTskKCIjcXVpY2tTZWFyY2giKS5jc3MoImRpc3BsYXkiLAoibm9uZSIp
fX07JChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKXt9KTsKdmFyIHVzZXJDYXRl
Z29yaWVzPW5ldyBmdW5jdGlvbigpe3RoaXMuc2VhcmNoPWZ1bmN0aW9uKCl7a2V5
d29yZD10aGlzLmdldEtleXdvcmQoKTtpZihrZXl3b3JkLmxlbmd0aDwyKXJldHVy
biExOyQoIiN1c2VyQ2F0ZWdvcmllc1ByZWxvYWRlciIpLnNob3coKTskKCIjdXNl
ckNhdGVnb3JpZXNLZXl3b3JkIikuYXR0cigiZGlzYWJsZWQiLCEwKTskLmdldEpT
T04oSE9TVCsic2VhcmNoL3VzZXJDYXRlZ29yaWVzP3E9IitlbmNvZGVVUkkoa2V5
d29yZCksZnVuY3Rpb24oYSl7dXNlckNhdGVnb3JpZXMuaGFuZGxlUmVzcG9uc2Uo
YSk7JCgiI3VzZXJDYXRlZ29yaWVzUHJlbG9hZGVyIikuaGlkZSgpfSk7cmV0dXJu
ITF9O3RoaXMuZ2V0S2V5d29yZD1mdW5jdGlvbigpe3JldHVybiAkKCIjdXNlckNh
dGVnb3JpZXNLZXl3b3JkIikudmFsKCl9O3RoaXMuaGFuZGxlUmVzcG9uc2U9ZnVu
Y3Rpb24oYSl7JCgiI3VzZXJDYXRlZ29yaWVzS2V5d29yZCIpLmF0dHIoImRpc2Fi
bGVkIiwhMSk7CnBhcnNlSW50KGEuZXJyb3IpPT0xP3RoaXMuc2hvd05vdEZvdW5k
KCk6KGRpdj0nPGRpdiBpZD0idG1wQ2F0UmVzdWx0cyIgc3R5bGU9ImRpc3BsYXk6
IG5vbmUiPjwvZGl2PicsJCgiI3VzZXJDYXRlZ29yaWVzUmVzdWx0cyIpLmh0bWwo
ZGl2KSwkKCIjdG1wQ2F0UmVzdWx0cyIpLmh0bWwoYS5odG1sKSx0aGlzLnRvZ2ds
ZSgidG1wQ2F0UmVzdWx0cyIsImRvd24iKSl9O3RoaXMuc2hvd05vdEZvdW5kPWZ1
bmN0aW9uKCl7c3Bhbj0nPHNwYW4gY2xhc3M9ImVycm9yIiBpZD0iY2F0c25vdGZv
dW5kIiBzdHlsZT0iZGlzcGxheTogbm9uZTsgbWFyZ2luOiA1cHggMHB0IDBwdDsi
PicrX2dldE5vdGljZSgicGFnZXMiLCJuaWNpdW5fcmV6dWx0YXQiKSsiPC9zcGFu
PiI7JCgiI3VzZXJDYXRlZ29yaWVzUmVzdWx0cyIpLmh0bWwoc3Bhbik7dGhpcy50
b2dnbGUoImNhdHNub3Rmb3VuZCIsImRvd24iKX07dGhpcy50b2dnbGU9ZnVuY3Rp
b24oYSxiKXtiPT0idXAiPyQoIiMiK2EpLnNsaWRlVXAoImZhc3QiKToKJCgiIyIr
YSkuc2xpZGVEb3duKCJmYXN0Iil9O3RoaXMuYWRkTG9jYXRpb249ZnVuY3Rpb24o
YSxiKXt0cnl7JCgiI25vTG9jQ2F0MSIpLnJlbW92ZSgpfWNhdGNoKGMpe30kKCIj
X19Bc2VhcmNoQ2F0IithKS5hdHRyKCJpZCIpPyhleGlzdEVsZW1lbnQ9JCgiI2Nh
dHNmb3VuZGV4aXN0cyIpLnRleHQoKSxleGlzdEVsZW1lbnQubGVuZ3RoPDMmJihz
cGFuPSc8c3BhbiBjbGFzcz0iZXJyb3IiIGlkPSJjYXRzZm91bmRleGlzdHMiPicr
X2dldE5vdGljZSgicGFnZXMiLCJjYXRlZ29yaWFfZXhpc3RhX2RlamFfaW5fbGlz
dGEiKSsiPC9zcGFuPiIsJCgiI3VzZXJDYXRlZ29yaWVzUmVzdWx0cyIpLnByZXBl
bmQoc3BhbikpKTokLnBvc3QoSE9TVCsiZmF2L2FkZExvY2F0aW9uIix7YzphLHU6
Yn0sZnVuY3Rpb24oKXt1c2VyQ2F0ZWdvcmllcy5hZGRSZXN1bHQoYSl9LCJqc29u
Iil9O3RoaXMuZGVsZXRlTG9jYXRpb249ZnVuY3Rpb24oYSxiKXskLnBvc3QoSE9T
VCsiZmF2L2RlbGV0ZUxvY2F0aW9uIiwKe2M6YSx1OmJ9LGZ1bmN0aW9uKCl7dXNl
ckNhdGVnb3JpZXMucmVtb3ZlUmVzdWx0KGEsMSl9LCJqc29uIil9O3RoaXMuZGVs
ZXRlQ2F0ZWdvcnk9ZnVuY3Rpb24oYSxiKXskLnBvc3QoSE9TVCsiZmF2L2RlbGV0
ZUNhdGVnb3J5Iix7YzphLHU6Yn0sZnVuY3Rpb24oKXt1c2VyQ2F0ZWdvcmllcy5y
ZW1vdmVSZXN1bHQoYSl9LCJqc29uIil9O3RoaXMucmVtb3ZlUmVzdWx0PWZ1bmN0
aW9uKGEsYil7JCgiI19fQXNlYXJjaENhdCIrYSkuc2xpZGVVcCgiZmFzdCIsZnVu
Y3Rpb24oKXskKHRoaXMpLnJlbW92ZSgpfSk7b2JqZWN0cz0kKCIuY3NyOnZpc2li
bGUiKTtvYmplY3RzLmxlbmd0aD09MSYmKHR5cGVvZiBiPT0idW5kZWZpbmVkIj8o
dGV4dD1fZ2V0Tm90aWNlKCJwYWdlcyIsIm5pY2lvX2NhdGVnb3JpZV9mYXZvcml0
YSIpLGNvbnRJZD0idXNlckNhdGVnb3JpZXNTZWxlY3RlZCIsc3BhbklkPSJub0xv
Y0NhdDIiKToodGV4dD1fZ2V0Tm90aWNlKCJwYWdlcyIsImludHJvZHVjZXRpX251
bWVsZV91bnVpX2p1ZGV0X3NhdV9vcmFzIiksCmNvbnRJZD0idXNlckxvY2F0aW9u
c1NlbGVjdGVkIixzcGFuSWQ9Im5vTG9jQ2F0MSIpLCQoIiMiK2NvbnRJZCkuaHRt
bCgnPHNwYW4gY2xhc3M9Im1lc3NhZ2UiIGlkPSInK3NwYW5JZCsnIj4nK3RleHQr
Ijwvc3Bhbj4iKSl9O3RoaXMuYWRkUmVzdWx0PWZ1bmN0aW9uKGEsYil7dHJ5eyQo
Ii5ub3RpZiIpLnJlbW92ZSgpLCQoIiNub0xvY0NhdCIpLnJlbW92ZSgpfWNhdGNo
KGMpe31lbD0kKCIjX19Sc2VhcmNoQ2F0IithKTtlbC5zbGlkZVVwKCJmYXN0Iiku
Y2xvbmUoITApLmNzcygiZGlzcGxheSIsIm5vbmUiKS5wcmVwZW5kVG8oIiN1c2Vy
TG9jYXRpb25zU2VsZWN0ZWQiKS5zbGlkZURvd24oImZhc3QiKS5hdHRyKCJpZCIs
Il9fQXNlYXJjaENhdCIrYSkuY3NzKCJkaXNwbGF5IiwiYmxvY2siKTt0cnl7JCgi
I19fQWN0aW9uQ2F0IithKyIgPiBhIikuYXR0cigidGl0bGUiLCJTdGVyZ2UiKSwk
KCIjX19BY3Rpb25DYXQiK2ErIiA+IGEiKS50ZXh0KCJTdGVyZ2UiKSwkKCIjX19B
Y3Rpb25DYXQiKwphKS5yZW1vdmVDbGFzcygiY3NyYWRkIiksJCgiI19fQWN0aW9u
Q2F0IithKS5hZGRDbGFzcygiY3NycmVtIiksJCgiI19fQWN0aW9uQ2F0IithKyIg
PiBhIikuYXR0cigiaHJlZiIsImphdmFzY3JpcHQ6dXNlckNhdGVnb3JpZXMuZGVs
ZXRlTG9jYXRpb24oIithKyIsICIrYisiKSIpLCQoIiNfX0FjdGlvbkNhdCIrYSsi
ID4gYSIpLnJlbW92ZUNsYXNzKCJhZGQiKSwkKCIjX19BY3Rpb25DYXQiK2ErIiA+
IGEiKS5hZGRDbGFzcygiZGVsZXRlIil9Y2F0Y2goZCl7fX07dGhpcy5zaG93Q2F0
ZWdvcmllcz1mdW5jdGlvbigpeyQoIiN1Y0Zvcm0iKS5zbGlkZVVwKCJmYXN0Iik7
JCgiI215TG9jYXRpb25zIikuaHRtbCgnPGEgcmVsPSJub2ZvbGxvdyIgaHJlZj0i
amF2YXNjcmlwdDp1c2VyQ2F0ZWdvcmllcy5zaG93TG9jYXRpb25zKCkiPicrX2dl
dE5vdGljZSgicGFnZXMiLCJzdGlyaV9sb2NhbGVfbGFiZWwiKSsiPC9hPiIpOyQo
IiNteUNhdGVnb3JpZXMiKS5odG1sKCc8c3Bhbj48YSBocmVmPSJmYXZvcml0ZS1j
YXRlZ29yaWVzLmh0bWwiPicrCl9nZXROb3RpY2UoInBhZ2VzIiwiY2F0ZWdvcmlp
bGVfbWVsZV9sYWJlbCIpKyI8L2E+PC9zcGFuPiIpOyQoIiN1c2VyTG9jYXRpb25z
U2VsZWN0ZWQiKS5jc3MoImRpc3BsYXkiLCJub25lIik7JCgiI3VzZXJDYXRlZ29y
aWVzU2VsZWN0ZWQiKS5jc3MoImRpc3BsYXkiLCJibG9jayIpOyQoIiN1c2VyQ2F0
ZWdvcmllc1Jlc3VsdHMiKS5odG1sKCIiKTskKCIjdXNlckNhdGVnb3JpZXNNYW51
YWxMaW5rIikuYXR0cigiaHJlZiIsSE9TVCsiZmF2b3JpdGUtY2F0ZWdvcmllcy5o
dG1sIil9O3RoaXMuc2hvd0xvY2F0aW9ucz1mdW5jdGlvbigpeyQoIiN1Y0Zvcm0i
KS5zbGlkZURvd24oImZhc3QiKTskKCIjbXlMb2NhdGlvbnMiKS5odG1sKCc8c3Bh
bj48YSBocmVmPSJmYXZvcml0ZS1sb2NhdGlvbnMuaHRtbCI+JytfZ2V0Tm90aWNl
KCJwYWdlcyIsInN0aXJpX2xvY2FsZV9sYWJlbCIpKyI8L2E+PC9zcGFuPiIpOyQo
IiNteUNhdGVnb3JpZXMiKS5odG1sKCc8YSByZWw9Im5vZm9sbG93IiBocmVmPSJq
YXZhc2NyaXB0OnVzZXJDYXRlZ29yaWVzLnNob3dDYXRlZ29yaWVzKCkiPicrCl9n
ZXROb3RpY2UoInBhZ2VzIiwiY2F0ZWdvcmlpbGVfbWVsZV9sYWJlbCIpKyI8L2E+
Iik7JCgiI3VzZXJDYXRlZ29yaWVzU2VsZWN0ZWQiKS5jc3MoImRpc3BsYXkiLCJu
b25lIik7JCgiI3VzZXJMb2NhdGlvbnNTZWxlY3RlZCIpLmNzcygiZGlzcGxheSIs
ImJsb2NrIik7JCgiI3VzZXJDYXRlZ29yaWVzTWFudWFsTGluayIpLmF0dHIoImhy
ZWYiLEhPU1QrImZhdm9yaXRlLWxvY2F0aW9ucy5odG1sIil9fTtmdW5jdGlvbiBJ
bmxpbmVQb3B1cChhKXt0aGlzLmlkPWE7dGhpcy53aW5kb3dPYmplY3Q9dGhpcy5j
cmVhdGVXaW5kb3coKTt0aGlzLm1haW5UZD0ibWFpblRkIithO3RoaXMuY29udGFp
bmVySWQ9bnVsbDtyZXR1cm4gdGhpc30KSW5saW5lUG9wdXAucHJvdG90eXBlLnNo
b3c9ZnVuY3Rpb24oYSxiKXt0aGlzLmNvbnRhaW5lcklkPWE7JChhKS5hcHBlbmQo
dGhpcy53aW5kb3dPYmplY3QpO2lmKHR5cGVvZiBiPT0idW5kZWZpbmVkIilyZXR1
cm4gdGhpcy5kaXNwbGF5KGIpLHRoaXM7X3BhcmVudD10aGlzO2lmKHR5cGVvZiBi
Lmp1c3RMb2FkZXIhPSJ1bmRlZmluZWQiKXJldHVybiB0aGlzLnNob3dXaW5kb3dQ
cmVsb2FkZXIoYiksdGhpczt0eXBlb2YgYi5jYWxsYmFjayE9InVuZGVmaW5lZCIm
JigodHlwZW9mIGIucnVuQ2FsbGJhY2s9PSJ1bmRlZmluZWQiPyJhZnRlciI6Yi5y
dW5DYWxsYmFjayk9PSJhZnRlciI/dGhpcy5kaXNwbGF5KGIsITApOih0aGlzLmNh
bGxGdW5jdGlvbihiLmNhbGxiYWNrKSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7X3Bh
cmVudC5kaXNwbGF5KGIpfSwxMDApKSk7cmV0dXJuIHRoaXN9OwpJbmxpbmVQb3B1
cC5wcm90b3R5cGUuY2FsbEZ1bmN0aW9uPWZ1bmN0aW9uKGEpe2EuYXBwbHkodGhp
cyxbe3BsYWNlSG9sZGVyOnRoaXMubWFpblRkLHdpbmRvd09iamVjdDp0aGlzLndp
bmRvd09iamVjdH1dKTtyZXR1cm4gdGhpc307CklubGluZVBvcHVwLnByb3RvdHlw
ZS5kaXNwbGF5PWZ1bmN0aW9uKGEsYil7dGhpcy5zaG93V2luZG93UHJlbG9hZGVy
KGEpO2lmKHR5cGVvZiBhPT0idW5kZWZpbmVkInx8dHlwZW9mIGEuZWZmZWN0PT0i
dW5kZWZpbmVkIilyZXR1cm4gdGhpcy53aW5kb3dPYmplY3QuY3NzKCJkaXNwbGF5
IiwiYmxvY2siKSx0eXBlb2YgYiE9InVuZGVmaW5lZCImJnRoaXMuY2FsbEZ1bmN0
aW9uKGEuY2FsbGJhY2spLHRoaXM7dmFyIGM9dHlwZW9mIGEuc3BlZWQ9PSJ1bmRl
ZmluZWQiPyJmYXN0IjphLnNwZWVkLGQ9dGhpcztzd2l0Y2goYS5lZmZlY3Qpe2Nh
c2UgImZhZGVJbiI6dGhpcy53aW5kb3dPYmplY3QuZmFkZUluKGMsZnVuY3Rpb24o
KXt0eXBlb2YgYiE9InVuZGVmaW5lZCImJmQuY2FsbEZ1bmN0aW9uKGEuY2FsbGJh
Y2spfSk7YnJlYWs7Y2FzZSAic2xpZGVEb3duIjp0aGlzLndpbmRvd09iamVjdC5z
bGlkZURvd24oYyxmdW5jdGlvbigpe2QuY2FsbEZ1bmN0aW9uKGEuY2FsbGJhY2sp
fSl9cmV0dXJuIHRoaXN9OwpJbmxpbmVQb3B1cC5wcm90b3R5cGUuc2hvd1dpbmRv
d1ByZWxvYWRlcj1mdW5jdGlvbihhKXtpZih0eXBlb2YgYT09InVuZGVmaW5lZCJ8
fHR5cGVvZiBhLmxvYWRlcj09InVuZGVmaW5lZCIpcmV0dXJuIHRoaXM7dGhpcy5j
bGVhcldpbmRvd0NvbnRlbnQoKTt2YXIgYj1hLmxvYWRlcixjPSQoIjwiK2IuX2Vs
ZW1lbnQrIj4iKTt0eXBlb2YgYi5fY2xhc3MhPSJ1bmRlZmluZWQiJiZjLmF0dHIo
ImNsYXNzIixiLl9jbGFzcyk7dHlwZW9mIGIuX3RleHQhPSJ1bmRlZmluZWQiJiZj
Lmh0bWwoYi5fdGV4dCk7dmFyIGI9JCgnPGRpdiBjbGFzcz0icG1haW4iPicpLGQ9
JCgiYm9keSIpLmhlaWdodCgpLGU9JCgiYm9keSIpLndpZHRoKCksZD0kKCc8ZGl2
IGlkPSJjYW52YXMnK3RoaXMuaWQrJyIgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0
ZTsgbGVmdDogMCwgdG9wOiAwOyB3aWR0aDogJytlKyJweDsgaGVpZ2h0OiAiK2Qr
J3B4OyB6LWluZGV4OiA5OTkiPicpOyQoImJvZHkiKS5wcmVwZW5kKGQpOwpiLmFw
cGVuZChjKTskKCIjIit0aGlzLm1haW5UZCkuYXBwZW5kKGIpO3R5cGVvZiBhLmp1
c3RMb2FkZXIhPSJ1bmRlZmluZWQiJiZ0aGlzLndpbmRvd09iamVjdC5zaG93KCl9
OwpJbmxpbmVQb3B1cC5wcm90b3R5cGUuaGlkZT1mdW5jdGlvbihhLGIpe2lmKHR5
cGVvZiBhPT0idW5kZWZpbmVkInx8dHlwZW9mIGEuZWZmZWN0PT0idW5kZWZpbmVk
IilyZXR1cm4gdGhpcy53aW5kb3dPYmplY3QuaGlkZSgpLHR5cGVvZiBiIT0idW5k
ZWZpbmVkIiYmdGhpcy53aW5kb3dPYmplY3QucmVtb3ZlKCksdGhpczt2YXIgYz10
eXBlb2YgYS5ydW5DYWxsYmFjaz09InVuZGVmaW5lZCI/ImFmdGVyIjphLnJ1bkNh
bGxiYWNrLGQ9dHlwZW9mIGEuc3BlZWQ9PSJ1bmRlZmluZWQiPyJmYXN0IjphLnNw
ZWVkLGU9dGhpcztzd2l0Y2goYS5lZmZlY3Qpe2Nhc2UgImZhZGVPdXQiOnRoaXMu
d2luZG93T2JqZWN0LmZhZGVPdXQoZCxmdW5jdGlvbigpe3R5cGVvZiBiIT0idW5k
ZWZpbmVkIiYmKHR5cGVvZiBhLmNhbGxiYWNrIT0idW5kZWZpbmVkIiYmYz09ImFm
dGVyIiYmZS5jYWxsRnVuY3Rpb24oYS5jYWxsYmFjayksZS53aW5kb3dPYmplY3Qu
cmVtb3ZlKCkpfSk7YnJlYWs7Y2FzZSAic2xpZGVVcCI6dGhpcy53aW5kb3dPYmpl
Y3Quc2xpZGVVcChkLApmdW5jdGlvbigpe3R5cGVvZiBiIT0idW5kZWZpbmVkIiYm
KHR5cGVvZiBhLmNhbGxiYWNrIT0idW5kZWZpbmVkIiYmYz09ImFmdGVyIiYmZS5j
YWxsRnVuY3Rpb24oYS5jYWxsYmFjayksZS53aW5kb3dPYmplY3QucmVtb3ZlKCkp
fSl9cmV0dXJuIHRoaXN9O0lubGluZVBvcHVwLnByb3RvdHlwZS5yZW1vdmU9ZnVu
Y3Rpb24oYSl7JCgiI2NhbnZhcyIrdGhpcy5pZCkucmVtb3ZlKCk7dGhpcy5oaWRl
KGEsITApO3JldHVybiB0aGlzfTtJbmxpbmVQb3B1cC5wcm90b3R5cGUuY2xlYXJX
aW5kb3dDb250ZW50PWZ1bmN0aW9uKCl7JCgiIyIrdGhpcy5tYWluVGQpLmh0bWwo
IiIpfTsKSW5saW5lUG9wdXAucHJvdG90eXBlLmNyZWF0ZVdpbmRvdz1mdW5jdGlv
bigpe3ZhciBhPSQoIjx0YWJsZT4iKS5hdHRyKCJjbGFzcyIsInBwIikuYXR0cigi
aWQiLHRoaXMuaWQpLmNzcygiZGlzcGxheSIsIm5vbmUiKS5hdHRyKCJjZWxsc3Bh
Y2luZyIsIjAiKS5hdHRyKCJjZWxscGFkZGluZyIsIjAiKSxiPSQoIjx0cj4iKSxj
PSQoIjx0ZD4iKS5hdHRyKCJjbGFzcyIsInAxIik7Yy5odG1sKCImbmJzcDsiKTti
LmFwcGVuZChjKTtjPSQoIjx0ZD4iKS5hdHRyKCJjbGFzcyIsInAyIik7Yy5odG1s
KCImbmJzcDsiKTtiLmFwcGVuZChjKTtjPSQoIjx0ZD4iKS5hdHRyKCJjbGFzcyIs
InAzIik7Yy5odG1sKCImbmJzcDsiKTtiLmFwcGVuZChjKTthLmFwcGVuZChiKTti
PSQoIjx0cj4iKTtjPSQoIjx0ZD4iKS5hdHRyKCJjbGFzcyIsInA0Iik7Yy5odG1s
KCImbmJzcDsiKTtiLmFwcGVuZChjKTtjPSQoIjx0ZD4iKS5hdHRyKCJjbGFzcyIs
InBtYWluIikuYXR0cigiaWQiLCJtYWluVGQiKwp0aGlzLmlkKTtjLmh0bWwoIiZu
YnNwOyIpO2IuYXBwZW5kKGMpO2M9JCgiPHRkPiIpLmF0dHIoImNsYXNzIiwicDQi
KTtjLmh0bWwoIiZuYnNwOyIpO2IuYXBwZW5kKGMpO2EuYXBwZW5kKGIpO2I9JCgi
PHRyPiIpO2M9JCgiPHRkPiIpLmF0dHIoImNsYXNzIiwicDYiKTtjLmh0bWwoIiZu
YnNwOyIpO2IuYXBwZW5kKGMpO2M9JCgiPHRkPiIpLmF0dHIoImNsYXNzIiwicDIi
KTtjLmh0bWwoIiZuYnNwOyIpO2IuYXBwZW5kKGMpO2M9JCgiPHRkPiIpLmF0dHIo
ImNsYXNzIiwicDUiKTtjLmh0bWwoIiZuYnNwOyIpO2IuYXBwZW5kKGMpO2EuYXBw
ZW5kKGIpO3JldHVybiBhfTtmdW5jdGlvbiBpbl9hcnJheShhLGIsYyl7dmFyIGQ9
IiI7aWYoYylmb3IoZCBpbiBiKXtpZihiW2RdPT09YSlyZXR1cm4hMH1lbHNlIGZv
cihkIGluIGIpaWYoYltkXT09YSlyZXR1cm4hMDtyZXR1cm4hMX0KZnVuY3Rpb24g
YXJyYXlfc2VhcmNoKGEsYixjKXt2YXIgYz0hIWMsZD0iIjtmb3IoZCBpbiBiKWlm
KGMmJmJbZF09PT1hfHwhYyYmYltkXT09YSlyZXR1cm4gZDtyZXR1cm4hMX1mdW5j
dGlvbiBhcnJheV9yZW1vdmUoYSxiKXt2YXIgYz1hcnJheV9zZWFyY2goYSxiKTti
LnNwbGljZShjLDEpfWZ1bmN0aW9uIGlzTm90QU51bWJlcihhKXtyZXR1cm4hKGE+
PTB8fGE8MCl9CnZhciBfbWluZV91dGlsPW5ldyBmdW5jdGlvbigpe3RoaXMuQ0xB
U1NfRkdPT0Q9Imdvb2QiO3RoaXMuQ0xBU1NfRkRFRkFVTFQ9ImRlZmF1bHQiO3Ro
aXMuQ0xBU1NfRldST05HPSJiYWQiO3RoaXMua2V5Q291bnQ9MDt0aGlzLmNhcHRj
aGFFcnJvcj10aGlzLmVtYWlsRXJyb3I9ITA7dGhpcy5za2lwZGI9ITE7dGhpcy5l
bWFpbF9pZD0iZW1haWwiO3RoaXMuaGlkZUZvcm1FcnJvcj1mdW5jdGlvbihhKXsi
dW5kZWZpbmVkIj09dHlwZW9mIGEmJihhPSJmb3JtRXJyb3JDb250YWluZXIiKTsk
KCIjIithKS5zbGlkZVVwKCJmYXN0Iil9O3RoaXMuZW1haWxDaGVja1doaWxlVHlw
aW5nPWZ1bmN0aW9uKCl7dGhpcy5rZXlDb3VudCsrO3NldFRpbWVvdXQoIl9taW5l
X3V0aWwuZW1haWxDaGVjaygiK3RoaXMua2V5Q291bnQrIiwgMSkiLDIwMCl9O3Ro
aXMuc2ltcGxlQ2hlY2s9ZnVuY3Rpb24oYSxiLGMpe2E9JCgiIyIrYSkudmFsKCk7
X21pbj10eXBlb2YgYz09InVuZGVmaW5lZCI/MzpjOwppZihhLmxlbmd0aDxfbWlu
KXJldHVybiB0aGlzLmNoYW5nZVN0YXR1cyhiLDEpLCExO3RoaXMuY2hhbmdlU3Rh
dHVzKGIsMCk7cmV0dXJuITB9O3RoaXMuY2FwdGNoYUNoZWNrPWZ1bmN0aW9uKGEs
Yil7dmFyIGM9JCgiIyIrYSkudmFsKCk7aWYoYy5sZW5ndGghPTUpcmV0dXJuIHRo
aXMuY2hhbmdlU3RhdHVzKGIsMSksdGhpcy5jYXB0Y2hhRXJyb3I9ITAsITE7dGhp
cy5jYXB0Y2hhRXJyb3ImJiQuZ2V0SlNPTihIT1NUKyJhdXRoL3ZhbGlkQ2FwdGNo
YS8iK2MsZnVuY3Rpb24oYSl7aWYocGFyc2VJbnQoYS5zdGF0dXMpPT0xKV9taW5l
X3V0aWwuY2hhbmdlU3RhdHVzKGIsMSksX21pbmVfdXRpbC5jYXB0Y2hhRXJyb3I9
ITB9KTt0aGlzLmNoYW5nZVN0YXR1cyhiLDApO3RoaXMuY2FwdGNoYUVycm9yPSEx
O3JldHVybiEwfTt0aGlzLmFjdHVhbGx5RW1haWxDaGVja2luZz1mdW5jdGlvbigp
e3ZhciBhPSQoIiMiK3RoaXMuZW1haWxfaWQpLnZhbCgpO2EubGVuZ3RoPDY/KHRo
aXMuY2hhbmdlU3RhdHVzKCJlbWFpbENoZWNrIiwKMSksdGhpcy5lbWFpbEVycm9y
PSEwKTooYT1IT1NUKyJhdXRoL3ZhbGlkRW1haWw/cz0iK2VuY29kZVVSSShhKSwh
MD09dGhpcy5za2lwZGImJihhKz0iJmU9MSIpLCQuZ2V0SlNPTihhLGZ1bmN0aW9u
KGEpe3BhcnNlSW50KGEuc3RhdHVzKT09Mj8oX21pbmVfdXRpbC5jaGFuZ2VTdGF0
dXMoImVtYWlsQ2hlY2siLDEpLF9taW5lX3V0aWwuZW1haWxFcnJvcj0hMCk6cGFy
c2VJbnQoYS5zdGF0dXMpPT0xPyhfbWluZV91dGlsLmNoYW5nZVN0YXR1cygiZW1h
aWxDaGVjayIsMSksX21pbmVfdXRpbC5lbWFpbEVycm9yPSEwKTooX21pbmVfdXRp
bC5jaGFuZ2VTdGF0dXMoImVtYWlsQ2hlY2siLDApLF9taW5lX3V0aWwuZW1haWxF
cnJvcj0hMSl9KSl9O3RoaXMuZW1haWxDaGVjaz1mdW5jdGlvbihhLGIpe2lmKGI9
PTEpe2lmKGE9PXRoaXMua2V5Q291bnQpdGhpcy5rZXlDb3VudD0wLHRoaXMuYWN0
dWFsbHlFbWFpbENoZWNraW5nKCl9ZWxzZSBfbWluZV91dGlsLmFjdHVhbGx5RW1h
aWxDaGVja2luZygpfTsKdGhpcy5jaGFuZ2VTdGF0dXM9ZnVuY3Rpb24oYSxiKXtp
ZihiPT0wKXt0cnl7JCgiIyIrYSkucmVtb3ZlQ2xhc3MoX21pbmVfdXRpbC5DTEFT
U19GREVGQVVMVCksJCgiIyIrYSkucmVtb3ZlQ2xhc3MoX21pbmVfdXRpbC5DTEFT
U19GV1JPTkcpfWNhdGNoKGMpe30kKCIjIithKS5hZGRDbGFzcyhfbWluZV91dGls
LkNMQVNTX0ZHT09EKX1lbHNle3RyeXskKCIjIithKS5yZW1vdmVDbGFzcyhfbWlu
ZV91dGlsLkNMQVNTX0ZERUZBVUxUKSwkKCIjIithKS5yZW1vdmVDbGFzcyhfbWlu
ZV91dGlsLkNMQVNTX0ZHT09EKX1jYXRjaChkKXt9JCgiIyIrYSkuYWRkQ2xhc3Mo
X21pbmVfdXRpbC5DTEFTU19GV1JPTkcpfX07dGhpcy5zaG93Rm9ybUVycm9yPWZ1
bmN0aW9uKGEsYixjKXsidW5kZWZpbmVkIj09dHlwZW9mIGMmJihjPSJmb3JtRXJy
b3JNZXNzYWdlIik7InVuZGVmaW5lZCI9PXR5cGVvZiBiJiYoYj0iZm9ybUVycm9y
Q29udGFpbmVyIik7JCgiIyIrYikuY3NzKCJkaXNwbGF5IiwiYmxvY2siKTsKJCgi
IyIrYykucmVtb3ZlQ2xhc3MoIm5vdGlmIik7JCgiIyIrYykuYWRkQ2xhc3MoImVy
cm9yIik7JCgiIyIrYykuaHRtbChhKTskKCIjIitjKS5jc3MoImRpc3BsYXkiLCIi
KTskKCIjIitjKS5zbGlkZURvd24oImZhc3QiKX19LF9ibG9nPV9kaXNjdXNzaW9u
cz1uZXcgZnVuY3Rpb24oKXt0aGlzLnNlbmRlcj1udWxsO3RoaXMuY2F0X2lkPTA7
dGhpcy5sb2NrZWQ9ITE7dGhpcy5wb2xsRGlzY3Vzc2lvbl9pZD10aGlzLmNob3Nl
bl9ncm91cD10aGlzLmNob3Nlbl9jYXQ9MDt0aGlzLnBvbGxDb29raWVOYW1lPW51
bGw7dGhpcy5wb2xsSW5BY3Rpb249MDt0aGlzLm9wZW5EZWxldGVEaXNjdXNzaW9u
UG9wVXA9ZnVuY3Rpb24oYSl7U3RhbmRhcmRQb3B1cC5vcGVuUG9wVXAoImRpc2N1
c3Npb25zIiwibG9hZERlbGV0ZURpc2N1c3Npb25Qb3BVcCIsW2FdKX07dGhpcy5v
cGVuUmVtb3ZlRGlzY3Vzc2lvbkZyb21Hcm91cFBvcFVwPWZ1bmN0aW9uKGEsYil7
U3RhbmRhcmRQb3B1cC5vcGVuUG9wVXAoImRpc2N1c3Npb25zIiwKImxvYWRSZW1v
dmVEaXNjdXNzaW9uRnJvbWdHcm91cFBvcFVwIixbYSxiXSl9O3RoaXMuaW5pdFBv
bGw9ZnVuY3Rpb24oYSxiKXt0aGlzLnBvbGxEaXNjdXNzaW9uc19pZD1hO3RoaXMu
cG9sbENvb2tpZU5hbWU9YjskKCIjcG9sbFZvdGVDb250cm9sbCIpLmNsaWNrKGZ1
bmN0aW9uKCl7X2Rpc2N1c3Npb25zLnBvbGxWb3RlKCl9KX07dGhpcy5yZW1vdmVE
aXNjdXNzaW9uRnJvbUdyb3VwPWZ1bmN0aW9uKGEsYil7JC5nZXRKU09OKEhPU1Qr
ImRpc2N1c3Npb25zL3JlbW92ZURpc2N1c3Npb25Gcm9tR3JvdXAvIithKyIvIiti
LGZ1bmN0aW9uKGIpezA9PWIuc3RhdHVzJiYkKCIjZGlzY3Vzc2lvbl8iK2EpLnJl
bW92ZSgpO3ZhciBkPSQoIiNkaXNjdXNzaW9uXyIrYSsiX21lc3NhZ2UiKTtkLmh0
bWwoYi5tZXNzYWdlKTtkLnNob3coKTtTdGFuZGFyZFBvcHVwLmNsb3NlKCl9KX07
dGhpcy5wb2xsVm90ZT1mdW5jdGlvbigpe2lmKCF0aGlzLnBvbGxJbkFjdGlvbil0
aGlzLnBvbGxJbkFjdGlvbj0KMSxzZWxlY3RlZEFuc3dlcj0wLCQuZWFjaCgkKCIu
cG9sbF9hbnN3ZXIiKSxmdW5jdGlvbihhLGIpeyQoYikuYXR0cigiY2hlY2tlZCIp
PT0hMCYmKHNlbGVjdGVkQW5zd2VyPXBhcnNlSW50KCQoYikudmFsKCkpKX0pLHNl
bGVjdGVkQW5zd2VyPygkKCIjcG9sbFByZWxvYWRlciIpLnNob3coKSx0aGlzLnZv
dGUoc2VsZWN0ZWRBbnN3ZXIsMSkpOnRoaXMucG9sbEluQWN0aW9uPTB9O3RoaXMu
Y2hlY2tTdWJqZWN0PWZ1bmN0aW9uKCl7dmFyIGE9JCgiI3N1YmllY3QiKS52YWwo
KTt2YWx1ZTI9c3RyaXBfdGFncyhhKTt2YWx1ZTI9dmFsdWUyLnRyaW0oKTtpZigv
KFtcPFw+XFxdLio/KS8udGVzdChhKT09ITB8fHZhbHVlMi5sZW5ndGg8MylyZXR1
cm4gX21pbmVfdXRpbC5jaGFuZ2VTdGF0dXMoInN1YmllY3RDaGVjayIsMSksITE7
X21pbmVfdXRpbC5jaGFuZ2VTdGF0dXMoInN1YmllY3RDaGVjayIsMCk7cmV0dXJu
ITB9O3RoaXMucHVtcFBvbGxDb250ZW50PWZ1bmN0aW9uKGEsYil7aWYoYS5zdWNj
ZXNzJiYKKGEucXVlc3Rpb24hPW51bGx8fHR5cGVvZiBiIT0idW5kZWZpbmVkIikp
e3RyeXskKCIjcG9sbEZvcm0iKS5zbGlkZVVwKCJmYXN0IikucmVtb3ZlKCksJCgi
I3BvbGxSZXN1bHRzIikuc2xpZGVVcCgiZmFzdCIpLnJlbW92ZSgpfWNhdGNoKGMp
e312YXIgZD1hLmh0bWw7ZC5sZW5ndGgmJigkKCIjcG9sbENvbnRhaW5lciIpLmFw
cGVuZChkKSwkKCIjcG9sbFF1ZXN0aW9uIikudGV4dChhLnF1ZXN0aW9uKSwkKCIj
cG9sbFF1ZXN0aW9uIikuYXR0cigiaHJlZiIsYS5xdWVzdGlvbl9saW5rKSx0eXBl
b2YgYS5sZWZ0IT0idW5kZWZpbmVkIiYmKCQoIiNwb2xsQ3ljbGVCYWNrIikuaHRt
bCgiIiksZD1wYXJzZUludChhLmxlZnQpIT0wPyc8YSByZWw9Im5vZm9sbG93IiBj
bGFzcz0icHJldiIgaHJlZj0iamF2YXNjcmlwdDpfZGlzY3Vzc2lvbnMuZ2V0UG9s
bCgnK2EuY2F0X2lkKycsIDApIj4nK19nZXROb3RpY2UoInBhZ2VzIiwiaW5hcG9p
X2xhYmVsIikrIjwvYT4iOic8c3BhbiBjbGFzcz0icHJldiI+JysKX2dldE5vdGlj
ZSgicGFnZXMiLCJpbmFwb2lfbGFiZWwiKSsiPC9hPiIsJCgiI3BvbGxDeWNsZUJh
Y2siKS5odG1sKGQpKSx0eXBlb2YgYS5yaWdodCE9InVuZGVmaW5lZCImJigkKCIj
cG9sbEN5Y2xlRm9yd2FyZCIpLmh0bWwoIiIpLGQ9cGFyc2VJbnQoYS5yaWdodCkh
PTA/JzxhIHJlbD0ibm9mb2xsb3ciIGNsYXNzPSJuZXh0IiBocmVmPSJqYXZhc2Ny
aXB0Ol9kaXNjdXNzaW9ucy5nZXRQb2xsKCcrYS5jYXRfaWQrJywgMSkiPicrX2dl
dE5vdGljZSgicGFnZXMiLCJpbmFpbnRlX2xhYmVsIikrIjwvYT4iOic8c3BhbiBj
bGFzcz0ibmV4dCI+JytfZ2V0Tm90aWNlKCJwYWdlcyIsImluYWludGVfbGFiZWwi
KSsiPC9hPiIsJCgiI3BvbGxDeWNsZUZvcndhcmQiKS5odG1sKGQpKSl9fTt0aGlz
LmdldFBvbGw9ZnVuY3Rpb24oYSxiKXtpZighdGhpcy5wb2xsSW5BY3Rpb24pe3Ro
aXMucG9sbEluQWN0aW9uPTE7JCgiI3BvbGxQcmVsb2FkZXIiKS5zaG93KCk7dmFy
IGM9SE9TVCsiZGlzY3Vzc2lvbnMvZ2V0UG9sbC8iKwphKyIvIitwYXJzZUludChi
KSsiLyIrTWF0aC5yYW5kb20oKSsxMjM0NTY3LGM9JC5hamF4KHt1cmw6Yyxhc3lu
YzohMX0pLnJlc3BvbnNlVGV4dCxkPTA7JCgiI3BvbGxQcmVsb2FkZXIiKS5oaWRl
KCk7dHJ5e2M9ZXZhbCgiKCIrYysiKSIpLGQ9MX1jYXRjaChlKXt9ZCYmdGhpcy5w
dW1wUG9sbENvbnRlbnQoYyk7dGhpcy5wb2xsSW5BY3Rpb249MH19O3RoaXMudGlu
eU1DRUNoZWNrPWZ1bmN0aW9uKGEpe3RyeXtodG1sQ29udGVudD1hLmdldENvbnRl
bnQoKTt0bXA9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7dG1wLmlubmVy
SFRNTD1odG1sQ29udGVudDtjb250ZW50PXRtcC50ZXh0Q29udGVudHx8dG1wLmlu
bmVyVGV4dDt0cnl7aWYoY29udGVudC5sZW5ndGg8NzUpcmV0dXJuIF9taW5lX3V0
aWwuY2hhbmdlU3RhdHVzKCJjb250ZW50Q2hlY2siLDEpLCExO19taW5lX3V0aWwu
Y2hhbmdlU3RhdHVzKCJjb250ZW50Q2hlY2siLDApO3JldHVybiEwfWNhdGNoKGIp
e3JldHVybiBfbWluZV91dGlsLmNoYW5nZVN0YXR1cygiY29udGVudENoZWNrIiwK
MSksITF9fWNhdGNoKGMpe3JldHVybiBfbWluZV91dGlsLmNoYW5nZVN0YXR1cygi
Y29udGVudENoZWNrIiwxKSwhMX19O3RoaXMudm90ZT1mdW5jdGlvbihhKXt0aGlz
LnBvbGxJbkFjdGlvbj0wOyQuZ2V0SlNPTihIT1NUKyJkaXNjdXNzaW9ucy92b3Rl
LyIrdGhpcy5wb2xsRGlzY3Vzc2lvbnNfaWQrIi8iK2ErIi8iK01hdGgucmFuZG9t
KCkrMTIzNDU2NyxmdW5jdGlvbihhKXtfZGlzY3Vzc2lvbnMucHVtcFBvbGxDb250
ZW50KGEsMSk7JCgiI3BvbGxQcmVsb2FkZXIiKS5oaWRlKCl9KX07dGhpcy5oaWRl
UHJpdmF0ZT1mdW5jdGlvbigpeyQoIi5wcml2YXRlX2Rpc2N1c3Npb24iKS5jc3Mo
ImRpc3BsYXkiLCJub25lIil9O3RoaXMuc2hvd1ByaXZhdGU9ZnVuY3Rpb24oKXsk
KCIucHJpdmF0ZV9kaXNjdXNzaW9uIikuY3NzKCJkaXNwbGF5IiwiIil9O3RoaXMu
dXBkYXRlUmFuaz1mdW5jdGlvbihhLGIsYyxkKXt0aGlzLnBvc3RfaWQ9YTt0aGlz
LnNlbmRlcj0kKGIpO3RoaXMucGF0aD0KYzskLmdldEpTT04oSE9TVCtkKyIvdXBk
YXRlQmxvZ1Bvc3RSYW5rLyIrYSxmdW5jdGlvbihhKXthJiYodmlld3M9cGFyc2VJ
bnQoX2Jsb2cucGF0aCksaXNOb3RBTnVtYmVyKHZpZXdzKT8kKGxvY2F0aW9uKS5h
dHRyKCJocmVmIixIT1NUK19ibG9nLnBhdGgpOiQoIi5kZXQxIikuaHRtbCgiPHNw
YW4+IisocGFyc2VJbnQodmlld3MpKzUpKyI8L3NwYW4+IikpfSl9O3RoaXMuY2hl
Y2tDYXRlZ29yeT1mdW5jdGlvbihhKXthPSJ1bmRlZmluZWQiPT10eXBlb2YgYT8k
KCIjaW5pdF9jYXRfaWQiKS52YWwoKTphOyQoIiNpbl9jYXRlZ29yeV8iK2EpLmF0
dHIoImNoZWNrZWQiLCEwKTskKCIjaW5pdF9jYXRfaWQiKS52YWwobnVsbCl9O3Ro
aXMuZWRpdERpc2N1c3Npb249ZnVuY3Rpb24oKXskKCIjZm9ybUVycm9yQ29udGFp
bmVyIikuY3NzKCJkaXNwbGF5Iiwibm9uZSIpO3ZhciBhPSQoIiNzdWJpZWN0Iiku
dmFsKCk7c3ViaWVjdDI9c3RyaXBfdGFncyhhKTtzdWJpZWN0Mj1zdWJpZWN0Mi50
cmltKCk7CmlmKHN1YmllY3QyLmxlbmd0aDwzKXJldHVybiAkKCIjZm9ybUVycm9y
Q29udGFpbmVyIikuY3NzKCJkaXNwbGF5IiwiYmxvY2siKSxfbWluZV91dGlsLnNo
b3dGb3JtRXJyb3IoX2dldE5vdGljZSgiZGlzY3Vzc2lvbnMiLCJlbnRlcl9zdWJq
ZWN0IikpLGFuY2hvcj13aW5kb3cubG9jYXRpb24uaHJlZi5yZXBsYWNlKC8jKC4q
KS9pZywiIiksd2luZG93LmxvY2F0aW9uLmhyZWY9YW5jaG9yKyIjIiwhMTtpZigv
KFtcPFw+XFxdLio/KS8udGVzdChhKT09ITApcmV0dXJuICQoIiNmb3JtRXJyb3JD
b250YWluZXIiKS5jc3MoImRpc3BsYXkiLCJibG9jayIpLF9taW5lX3V0aWwuc2hv
d0Zvcm1FcnJvcihfZ2V0Tm90aWNlKCJkaXNjdXNzaW9ucyIsImlsbGVnYWxfc3Vi
amVjdCIpKSxhbmNob3I9d2luZG93LmxvY2F0aW9uLmhyZWYucmVwbGFjZSgvIygu
KikvaWcsIiIpLHdpbmRvdy5sb2NhdGlvbi5ocmVmPWFuY2hvcisiIyIsITE7YT0k
KCIjY29udGludXQiKS52YWwoKTthPXN0cmlwX3RhZ3MoYSk7CmlmKGEubGVuZ3Ro
PDc1KXJldHVybiAkKCIjZm9ybUVycm9yQ29udGFpbmVyIikuY3NzKCJkaXNwbGF5
IiwiYmxvY2siKSxfbWluZV91dGlsLnNob3dGb3JtRXJyb3IoX2dldE5vdGljZSgi
ZGlzY3Vzc2lvbnMiLCJlbnRlcl9ib2R5IikpLGFuY2hvcj13aW5kb3cubG9jYXRp
b24uaHJlZi5yZXBsYWNlKC8jKC4qKS9pZywiIiksd2luZG93LmxvY2F0aW9uLmhy
ZWY9YW5jaG9yKyIjIiwhMTtpZighJCgiLnRhZyIpWzBdLnZhbHVlLmxlbmd0aCly
ZXR1cm4gJCgiI2Zvcm1FcnJvckNvbnRhaW5lciIpLmNzcygiZGlzcGxheSIsImJs
b2NrIiksX21pbmVfdXRpbC5zaG93Rm9ybUVycm9yKF9nZXROb3RpY2UoImRpc2N1
c3Npb25zIiwiZW50ZXJfdGFnIikpLGFuY2hvcj13aW5kb3cubG9jYXRpb24uaHJl
Zi5yZXBsYWNlKC8jKC4qKS9pZywiIiksd2luZG93LmxvY2F0aW9uLmhyZWY9YW5j
aG9yKyIjIiwhMTtyZXR1cm4hMH07dGhpcy5zZW5kRGlzY3Vzc2lvbj1mdW5jdGlv
bigpeyQoIiNmb3JtRXJyb3JDb250YWluZXIiKS5jc3MoImRpc3BsYXkiLAoibm9u
ZSIpO3ZhciBhPSQoIiNzdWJpZWN0IikudmFsKCk7c3ViaWVjdDI9c3RyaXBfdGFn
cyhhKTtzdWJpZWN0Mj1zdWJpZWN0Mi50cmltKCk7aWYoc3ViaWVjdDIubGVuZ3Ro
PDMpcmV0dXJuICQoIiNmb3JtRXJyb3JDb250YWluZXIiKS5jc3MoImRpc3BsYXki
LCJibG9jayIpLF9taW5lX3V0aWwuc2hvd0Zvcm1FcnJvcihfZ2V0Tm90aWNlKCJk
aXNjdXNzaW9ucyIsImVudGVyX3N1YmplY3QiKSksYW5jaG9yPXdpbmRvdy5sb2Nh
dGlvbi5ocmVmLnJlcGxhY2UoLyMoLiopL2lnLCIiKSx3aW5kb3cubG9jYXRpb24u
aHJlZj1hbmNob3IrIiMiLCExO2lmKC8oW1w8XD5cXF0uKj8pLy50ZXN0KGEpPT0h
MClyZXR1cm4gJCgiI2Zvcm1FcnJvckNvbnRhaW5lciIpLmNzcygiZGlzcGxheSIs
ImJsb2NrIiksX21pbmVfdXRpbC5zaG93Rm9ybUVycm9yKF9nZXROb3RpY2UoImRp
c2N1c3Npb25zIiwiaWxsZWdhbF9zdWJqZWN0IikpLGFuY2hvcj13aW5kb3cubG9j
YXRpb24uaHJlZi5yZXBsYWNlKC8jKC4qKS9pZywKIiIpLHdpbmRvdy5sb2NhdGlv
bi5ocmVmPWFuY2hvcisiIyIsITE7YT0kKCIjY29udGludXQiKS52YWwoKTthPXN0
cmlwX3RhZ3MoYSk7aWYoYS5sZW5ndGg8NzUpcmV0dXJuICQoIiNmb3JtRXJyb3JD
b250YWluZXIiKS5jc3MoImRpc3BsYXkiLCJibG9jayIpLF9taW5lX3V0aWwuc2hv
d0Zvcm1FcnJvcihfZ2V0Tm90aWNlKCJkaXNjdXNzaW9ucyIsImVudGVyX2JvZHki
KSksYW5jaG9yPXdpbmRvdy5sb2NhdGlvbi5ocmVmLnJlcGxhY2UoLyMoLiopL2ln
LCIiKSx3aW5kb3cubG9jYXRpb24uaHJlZj1hbmNob3IrIiMiLCExO2lmKCEkKCIu
dGFnIilbMF0udmFsdWUubGVuZ3RoKXJldHVybiAkKCIjZm9ybUVycm9yQ29udGFp
bmVyIikuY3NzKCJkaXNwbGF5IiwiYmxvY2siKSxfbWluZV91dGlsLnNob3dGb3Jt
RXJyb3IoX2dldE5vdGljZSgiZGlzY3Vzc2lvbnMiLCJlbnRlcl90YWciKSksYW5j
aG9yPXdpbmRvdy5sb2NhdGlvbi5ocmVmLnJlcGxhY2UoLyMoLiopL2lnLCIiKSx3
aW5kb3cubG9jYXRpb24uaHJlZj0KYW5jaG9yKyIjIiwhMTtpZighdGhpcy5jaG9z
ZW5fY2F0KXJldHVybiAkKCIjZm9ybUVycm9yQ29udGFpbmVyIikuY3NzKCJkaXNw
bGF5IiwiYmxvY2siKSxfbWluZV91dGlsLnNob3dGb3JtRXJyb3IoX2dldE5vdGlj
ZSgiZGlzY3Vzc2lvbnMiLCJlbnRlcl9jYXQiKSksYW5jaG9yPXdpbmRvdy5sb2Nh
dGlvbi5ocmVmLnJlcGxhY2UoLyMoLiopL2lnLCIiKSx3aW5kb3cubG9jYXRpb24u
aHJlZj1hbmNob3IrIiMiLCExO3RyeXtpZigkKCIjaW50cmViYXJlIikudmFsKCku
bGVuZ3RoKXt2YXIgYj0kKCIjcmFzcHVuczEiKS52YWwoKSxjPSQoIiNyYXNwdW5z
MiIpLnZhbCgpO2lmKCFiLmxlbmd0aHx8IWMubGVuZ3RoKXJldHVybiAkKCIjZm9y
bUVycm9yQ29udGFpbmVyIikuY3NzKCJkaXNwbGF5IiwiYmxvY2siKSxfbWluZV91
dGlsLnNob3dGb3JtRXJyb3IoX2dldE5vdGljZSgiZGlzY3Vzc2lvbnMiLCJiYWRf
cG9sbCIpKSxhbmNob3I9d2luZG93LmxvY2F0aW9uLmhyZWYucmVwbGFjZSgvIygu
KikvaWcsCiIiKSx3aW5kb3cubG9jYXRpb24uaHJlZj1hbmNob3IrIiMiLCExO3Zh
ciBkPSExOyQuZWFjaCgkKCIucG9sbEFuc3dlciIpLGZ1bmN0aW9uKGEsYil7JChi
KS52YWwoKS5sZW5ndGg+NDAmJihkPSEwKX0pO2lmKGQpcmV0dXJuICQoIiNmb3Jt
RXJyb3JDb250YWluZXIiKS5jc3MoImRpc3BsYXkiLCJibG9jayIpLF9taW5lX3V0
aWwuc2hvd0Zvcm1FcnJvcihfZ2V0Tm90aWNlKCJkaXNjdXNzaW9ucyIsImxvbmdf
cG9sbF9hbnN3ZXIiKSksYW5jaG9yPXdpbmRvdy5sb2NhdGlvbi5ocmVmLnJlcGxh
Y2UoLyMoLiopL2lnLCIiKSx3aW5kb3cubG9jYXRpb24uaHJlZj1hbmNob3IrIiMi
LCExfX1jYXRjaChlKXt9cmV0dXJuITB9O3RoaXMuY2xvc2VQb2xsPWZ1bmN0aW9u
KCl7JCgiLnBvbGxDb250YWluZXJzIikuY3NzKCJkaXNwbGF5Iiwibm9uZSIpOyQo
IiNhZGRfcG9sbCIpLmNzcygiZGlzcGxheSIsIiIpOyQoIiNjbG9zZV9wb2xsIiku
Y3NzKCJkaXNwbGF5Iiwibm9uZSIpOyQoIiNpbnRyZWJhcmUiKS52YWwoIiIpfTsK
dGhpcy5vcGVuUG9sbD1mdW5jdGlvbigpeyQoIi5wb2xsQ29udGFpbmVycyIpLmNz
cygiZGlzcGxheSIsIiIpOyQoIiNhZGRfcG9sbCIpLmNzcygiZGlzcGxheSIsIm5v
bmUiKTskKCIjY2xvc2VfcG9sbCIpLmNzcygiZGlzcGxheSIsIiIpOyQuZWFjaCgk
KCIucG9sbEFuc3dlciIpLGZ1bmN0aW9uKGEsYil7JChiKS52YWwoIiIpfSl9O3Ro
aXMuY2xvc2VHcm91cHM9ZnVuY3Rpb24oKXskKCIjZ3JvdXBzX2xpc3QiKS5jc3Mo
ImRpc3BsYXkiLCJub25lIik7JCgiI2dyb3VwTGFiZWwiKS5oaWRlKCk7MCE9dGhp
cy5jaG9zZW5fZ3JvdXA/dGhpcy5mb3JDbG9zZSgiZ3JvdXBfbWFuaXBfIix0aGlz
LmNob3Nlbl9ncm91cCk6dGhpcy5mb3JDbG9zZSgiZ3JvdXBfbWFuaXBfIixudWxs
KTt0aGlzLmhpZGVQcml2YXRlKCl9O3RoaXMuY2xvc2VDYXRlZ29yaWVzPWZ1bmN0
aW9uKCl7JCgiI2Zhdm91cml0ZXMiKS5jc3MoImRpc3BsYXkiLCJub25lIik7JCgi
I2NhdGVnb3JpZXNfMTEiKS5jc3MoImRpc3BsYXkiLAoibm9uZSIpOyQoIiNsb2Nh
bGVfc2lfcmVnaW9uYWxlXzExIikuY3NzKCJkaXNwbGF5Iiwibm9uZSIpO3ZhciBh
PSQoIiNpbml0X2NhdF9pZCIpLnZhbCgpO2lmKGEmJiF0aGlzLmNob3Nlbl9jYXQp
dGhpcy5jaG9zZW5fY2F0PWE7dGhpcy5mb3JDbG9zZSgiY2F0ZWdfbWFuaXBfIix0
aGlzLmNob3Nlbl9jYXQpfTt0aGlzLmZvckNsb3NlPWZ1bmN0aW9uKGEsYil7JCgi
IyIrYSsiY2xvc2UiKS5jc3MoImRpc3BsYXkiLCJub25lIik7Yj8kKCIjIithKyJj
aGFuZ2UiKS5jc3MoImRpc3BsYXkiLCIiKTokKCIjIithKyJjaG9vc2UiKS5jc3Mo
ImRpc3BsYXkiLCIiKX07dGhpcy5jaG9vc2VHcm91cD1mdW5jdGlvbigpeyQoIiNn
cm91cHNfbGlzdCIpLmNzcygiZGlzcGxheSIsIiIpOyQoIiNncm91cExhYmVsIiku
c2hvdygpO3RoaXMuZm9yQ2hvb3NlKCJncm91cF9tYW5pcF8iKTswIT10aGlzLmNo
b3Nlbl9ncm91cCYmdGhpcy5zaG93UHJpdmF0ZSgpfTt0aGlzLmNob29zZUNhdGVn
b3J5PWZ1bmN0aW9uKCl7JCgiI2Zhdm91cml0ZXMiKS5jc3MoImRpc3BsYXkiLAoi
Iik7JCgiI2NhdGVnb3JpZXNfMTEiKS5jc3MoImRpc3BsYXkiLCIiKTskKCIjbG9j
YWxlX3NpX3JlZ2lvbmFsZV8xMSIpLmNzcygiZGlzcGxheSIsIiIpO3RoaXMuZm9y
Q2hvb3NlKCJjYXRlZ19tYW5pcF8iKTt0aGlzLmNob3Nlbl9jYXR8fCQoIi5jYXRf
bGFiZWwiKS5jc3MoImRpc3BsYXkiLCJub25lIil9O3RoaXMuc2V0Q2hvc2VuQ2F0
PWZ1bmN0aW9uKGEpe3RoaXMuY2hvc2VuX2NhdD1hO3RoaXMuY2hlY2tDYXRlZ29y
eShhKX07dGhpcy5mb3JDaG9vc2U9ZnVuY3Rpb24oYSl7JCgiIyIrYSsiY2hvb3Nl
IikuY3NzKCJkaXNwbGF5Iiwibm9uZSIpOyQoIiMiK2ErImNoYW5nZSIpLmNzcygi
ZGlzcGxheSIsIm5vbmUiKTskKCIjIithKyJjbG9zZSIpLmNzcygiZGlzcGxheSIs
IiIpOyQoIi5jYXRfbGFiZWwiKS5jc3MoImRpc3BsYXkiLCIiKX07dGhpcy5yZWdp
c3RlckNob3NlbkNhdGVnb3J5PWZ1bmN0aW9uKGEpe2lmKCQoYSkuYXR0cigiY2hl
Y2tlZCIpKXRoaXMuY2hvc2VuX2NhdD0KJChhKS52YWwoKTt0cnl7JCgiI2RlZmF1
bHROb0NhdCIpLmhpZGUoKX1jYXRjaChiKXt9dGhpcy5wdXRMYWJlbCgiLmNhdGVn
U2VsZWN0ZWQiLHRoaXMuZ2V0TGFiZWwoImNhdGVnb3J5XyIsdGhpcy5jaG9zZW5f
Y2F0KSl9O3RoaXMuZ2V0TGFiZWw9ZnVuY3Rpb24oYSxiKXt2YXIgYz1hK2IsZD0k
KCIjIitjKyIgbGFiZWwiKS5odG1sKCk7bnVsbD09ZCYmMCE9YiYmKGQ9JCgiI3dy
YXBwZXJfIitjKyIgbGFiZWwiKS5odG1sKCkpOzA9PWImJihkPSQoIiN3cmFwcGVy
XyIrYysiIGxhYmVsIHN0cm9uZyIpLmh0bWwoKSk7cmV0dXJuIGR9O3RoaXMucHV0
TGFiZWw9ZnVuY3Rpb24oYSxiKXskKGEpLnRleHQoYik7JChhKS5jc3MoImRpc3Bs
YXkiLCIiKX07dGhpcy5yZWdpc3RlckNob3Nlbkdyb3VwPWZ1bmN0aW9uKGEpe2lm
KCQoYSkuYXR0cigiY2hlY2tlZCIpKXRoaXMuY2hvc2VuX2dyb3VwPSQoYSkudmFs
KCk7MCE9dGhpcy5jaG9zZW5fZ3JvdXA/KHRoaXMucHV0TGFiZWwoIi5ncm91cFNl
bGVjdGVkIiwKJCgiI2dyb3VwTGFiZWwiK3RoaXMuY2hvc2VuX2dyb3VwKS50ZXh0
KCkpLCQoIi5kZWxldGVHcm91cExpbmsiKS5zaG93KCkpOih0aGlzLnB1dExhYmVs
KCIuZ3JvdXBTZWxlY3RlZCIsIiIpLCQoIi5ncm91cFNlbGVjdGVkIikuY3NzKCJk
aXNwbGF5Iiwibm9uZSIpLCQoIi5kZWxldGVHcm91cExpbmsiKS5oaWRlKCkpfTt0
aGlzLmRlbGV0ZUdyb3VwPWZ1bmN0aW9uKCl7dGhpcy5wdXRMYWJlbCgiLmdyb3Vw
U2VsZWN0ZWQiLCIiKTskKCIuZ3JvdXBTZWxlY3RlZCIpLmNzcygiZGlzcGxheSIs
Im5vbmUiKTskKCIuZGVsZXRlR3JvdXBMaW5rIikuaGlkZSgpOyQuZWFjaCgkKCIu
X19ncm91cF9yYWRpb3MiKSxmdW5jdGlvbihhLGIpeyQoYikuYXR0cigiY2hlY2tl
ZCIsITEpfSl9O3RoaXMuZGVsZXRlRGlzY3Vzc2lvbj1mdW5jdGlvbihhKXskLmdl
dEpTT04oSE9TVCsiZGlzY3Vzc2lvbnMvZGVsZXRlRGlzY3Vzc2lvbi8iK2EsZnVu
Y3Rpb24oYil7MD09Yi5zdGF0dXMmJiQoIiNkaXNjdXNzaW9uXyIrCmEpLnJlbW92
ZSgpO3ZhciBjPSQoIiNkaXNjdXNzaW9uXyIrYSsiX21lc3NhZ2UiKTtjLmh0bWwo
Yi5tZXNzYWdlKTtjLnNob3coKTtTdGFuZGFyZFBvcHVwLmNsb3NlKCl9KX07dGhp
cy50b2dnbGVGYXZvdXJpdGVDYXRlZ29yaWVzPWZ1bmN0aW9uKGEsYil7dGhpcy5z
ZW5kZXI9JChhKTtpZih0aGlzLnNlbmRlci5oYXNDbGFzcygiY2F0ZWdfMnBsdXMi
KSl7aWYoIXRoaXMubG9ja2VkKXRoaXMubG9ja2VkPSEwLCQoIiNmYXZsb2FkZXIi
KS5jc3MoImRpc3BsYXkiLCIiKSwkLmdldChIT1NUKyJkaXNjdXNzaW9ucy9zaG93
RmF2b3VyaXRlQ2F0ZWdvcmllcyIsZnVuY3Rpb24oYSl7JCgiI2Zhdm91cml0ZXMi
KS5hcHBlbmQoYSk7X2Rpc2N1c3Npb25zLmxvY2tlZD0hMTtfZGlzY3Vzc2lvbnMu
c2VuZGVyLnJlbW92ZUNsYXNzKCJjYXRlZ18ycGx1cyIpO19kaXNjdXNzaW9ucy5z
ZW5kZXIuYWRkQ2xhc3MoImNhdGVnXzJtaW51cyIpOyQoIiNmYXZsb2FkZXIiKS5j
c3MoImRpc3BsYXkiLAoibm9uZSIpfSksdGhpcy5zZW5kZXIudGV4dCgiWy0gQ2xv
c2UgXSIpfWVsc2V7dmFyIGM9JCgnI2Zhdm91cml0ZUNhdGVnb3JpZXMgaW5wdXRb
bmFtZT0ic2VsZWN0X2NhdGVnb3J5Il0nKTskLmVhY2goYyxmdW5jdGlvbihhLGIp
eyQoYikuYXR0cigiY2hlY2tlZCIpPT0hMCYmKCQoIi5jYXRlZ1NlbGVjdGVkIiku
aGlkZSgpLCQoIiNkZWZhdWx0Tm9DYXQiKS5zaG93KCkpfSk7JCgiI2Zhdm91cml0
ZUNhdGVnb3JpZXMiKS5yZW1vdmUoKTt0aGlzLnNlbmRlci5yZW1vdmVDbGFzcygi
Y2F0ZWdfMm1pbnVzIik7dGhpcy5zZW5kZXIuYWRkQ2xhc3MoImNhdGVnXzJwbHVz
Iik7dHlwZW9mIGIhPSJ1bmRlZmluZWQiP3RoaXMuc2VuZGVyLnRleHQoIlsgKyBE
ZXNjaGlkZSBdIik6dGhpcy5zZW5kZXIuaHRtbCgnPGEgaHJlZj0iamF2YXNjcmlw
dDp2b2lkKDApIiBjbGFzcz0icGx1cyI+KzwvYT4nKX19O3RoaXMudG9nZ2xlQ2F0
VmlzaWJpbGl0eT1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9JCgiI2NhdGVnb3JpZXNf
MTEiKS5odG1sKCk7CmhyZWY9JCgiIyIrYSkuYXR0cigiaHJlZiIpO2M/KCQoIiMi
K2IpLnNob3coKSwkKCIjIithKS50ZXh0KCJbLSAiK19nZXROb3RpY2UoInBhZ2Vz
IiwiaW5jaGlkZV9sYWJlbCIpKyIgXSIpLGhyZWY9aHJlZi5yZXBsYWNlKCIsIDEi
LCIsIDAiKSwkKCIjIithKS5hdHRyKCJocmVmIixocmVmKSxkLmxlbmd0aD09MCYm
dGhpcy50b2dnbGVDYXRlZ29yaWVzKCIjIithLDAsMSkpOigkKCIjIitiKS5oaWRl
KCksJCgiIyIrYSkudGV4dCgiWyArICIrX2dldE5vdGljZSgicGFnZXMiLCJzZWxl
Y3RlYXphX29fY2F0ZWdvcmllX2xhYmVsIikrIiBdIiksaHJlZj1ocmVmLnJlcGxh
Y2UoIiwgMCIsIiwgMSIpLCQoIiMiK2EpLmF0dHIoImhyZWYiLGhyZWYpKX07dGhp
cy50b2dnbGVDYXRlZ29yaWVzPWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlO2lmKCQo
YSkuaGFzQ2xhc3MoImNhdGVnXzJwbHVzIik9PSEwKXtpZighdGhpcy5sb2NrZWQp
e3RoaXMubG9ja2VkPSEwO3RoaXMuc2VuZGVyPSQoYSk7dGhpcy5jYXRfaWQ9CiJ1
bmRlZmluZWQiIT10eXBlb2YgYj9iOjA7dmFyIGY9SE9TVCsiZGlzY3Vzc2lvbnMv
c2hvd0NhdGVnb3JpZXMiO3RoaXMuY2F0X2lkJiYoZj1mKyIvIitiKTt0aGlzLmxy
PWM7ZT0hdGhpcy5jYXRfaWQ/MTp0aGlzLmNhdF9pZDskKGEpLmhpZGUoKTt0aGlz
LnByZWxvYWRlckNvbnRhaW5lcj0kKCIjY2F0ZWdvcnlfIitlKyIgc3Bhbi5sb2Fk
ZXIiKTt0aGlzLnByZWxvYWRlckNvbnRhaW5lci5jc3MoImRpc3BsYXkiLCIiKTsk
KGEpLmhhc0NsYXNzKCJjYXQiKT8kKCIjY2F0X2xvYWRlciIpLmNzcygiZGlzcGxh
eSIsIiIpOiQoYSkuaGFzQ2xhc3MoImxvYyIpJiYoJCgiI2xvY19sb2FkZXIiKS5j
c3MoImRpc3BsYXkiLCIiKSwkKGEpLnRleHQoIlsgLSBDbG9zZSBdIikpOyQuZ2V0
KGYsZnVuY3Rpb24oYil7X2Rpc2N1c3Npb25zLmNhdF9pZD9fZGlzY3Vzc2lvbnMu
bHI/X2Rpc2N1c3Npb25zLmxyfHwyPT1fZGlzY3Vzc2lvbnMubHI/KCQoIiNsb2Nh
bGVfc2lfcmVnaW9uYWxlXzExICNjYXRlZ29yeV8iKwpfZGlzY3Vzc2lvbnMuY2F0
X2lkKS5hcHBlbmQoYiksdHlwZW9mIGQ9PSJ1bmRlZmluZWQiJiYkKCIjY2F0ZWdv
cnlfIitlKyIgYS5wbHVzIikucmVtb3ZlQ2xhc3MoInBsdXMiKS5hZGRDbGFzcygi
bWludXMiKSk6MT09X2Rpc2N1c3Npb25zLmxyJiYkKCIjbG9jYWxlX3NpX3JlZ2lv
bmFsZV8xMSIpLmFwcGVuZChiKTooJCgiI2NhdGVnb3JpZXNfMTEgI2NhdGVnb3J5
XyIrX2Rpc2N1c3Npb25zLmNhdF9pZCkuYXBwZW5kKGIpLCQoIiNjYXRlZ29yeV8i
K2UrIiBhLnBsdXMiKS5yZW1vdmVDbGFzcygicGx1cyIpLmFkZENsYXNzKCJtaW51
cyIpKTokKCIjY2F0ZWdvcmllc18xMSIpLmFwcGVuZChiKTskKGEpLnNob3coKTtf
ZGlzY3Vzc2lvbnMuc2VuZGVyLnJlbW92ZUNsYXNzKCJjYXRlZ18ycGx1cyIpO19k
aXNjdXNzaW9ucy5zZW5kZXIuYWRkQ2xhc3MoImNhdGVnXzJtaW51cyIpO19kaXNj
dXNzaW9ucy5jaGVja0NhdGVnb3J5KCk7X2Rpc2N1c3Npb25zLnByZWxvYWRlckNv
bnRhaW5lci5jc3MoImRpc3BsYXkiLAoibm9uZSIpO19kaXNjdXNzaW9ucy5sb2Nr
ZWQ9ITE7JChhKS5oYXNDbGFzcygiY2F0Iik/JCgiI2NhdF9sb2FkZXIiKS5jc3Mo
ImRpc3BsYXkiLCJub25lIik6JChhKS5oYXNDbGFzcygibG9jIikmJiQoIiNsb2Nf
bG9hZGVyIikuY3NzKCJkaXNwbGF5Iiwibm9uZSIpfSl9fWVsc2UgdGhpcy5zZW5k
ZXI9JChhKSwodGhpcy5jYXRfaWQ9InVuZGVmaW5lZCIhPXR5cGVvZiBiP2I6MCk/
KGI9JCgiI2NhdGVnb3J5XyIrdGhpcy5jYXRfaWQrJyBpbnB1dFtuYW1lPSJzZWxl
Y3RfY2F0ZWdvcnkiXScpLCQuZWFjaChiLGZ1bmN0aW9uKGEsYil7JChiKS5hdHRy
KCJjaGVja2VkIik9PSEwJiYoJCgiLmNhdGVnU2VsZWN0ZWQiKS5oaWRlKCksJCgi
I2RlZmF1bHROb0NhdCIpLnNob3coKSl9KSwkKCIjc3ViY2F0ZWdvcmllc09mXyIr
dGhpcy5jYXRfaWQpLnJlbW92ZSgpKTokKCIjY2F0ZWdvcmllc18xMSBkaXYuc2Nh
dGVnX2wyIikucmVtb3ZlKCksdGhpcy5zZW5kZXIucmVtb3ZlQ2xhc3MoImNhdGVn
XzJtaW51cyIpLAp0aGlzLnNlbmRlci5hZGRDbGFzcygiY2F0ZWdfMnBsdXMiKSxl
PSF0aGlzLmNhdF9pZD8xOnRoaXMuY2F0X2lkLHR5cGVvZiBkIT0idW5kZWZpbmVk
Ij90aGlzLnNlbmRlci50ZXh0KCJbICsgRGVzY2hpZGUgXSIpOnRoaXMuc2VuZGVy
Lmh0bWwoJzxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9InBsdXMi
Pis8L2E+JyksJCgiI2NhdGVnb3J5XyIrZSsiIGEubWludXMiKS5yZW1vdmVDbGFz
cygibWludXMiKS5hZGRDbGFzcygicGx1cyIpfX0sZGlzY1Bob3RvPW5ldyBmdW5j
dGlvbigpe3RoaXMub3BlbmVkPTA7dGhpcy52aWV3PWZ1bmN0aW9uKGEsYil7aWYo
IXRoaXMub3BlbmVkKXt0aGlzLm9wZW5lZD0xO3RoaXMud2luZG93SWQ9d2luZG93
SWQ9ImxhcmdlaW1hZ2UiO3ZhciBjPW5ldyBJbmxpbmVQb3B1cCh3aW5kb3dJZCk7
dGhpcy5wb3B1cD1jOy8gQXBwbGVXZWJLaXRcLy8udGVzdChuYXZpZ2F0b3IudXNl
ckFnZW50KT9jLnNob3coIi5tYWluIix7Y2FsbGJhY2s6ZnVuY3Rpb24oYyl7ZGlz
Y1Bob3RvLmxvYWRJbWFnZShjLAphLGIpfSxydW5DYWxsYmFjazoiYmVmb3JlIn0p
OmMuc2hvdygiLm1haW4iLHtlZmZlY3Q6ImZhZGVJbiIsc3BlZWQ6ImZhc3QiLGNh
bGxiYWNrOmZ1bmN0aW9uKGMpe2Rpc2NQaG90by5sb2FkSW1hZ2UoYyxhLGIpfSxy
dW5DYWxsYmFjazoiYmVmb3JlIn0pfX07dGhpcy5sb2FkSW1hZ2U9ZnVuY3Rpb24o
YSxiLGMpe3ZhciBkPSQoJzxkaXYgY2xhc3M9InBtYWluIj48YSBuYW1lPSJsb2dp
blBvcHVwIj48L2E+Jyk7ZC5hcHBlbmQoJzxhIHJlbD0ibm9mb2xsb3ciIGhyZWY9
ImphdmFzY3JpcHQ6ZGlzY1Bob3RvLmNsb3NlKCkiIGNsYXNzPSJwY2xvc2UiIHRp
dGxlPSInK19nZXROb3RpY2UoInBhZ2VzIiwiaW5jaGlkZV9sYWJlbCIpKyciPicr
X2dldE5vdGljZSgicGFnZXMiLCJpbmNoaWRlX2xhYmVsIikrIjwvYT4iKTt2YXIg
ZT0kKCc8ZGl2IGNsYXNzPSJwcCI+Jyk7ZS5hcHBlbmQoJzxpbWcgc3JjPSIvdXBs
b2Fkcy9kaXNjYXZhdGFycy8nK2MrIi8iK2IrJyIgd2lkdGg9IjQ1MCIgLz4nKTsK
ZC5hcHBlbmQoZSk7JCgiIyIrYS5wbGFjZUhvbGRlcikuaHRtbChkKX07dGhpcy5j
bG9zZT1mdW5jdGlvbigpe3RoaXMucG9wdXAucmVtb3ZlKHtlZmZlY3Q6ImZhZGVP
dXQiLHNwZWVkOiJmYXN0In0pO3RoaXMub3BlbmVkPTB9fSxmYXY9bmV3IGZ1bmN0
aW9uKCl7dGhpcy5mYXZJblByb2dyZXNzPTA7dGhpcy5tYXhBY3Rpb25zPTM7dGhp
cy5zZXRBY3Rpb25zQ291bnRlcj1mdW5jdGlvbigpe3ZhciBhPWdldENvb2tpZSgi
X19uaXV6X2FjX18iKTtpZighYS5sZW5ndGgpdGhpcy5hY3Rpb25zQ291bnRlcj0w
O2E9cGFyc2VJbnQoYSk7dGhpcy5hY3Rpb25zQ291bnRlcj1pc05hTihhKT8wOmF9
O3RoaXMuZ2V0RmF2Rm9yPWZ1bmN0aW9uKGEsYil7aWYoIXRoaXMuZmF2SW5Qcm9n
cmVzcykkKCIjZmF2TG9hZGVyIikuc2hvdygpLHRoaXMuZmF2SW5Qcm9ncmVzcz0x
LHR5cGVvZiBhPT0idW5kZWZpbmVkInx8dHlwZW9mIGI9PSJ1bmRlZmluZWQifHwk
LnBvc3QoSE9TVCsiZmF2L2dldEZhdiIsCnt1OmEsczpifSxmdW5jdGlvbihhKXsk
KCIjZmF2TG9hZGVyIikuaGlkZSgpO2Zhdi5mYXZJblByb2dyZXNzPTA7YS5zdGF0
dXM9PTEmJiQoIiNmYXZDb250ZW50IikuaHRtbChhLmRhdGEpfSwianNvbiIpfTt0
aGlzLnJlZ2lzdGVyQWN0aW9uPWZ1bmN0aW9uKCl7dGhpcy5hY3Rpb25zQ291bnRl
cisrO3NldENvb2tpZSgiX19uaXV6X2FjX18iLHRoaXMuYWN0aW9uc0NvdW50ZXIs
MC4wOSl9O3RoaXMuY2hlY2tDYXB0Y2hhPWZ1bmN0aW9uKCl7aWYodGhpcy5hY3Rp
b25zQ291bnRlcjx0aGlzLm1heEFjdGlvbnMpcmV0dXJuITE7dmFyIGE9YXJndW1l
bnRzLmNhbGxlZS5jYWxsZXIuYXJndW1lbnRzLGI9YXJndW1lbnRzLmNhbGxlZS5j
YWxsZXIsYz1bXTtmb3IoaT0wO2k8YS5sZW5ndGg7aSsrKWMucHVzaChhW2ldKTtj
LnB1c2goMSk7YT1jO19fY2FwdGNoYVBvcHVwLnNob3coZnVuY3Rpb24oKXtiLmFw
cGx5KGZhdixhKX0pO3JldHVybiEwfTt0aGlzLnJlc2V0QWN0aW9uc0NvdW50ZXI9
CmZ1bmN0aW9uKCl7dGhpcy5hY3Rpb25zQ291bnRlcj0wO3NldENvb2tpZSgiX19u
aXV6X2FjX18iLHRoaXMuYWN0aW9uc0NvdW50ZXIsLTEpfTt0aGlzLmFkZE5ld3M9
ZnVuY3Rpb24oYSxiLGMpeyQucG9zdChIT1NUKyJmYXYvYWRkTmV3cyIse246YSx1
OmIscjpjfSxmdW5jdGlvbigpeyQoIiNmYXZOZXdzQ29udGFpbmVyIithKS5odG1s
KCI8c3Bhbj4iK19nZXROb3RpY2UoInBhZ2VzIiwiZmF2b3JpdGVfbGFiZWwiKSsi
PC9zcGFuPiIpOyQoIiNyYW5rTmV3c0NvbnRhaW5lciIrYSkuaHRtbCgiPHNwYW4+
PGVtPkFkZCB0bzxiciAvPkZhdm9yaXRlICZhbXA7IFNoYXJlIGl0PC9lbT48L3Nw
YW4+Iil9LCJqc29uIil9O3RoaXMuZGVsTmV3cz1mdW5jdGlvbihhLGIsYyl7JC5w
b3N0KEhPU1QrImZhdi9kZWxOZXdzIix7bjphLHU6YixyOmN9LGZ1bmN0aW9uKCl7
JCgiI2Zhdk5ld3NDb250YWluZXIiK2EpLmh0bWwoIjxzcGFuPiIrX2dldE5vdGlj
ZSgicGFnZXMiLCJmYXZvcml0ZV9sYWJlbCIpKwoiPC9zcGFuPiIpfSwianNvbiIp
fTt0aGlzLmFkZERpc2M9ZnVuY3Rpb24oYSl7JC5nZXRKU09OKEhPU1QrImRpc2N1
c3Npb25zL2FkZFRvRmF2b3VyaXRlcy8iK2EsZnVuY3Rpb24oKXskKCIjZmF2RGlz
Y0NvbnRhaW5lciIrYSkuaHRtbCgiPHNwYW4+RmF2b3JpdGU8L3NwYW4+Iil9KX07
dGhpcy5kZWxEaXNjPWZ1bmN0aW9uKGEpeyQoIiNkaXNjdXNzaW9uXyIrYSsiIC5p
c19ub3RfZmF2b3VyaXRlIikuY3NzKCJkaXNwbGF5Iiwibm9uZSIpOyQoIiNkaXNj
dXNzaW9uXyIrYSsiIC5pc19mYXZvdXJpdGUiKS5jc3MoImRpc3BsYXkiLCIiKTsk
LmdldEpTT04oSE9TVCsiZGlzY3Vzc2lvbnMvZGVsRnJvbUZhdm91cml0ZXMvIith
LGZ1bmN0aW9uKCl7JCgiI2ZhdkRpc2NDb250YWluZXIiK2EpLmh0bWwoIjxzcGFu
PkZhdm9yaXRlPC9zcGFuPiIpfSl9O3RoaXMuYWRkQ2F0ZWdvcnk9ZnVuY3Rpb24o
YSxiKXskLnBvc3QoSE9TVCsiZmF2L2FkZENhdGVnb3J5Iix7YzphLHU6Yn0sZnVu
Y3Rpb24oKXskKCIjZmF2Q2F0Q29udGFpbmVyIikuaHRtbCgnPHNwYW4gY2xhc3M9
InNvcnRfZmF2IiB0aXRsZT0iJysKX2dldE5vdGljZSgicGFnZXMiLCJhZGF1Z2Ff
bGFfZmF2b3JpdGVfbGFiZWwiKSsnIj4nK19nZXROb3RpY2UoInBhZ2VzIiwiZmF2
b3JpdGFfbGFiZWwiKSsiPC9zcGFuPiIpfSwianNvbiIpfTt0aGlzLmFkZExvY2F0
aW9uPWZ1bmN0aW9uKGEsYil7JC5wb3N0KEhPU1QrImZhdi9hZGRMb2NhdGlvbiIs
e2M6YSxhOmJ9LGZ1bmN0aW9uKCl7JCgiI2ZhdkNhdENvbnRhaW5lciIpLmh0bWwo
JzxzcGFuIGNsYXNzPSJzb3J0X2ZhdiIgdGl0bGU9IicrX2dldE5vdGljZSgicGFn
ZXMiLCJhZGF1Z2FfbGFfZmF2b3JpdGVfbGFiZWwiKSsnIj4nK19nZXROb3RpY2Uo
InBhZ2VzIiwiZmF2b3JpdGFfbGFiZWwiKSsiPC9zcGFuPiIpfSwianNvbiIpfX0s
cmFuaz1uZXcgZnVuY3Rpb24oKXt0aGlzLnVwZGF0ZU5ld3M9ZnVuY3Rpb24oYSxi
LGMsZCxlKXskLnBvc3QoSE9TVCsiZmF2L3VwZGF0ZU5ld3NSYW5rIix7bjphLHM6
Yix1OmMscjpkLHY6ZX0sZnVuY3Rpb24oKXt9LCJqc29uIil9fTsKZnVuY3Rpb24g
dG9nZ2xlQWNjb3VudE1lbnUoYSl7YT8oJCgiI21lbnVPcGVuSGFuZGxlciIpLmhp
ZGUoKSwkKCIjbWVudUNsb3NlSGFuZGxlciIpLnNob3coKSwkKCIuanNfbXlfcHJv
ZmlsZSIpLmZhZGVJbigiZmFzdCIpKTooJCgiI21lbnVPcGVuSGFuZGxlciIpLnNo
b3coKSwkKCIjbWVudUNsb3NlSGFuZGxlciIpLmhpZGUoKSwkKCIuanNfbXlfcHJv
ZmlsZSIpLmZhZGVPdXQoImZhc3QiKSl9CmZ1bmN0aW9uIGZicHVibGlzaChhKXt2
YXIgYj17bWVzc2FnZToiaXMgdXNpbmcgTml1emVyLmNvbSBhbmQgaXQncyBhd2Vz
b21lISIsbmFtZToiTml1emVyLmNvbSIsZGVzY3JpcHRpb246IkZpbmQgeW91ciBu
ZXdzIGZyb20gdGhvdXNhbmRzIG9mIGFydGljbGVzLCBsZWF2ZSBhIGNvbW1lbnQg
YW5kIHN0YXJ0IHlvdXIgb3duIGRpc2N1c3Npb25zLiBJbnRlcmFjdCB3aXRoIHlv
dXIgZm9sbG93ZXJzIGFuZCBvdGhlciBwZW9wbGUgeW91IG1heSBrbm93IGJ5IHNo
YXJpbmcgeW91ciBvcGluaW9uLiJ9O2IubGluaz1IT1NUKyIvIjtiLnBpY3R1cmU9
SE9TVCsiL2ltYWdlcy9mcm9udGVuZC9sb2dvLnBuZyI7Yi5jYXB0aW9uPSJOaXV6
ZXIuY29tIjtGQi5hcGkoIi9tZS9mZWVkIiwicG9zdCIsYixmdW5jdGlvbigpe3R5
cGVvZiBhLnJlZGlyZWN0VG8hPSJ1bmRlZmluZWQiP3dpbmRvdy5sb2NhdGlvbi5o
cmVmPWEucmVkaXJlY3RUbzp3aW5kb3cubG9jYXRpb24ucmVsb2FkKCl9KX0KZnVu
Y3Rpb24gZmJsb2dpbigpe0ZCLmxvZ2luKGZ1bmN0aW9uKGEpe2Euc2Vzc2lvbiYm
KChuZXcgSW5saW5lUG9wdXAoIkZiUG9wdXAiKSkuc2hvdygiLm1haW4iLHtqdXN0
TG9hZGVyOiEwLGxvYWRlcjp7X2VsZW1lbnQ6InNwYW4iLF9jbGFzczoicHByZWxv
YWRlciIsX3RleHQ6IkxvYWRpbmcuLi4ifX0pLEZCLmFwaSgiL21lIixmdW5jdGlv
bihhKXskLnBvc3QoIi9hdXRoL2ZibG9naW4iLGEsZnVuY3Rpb24oYSl7YS5zdGF0
dXM+MD90eXBlb2YgYS5maXJzdF90aW1lIT0idW5kZWZpbmVkIj9mYnB1Ymxpc2go
YSk6dHlwZW9mIGEucmVkaXJlY3RUbyE9InVuZGVmaW5lZCI/d2luZG93LmxvY2F0
aW9uLmhyZWY9YS5yZWRpcmVjdFRvOndpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTp3
aW5kb3cubG9jYXRpb24uaHJlZj1hLnN0YXR1cz09LTI/Ii9lbmFibGUtYWNjb3Vu
dC5odG1sIjoiL2xvZ2luLmh0bWwifSwianNvbiIpfSkpfSx7cGVybXM6InVzZXJf
YWJvdXRfbWUsdXNlcl9iaXJ0aGRheSxlbWFpbCx1c2VyX2xvY2F0aW9uLHB1Ymxp
c2hfc3RyZWFtIn0pfQokKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpe3RyeXtG
Qi5pbml0KHthcHBJZDpfX0ZCSURfXyxzdGF0dXM6ITAsY29va2llOiEwLHhmYm1s
OiEwLGNoYW5uZWxVcmw6X19GQkhPU1RfX30pfWNhdGNoKGEpe319KTsKdmFyIElm
cj1mdW5jdGlvbihhKXt0aGlzLmZyYW1lSWQ9YTt0aGlzLmxvYWRJbnRlcnZhbD10
aGlzLmxvYWRUaW1lb3V0PW51bGw7dGhpcy5yZXNpemVGcmFtZT1mdW5jdGlvbigp
e3ZhciBhPSQoIiNzaXRlSGVhZGVyIikub3V0ZXJIZWlnaHQoITApOyQoZG9jdW1l
bnQpLmhlaWdodCgpO2E9JCh3aW5kb3cpLmhlaWdodCgpLWE7JCgiIyIrdGhpcy5m
cmFtZUlkKS5jc3MoImhlaWdodCIsYSsicHgiKX07dGhpcy5iaW5kRnJhbWU9ZnVu
Y3Rpb24oKXt2YXIgYT10aGlzOyQoIiMiK3RoaXMuZnJhbWVJZCkubG9hZChmdW5j
dGlvbigpeyQoIiNpZnJwcmVsb2FkZXIiKS5oaWRlKCk7JCgiIyIrYS5mcmFtZUlk
KS5zaG93KCk7Y2xlYXJUaW1lb3V0KGEubG9hZFRpbWVvdXQpO2NsZWFySW50ZXJ2
YWwoYS5sb2FkSW50ZXJ2YWwpfSl9O3RoaXMuaGFuZGxlTG9hZFRpbWVvdXQ9ZnVu
Y3Rpb24oKXtjbGVhclRpbWVvdXQodGhpcy5sb2FkVGltZW91dCk7JCgiIyIrdGhp
cy5mcmFtZUlkKS51bmJpbmQoImxvYWQiKTsKJCgiI2lmcnByZWxvYWRlciIpLmhp
ZGUoKTskKCIjIit0aGlzLmZyYW1lSWQpLnNob3coKX07dGhpcy5zZXRMb2FkVGlt
ZW91dD1mdW5jdGlvbigpe3RoaXMubG9hZFRpbWVvdXQ9c2V0VGltZW91dChmdW5j
dGlvbigpeyQoZG9jdW1lbnQpLnRyaWdnZXIoImlmckxvYWRUaW1lZE91dCIpfSwx
NUUzKTt2YXIgYT10aGlzOyQoZG9jdW1lbnQpLmJpbmQoImlmckxvYWRUaW1lZE91
dCIsZnVuY3Rpb24oKXthLmhhbmRsZUxvYWRUaW1lb3V0KCl9KX07dGhpcy5jYW5j
ZWxBbGVydD1mdW5jdGlvbigpe3RyeXt3aW5kb3c9JCgiI25ld3NpZnIiKVswXS5j
b250ZW50V2luZG93fWNhdGNoKGEpe2NvbnNvbGUubG9nKGEpfX07dGhpcy5zZXRD
YW5jZWxBbGVydD1mdW5jdGlvbigpe3RoaXMubG9hZEludGVydmFsPXNldEludGVy
dmFsKGZ1bmN0aW9uKCl7JChkb2N1bWVudCkudHJpZ2dlcigiaWZyTG9hZGluZ0lu
dGVydmFsIil9LDEwMCk7dmFyIGE9dGhpczskKGRvY3VtZW50KS5iaW5kKCJpZnJM
b2FkaW5nSW50ZXJ2YWwiLApmdW5jdGlvbigpe2EuY2FuY2VsQWxlcnQoKX0pfTt0
aGlzLmluaXQ9ZnVuY3Rpb24oKXt0aGlzLnJlc2l6ZUZyYW1lKCk7dGhpcy5iaW5k
RnJhbWUoKX07dGhpcy5pbml0KCl9O3N0YXJ0TGlzdD1mdW5jdGlvbigpe2lmKGRv
Y3VtZW50LmFsbCYmZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQpe2Nzc2Ryb3Bkb3du
Um9vdD1kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiY3NzZHJvcGRvd24iKTtmb3Io
eD0wO3g8Y3NzZHJvcGRvd25Sb290LmNoaWxkTm9kZXMubGVuZ3RoO3grKylpZihu
b2RlPWNzc2Ryb3Bkb3duUm9vdC5jaGlsZE5vZGVzW3hdLG5vZGUubm9kZU5hbWU9
PSJMSSIpbm9kZS5vbm1vdXNlb3Zlcj1mdW5jdGlvbigpe3RoaXMuY2xhc3NOYW1l
Kz0iIG92ZXIifSxub2RlLm9ubW91c2VvdXQ9ZnVuY3Rpb24oKXt0aGlzLmNsYXNz
TmFtZT10aGlzLmNsYXNzTmFtZS5yZXBsYWNlKCIgb3ZlciIsIiIpfX19Owp3aW5k
b3cuYXR0YWNoRXZlbnQ/d2luZG93LmF0dGFjaEV2ZW50KCJvbmxvYWQiLHN0YXJ0
TGlzdCk6d2luZG93Lm9ubG9hZD1zdGFydExpc3Q7CnZhciBWYXJpYWJsZU1lbnU9
bmV3IGZ1bmN0aW9uKCl7dGhpcy5tZW51cz17fTt0aGlzLmxhc3RFdmVudD10aGlz
Lmxhc3RJZD1udWxsO3RoaXMuaW5pdD1mdW5jdGlvbigpe3RoaXMucG9wdWxhdGVN
ZW51KCk7dGhpcy5hZGRFdmVudEhhbmRsZXJzKCl9O3RoaXMuYWRkRXZlbnRIYW5k
bGVycz1mdW5jdGlvbigpe3ZhciBhPSQoIi5tYWluaXRlbXMgPiBhIik7JC5lYWNo
KGEsZnVuY3Rpb24oYSxjKXt2YXIgZD0kKGMpO2lkPWQuYXR0cigiaWQiKTtpZihp
ZC5sZW5ndGgmJmlkIT0iYyIrQUNUSVZFX01FTlUmJmlkIT0iYzYxIiYmaWQhPSJj
MiIpe3ZhciBlPWQucGFyZW50KCk7KGZ1bmN0aW9uKGEpe2UubW91c2VlbnRlcihm
dW5jdGlvbihiKXtWYXJpYWJsZU1lbnUuc2hvd01lbnUoYSxiKX0pfSkoaWQpOyhm
dW5jdGlvbihhKXtlLm1vdXNlbGVhdmUoZnVuY3Rpb24oYil7VmFyaWFibGVNZW51
LmhpZGVNZW51KGEsYil9KX0pKGlkKX19KX07dGhpcy5zaG93TWVudT1mdW5jdGlv
bihhLApiKXskKGIuY3VycmVudFRhcmdldCkuYXBwZW5kKHRoaXMubWVudXNbYV0p
fTt0aGlzLmhpZGVNZW51PWZ1bmN0aW9uKGEsYil7JChiLmN1cnJlbnRUYXJnZXQp
LmNoaWxkcmVuKCJ1bCIpLnJlbW92ZSgpfTt0aGlzLnBvcHVsYXRlTWVudT1mdW5j
dGlvbigpe3ZhciBhPSc8dWwgY2xhc3M9InN1YnVscyI+JzthKz0nPGxpPjxhIGhy
ZWY9IkVjb25vbXkvIj5FY29ub215ICYgRmluYW5jZTwvYT48L2xpPic7YSs9Jzxs
aT48YSBocmVmPSJTdG9jay1NYXJrZXRzLyI+U3RvY2sgTWFya2V0czwvYT48L2xp
Pic7YSs9JzxsaT48YSBocmVmPSJBdXRvbW90aXZlcy8iPkF1dG9tb3RpdmVzPC9h
PjwvbGk+JzthKz0nPGxpPjxhIGhyZWY9IlJlYWwtRXN0YXRlLyI+UmVhbCBFc3Rh
dGU8L2E+PC9saT4nO2ErPSI8L3VsPiI7dmFyIGI9Jzx1bCBjbGFzcz0ic3VidWxz
Ij4nO2IrPSc8bGk+PGEgaHJlZj0iQ2VsZWJyaXR5LyI+Q2VsZWJyaXR5PC9hPjwv
bGk+JztiKz0nPGxpPjxhIGhyZWY9IlRlbGV2aXNpb24vIj5UZWxldmlzaW9uPC9h
PjwvbGk+JzsKYis9JzxsaT48YSBocmVmPSJNdXNpYy8iPk11c2ljPC9hPjwvbGk+
JztiKz0nPGxpPjxhIGhyZWY9Ik1vdmllcy8iPk1vdmllczwvYT48L2xpPic7Yis9
IjwvdWw+Ijt2YXIgYz0nPHVsIGNsYXNzPSJzdWJ1bHMiPic7Yys9JzxsaT48YSBo
cmVmPSJJbnRlcm5ldC8iPkludGVybmV0PC9hPjwvbGk+JztjKz0nPGxpPjxhIGhy
ZWY9IkdhZGdldHMvIj5HYWRnZXRzPC9hPjwvbGk+JztjKz0nPGxpPjxhIGhyZWY9
IlNlY3VyaXR5LyI+U2VjdXJpdHk8L2E+PC9saT4nO2MrPSc8bGk+PGEgaHJlZj0i
U29mdHdhcmUvIj5Tb2Z0d2FyZTwvYT48L2xpPic7Yys9JzxsaT48YSBocmVmPSJI
YXJkd2FyZS8iPkhhcmR3YXJlPC9hPjwvbGk+JztjKz0nPGxpPjxhIGhyZWY9Ik1v
YmlsZS8iPk1vYmlsZSAmIFRlbGVjb208L2E+PC9saT4nO2MrPSc8bGk+PGEgaHJl
Zj0iR2FtaW5nLyI+R2FtaW5nPC9hPjwvbGk+JztjKz0iPC91bD4iO3ZhciBkPSc8
dWwgY2xhc3M9InN1YnVscyI+JztkKz0nPGxpPjxhIGhyZWY9IlNwYWNlLUFzdHJv
bm9teS8iPlNwYWNlICYgQXN0cm9ub215PC9hPjwvbGk+JzsKZCs9JzxsaT48YSBo
cmVmPSJFbmVyZ3kvIj5FbmVyZ3k8L2E+PC9saT4nO2QrPSc8bGk+PGEgaHJlZj0i
RW52aXJvbm1lbnQvIj5FbnZpcm9ubWVudDwvYT48L2xpPic7ZCs9IjwvdWw+Ijt2
YXIgZT0nPHVsIGNsYXNzPSJzdWJ1bHMiPic7ZSs9JzxsaT48YSBocmVmPSJUcmF2
ZWwvIj5UcmF2ZWw8L2E+PC9saT4nO2UrPSc8bGk+PGEgaHJlZj0iQ3VsdHVyZS1B
cnRzLyI+Q3VsdHVyZSAmIEFydHM8L2E+PC9saT4nO2UrPSc8bGk+PGEgaHJlZj0i
RmFzaGlvbi1hbmQtYmVhdXR5LyI+RmFzaGlvbiAmIEJlYXV0eTwvYT48L2xpPic7
ZSs9JzxsaT48YSBocmVmPSJGYW1pbHkvIj5GYW1pbHk8L2E+PC9saT4nO2UrPSI8
L3VsPiI7dmFyIGY9Jzx1bCBjbGFzcz0ic3VidWxzIj4nO2YrPSc8bGk+PGEgaHJl
Zj0iRm9vdGJhbGwvIj5ORkwgRm9vdGJhbGw8L2E+PC9saT4nO2YrPSc8bGk+PGEg
aHJlZj0iQmFzZWJhbGwvIj5CYXNlYmFsbDwvYT48L2xpPic7Zis9JzxsaT48YSBo
cmVmPSJCYXNrZXRiYWxsLyI+QmFza2V0YmFsbDwvYT48L2xpPic7CmYrPSc8bGk+
PGEgaHJlZj0iQ29sbGVnZS8iPkNvbGxlZ2UgU3BvcnRzPC9hPjwvbGk+JztmKz0n
PGxpPjxhIGhyZWY9IlNvY2Nlci8iPlNvY2NlcjwvYT48L2xpPic7Zis9JzxsaT48
YSBocmVmPSJIb2NrZXkvIj5Ib2NrZXk8L2E+PC9saT4nO2YrPSc8bGk+PGEgaHJl
Zj0iVGVubmlzLyI+VGVubmlzPC9hPjwvbGk+JztmKz0nPGxpPjxhIGhyZWY9Ikdv
bGYvIj5Hb2xmPC9hPjwvbGk+JztmKz0nPGxpPjxhIGhyZWY9IkZpZ2h0aW5nLU5l
d3MvIj5GaWdodGluZyBOZXdzPC9hPjwvbGk+JztmKz0nPGxpPjxhIGhyZWY9Ik1v
dG9yLVNwb3J0cy8iPk1vdG9yIFNwb3J0czwvYT48L2xpPic7Zis9JzxsaT48YSBo
cmVmPSJPdGhlci1TcG9ydHMvIj5PdGhlcnM8L2E+PC9saT4nO2YrPSI8L3VsPiI7
dGhpcy5tZW51cy5jOT1hO3RoaXMubWVudXMuYzM9Yjt0aGlzLm1lbnVzLmMzMD1j
O3RoaXMubWVudXMuYzM5PWQ7dGhpcy5tZW51cy5jNjQ9ZTt0aGlzLm1lbnVzLmMx
Nz1mfX07CiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCl7aXNJRTYoKXx8VmFy
aWFibGVNZW51LmluaXQoKX0pOwp2YXIgTG9naW5XaW5kb3c9bmV3IGZ1bmN0aW9u
KCl7dGhpcy5vcGVuZWQ9MDt0aGlzLndpbmRvd0lkPXRoaXMucG9wdXA9bnVsbDt0
aGlzLm9wZW49ZnVuY3Rpb24oKXtpZighdGhpcy5vcGVuZWQpe3RoaXMub3BlbmVk
PTE7dGhpcy53aW5kb3dJZD13aW5kb3dJZD0iTG9naW5XaW5kb3ciO3ZhciBhPW5l
dyBJbmxpbmVQb3B1cCh3aW5kb3dJZCk7dGhpcy5wb3B1cD1hOy8gQXBwbGVXZWJL
aXRcLy8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KT9hLnNob3coIi5tYWluIix7
Y2FsbGJhY2s6ZnVuY3Rpb24oYSl7TG9naW5XaW5kb3cubG9naW5Gb3JtKGEpfSxy
dW5DYWxsYmFjazoiYmVmb3JlIn0pOmEuc2hvdygiLm1haW4iLHtlZmZlY3Q6ImZh
ZGVJbiIsc3BlZWQ6ImZhc3QiLGNhbGxiYWNrOmZ1bmN0aW9uKGEpe0xvZ2luV2lu
ZG93LmxvZ2luRm9ybShhKX0scnVuQ2FsbGJhY2s6ImJlZm9yZSJ9KX19O3RoaXMu
Y2xvc2U9ZnVuY3Rpb24oKXt0aGlzLnBvcHVwLnJlbW92ZSh7ZWZmZWN0OiJmYWRl
T3V0IiwKc3BlZWQ6ImZhc3QifSk7dGhpcy5vcGVuZWQ9MH07dGhpcy5sb2dpbkZv
cm09ZnVuY3Rpb24oYSl7dmFyIGI9JCgnPGRpdiBjbGFzcz0icG1haW4iPjxhIG5h
bWU9ImxvZ2luUG9wdXAiPjwvYT4nKTtiLmFwcGVuZCgnPGEgcmVsPSJub2ZvbGxv
dyIgaHJlZj0iamF2YXNjcmlwdDpMb2dpbldpbmRvdy5jbG9zZSgpIiBjbGFzcz0i
cGNsb3NlIiB0aXRsZT0iJytfZ2V0Tm90aWNlKCJwYWdlcyIsImluY2hpZGVfbGFi
ZWwiKSsnIj4nK19nZXROb3RpY2UoInBhZ2VzIiwiaW5jaGlkZV9sYWJlbCIpKyI8
L2E+Iik7dmFyIGM9JCgnPGRpdiBjbGFzcz0icHAiPicpO2MuYXBwZW5kKCc8ZGl2
IGNsYXNzPSJ0aXRsZSIgc3R5bGU9Im1hcmdpbi10b3A6IDBweCI+PGgyPicrX2dl
dE5vdGljZSgicGFnZXMiLCJpbnRyYV9pbl9jb250X2xhYmVsIikrJzwvaDI+PGEg
Y2xhc3M9ImZiY29ubmVjdCIgaHJlZj0iamF2YXNjcmlwdDpmYmxvZ2luKCk7Ij5M
b2dpbiB3aXRoIEZhY2Vib29rPC9hPjwvZGl2PicpOwp2YXIgZD0kKCc8dGFibGUg
Y2xhc3M9ImZvcm0xIiBjZWxsc3BhY2luZz0iMCIgY2VsbHBhZGRpbmc9IjAiPicp
LGU9JCgiPHRyPiIpO2UuYXBwZW5kKCc8dGQgY2xhc3M9ImZvcm0xXzEiPjxsYWJl
bCBmb3I9ImVtYWlsVycrdGhpcy53aW5kb3dJZCsnIj4nK19nZXROb3RpY2UoInBh
Z2VzIiwiYWRyZXNhX2RlX2VtYWlsX2xhYmVsIikrIjwvbGFiZWw+PC90ZD4iKTtl
LmFwcGVuZCgnPHRkIGNsYXNzPSJmb3JtMV8yIj48aW5wdXQgdHlwZT0idGV4dCIg
Y2xhc3M9InR4dF8xIiBpZD0iZW1haWxXJyt0aGlzLndpbmRvd0lkKyciIG5hbWU9
ImVtYWlsIiBzaXplPSIzNSIgLz4nKTtkLmFwcGVuZChlKTtlPSQoIjx0cj4iKTtl
LmFwcGVuZCgnPHRkIGNsYXNzPSJmb3JtMV8xIj48bGFiZWwgZm9yPSJwYXNzd2Qn
K3RoaXMud2luZG93SWQrJyI+JytfZ2V0Tm90aWNlKCJwYWdlcyIsInBhcm9sYV9s
YWJlbCIpKyI8L2xhYmVsPjwvdGQ+Iik7ZS5hcHBlbmQoJzx0ZCBjbGFzcz0iZm9y
bTFfMiI+PGlucHV0IHR5cGU9InBhc3N3b3JkIiBjbGFzcz0idHh0XzEiIG5hbWU9
InBhc3MiIHNpemU9IjM1IiBpZD0icGFzcyIgLz4nKTsKZC5hcHBlbmQoZSk7ZT0k
KCI8dHI+Iik7ZS5hcHBlbmQoJzx0ZCBjbGFzcz0iY29ybTFfMXAiPjwvdGQ+Jyk7
dmFyIGY9JCgnPHRkIGNsYXNzPSJmb3JtMV8yIj4nKSxoPSQoIjx0YWJsZT4iKSxn
PSQoIjx0cj4iKTtnLmFwcGVuZCgnPHRkIHN0eWxlPSJwYWRkaW5nOiAycHggMDsg
d2lkdGg6IDE1cHg7Ij48aW5wdXQgY2xhc3M9InJhZGlvX2J1dHRvbiIgdHlwZT0i
Y2hlY2tib3giIGlkPSJyZW1lbWJlcicrdGhpcy53aW5kb3dJZCsnIiB2YWx1ZT0i
MSIgbmFtZT0icmVtZW1iZXIiIGNoZWNrZWQ9ImNoZWNrZWQiIC8+PC90ZD4nKTtn
LmFwcGVuZCgnPHRkIHN0eWxlPSJwYWRkaW5nOiAycHggNHB4OyB0ZXh0LWFsaWdu
OiBsZWZ0OyI+PGxhYmVsIGZvcj0icmVtZW1iZXInK3RoaXMud2luZG93SWQrJyI+
JytfZ2V0Tm90aWNlKCJwYWdlcyIsInRpbmVtYV9taW50ZV9sYWJlbCIpKyI8L2xh
YmVsPjwvdGQ+Iik7aC5hcHBlbmQoZyk7Zi5hcHBlbmQoaCk7ZS5hcHBlbmQoZik7
ZC5hcHBlbmQoZSk7CmU9JCgiPHRyPiIpO2Y9JCgnPHRkIGNvbHNwYW49IjIiPicp
O2Rpdj0kKCc8ZGl2IGNsYXNzPSJidXR0b24iPicpO2Rpdi5hcHBlbmQoJzxpbnB1
dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImJhY2t0byIgdmFsdWU9Iicrd2luZG93Lmxv
Y2F0aW9uLmhyZWYrJyIgLz4nKTtkaXYuYXBwZW5kKCc8aW5wdXQgdHlwZT0ic3Vi
bWl0IiBuYW1lPSJzdWJtaXRfYXV0aCIgdmFsdWU9IicrX2dldE5vdGljZSgicGFn
ZXMiLCJhdXRlbnRpZmljYXJlX2xhYmVsIikrJyIgY2xhc3M9ImJ1dHRvbiIgLz4n
KTtkaXYuYXBwZW5kKCc8c3Bhbj4mbmJzcDsmbmJzcDtvciA8YSByZWw9Im5vZm9s
bG93IiBocmVmPSJzaWdudXAuaHRtbCI+PHN0cm9uZz4nK19nZXROb3RpY2UoInBh
Z2VzIiwiaW5yZWdpc3RyZWF6YXRlX2xhYmVsIikrJzwvc3Ryb25nPjwvYT4gLyA8
YSByZWw9Im5vZm9sbG93IiBzdHlsZT0idGV4dC1hbGlnbjogcmlnaHQ7IiBocmVm
PSJwYXNzd29yZC1yZWNvdmVyeS5odG1sIj4nK19nZXROb3RpY2UoInBhZ2VzIiwK
InJlY3VwZXJlYXphX3Bhcm9sYV9sYWJlbCIpKyI8L2E+PC9zcGFuPiIpO2YuYXBw
ZW5kKGRpdik7ZS5hcHBlbmQoZik7ZC5hcHBlbmQoZSk7Yy5hcHBlbmQoZCk7Yi5h
cHBlbmQoYyk7Yz0kKCI8Zm9ybT4iKTtjLmF0dHIoImFjdGlvbiIsIi9sb2dpbi5o
dG1sIikuYXR0cigibWV0aG9kIiwicG9zdCIpLmF0dHIoImF1dG9jb21wbGV0ZSIs
Im9uIik7Yy5hcHBlbmQoYik7JCgiIyIrYS5wbGFjZUhvbGRlcikuaHRtbChjKTth
bmNob3I9d2luZG93LmxvY2F0aW9uLmhyZWYucmVwbGFjZSgvIyguKikvaWcsIiIp
O3dpbmRvdy5sb2NhdGlvbi5ocmVmPWFuY2hvcisiIyJ9fTsK

------------qTBjXnmaI6qvT5AepQBBtZ
Content-Disposition: inline; filename=logo.png
Content-Type: image/png; name=logo.png
Content-Location: http://www.niuzer.com/images/frontend/logo.png
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAAIQAAAAvCAMAAAAVQZK4AAAAA3NCSVQICAjb4U/g
AAAB3VBMVEUJP3KFobnyKwC01etwj645VYCArc5+QUmuxtw7bJswUX74+fudMSgH
Wpc8aI+bsMVeg6NLTm+oOy+ItNTP3OcpWYTw8fWRqMAZVo5GbpXwMgZpiqkyXIpA
WYB5lrKcs8eOSEvQOBtQdpshUn+nu82VrcPk6e/H1N8zYYtiQ1cqXY12Tly7ydij
t8lihKXCMRgdXZGZSEMmVYNCa5N9mrVYfJ/a4urR4++0xdXaMg9TaY2Mpb04ZI1V
Xn/19/kaW42kuMxaVG/Dz9xSeZx6RVAYS3tjjKVMc5lNg67APymsvs/ZOhqCnbdu
kKyAXmuzQzR2lbHL1uFKV3f/////MwDn7fEpX4wzZplKcpdGVng9aZGDqcaTqsDw
NgqXSEW+z98ZYpalQzxtjazrNw9afqHf5u3x9PdLfKQMW5pkjrVXibNldZOETFJk
ZIDV3ufcORdsUGPGOiHM2OV0UF5Dc50fUoIzXYYkX4+GQUWHortUVXP4LwCJS1Dq
8vgtY5GwQDL0NQemNilTR2JCX4hrRFVskrWrQTcUY5k6Y5Tb4+pUe6J0k68gYJK9
zNk7WoMVYprPPCAPW5TdOBR9SVFLWHyUSEfWOiFyT1+ErcVzSmNea4thUmpWgapF
daKAQEcXYdocAAAACXBIWXMAABu8AAAbvAG6t6C7AAAAH3RFWHRTb2Z0d2FyZQBN
YWNyb21lZGlhIEZpcmV3b3JrcyA4tWjSeAAAABZ0RVh0Q3JlYXRpb24gVGltZQAw
My8yOC8xMf5dh6UAAAdESURBVFiF7Zj9e9NUFMeZDhWnSdXdxdrYYNOsFZsot92c
Jpa4mqdai3R021NL0DHH8GWigDI7meILKHabvMrz+Pa3es5Nk+atZfAL/OCBJ3Bv
mptPzv2ec8+9e8QHwPbcbwC0BwdC7lm/m2KTeE1s0cBzvR4qhw0eojEmBroJIf7B
EEIuTDMrcO4tS4Xm2ar7XroNTSmf954iBj4iEFGaDtsUydtpoV4X4FIS0voIXvQ0
yWeUtFAa0eFSF7qlJEdCECebji1bLsQsNit0cX0LbP3rCWht54kPYhJ6alTcboZN
kzOdrKKqiqlIkmLyvKqoPG9ytAR9qiSZeE9VpBGNkgDE6d4ANddLFhv81LWdjS9v
3/7r6LMPQ2smADENPSYVCxGIBC0qioR/ed53yedTJnbzzj1JktQujYUoV2UfxDM3
9189Pg92/fJ7xzbjIWZjIJICuEANmUGWwSG824T/8mZajoNo6n1PbF76+bV51x56
4rNXZ6MQhIzaQt909EtCbnVgLjRtRdP6lxWRNABNWtFWUgkwW5JsSR2V4yCuGKSn
ibG///123mcv/3mMi4EIWH4ONUE5cLmUkkX/LXgmlbWzXYOKTrPO87aqVEgQYqHM
ZNWDyB17az5oZ17/ToyD6HfSkiPM6ohq1zLBiBaZJyTd+z0FCkVNhTwxPYNDbDvP
yqXPn2Ovvnpw7cKRi+y/lw8ciEIE3oNBVk7Sog1znwhDiCBMtdSfUlkHKMnxrgdx
MjGGY7ScX73yDnvxhfO/Ly0tbfzBGm8Oh5A7+BUSIbuDEA0IGr4U9MRkm4WbxLSy
+D4Liwvr6+fBlp5/F1snhkIQAx0x0aJ02HT4e9IQq/V8EILTEGKa3d+6wWRwftH5
+fpL2PxiKITFs2+AjOwKM+wJEGbD8Il7SgVVJEkQwmBB0sCsuXUQ37rfU8EOyuK4
/7PDEHJykjkCggJDNFu5sydEmDY7EYQoyjpCzOAStPUBQtxY9H5/HSF2hkHYLM/A
FxBMVuZKRBOYrOo+TYgGSrMbgrAyuESUp+R78ARNrqK4IQ2IBNO2qkWnw1TMkuGX
chcSaxiCUhalOkKssfj0NHHujprI4qMCvpkMEGYavlsIdEGPotAgBJG7TJoQu4tH
WXSsra/jj5d2cDbmDw6GIBmM70n2nUOEaTbCnjDTIU/AkDh0MwVwh75nqeHWzi9L
S1sbV1ljYzAEreGDzLUgTD1WmF3wRCfQxaQa9oRoCUya8MRvb1zsZ0wnb58YnDEd
R5x2qh6S1CUlOxUR5igIcyQ8HRFhQpNbZZmXWNufhNeOF37qx0oYgrI8d9h5L2nj
kh0jTJiOtD9PFHH10KIQjlsFauUm930TXEVvXopbRVlLTqEj5novAGGauxImQPB6
JQpBEkya4Inm+L4Xr3sIF3/Y+9h2XD3BGoTVYYd7375rT3SxwDDECIQosqy5vAeG
Pfnp3v1nHIYjP576sFkYBCFr6IhZt2TcrSaKAsB2g6uoA0HTCFFAiObEV9fEGx8h
w8ePbMbWmAyC5LHGK6fcInm30TGFxaYWC+EsAQamrbGKvO/tp8AZt57MofgHaIKw
7DLruX93eYK0oeJ215LwdFCJRTwmwNWKXBxXHn96fu0aNsvFAdOBT4/11wonY7Zk
Gir+mDCdjQ8YMihSksRCOBM8k3MguLlm9tdHzx0a8ZV+IQjawHs1f+iBm6FQqLaT
rXa1WKxyeGElv9mocNV2q9XOZJBBbXDxECLBGV4texDNs/8QUmVKoXEQhDki44PA
VVTSeYGHXYZzURQ775T8AvyxbR43RRCfrXC17UJYnV7l7UI0CyC5caYREoWw2Prv
X8pYPYFRijswfDFeVI6V/F437oeUYmTf4XmCmwxB5CyRsEI6R2kYgrZZdeuPBSZM
RWG7P9z4Key1MB1Zm+3FsNvGH+iaix6BEOVaCGIWINi7mqpFQxCOI3jfBt4RJq92
JF1R4CLwHV7XJY6iJxRFlzrQrfIqbDs8iiiEyFajIEQvfzT5ni9cCJnBLST9SaFX
bbeKmVYyg5dKsVqFJRr3onoLupPJTKY0YoJPhPDmpw9Bc1EIIrOqpbmdZB/teYIV
dZIlhiHMhBWKUIRQ06IToZRy3SzMSCM/CIKkohCiu/ddsDkcpLchzmNmXeAC2XFQ
ZRUodGGMrqlAdo/LmH5pBiDg43tnEZtmophvX2l6RwN1OfjJ/r2o2N8phkt+o4Qi
yQ+AEIkSAwHd/Jgr2Vyh3IfgBdtnSeruymH7nQruyoMlfwrzRnsQhFxZjYWQtbmm
32IPSbRh5xP+kp9wElCMRusJV5ozcRCQyIzS6TtBDDupMdOBfUcJWJc9CLaL9EFY
o2w8gMB3zvXFT2ROq024s3LXZ1aSHdhC1/HExit08Shutu1fnwrs9E42avBv1h+B
qLOpjjozfi+nd/yK/8zO0PSSsuJ6QgwdYro9JO4OA3GOL+/+HJOExiHUC9H7bv9D
uPYf3ZdE6Q+aURUAAAAASUVORK5CYII=

------------qTBjXnmaI6qvT5AepQBBtZ
Content-Disposition: inline; filename=recaptcha_ajax.js
Content-Type: application/x-javascript; name=recaptcha_ajax.js
Content-Location: http://www.google.com/recaptcha/api/js/recaptcha_ajax.js
Content-Transfer-Encoding: Base64

dmFyIFJlY2FwdGNoYVRlbXBsYXRlcz17fTtSZWNhcHRjaGFUZW1wbGF0ZXMuVmVy
dEh0bWw9Jzx0YWJsZSBpZD0icmVjYXB0Y2hhX3RhYmxlIiBjbGFzcz0icmVjYXB0
Y2hhdGFibGUiID4gPHRyPiA8dGQgY29sc3Bhbj0iNiIgY2xhc3M9XCdyZWNhcHRj
aGFfcjFfYzFcJz48L3RkPiA8L3RyPiA8dHI+IDx0ZCBjbGFzcz1cJ3JlY2FwdGNo
YV9yMl9jMVwnPjwvdGQ+IDx0ZCBjb2xzcGFuPSI0IiBjbGFzcz1cJ3JlY2FwdGNo
YV9pbWFnZV9jZWxsXCc+PGRpdiBpZD0icmVjYXB0Y2hhX2ltYWdlIj48L2Rpdj48
L3RkPiA8dGQgY2xhc3M9XCdyZWNhcHRjaGFfcjJfYzJcJz48L3RkPiA8L3RyPiA8
dHI+IDx0ZCByb3dzcGFuPSI2IiBjbGFzcz1cJ3JlY2FwdGNoYV9yM19jMVwnPjwv
dGQ+IDx0ZCBjb2xzcGFuPSI0IiBjbGFzcz1cJ3JlY2FwdGNoYV9yM19jMlwnPjwv
dGQ+IDx0ZCByb3dzcGFuPSI2IiBjbGFzcz1cJ3JlY2FwdGNoYV9yM19jM1wnPjwv
dGQ+IDwvdHI+IDx0cj4gPHRkIHJvd3NwYW49IjMiIGNsYXNzPVwncmVjYXB0Y2hh
X3I0X2MxXCcgaGVpZ2h0PSI0OSI+IDxkaXYgY2xhc3M9InJlY2FwdGNoYV9pbnB1
dF9hcmVhIj4gPGxhYmVsIGZvcj0icmVjYXB0Y2hhX3Jlc3BvbnNlX2ZpZWxkIiBj
bGFzcz0icmVjYXB0Y2hhX2lucHV0X2FyZWFfdGV4dCI+PHNwYW4gaWQ9InJlY2Fw
dGNoYV9pbnN0cnVjdGlvbnNfaW1hZ2UiIGNsYXNzPSJyZWNhcHRjaGFfb25seV9p
Zl9pbWFnZSByZWNhcHRjaGFfb25seV9pZl9ub19pbmNvcnJlY3Rfc29sIj48L3Nw
YW4+PHNwYW4gaWQ9InJlY2FwdGNoYV9pbnN0cnVjdGlvbnNfYXVkaW8iIGNsYXNz
PSJyZWNhcHRjaGFfb25seV9pZl9ub19pbmNvcnJlY3Rfc29sIHJlY2FwdGNoYV9v
bmx5X2lmX2F1ZGlvIj48L3NwYW4+PHNwYW4gaWQ9InJlY2FwdGNoYV9pbnN0cnVj
dGlvbnNfZXJyb3IiIGNsYXNzPSJyZWNhcHRjaGFfb25seV9pZl9pbmNvcnJlY3Rf
c29sIj48L3NwYW4+PC9sYWJlbD48YnIvPiA8aW5wdXQgbmFtZT0icmVjYXB0Y2hh
X3Jlc3BvbnNlX2ZpZWxkIiBpZD0icmVjYXB0Y2hhX3Jlc3BvbnNlX2ZpZWxkIiB0
eXBlPSJ0ZXh0IiBhdXRvY29ycmVjdD0ib2ZmIiBhdXRvY2FwaXRhbGl6ZT0ib2Zm
IiAvPiA8L2Rpdj4gPC90ZD4gPHRkIHJvd3NwYW49IjQiIGNsYXNzPVwncmVjYXB0
Y2hhX3I0X2MyXCc+PC90ZD4gPHRkPjxhIGlkPVwncmVjYXB0Y2hhX3JlbG9hZF9i
dG5cJz48aW1nIGlkPVwncmVjYXB0Y2hhX3JlbG9hZFwnIHdpZHRoPSIyNSIgaGVp
Z2h0PSIxNyIgLz48L2E+PC90ZD4gPHRkIHJvd3NwYW49IjQiIGNsYXNzPVwncmVj
YXB0Y2hhX3I0X2M0XCc+PC90ZD4gPC90cj4gPHRyPiA8dGQ+PGEgaWQ9XCdyZWNh
cHRjaGFfc3dpdGNoX2F1ZGlvX2J0blwnIGNsYXNzPSJyZWNhcHRjaGFfb25seV9p
Zl9pbWFnZSI+PGltZyBpZD1cJ3JlY2FwdGNoYV9zd2l0Y2hfYXVkaW9cJyB3aWR0
aD0iMjUiIGhlaWdodD0iMTYiIGFsdD0iIiAvPjwvYT48YSBpZD1cJ3JlY2FwdGNo
YV9zd2l0Y2hfaW1nX2J0blwnIGNsYXNzPSJyZWNhcHRjaGFfb25seV9pZl9hdWRp
byI+PGltZyBpZD1cJ3JlY2FwdGNoYV9zd2l0Y2hfaW1nXCcgd2lkdGg9IjI1IiBo
ZWlnaHQ9IjE2IiBhbHQ9IiIvPjwvYT48L3RkPiA8L3RyPiA8dHI+IDx0ZD48YSBp
ZD1cJ3JlY2FwdGNoYV93aGF0c3RoaXNfYnRuXCc+PGltZyBpZD1cJ3JlY2FwdGNo
YV93aGF0c3RoaXNcJyB3aWR0aD0iMjUiIGhlaWdodD0iMTYiIC8+PC9hPjwvdGQ+
IDwvdHI+IDx0cj4gPHRkIGNsYXNzPVwncmVjYXB0Y2hhX3I3X2MxXCc+PC90ZD4g
PHRkIGNsYXNzPVwncmVjYXB0Y2hhX3I4X2MxXCc+PC90ZD4gPC90cj4gPC90YWJs
ZT4gJztSZWNhcHRjaGFUZW1wbGF0ZXMuQ2xlYW5Dc3M9Ii5yZWNhcHRjaGF0YWJs
ZSB0ZCBpbWd7ZGlzcGxheTpibG9ja30ucmVjYXB0Y2hhdGFibGUgLnJlY2FwdGNo
YV9pbWFnZV9jZWxsIGNlbnRlciBpbWd7aGVpZ2h0OjU3cHh9LnJlY2FwdGNoYXRh
YmxlIC5yZWNhcHRjaGFfaW1hZ2VfY2VsbCBjZW50ZXJ7aGVpZ2h0OjU3cHh9LnJl
Y2FwdGNoYXRhYmxlIC5yZWNhcHRjaGFfaW1hZ2VfY2VsbHtiYWNrZ3JvdW5kLWNv
bG9yOndoaXRlO2hlaWdodDo1N3B4O3BhZGRpbmc6N3B4IWltcG9ydGFudH0ucmVj
YXB0Y2hhdGFibGUsI3JlY2FwdGNoYV9hcmVhIHRyLCNyZWNhcHRjaGFfYXJlYSB0
ZCwjcmVjYXB0Y2hhX2FyZWEgdGh7bWFyZ2luOjAhaW1wb3J0YW50O2JvcmRlcjow
IWltcG9ydGFudDtib3JkZXItY29sbGFwc2U6Y29sbGFwc2UhaW1wb3J0YW50O3Zl
cnRpY2FsLWFsaWduOm1pZGRsZSFpbXBvcnRhbnR9LnJlY2FwdGNoYXRhYmxlICp7
bWFyZ2luOjA7cGFkZGluZzowO2JvcmRlcjowO2NvbG9yOmJsYWNrO3Bvc2l0aW9u
OnN0YXRpYzt0b3A6YXV0bztsZWZ0OmF1dG87cmlnaHQ6YXV0bztib3R0b206YXV0
bzt0ZXh0LWFsaWduOmxlZnQhaW1wb3J0YW50fS5yZWNhcHRjaGF0YWJsZSAjcmVj
YXB0Y2hhX2ltYWdle21hcmdpbjphdXRvO2JvcmRlcjoxcHggc29saWQgI2RmZGZk
ZiFpbXBvcnRhbnR9LnJlY2FwdGNoYXRhYmxlIGEgaW1ne2JvcmRlcjowfS5yZWNh
cHRjaGF0YWJsZSBhLC5yZWNhcHRjaGF0YWJsZSBhOmhvdmVye291dGxpbmU6bm9u
ZTtib3JkZXI6MCFpbXBvcnRhbnQ7cGFkZGluZzowIWltcG9ydGFudDt0ZXh0LWRl
Y29yYXRpb246bm9uZTtjb2xvcjpibHVlO2JhY2tncm91bmQ6bm9uZSFpbXBvcnRh
bnQ7Zm9udC13ZWlnaHQ6bm9ybWFsfS5yZWNhcHRjaGFfaW5wdXRfYXJlYXtwb3Np
dGlvbjpyZWxhdGl2ZSFpbXBvcnRhbnQ7YmFja2dyb3VuZDpub25lIWltcG9ydGFu
dH0ucmVjYXB0Y2hhdGFibGUgbGFiZWwucmVjYXB0Y2hhX2lucHV0X2FyZWFfdGV4
dHtib3JkZXI6MXB4IHNvbGlkICNkZmRmZGYhaW1wb3J0YW50O21hcmdpbjowIWlt
cG9ydGFudDtwYWRkaW5nOjAhaW1wb3J0YW50O3Bvc2l0aW9uOnN0YXRpYyFpbXBv
cnRhbnQ7dG9wOmF1dG8haW1wb3J0YW50O2xlZnQ6YXV0byFpbXBvcnRhbnQ7cmln
aHQ6YXV0byFpbXBvcnRhbnQ7Ym90dG9tOmF1dG8haW1wb3J0YW50fS5yZWNhcHRj
aGFfdGhlbWVfcmVkIGxhYmVsLnJlY2FwdGNoYV9pbnB1dF9hcmVhX3RleHQsLnJl
Y2FwdGNoYV90aGVtZV93aGl0ZSBsYWJlbC5yZWNhcHRjaGFfaW5wdXRfYXJlYV90
ZXh0e2NvbG9yOmJsYWNrIWltcG9ydGFudH0ucmVjYXB0Y2hhX3RoZW1lX2JsYWNr
Z2xhc3MgbGFiZWwucmVjYXB0Y2hhX2lucHV0X2FyZWFfdGV4dHtjb2xvcjp3aGl0
ZSFpbXBvcnRhbnR9LnJlY2FwdGNoYXRhYmxlICNyZWNhcHRjaGFfcmVzcG9uc2Vf
ZmllbGR7Zm9udC1zaXplOjExcHR9LnJlY2FwdGNoYV90aGVtZV9ibGFja2dsYXNz
ICNyZWNhcHRjaGFfcmVzcG9uc2VfZmllbGQsLnJlY2FwdGNoYV90aGVtZV93aGl0
ZSAjcmVjYXB0Y2hhX3Jlc3BvbnNlX2ZpZWxke2JvcmRlcjoxcHggc29saWQgZ3Jh
eX0ucmVjYXB0Y2hhX3RoZW1lX3JlZCAjcmVjYXB0Y2hhX3Jlc3BvbnNlX2ZpZWxk
e2JvcmRlcjoxcHggc29saWQgI2NjYTk0MH0ucmVjYXB0Y2hhX2F1ZGlvX2NhbnRf
aGVhcl9saW5re2ZvbnQtc2l6ZTo3cHQ7Y29sb3I6YmxhY2t9LnJlY2FwdGNoYXRh
Ymxle2xpbmUtaGVpZ2h0OjFlbTtib3JkZXI6MXB4IHNvbGlkICNkZmRmZGYhaW1w
b3J0YW50fS5yZWNhcHRjaGFfZXJyb3JfdGV4dHtjb2xvcjpyZWR9IjtSZWNhcHRj
aGFUZW1wbGF0ZXMuQ2xlYW5IdG1sPSc8dGFibGUgaWQ9InJlY2FwdGNoYV90YWJs
ZSIgY2xhc3M9InJlY2FwdGNoYXRhYmxlIj4gPHRyIGhlaWdodD0iNzMiPiA8dGQg
Y2xhc3M9XCdyZWNhcHRjaGFfaW1hZ2VfY2VsbFwnIHdpZHRoPSIzMDIiPjxjZW50
ZXI+PGRpdiBpZD0icmVjYXB0Y2hhX2ltYWdlIj48L2Rpdj48L2NlbnRlcj48L3Rk
PiA8dGQgc3R5bGU9InBhZGRpbmc6IDEwcHggN3B4IDdweCA3cHg7Ij4gPGEgaWQ9
XCdyZWNhcHRjaGFfcmVsb2FkX2J0blwnPjxpbWcgaWQ9XCdyZWNhcHRjaGFfcmVs
b2FkXCcgd2lkdGg9IjI1IiBoZWlnaHQ9IjE4IiBhbHQ9IiIgLz48L2E+IDxhIGlk
PVwncmVjYXB0Y2hhX3N3aXRjaF9hdWRpb19idG5cJyBjbGFzcz0icmVjYXB0Y2hh
X29ubHlfaWZfaW1hZ2UiPjxpbWcgaWQ9XCdyZWNhcHRjaGFfc3dpdGNoX2F1ZGlv
XCcgd2lkdGg9IjI1IiBoZWlnaHQ9IjE1IiBhbHQ9IiIgLz48L2E+PGEgaWQ9XCdy
ZWNhcHRjaGFfc3dpdGNoX2ltZ19idG5cJyBjbGFzcz0icmVjYXB0Y2hhX29ubHlf
aWZfYXVkaW8iPjxpbWcgaWQ9XCdyZWNhcHRjaGFfc3dpdGNoX2ltZ1wnIHdpZHRo
PSIyNSIgaGVpZ2h0PSIxNSIgYWx0PSIiLz48L2E+IDxhIGlkPVwncmVjYXB0Y2hh
X3doYXRzdGhpc19idG5cJz48aW1nIGlkPVwncmVjYXB0Y2hhX3doYXRzdGhpc1wn
IHdpZHRoPSIyNSIgaGVpZ2h0PSIxNiIgLz48L2E+IDwvdGQ+IDx0ZCBzdHlsZT0i
cGFkZGluZzogMThweCA3cHggMThweCA3cHg7Ij4gPGltZyBpZD1cJ3JlY2FwdGNo
YV9sb2dvXCcgYWx0PSIiIHdpZHRoPSI3MSIgaGVpZ2h0PSIzNiIgLz4gPC90ZD4g
PC90cj4gPHRyPiA8dGQgc3R5bGU9InBhZGRpbmctbGVmdDogN3B4OyI+IDxkaXYg
Y2xhc3M9InJlY2FwdGNoYV9pbnB1dF9hcmVhIiBzdHlsZT0icGFkZGluZy10b3A6
IDJweDsgcGFkZGluZy1ib3R0b206IDdweDsiPiA8aW5wdXQgc3R5bGU9ImJvcmRl
cjogMXB4IHNvbGlkICMzYzNjM2M7IHdpZHRoOiAzMDJweDsiIG5hbWU9InJlY2Fw
dGNoYV9yZXNwb25zZV9maWVsZCIgaWQ9InJlY2FwdGNoYV9yZXNwb25zZV9maWVs
ZCIgdHlwZT0idGV4dCIgLz4gPC9kaXY+IDwvdGQ+IDx0ZD48L3RkPiA8dGQgc3R5
bGU9InBhZGRpbmc6IDRweCA3cHggMTJweCA3cHg7Ij4gPGltZyBpZD0icmVjYXB0
Y2hhX3RhZ2xpbmUiIHdpZHRoPSI3MSIgaGVpZ2h0PSIxNyIgLz4gPC90ZD4gPC90
cj4gPC90YWJsZT4gJztSZWNhcHRjaGFUZW1wbGF0ZXMuQ29udGV4dEh0bWw9Jzx0
YWJsZSBpZD0icmVjYXB0Y2hhX3RhYmxlIiBjbGFzcz0icmVjYXB0Y2hhdGFibGUi
PiA8dHI+IDx0ZCBjb2xzcGFuPSI2IiBjbGFzcz1cJ3JlY2FwdGNoYV9yMV9jMVwn
PjwvdGQ+IDwvdHI+IDx0cj4gPHRkIGNsYXNzPVwncmVjYXB0Y2hhX3IyX2MxXCc+
PC90ZD4gPHRkIGNvbHNwYW49IjQiIGNsYXNzPVwncmVjYXB0Y2hhX2ltYWdlX2Nl
bGxcJz48ZGl2IGlkPSJyZWNhcHRjaGFfaW1hZ2UiPjwvZGl2PjwvdGQ+IDx0ZCBj
bGFzcz1cJ3JlY2FwdGNoYV9yMl9jMlwnPjwvdGQ+IDwvdHI+IDx0cj4gPHRkIHJv
d3NwYW49IjYiIGNsYXNzPVwncmVjYXB0Y2hhX3IzX2MxXCc+PC90ZD4gPHRkIGNv
bHNwYW49IjQiIGNsYXNzPVwncmVjYXB0Y2hhX3IzX2MyXCc+PC90ZD4gPHRkIHJv
d3NwYW49IjYiIGNsYXNzPVwncmVjYXB0Y2hhX3IzX2MzXCc+PC90ZD4gPC90cj4g
PHRyPiA8dGQgcm93c3Bhbj0iMyIgY2xhc3M9XCdyZWNhcHRjaGFfcjRfYzFcJyBo
ZWlnaHQ9IjQ5Ij4gPGRpdiBjbGFzcz0icmVjYXB0Y2hhX2lucHV0X2FyZWEiPiA8
bGFiZWwgZm9yPSJyZWNhcHRjaGFfcmVzcG9uc2VfZmllbGQiIGNsYXNzPSJyZWNh
cHRjaGFfaW5wdXRfYXJlYV90ZXh0Ij48c3BhbiBpZD0icmVjYXB0Y2hhX2luc3Ry
dWN0aW9uc19jb250ZXh0IiBjbGFzcz0icmVjYXB0Y2hhX29ubHlfaWZfaW1hZ2Ug
cmVjYXB0Y2hhX29ubHlfaWZfbm9faW5jb3JyZWN0X3NvbCI+PC9zcGFuPjxzcGFu
IGlkPSJyZWNhcHRjaGFfaW5zdHJ1Y3Rpb25zX2F1ZGlvIiBjbGFzcz0icmVjYXB0
Y2hhX29ubHlfaWZfbm9faW5jb3JyZWN0X3NvbCByZWNhcHRjaGFfb25seV9pZl9h
dWRpbyI+PC9zcGFuPjxzcGFuIGlkPSJyZWNhcHRjaGFfaW5zdHJ1Y3Rpb25zX2Vy
cm9yIiBjbGFzcz0icmVjYXB0Y2hhX29ubHlfaWZfaW5jb3JyZWN0X3NvbCI+PC9z
cGFuPjwvbGFiZWw+PGJyLz4gPGlucHV0IG5hbWU9InJlY2FwdGNoYV9yZXNwb25z
ZV9maWVsZCIgaWQ9InJlY2FwdGNoYV9yZXNwb25zZV9maWVsZCIgdHlwZT0idGV4
dCIgLz4gPC9kaXY+IDwvdGQ+IDx0ZCByb3dzcGFuPSI0IiBjbGFzcz1cJ3JlY2Fw
dGNoYV9yNF9jMlwnPjwvdGQ+IDx0ZD48YSBpZD1cJ3JlY2FwdGNoYV9yZWxvYWRf
YnRuXCc+PGltZyBpZD1cJ3JlY2FwdGNoYV9yZWxvYWRcJyB3aWR0aD0iMjUiIGhl
aWdodD0iMTciIC8+PC9hPjwvdGQ+IDx0ZCByb3dzcGFuPSI0IiBjbGFzcz1cJ3Jl
Y2FwdGNoYV9yNF9jNFwnPjwvdGQ+IDwvdHI+IDx0cj4gPHRkPjxhIGlkPVwncmVj
YXB0Y2hhX3N3aXRjaF9hdWRpb19idG5cJyBjbGFzcz0icmVjYXB0Y2hhX29ubHlf
aWZfaW1hZ2UiPjxpbWcgaWQ9XCdyZWNhcHRjaGFfc3dpdGNoX2F1ZGlvXCcgd2lk
dGg9IjI1IiBoZWlnaHQ9IjE2IiBhbHQ9IiIgLz48L2E+PGEgaWQ9XCdyZWNhcHRj
aGFfc3dpdGNoX2ltZ19idG5cJyBjbGFzcz0icmVjYXB0Y2hhX29ubHlfaWZfYXVk
aW8iPjxpbWcgaWQ9XCdyZWNhcHRjaGFfc3dpdGNoX2ltZ1wnIHdpZHRoPSIyNSIg
aGVpZ2h0PSIxNiIgYWx0PSIiLz48L2E+PC90ZD4gPC90cj4gPHRyPiA8dGQ+PGEg
aWQ9XCdyZWNhcHRjaGFfd2hhdHN0aGlzX2J0blwnPjxpbWcgaWQ9XCdyZWNhcHRj
aGFfd2hhdHN0aGlzXCcgd2lkdGg9IjI1IiBoZWlnaHQ9IjE2IiAvPjwvYT48L3Rk
PiA8L3RyPiA8dHI+IDx0ZCBjbGFzcz1cJ3JlY2FwdGNoYV9yN19jMVwnPjwvdGQ+
IDx0ZCBjbGFzcz1cJ3JlY2FwdGNoYV9yOF9jMVwnPjwvdGQ+IDwvdHI+IDwvdGFi
bGU+ICc7UmVjYXB0Y2hhVGVtcGxhdGVzLlZlcnRDc3M9Ii5yZWNhcHRjaGF0YWJs
ZSB0ZCBpbWd7ZGlzcGxheTpibG9ja30ucmVjYXB0Y2hhdGFibGUgLnJlY2FwdGNo
YV9yMV9jMXtiYWNrZ3JvdW5kOnVybCgnSU1HUk9PVC9zcHJpdGUucG5nJykgMCAt
NjNweCBuby1yZXBlYXQ7d2lkdGg6MzE4cHg7aGVpZ2h0OjlweH0ucmVjYXB0Y2hh
dGFibGUgLnJlY2FwdGNoYV9yMl9jMXtiYWNrZ3JvdW5kOnVybCgnSU1HUk9PVC9z
cHJpdGUucG5nJykgLTE4cHggMCBuby1yZXBlYXQ7d2lkdGg6OXB4O2hlaWdodDo1
N3B4fS5yZWNhcHRjaGF0YWJsZSAucmVjYXB0Y2hhX3IyX2Mye2JhY2tncm91bmQ6
dXJsKCdJTUdST09UL3Nwcml0ZS5wbmcnKSAtMjdweCAwIG5vLXJlcGVhdDt3aWR0
aDo5cHg7aGVpZ2h0OjU3cHh9LnJlY2FwdGNoYXRhYmxlIC5yZWNhcHRjaGFfcjNf
YzF7YmFja2dyb3VuZDp1cmwoJ0lNR1JPT1Qvc3ByaXRlLnBuZycpIDAgMCBuby1y
ZXBlYXQ7d2lkdGg6OXB4O2hlaWdodDo2M3B4fS5yZWNhcHRjaGF0YWJsZSAucmVj
YXB0Y2hhX3IzX2Mye2JhY2tncm91bmQ6dXJsKCdJTUdST09UL3Nwcml0ZS5wbmcn
KSAtMThweCAtNTdweCBuby1yZXBlYXQ7d2lkdGg6MzAwcHg7aGVpZ2h0OjZweH0u
cmVjYXB0Y2hhdGFibGUgLnJlY2FwdGNoYV9yM19jM3tiYWNrZ3JvdW5kOnVybCgn
SU1HUk9PVC9zcHJpdGUucG5nJykgLTlweCAwIG5vLXJlcGVhdDt3aWR0aDo5cHg7
aGVpZ2h0OjYzcHh9LnJlY2FwdGNoYXRhYmxlIC5yZWNhcHRjaGFfcjRfYzF7YmFj
a2dyb3VuZDp1cmwoJ0lNR1JPT1Qvc3ByaXRlLnBuZycpIC00M3B4IDAgbm8tcmVw
ZWF0O3dpZHRoOjE3MXB4O2hlaWdodDo0OXB4fS5yZWNhcHRjaGF0YWJsZSAucmVj
YXB0Y2hhX3I0X2Mye2JhY2tncm91bmQ6dXJsKCdJTUdST09UL3Nwcml0ZS5wbmcn
KSAtMzZweCAwIG5vLXJlcGVhdDt3aWR0aDo3cHg7aGVpZ2h0OjU3cHh9LnJlY2Fw
dGNoYXRhYmxlIC5yZWNhcHRjaGFfcjRfYzR7YmFja2dyb3VuZDp1cmwoJ0lNR1JP
T1Qvc3ByaXRlLnBuZycpIC0yMTRweCAwIG5vLXJlcGVhdDt3aWR0aDo5N3B4O2hl
aWdodDo1N3B4fS5yZWNhcHRjaGF0YWJsZSAucmVjYXB0Y2hhX3I3X2Mxe2JhY2tn
cm91bmQ6dXJsKCdJTUdST09UL3Nwcml0ZS5wbmcnKSAtNDNweCAtNDlweCBuby1y
ZXBlYXQ7d2lkdGg6MTcxcHg7aGVpZ2h0OjhweH0ucmVjYXB0Y2hhdGFibGUgLnJl
Y2FwdGNoYV9yOF9jMXtiYWNrZ3JvdW5kOnVybCgnSU1HUk9PVC9zcHJpdGUucG5n
JykgLTQzcHggLTQ5cHggbm8tcmVwZWF0O3dpZHRoOjI1cHg7aGVpZ2h0OjhweH0u
cmVjYXB0Y2hhdGFibGUgLnJlY2FwdGNoYV9pbWFnZV9jZWxsIGNlbnRlciBpbWd7
aGVpZ2h0OjU3cHh9LnJlY2FwdGNoYXRhYmxlIC5yZWNhcHRjaGFfaW1hZ2VfY2Vs
bCBjZW50ZXJ7aGVpZ2h0OjU3cHh9LnJlY2FwdGNoYXRhYmxlIC5yZWNhcHRjaGFf
aW1hZ2VfY2VsbHtiYWNrZ3JvdW5kLWNvbG9yOndoaXRlO2hlaWdodDo1N3B4fSNy
ZWNhcHRjaGFfYXJlYSwjcmVjYXB0Y2hhX3RhYmxle3dpZHRoOjMxOHB4IWltcG9y
dGFudH0ucmVjYXB0Y2hhdGFibGUsI3JlY2FwdGNoYV9hcmVhIHRyLCNyZWNhcHRj
aGFfYXJlYSB0ZCwjcmVjYXB0Y2hhX2FyZWEgdGh7bWFyZ2luOjAhaW1wb3J0YW50
O2JvcmRlcjowIWltcG9ydGFudDtwYWRkaW5nOjAhaW1wb3J0YW50O2JvcmRlci1j
b2xsYXBzZTpjb2xsYXBzZSFpbXBvcnRhbnQ7dmVydGljYWwtYWxpZ246bWlkZGxl
IWltcG9ydGFudH0ucmVjYXB0Y2hhdGFibGUgKnttYXJnaW46MDtwYWRkaW5nOjA7
Ym9yZGVyOjA7Zm9udC1mYW1pbHk6aGVsdmV0aWNhLHNhbnMtc2VyaWY7Zm9udC1z
aXplOjhwdDtjb2xvcjpibGFjaztwb3NpdGlvbjpzdGF0aWM7dG9wOmF1dG87bGVm
dDphdXRvO3JpZ2h0OmF1dG87Ym90dG9tOmF1dG87dGV4dC1hbGlnbjpsZWZ0IWlt
cG9ydGFudH0ucmVjYXB0Y2hhdGFibGUgI3JlY2FwdGNoYV9pbWFnZXttYXJnaW46
YXV0b30ucmVjYXB0Y2hhdGFibGUgaW1ne2JvcmRlcjowIWltcG9ydGFudDttYXJn
aW46MCFpbXBvcnRhbnQ7cGFkZGluZzowIWltcG9ydGFudH0ucmVjYXB0Y2hhdGFi
bGUgYSwucmVjYXB0Y2hhdGFibGUgYTpob3ZlcntvdXRsaW5lOm5vbmU7Ym9yZGVy
OjAhaW1wb3J0YW50O3BhZGRpbmc6MCFpbXBvcnRhbnQ7dGV4dC1kZWNvcmF0aW9u
Om5vbmU7Y29sb3I6Ymx1ZTtiYWNrZ3JvdW5kOm5vbmUhaW1wb3J0YW50O2ZvbnQt
d2VpZ2h0Om5vcm1hbH0ucmVjYXB0Y2hhX2lucHV0X2FyZWF7cG9zaXRpb246cmVs
YXRpdmUhaW1wb3J0YW50O3dpZHRoOjE0NnB4IWltcG9ydGFudDtoZWlnaHQ6NDVw
eCFpbXBvcnRhbnQ7bWFyZ2luLWxlZnQ6MjBweCFpbXBvcnRhbnQ7bWFyZ2luLXJp
Z2h0OjVweCFpbXBvcnRhbnQ7bWFyZ2luLXRvcDo0cHghaW1wb3J0YW50O2JhY2tn
cm91bmQ6bm9uZSFpbXBvcnRhbnR9LnJlY2FwdGNoYXRhYmxlIGxhYmVsLnJlY2Fw
dGNoYV9pbnB1dF9hcmVhX3RleHR7bWFyZ2luOjAhaW1wb3J0YW50O3BhZGRpbmc6
MCFpbXBvcnRhbnQ7cG9zaXRpb246c3RhdGljIWltcG9ydGFudDt0b3A6YXV0byFp
bXBvcnRhbnQ7bGVmdDphdXRvIWltcG9ydGFudDtyaWdodDphdXRvIWltcG9ydGFu
dDtib3R0b206YXV0byFpbXBvcnRhbnQ7YmFja2dyb3VuZDpub25lIWltcG9ydGFu
dDtoZWlnaHQ6YXV0byFpbXBvcnRhbnQ7d2lkdGg6YXV0byFpbXBvcnRhbnR9LnJl
Y2FwdGNoYV90aGVtZV9yZWQgbGFiZWwucmVjYXB0Y2hhX2lucHV0X2FyZWFfdGV4
dCwucmVjYXB0Y2hhX3RoZW1lX3doaXRlIGxhYmVsLnJlY2FwdGNoYV9pbnB1dF9h
cmVhX3RleHR7Y29sb3I6YmxhY2shaW1wb3J0YW50fS5yZWNhcHRjaGFfdGhlbWVf
YmxhY2tnbGFzcyBsYWJlbC5yZWNhcHRjaGFfaW5wdXRfYXJlYV90ZXh0e2NvbG9y
OndoaXRlIWltcG9ydGFudH0ucmVjYXB0Y2hhdGFibGUgI3JlY2FwdGNoYV9yZXNw
b25zZV9maWVsZHt3aWR0aDoxNDVweCFpbXBvcnRhbnQ7cG9zaXRpb246YWJzb2x1
dGUhaW1wb3J0YW50O2JvdHRvbTo3cHghaW1wb3J0YW50O3BhZGRpbmc6MCFpbXBv
cnRhbnQ7bWFyZ2luOjAhaW1wb3J0YW50O2ZvbnQtc2l6ZToxMHB0fS5yZWNhcHRj
aGFfdGhlbWVfYmxhY2tnbGFzcyAjcmVjYXB0Y2hhX3Jlc3BvbnNlX2ZpZWxkLC5y
ZWNhcHRjaGFfdGhlbWVfd2hpdGUgI3JlY2FwdGNoYV9yZXNwb25zZV9maWVsZHti
b3JkZXI6MXB4IHNvbGlkIGdyYXl9LnJlY2FwdGNoYV90aGVtZV9yZWQgI3JlY2Fw
dGNoYV9yZXNwb25zZV9maWVsZHtib3JkZXI6MXB4IHNvbGlkICNjY2E5NDB9LnJl
Y2FwdGNoYV9hdWRpb19jYW50X2hlYXJfbGlua3tmb250LXNpemU6N3B0O2NvbG9y
OmJsYWNrfS5yZWNhcHRjaGF0YWJsZXtsaW5lLWhlaWdodDoxZW19I3JlY2FwdGNo
YV9pbnN0cnVjdGlvbnNfZXJyb3J7Y29sb3I6cmVkIWltcG9ydGFudH0iO3ZhciBS
ZWNhcHRjaGFTdHJfZW49e3Zpc3VhbF9jaGFsbGVuZ2U6IkdldCBhIHZpc3VhbCBj
aGFsbGVuZ2UiLGF1ZGlvX2NoYWxsZW5nZToiR2V0IGFuIGF1ZGlvIGNoYWxsZW5n
ZSIscmVmcmVzaF9idG46IkdldCBhIG5ldyBjaGFsbGVuZ2UiLGluc3RydWN0aW9u
c192aXN1YWw6IlR5cGUgdGhlIHR3byB3b3JkczoiLGluc3RydWN0aW9uc19jb250
ZXh0OiJUeXBlIHRoZSB3b3JkcyBpbiB0aGUgYm94ZXM6IixpbnN0cnVjdGlvbnNf
YXVkaW86IlR5cGUgd2hhdCB5b3UgaGVhcjoiLGhlbHBfYnRuOiJIZWxwIixwbGF5
X2FnYWluOiJQbGF5IHNvdW5kIGFnYWluIixjYW50X2hlYXJfdGhpczoiRG93bmxv
YWQgc291bmQgYXMgTVAzIixpbmNvcnJlY3RfdHJ5X2FnYWluOiJJbmNvcnJlY3Qu
IFRyeSBhZ2Fpbi4iLGltYWdlX2FsdF90ZXh0OiJyZUNBUFRDSEEgY2hhbGxlbmdl
IGltYWdlIn0sUmVjYXB0Y2hhU3RyX2FmPXt2aXN1YWxfY2hhbGxlbmdlOiJLcnkg
J24gdmlzdWVsZSB2ZXJpZmlcdTAwZWJyaW5nIiwKYXVkaW9fY2hhbGxlbmdlOiJL
cnkgJ24ga2xhbmt2ZXJpZmlcdTAwZWJyaW5nIixyZWZyZXNoX2J0bjoiS3J5ICdu
IG51d2UgdmVyaWZpXHUwMGVicmluZyIsaW5zdHJ1Y3Rpb25zX3Zpc3VhbDoiVGlr
IGRpZSB0d2VlIHdvb3JkZToiLGluc3RydWN0aW9uc19jb250ZXh0OiJUaWsgZGll
IHdvb3JkZSBpbiBkaWUga2Fzc2llczoiLGluc3RydWN0aW9uc19hdWRpbzoiVGlr
IHdhdCBqeSBob29yOiIsaGVscF9idG46Ikh1bHAiLHBsYXlfYWdhaW46IlNwZWVs
IGdlbHVpZCB3ZWVyIixjYW50X2hlYXJfdGhpczoiTGFhaSBkaWUga2xhbmsgYWYg
YXMgTVAzIixpbmNvcnJlY3RfdHJ5X2FnYWluOiJWZXJrZWVyZC4gUHJvYmVlciB3
ZWVyLiIsaW1hZ2VfYWx0X3RleHQ6InJlQ0FQVENIQS12ZXJpZmllZXJwcmVudCJ9
LFJlY2FwdGNoYVN0cl9hbT17dmlzdWFsX2NoYWxsZW5nZToiXHUxMmU4XHUxMmE1
XHUxMmVkXHUxMjczIFx1MTI3MFx1MTMwYlx1MTMyM1x1MTIxYSBcdTEyYTBcdTEz
MGRcdTEyOWQiLAphdWRpb19jaGFsbGVuZ2U6Ilx1MTIwY1x1MTIwYiBcdTEyYTBc
dTEyZjJcdTEyMzUgXHUxMmU4XHUxMmY1XHUxMjFkXHUxMzNkIFx1MTMyNVx1MTJl
Ylx1MTI0NCBcdTEyZWRcdTEyNDVcdTEyMjhcdTEyNjUiLHJlZnJlc2hfYnRuOiJc
dTEyMGNcdTEyMGIgXHUxMmEwXHUxMmYyXHUxMjM1IFx1MTMyNVx1MTJlYlx1MTI0
NCBcdTEyZWRcdTEyNDVcdTEyMjhcdTEyNjUiLGluc3RydWN0aW9uc192aXN1YWw6
Ilx1MTJhNVx1MTI5NVx1MTJkYVx1MTIwNVx1MTI5NSBcdTEyMDFcdTEyMDhcdTEy
NzUgXHUxMjQzXHUxMjBiXHUxMjc1IFx1MTI3MFx1MTJlZFx1MTI2NSBcdTEzNjYi
LGluc3RydWN0aW9uc19jb250ZXh0OiJcdTEyNjBcdTEyMzNcdTEzMjVcdTEyOTZc
dTEyNzkgXHUxMmNkXHUxMjM1XHUxMzI1IFx1MTI0M1x1MTIwYlx1MTI3Nlx1MTI3
OVx1MTI5NSBcdTEyNzBcdTEyZWRcdTEyNjVcdTEzNjYiLGluc3RydWN0aW9uc19h
dWRpbzoiXHUxMmU4XHUxMjFkXHUxMjc1XHUxMjMwXHUxMjFiXHUxMmNkXHUxMjk1
IFx1MTI3MFx1MTJlZFx1MTI2NVx1MTM2MS0iLApoZWxwX2J0bjoiXHUxMmE1XHUx
MzA4XHUxMmRiIixwbGF5X2FnYWluOiJcdTEyZjVcdTEyMWRcdTEzMzlcdTEyOTUg
XHUxMmE1XHUxMjk1XHUxMmYwXHUxMzA4XHUxMjkzIFx1MTJhMFx1MTMyYlx1MTJj
ZFx1MTI3NSIsY2FudF9oZWFyX3RoaXM6Ilx1MTJmNVx1MTIxZFx1MTMzOVx1MTI5
NSBcdTEyNjBNUDMgXHUxMjQ1XHUxMjJkXHUxMzNkIFx1MTJhMFx1MTJjZFx1MTIy
ZFx1MTJmNSIsaW5jb3JyZWN0X3RyeV9hZ2FpbjoiXHUxMjc1XHUxMmFkXHUxMmFk
XHUxMjBkIFx1MTJhMFx1MTJlZFx1MTJmMFx1MTIwOFx1MTIxZFx1MTM2MiBcdTEy
YTVcdTEyOTVcdTEyZjBcdTEzMDhcdTEyOTMgXHUxMjFlXHUxMmFkXHUxMjJkXHUx
MzYyIixpbWFnZV9hbHRfdGV4dDoicmVDQVBUQ0hBIFx1MTIxZFx1MTIzNVx1MTIw
ZCBcdTEzMGRcdTEzMjBcdTEyMWQifSxSZWNhcHRjaGFTdHJfYXI9e3Zpc3VhbF9j
aGFsbGVuZ2U6Ilx1MDYyN1x1MDY0NFx1MDYyZFx1MDYzNVx1MDY0OFx1MDY0NCBc
dTA2MzlcdTA2NDRcdTA2NDkgXHUwNjJhXHUwNjJkXHUwNjJmXHUwNjRkIFx1MDY0
NVx1MDYzMVx1MDYyNlx1MDY0YSIsCmF1ZGlvX2NoYWxsZW5nZToiXHUwNjI3XHUw
NjQ0XHUwNjJkXHUwNjM1XHUwNjQ4XHUwNjQ0IFx1MDYzOVx1MDY0NFx1MDY0OSBc
dTA2MmFcdTA2MmRcdTA2MmZcdTA2NGQgXHUwNjM1XHUwNjQ4XHUwNjJhXHUwNjRh
IixyZWZyZXNoX2J0bjoiXHUwNjI3XHUwNjQ0XHUwNjJkXHUwNjM1XHUwNjQ4XHUw
NjQ0IFx1MDYzOVx1MDY0NFx1MDY0OSBcdTA2MmFcdTA2MmRcdTA2MmZcdTA2NGQg
XHUwNjJjXHUwNjJmXHUwNjRhXHUwNjJmIixpbnN0cnVjdGlvbnNfdmlzdWFsOiJc
dTA2MjdcdTA2NDNcdTA2MmFcdTA2MjggXHUwNjI3XHUwNjQ0XHUwNjQzXHUwNjQ0
XHUwNjQ1XHUwNjJhXHUwNjRhXHUwNjQ2OiIsaW5zdHJ1Y3Rpb25zX2NvbnRleHQ6
Ilx1MDYyN1x1MDY0M1x1MDYyYVx1MDYyOCBcdTA2MjdcdTA2NDRcdTA2NDNcdTA2
NDRcdTA2NDVcdTA2MjdcdTA2MmEgXHUwNjQxXHUwNjRhIFx1MDYyN1x1MDY0NFx1
MDY0NVx1MDYzMVx1MDYyOFx1MDYzOVx1MDYyN1x1MDYyYToiLGluc3RydWN0aW9u
c19hdWRpbzoiXHUwNjI3XHUwNjQzXHUwNjJhXHUwNjI4IFx1MDY0NVx1MDYyNyBc
dTA2MmFcdTA2MzNcdTA2NDVcdTA2MzlcdTA2NDc6IiwKaGVscF9idG46Ilx1MDY0
NVx1MDYzM1x1MDYyN1x1MDYzOVx1MDYyZlx1MDYyOSIscGxheV9hZ2FpbjoiXHUw
NjJhXHUwNjM0XHUwNjNhXHUwNjRhXHUwNjQ0IFx1MDYyN1x1MDY0NFx1MDYzNVx1
MDY0OFx1MDYyYSBcdTA2NDVcdTA2MzFcdTA2MjkgXHUwNjIzXHUwNjJlXHUwNjMx
XHUwNjQ5IixjYW50X2hlYXJfdGhpczoiXHUwNjJhXHUwNjQ2XHUwNjMyXHUwNjRh
XHUwNjQ0IFx1MDYyN1x1MDY0NFx1MDYzNVx1MDY0OFx1MDYyYSBcdTA2MjhcdTA2
MmFcdTA2NDZcdTA2MzNcdTA2NGFcdTA2NDIgTVAzIixpbmNvcnJlY3RfdHJ5X2Fn
YWluOiJcdTA2M2FcdTA2NGFcdTA2MzEgXHUwNjM1XHUwNjJkXHUwNjRhXHUwNjJk
LiBcdTA2MjNcdTA2MzlcdTA2MmYgXHUwNjI3XHUwNjQ0XHUwNjQ1XHUwNjJkXHUw
NjI3XHUwNjQ4XHUwNjQ0XHUwNjI5LiIsaW1hZ2VfYWx0X3RleHQ6Ilx1MDYzNVx1
MDY0OFx1MDYzMVx1MDYyOSBcdTA2MjdcdTA2NDRcdTA2MmFcdTA2MmRcdTA2MmZc
dTA2NGEgXHUwNjQ1XHUwNjQ2IHJlQ0FQVENIQSJ9LApSZWNhcHRjaGFTdHJfYmc9
e3Zpc3VhbF9jaGFsbGVuZ2U6Ilx1MDQxZlx1MDQzZVx1MDQzYlx1MDQ0M1x1MDQ0
N1x1MDQzMFx1MDQzMlx1MDQzMFx1MDQzZFx1MDQzNSBcdTA0M2RcdTA0MzAgXHUw
NDMyXHUwNDM4XHUwNDM3XHUwNDQzXHUwNDMwXHUwNDNiXHUwNDNkXHUwNDMwIFx1
MDQzZlx1MDQ0MFx1MDQzZVx1MDQzMlx1MDQzNVx1MDQ0MFx1MDQzYVx1MDQzMCIs
YXVkaW9fY2hhbGxlbmdlOiJcdTA0MTdcdTA0MzBcdTA0NDBcdTA0MzVcdTA0MzZc
dTA0MzRcdTA0MzBcdTA0M2RcdTA0MzUgXHUwNDNkXHUwNDMwIFx1MDQzMFx1MDQ0
M1x1MDQzNFx1MDQzOFx1MDQzZVx1MDQ0Mlx1MDQzNVx1MDQ0MVx1MDQ0MiIscmVm
cmVzaF9idG46Ilx1MDQxN1x1MDQzMFx1MDQ0MFx1MDQzNVx1MDQzNlx1MDQzNFx1
MDQzMFx1MDQzZFx1MDQzNSBcdTA0M2RcdTA0MzAgXHUwNDNkXHUwNDNlXHUwNDMy
IFx1MDQ0Mlx1MDQzNVx1MDQ0MVx1MDQ0MiIsaW5zdHJ1Y3Rpb25zX3Zpc3VhbDoi
XHUwNDEyXHUwNDRhXHUwNDMyXHUwNDM1XHUwNDM0XHUwNDM1XHUwNDQyXHUwNDM1
IFx1MDQzNFx1MDQzMlx1MDQzNVx1MDQ0Mlx1MDQzNSBcdTA0MzRcdTA0NDNcdTA0
M2NcdTA0Mzg6IiwKaW5zdHJ1Y3Rpb25zX2NvbnRleHQ6Ilx1MDQxMlx1MDQ0YVx1
MDQzMlx1MDQzNVx1MDQzNFx1MDQzNVx1MDQ0Mlx1MDQzNSBcdTA0MzRcdTA0NDNc
dTA0M2NcdTA0MzhcdTA0NDJcdTA0MzU6IixpbnN0cnVjdGlvbnNfYXVkaW86Ilx1
MDQxMlx1MDQ0YVx1MDQzMlx1MDQzNVx1MDQzNFx1MDQzNVx1MDQ0Mlx1MDQzNSBc
dTA0NDdcdTA0NDNcdTA0NDJcdTA0M2VcdTA0NDJcdTA0M2U6IixoZWxwX2J0bjoi
XHUwNDFmXHUwNDNlXHUwNDNjXHUwNDNlXHUwNDQ5IixwbGF5X2FnYWluOiJcdTA0
MWZcdTA0M2VcdTA0MzJcdTA0NDJcdTA0M2VcdTA0NDBcdTA0M2RcdTA0M2UgXHUw
NDNmXHUwNDQzXHUwNDQxXHUwNDNhXHUwNDMwXHUwNDNkXHUwNDM1IFx1MDQzZFx1
MDQzMCBcdTA0MzdcdTA0MzJcdTA0NDNcdTA0M2FcdTA0MzAiLGNhbnRfaGVhcl90
aGlzOiJcdTA0MThcdTA0MzdcdTA0NDJcdTA0MzVcdTA0MzNcdTA0M2JcdTA0NGZc
dTA0M2RcdTA0MzUgXHUwNDNkXHUwNDMwIFx1MDQzN1x1MDQzMlx1MDQ0M1x1MDQz
YVx1MDQzMCBcdTA0MzJcdTA0NGFcdTA0MzIgXHUwNDQ0XHUwNDNlXHUwNDQwXHUw
NDNjXHUwNDMwXHUwNDQyIE1QMyIsCmluY29ycmVjdF90cnlfYWdhaW46Ilx1MDQx
ZFx1MDQzNVx1MDQzZlx1MDQ0MFx1MDQzMFx1MDQzMlx1MDQzOFx1MDQzYlx1MDQz
ZFx1MDQzZS4gXHUwNDFlXHUwNDNmXHUwNDM4XHUwNDQyXHUwNDMwXHUwNDM5XHUw
NDQyXHUwNDM1IFx1MDQzZVx1MDQ0Mlx1MDQzZFx1MDQzZVx1MDQzMlx1MDQzZS4i
LGltYWdlX2FsdF90ZXh0OiJcdTA0MThcdTA0MzdcdTA0M2VcdTA0MzFcdTA0NDBc
dTA0MzBcdTA0MzZcdTA0MzVcdTA0M2RcdTA0MzhcdTA0MzUgXHUwNDNkXHUwNDMw
IFx1MDQzZlx1MDQ0MFx1MDQzZVx1MDQzMlx1MDQzNVx1MDQ0MFx1MDQzYVx1MDQz
MFx1MDQ0Mlx1MDQzMCBcdTA0NDEgcmVDQVBUQ0hBIn0sUmVjYXB0Y2hhU3RyX2Ju
PXt2aXN1YWxfY2hhbGxlbmdlOiJcdTA5OGZcdTA5OTVcdTA5OWZcdTA5YmYgXHUw
OWE2XHUwOWMzXHUwOWI2XHUwOWNkXHUwOWFmXHUwOWFlXHUwOWJlXHUwOWE4IFx1
MDlhYVx1MDljZFx1MDliMFx1MDlhNFx1MDliZlx1MDlhNlx1MDljZFx1MDlhY1x1
MDlhOFx1MDljZFx1MDlhNlx1MDljZFx1MDlhY1x1MDliZlx1MDlhNFx1MDliZSBc
dTA5YWFcdTA5YmVcdTA5YTgiLAphdWRpb19jaGFsbGVuZ2U6Ilx1MDk4Zlx1MDk5
NVx1MDk5Zlx1MDliZiBcdTA5ODVcdTA5YTFcdTA5YmZcdTA5OTMgXHUwOWFhXHUw
OWNkXHUwOWIwXHUwOWE0XHUwOWJmXHUwOWE2XHUwOWNkXHUwOWFjXHUwOWE4XHUw
OWNkXHUwOWE2XHUwOWNkXHUwOWFjXHUwOWJmXHUwOWE0XHUwOWJlICBcdTA5YWFc
dTA5YmVcdTA5YTgiLHJlZnJlc2hfYnRuOiJcdTA5OGZcdTA5OTVcdTA5OWZcdTA5
YmYgXHUwOWE4XHUwOWE0XHUwOWMxXHUwOWE4IFx1MDlhYVx1MDljZFx1MDliMFx1
MDlhNFx1MDliZlx1MDlhNlx1MDljZFx1MDlhY1x1MDlhOFx1MDljZFx1MDlhNlx1
MDljZFx1MDlhY1x1MDliZlx1MDlhNFx1MDliZSAgXHUwOWFhXHUwOWJlXHUwOWE4
IixpbnN0cnVjdGlvbnNfdmlzdWFsOiJcdTA5YjZcdTA5YWNcdTA5Y2RcdTA5YTYg
XHUwOWE2XHUwOWMxXHUwOTlmXHUwOWJmIFx1MDliMlx1MDliZlx1MDk5Nlx1MDlj
MVx1MDlhODoiLGluc3RydWN0aW9uc19jb250ZXh0OiJcdTA5YWNcdTA5YmVcdTA5
OTVcdTA5Y2RcdTA5YjhcdTA5YzcgXHUwOWI2XHUwOWFjXHUwOWNkXHUwOWE2XHUw
OTk3XHUwOWMxXHUwOWIyXHUwOWJmIFx1MDk5Zlx1MDliZVx1MDk4N1x1MDlhYSBc
dTA5OTVcdTA5YjBcdTA5YzFcdTA5YTg6IiwKaW5zdHJ1Y3Rpb25zX2F1ZGlvOiJc
dTA5ODZcdTA5YWFcdTA5YThcdTA5YmYgXHUwOWFmXHUwOWJlIFx1MDliNlx1MDlj
MVx1MDlhOFx1MDk5Ylx1MDljN1x1MDlhOCBcdTA5YTRcdTA5YmUgXHUwOWIyXHUw
OWJmXHUwOTk2XHUwOWMxXHUwOWE4OiIsaGVscF9idG46Ilx1MDliOFx1MDliOVx1
MDliZVx1MDlkZlx1MDlhNFx1MDliZSIscGxheV9hZ2FpbjoiXHUwOTg2XHUwOWFj
XHUwOWJlXHUwOWIwIFx1MDliOFx1MDliZVx1MDk4OVx1MDlhOFx1MDljZFx1MDlh
MSBcdTA5YWFcdTA5Y2RcdTA5YjJcdTA5YzcgXHUwOTk1XHUwOWIwXHUwOWMxXHUw
OWE4IixjYW50X2hlYXJfdGhpczoiTVAzIFx1MDliMFx1MDljMlx1MDlhYVx1MDlj
NyBcdTA5YjZcdTA5YWNcdTA5Y2RcdTA5YTYgXHUwOWExXHUwOWJlXHUwOTg5XHUw
OWE4XHUwOWIyXHUwOWNiXHUwOWExIFx1MDk5NVx1MDliMFx1MDljMVx1MDlhOCIs
aW5jb3JyZWN0X3RyeV9hZ2FpbjoiXHUwOWFjXHUwOWM3XHUwOWEwXHUwOWJmXHUw
OTk1XHUwOWY3IFx1MDk4Nlx1MDlhY1x1MDliZVx1MDliMCBcdTA5OWFcdTA5Yzdc
dTA5YjdcdTA5Y2RcdTA5OWZcdTA5YmUgXHUwOTk1XHUwOWIwXHUwOWMxXHUwOWE4
XHUwOWY3IiwKaW1hZ2VfYWx0X3RleHQ6InJlQ0FQVENIQSBcdTA5OWFcdTA5Y2Rc
dTA5YWZcdTA5YmVcdTA5YjJcdTA5YzdcdTA5OWVcdTA5Y2RcdTA5OWMgXHUwOTlh
XHUwOWJmXHUwOWE0XHUwOWNkXHUwOWIwIn0sUmVjYXB0Y2hhU3RyX2NhPXt2aXN1
YWxfY2hhbGxlbmdlOiJPYnRcdTAwZTluIHVuIHJlcHRlIHZpc3VhbCIsYXVkaW9f
Y2hhbGxlbmdlOiJPYnRlbml1IHVuYSBwcm92YSBkJ1x1MDBlMHVkaW8iLHJlZnJl
c2hfYnRuOiJPYnRlbml1IHVuYSBwcm92YSBub3ZhIixpbnN0cnVjdGlvbnNfdmlz
dWFsOiJFc2NyaXZpdSBsZXMgZHVlcyBwYXJhdWxlczoiLGluc3RydWN0aW9uc19j
b250ZXh0OiJFc2NyaXZpdSBsZXMgcGFyYXVsZXMgZGVscyBxdWFkcmVzOiIsaW5z
dHJ1Y3Rpb25zX2F1ZGlvOiJFc2NyaXZpdSBlbCBxdWUgZXNjb2x0ZXU6IixoZWxw
X2J0bjoiQWp1ZGEiLHBsYXlfYWdhaW46IlRvcm5hIGEgcmVwcm9kdWlyIGVsIHNv
IixjYW50X2hlYXJfdGhpczoiQmFpeGEgZWwgc28gY29tIGEgTVAzIiwKaW5jb3Jy
ZWN0X3RyeV9hZ2FpbjoiTm8gXHUwMGU5cyBjb3JyZWN0ZS4gVG9ybmEtaG8gYSBw
cm92YXIuIixpbWFnZV9hbHRfdGV4dDoiSW1hdGdlIGRlbCByZXB0ZSBkZSByZUNB
UFRDSEEifSxSZWNhcHRjaGFTdHJfY3M9e3Zpc3VhbF9jaGFsbGVuZ2U6IlpvYnJh
eml0IHZpenVcdTAwZTFsblx1MDBlZCBwb2RvYnUgdlx1MDBmZHJhenUiLGF1ZGlv
X2NoYWxsZW5nZToiUFx1MDE1OWVoclx1MDBlMXQgenZ1a292b3UgcG9kb2J1IHZc
dTAwZmRyYXp1IixyZWZyZXNoX2J0bjoiWm9icmF6aXQgbm92XHUwMGZkIHZcdTAw
ZmRyYXoiLGluc3RydWN0aW9uc192aXN1YWw6IlphZGVqdGUgZHZcdTAxMWIgc2xv
dmE6IixpbnN0cnVjdGlvbnNfY29udGV4dDoiWmFkZWp0ZSBzbG92YSB1dmVkZW5c
dTAwZTEgdiBwb2xcdTAwZWRjaDoiLGluc3RydWN0aW9uc19hdWRpbzoiTmFwaVx1
MDE2MXRlLCBjbyBqc3RlIHNseVx1MDE2MWVsaToiLGhlbHBfYnRuOiJOXHUwMGUx
cG92XHUwMTFiZGEiLHBsYXlfYWdhaW46Ilpub3Z1IHBcdTAxNTllaHJcdTAwZTF0
IHp2dWsiLApjYW50X2hlYXJfdGhpczoiU3RcdTAwZTFobm91dCB6dnVrIHZlIGZv
cm1cdTAwZTF0dSBNUDMiLGluY29ycmVjdF90cnlfYWdhaW46Ilx1MDE2MHBhdG5c
dTAxMWIuIFprdXN0ZSB0byB6bm92dS4iLGltYWdlX2FsdF90ZXh0OiJPYnJcdTAw
ZTF6ZWsgcmVDQVBUQ0hBIn0sUmVjYXB0Y2hhU3RyX2RhPXt2aXN1YWxfY2hhbGxl
bmdlOiJIZW50IGVuIHZpc3VlbCB1ZGZvcmRyaW5nIixhdWRpb19jaGFsbGVuZ2U6
IkhlbnQgZW4gbHlkdWRmb3JkcmluZyIscmVmcmVzaF9idG46IkhlbnQgZW4gbnkg
dWRmb3JkcmluZyIsaW5zdHJ1Y3Rpb25zX3Zpc3VhbDoiSW5kdGFzdCBkZSB0byBv
cmQ6IixpbnN0cnVjdGlvbnNfY29udGV4dDoiSW5kdGFzdCBvcmRlbmUgaSBmZWx0
ZXJuZToiLGluc3RydWN0aW9uc19hdWRpbzoiSW5kdGFzdCBkZXQsIGR1IGhcdTAw
ZjhyZXI6IixoZWxwX2J0bjoiSGpcdTAwZTZscCIscGxheV9hZ2FpbjoiQWZzcGls
IGx5ZGVuIGlnZW4iLGNhbnRfaGVhcl90aGlzOiJEb3dubG9hZCBseWQgc29tIE1Q
MyIsCmluY29ycmVjdF90cnlfYWdhaW46IkZvcmtlcnQuIFByXHUwMGY4diBpZ2Vu
LiIsaW1hZ2VfYWx0X3RleHQ6InJlQ0FQVENIQS11ZGZvcmRyaW5nc2JpbGxlZGUi
fSxSZWNhcHRjaGFTdHJfZGU9e3Zpc3VhbF9jaGFsbGVuZ2U6IkNhcHRjaGEgYWJy
dWZlbiIsYXVkaW9fY2hhbGxlbmdlOiJBdWRpby1DYXB0Y2hhIGFicnVmZW4iLHJl
ZnJlc2hfYnRuOiJOZXVlcyBDYXB0Y2hhIGFicnVmZW4iLGluc3RydWN0aW9uc192
aXN1YWw6IkdlYmVuIFNpZSBkaWUgMiBXXHUwMGY2cnRlciBlaW46IixpbnN0cnVj
dGlvbnNfY29udGV4dDoiV29ydGUgYXVzIGRlbiBGZWxkZXJuIGVpbmdlYmVuOiIs
aW5zdHJ1Y3Rpb25zX2F1ZGlvOiJHZWJlbiBTaWUgZGFzIEdlaFx1MDBmNnJ0ZSBl
aW46IixoZWxwX2J0bjoiSGlsZmUiLHBsYXlfYWdhaW46IldvcnQgZXJuZXV0IGFi
c3BpZWxlbiIsY2FudF9oZWFyX3RoaXM6IldvcnQgYWxzIE1QMyBoZXJ1bnRlcmxh
ZGVuIixpbmNvcnJlY3RfdHJ5X2FnYWluOiJGYWxzY2guIEJpdHRlIHZlcnN1Y2hl
biBTaWUgZXMgZXJuZXV0LiIsCmltYWdlX2FsdF90ZXh0OiJyZUNBUFRDSEEtQmls
ZCJ9LFJlY2FwdGNoYVN0cl9lbD17dmlzdWFsX2NoYWxsZW5nZToiXHUwMzlmXHUw
M2MwXHUwM2M0XHUwM2I5XHUwM2JhXHUwM2FlIFx1MDNjMFx1MDNjMVx1MDNjY1x1
MDNiYVx1MDNiYlx1MDNiN1x1MDNjM1x1MDNiNyIsYXVkaW9fY2hhbGxlbmdlOiJc
dTAzOTdcdTAzYzdcdTAzYjdcdTAzYzRcdTAzYjlcdTAzYmFcdTAzYWUgXHUwM2Mw
XHUwM2MxXHUwM2NjXHUwM2JhXHUwM2JiXHUwM2I3XHUwM2MzXHUwM2I3IixyZWZy
ZXNoX2J0bjoiXHUwMzlkXHUwM2FkXHUwM2IxIFx1MDNjMFx1MDNjMVx1MDNjY1x1
MDNiYVx1MDNiYlx1MDNiN1x1MDNjM1x1MDNiNyIsaW5zdHJ1Y3Rpb25zX3Zpc3Vh
bDoiXHUwM2EwXHUwM2JiXHUwM2I3XHUwM2JhXHUwM2M0XHUwM2MxXHUwM2JmXHUw
M2JiXHUwM2JmXHUwM2IzXHUwM2FlXHUwM2MzXHUwM2M0XHUwM2I1IFx1MDNjNFx1
MDNiOVx1MDNjMiBcdTAzYmJcdTAzYWRcdTAzYmVcdTAzYjVcdTAzYjlcdTAzYzI6
IiwKaW5zdHJ1Y3Rpb25zX2NvbnRleHQ6Ilx1MDNhMFx1MDNiYlx1MDNiN1x1MDNi
YVx1MDNjNFx1MDNjMVx1MDNiZlx1MDNiYlx1MDNiZlx1MDNiM1x1MDNhZVx1MDNj
M1x1MDNjNFx1MDNiNSBcdTAzYzRcdTAzYjlcdTAzYzIgXHUwM2JiXHUwM2FkXHUw
M2JlXHUwM2I1XHUwM2I5XHUwM2MyOiIsaW5zdHJ1Y3Rpb25zX2F1ZGlvOiJcdTAz
YTBcdTAzYmJcdTAzYjdcdTAzYmFcdTAzYzRcdTAzYzFcdTAzYmZcdTAzYmJcdTAz
YmZcdTAzYjNcdTAzYWVcdTAzYzNcdTAzYzRcdTAzYjUgXHUwM2NjXHUwM2M0XHUw
M2I5IFx1MDNiMVx1MDNiYVx1MDNiZlx1MDNjZFx1MDNjNFx1MDNiNToiLGhlbHBf
YnRuOiJcdTAzOTJcdTAzYmZcdTAzYWVcdTAzYjhcdTAzYjVcdTAzYjlcdTAzYjEi
LHBsYXlfYWdhaW46Ilx1MDM5MVx1MDNiZFx1MDNiMVx1MDNjMFx1MDNiMVx1MDNj
MVx1MDNiMVx1MDNiM1x1MDNjOVx1MDNiM1x1MDNhZSBcdTAzYWVcdTAzYzdcdTAz
YmZcdTAzYzUgXHUwM2JlXHUwM2IxXHUwM2JkXHUwM2FjIiwKY2FudF9oZWFyX3Ro
aXM6Ilx1MDM5Ylx1MDNhZVx1MDNjOFx1MDNiNyBcdTAzYWVcdTAzYzdcdTAzYmZc
dTAzYzUgXHUwM2M5XHUwM2MyIFx1MDM5Y1x1MDNhMTMiLGluY29ycmVjdF90cnlf
YWdhaW46Ilx1MDM5Ylx1MDNhY1x1MDNiOFx1MDNiZlx1MDNjMi4gXHUwMzk0XHUw
M2JmXHUwM2JhXHUwM2I5XHUwM2JjXHUwM2FjXHUwM2MzXHUwM2M0XHUwM2I1IFx1
MDNiZVx1MDNiMVx1MDNiZFx1MDNhYy4iLGltYWdlX2FsdF90ZXh0OiJcdTAzOTVc
dTAzYjlcdTAzYmFcdTAzY2NcdTAzYmRcdTAzYjEgXHUwM2MwXHUwM2MxXHUwM2Nj
XHUwM2JhXHUwM2JiXHUwM2I3XHUwM2MzXHUwM2I3XHUwM2MyIHJlQ0FQVENIQSJ9
LFJlY2FwdGNoYVN0cl9lcz17dmlzdWFsX2NoYWxsZW5nZToiT2J0ZW5lciB1bmEg
cGlzdGEgdmlzdWFsIixhdWRpb19jaGFsbGVuZ2U6Ik9idGVuZXIgdW5hIHBpc3Rh
IHNvbm9yYSIscmVmcmVzaF9idG46Ik9idGVuZXIgdW5hIHBpc3RhIG51ZXZhIixp
bnN0cnVjdGlvbnNfdmlzdWFsOiJFc2NyaWJlIGxhcyBkb3MgcGFsYWJyYXM6IiwK
aW5zdHJ1Y3Rpb25zX2NvbnRleHQ6IkVzY3JpYmUgbGFzIHBhbGFicmFzIGRlIGxv
cyBjdWFkcm9zOiIsaW5zdHJ1Y3Rpb25zX2F1ZGlvOiJFc2NyaWJlIGxvIHF1ZSBv
aWdhczoiLGhlbHBfYnRuOiJBeXVkYSIscGxheV9hZ2FpbjoiVm9sdmVyIGEgcmVw
cm9kdWNpciBlbCBzb25pZG8iLGNhbnRfaGVhcl90aGlzOiJEZXNjYXJnYXIgZWwg
c29uaWRvIGVuIE1QMyIsaW5jb3JyZWN0X3RyeV9hZ2FpbjoiSW5jb3JyZWN0by4g
VnVcdTAwZTlsdmVsbyBhIGludGVudGFyLiIsaW1hZ2VfYWx0X3RleHQ6IlBpc3Rh
IGRlIGltYWdlbiByZUNBUFRDSEEifSxSZWNhcHRjaGFTdHJfZXNfNDE5PXt2aXN1
YWxfY2hhbGxlbmdlOiJFbmZyZW50YXIgdW4gZGVzYWZcdTAwZWRvIHZpc3VhbCIs
YXVkaW9fY2hhbGxlbmdlOiJFbmZyZW50YXIgdW4gZGVzYWZcdTAwZWRvIGRlIGF1
ZGlvIixyZWZyZXNoX2J0bjoiRW5mcmVudGFyIHVuIG51ZXZvIGRlc2FmXHUwMGVk
byIsaW5zdHJ1Y3Rpb25zX3Zpc3VhbDoiVGlwZWEgbGFzIGRvcyBwYWxhYnJhcy4i
LAppbnN0cnVjdGlvbnNfY29udGV4dDoiVGlwZWEgbGFzIHBhbGFicmFzIGVuIGxv
cyBjdWFkcm9zIixpbnN0cnVjdGlvbnNfYXVkaW86IlRpcGVhIGxvIHF1ZSBlc2N1
Y2hhczoiLGhlbHBfYnRuOiJBeXVkYSIscGxheV9hZ2FpbjoiUmVwcm9kdWNpciBz
b25pZG8gZGUgbnVldm8iLGNhbnRfaGVhcl90aGlzOiJEZXNjYXJnYXIgc29uaWRv
IGVuIGZvcm1hdG8gTVAzIixpbmNvcnJlY3RfdHJ5X2FnYWluOiJJbmNvcnJlY3Rv
LiBWdWVsdmUgYSBpbnRlbnRhcmxvLiIsaW1hZ2VfYWx0X3RleHQ6IkltYWdlbiBk
ZWwgZGVzYWZcdTAwZWRvIGRlIGxhIHJlQ0FQVENIQSJ9LFJlY2FwdGNoYVN0cl9l
dD17dmlzdWFsX2NoYWxsZW5nZToiS3V2YSBrdXZhcFx1MDBmNWhpbmUgcm9ib3Rp
bFx1MDBmNWtzIixhdWRpb19jaGFsbGVuZ2U6Ikt1dmEgaGVsaXBcdTAwZjVoaW5l
IHJvYm90aWxcdTAwZjVrcyIscmVmcmVzaF9idG46Ikt1dmEgdXVzIHJvYm90aWxc
dTAwZjVrcyIsaW5zdHJ1Y3Rpb25zX3Zpc3VhbDoiVGlwcGlnZSBrYWtzIHNcdTAw
ZjVuYS4iLAppbnN0cnVjdGlvbnNfY29udGV4dDoiVGlwcGlnZSBrYXN0aWRlcyBv
bGV2YWQgc1x1MDBmNW5hZC4iLGluc3RydWN0aW9uc19hdWRpbzoiVGlwcGlnZSwg
bWlkYSBrdXVsZXRlLiIsaGVscF9idG46IkFiaSIscGxheV9hZ2FpbjoiRXNpdGEg
aGVsaSB1dWVzdGkiLGNhbnRfaGVhcl90aGlzOiJMYWFkaSBoZWxpIGFsbGEgTVAz
LXZvcm1pbmd1cyIsaW5jb3JyZWN0X3RyeV9hZ2FpbjoiVmFsZS4gUHJvb3ZpZ2Ug
dXVlc3RpLiIsaW1hZ2VfYWx0X3RleHQ6InJlQ0FQVENIQSByb2JvdGlsXHUwMGY1
a3N1IGt1anV0aXMifSxSZWNhcHRjaGFTdHJfZXU9e3Zpc3VhbF9jaGFsbGVuZ2U6
IkVza3VyYXR1IGlrdXNpemtvIGVycm9ua2EiLGF1ZGlvX2NoYWxsZW5nZToiRXNr
dXJhdHUgYXVkaW8tZXJyb25rYSIscmVmcmVzaF9idG46IkVza3VyYXR1IGVycm9u
a2EgYmVycmlhIixpbnN0cnVjdGlvbnNfdmlzdWFsOiJJZGF0emkgYmkgaGl0emFr
OiIsaW5zdHJ1Y3Rpb25zX2NvbnRleHQ6IklkYXR6aSBrb2Fkcm9ldGFrbyBoaXR6
YWs6IiwKaW5zdHJ1Y3Rpb25zX2F1ZGlvOiJJZGF0emkgZW50enV0ZW4gZHV6dW5h
OiIsaGVscF9idG46IkxhZ3VudHphIixwbGF5X2FnYWluOiJFcnJlcHJvZHV6aXR1
IHNvaW51YSBiZXJyaXJvIixjYW50X2hlYXJfdGhpczoiRGVza2FyZ2F0dSBzb2lu
dWEgTVAzIGdpc2EiLGluY29ycmVjdF90cnlfYWdhaW46IkV6IGRhIHp1emVuYS4g
U2FpYXR1IGJlcnJpcm8uIixpbWFnZV9hbHRfdGV4dDoicmVDQVBUQ0hBIGVycm9u
a2FyZW4gaXJ1ZGlhIn0sUmVjYXB0Y2hhU3RyX2ZhPXt2aXN1YWxfY2hhbGxlbmdl
OiJcdTA2MmZcdTA2MzFcdTA2Y2NcdTA2MjdcdTA2NDFcdTA2MmEgXHUwNmNjXHUw
NmE5IFx1MDY0NVx1MDYzOVx1MDY0NVx1MDYyN1x1MDZjYyBcdTA2MmZcdTA2Y2Nc
dTA2MmZcdTA2MjdcdTA2MzFcdTA2Y2MiLGF1ZGlvX2NoYWxsZW5nZToiXHUwNjJm
XHUwNjMxXHUwNmNjXHUwNjI3XHUwNjQxXHUwNjJhIFx1MDZjY1x1MDZhOSBcdTA2
NDVcdTA2MzlcdTA2NDVcdTA2MjdcdTA2Y2MgXHUwNjM1XHUwNjQ4XHUwNjJhXHUw
NmNjIiwKcmVmcmVzaF9idG46Ilx1MDYyZlx1MDYzMVx1MDZjY1x1MDYyN1x1MDY0
MVx1MDYyYSBcdTA2Y2NcdTA2YTkgXHUwNjQ1XHUwNjM5XHUwNjQ1XHUwNjI3XHUw
NmNjIFx1MDYyY1x1MDYyZlx1MDZjY1x1MDYyZiIsaW5zdHJ1Y3Rpb25zX3Zpc3Vh
bDoiXHUwNjI3XHUwNmNjXHUwNjQ2IFx1MDYyZlx1MDY0OCBcdTA2YTlcdTA2NDRc
dTA2NDVcdTA2NDcgXHUwNjMxXHUwNjI3IFx1MDYyYVx1MDYyN1x1MDZjY1x1MDY3
ZSBcdTA2YTlcdTA2NDZcdTA2Y2NcdTA2MmY6IixpbnN0cnVjdGlvbnNfY29udGV4
dDoiXHUwNjQ4XHUwNjI3XHUwNjk4XHUwNjQ3IFx1MDY0N1x1MDYyN1x1MDZjYyBc
dTA2NDVcdTA2NDhcdTA2MmNcdTA2NDhcdTA2MmYgXHUwNjJmXHUwNjMxIFx1MDZh
OVx1MDYyN1x1MDYyZlx1MDYzMVx1MDY0N1x1MDYyNyBcdTA2MzFcdTA2MjcgXHUw
NjJhXHUwNjI3XHUwNmNjXHUwNjdlIFx1MDZhOVx1MDY0Nlx1MDZjY1x1MDYyZjoi
LGluc3RydWN0aW9uc19hdWRpbzoiXHUwNjIyXHUwNjQ2XHUwNjg2XHUwNjQ3IFx1
MDYzMVx1MDYyNyBcdTA2YTlcdTA2NDcgXHUwNjQ1XHUwNmNjIFx1MDYzNFx1MDY0
Nlx1MDY0OFx1MDZjY1x1MDYyZiBcdTA2MmFcdTA2MjdcdTA2Y2NcdTA2N2UgXHUw
NmE5XHUwNjQ2XHUwNmNjXHUwNjJmOiIsCmhlbHBfYnRuOiJcdTA2MzFcdTA2Mjdc
dTA2NDdcdTA2NDZcdTA2NDVcdTA2MjdcdTA2Y2NcdTA2Y2MiLHBsYXlfYWdhaW46
Ilx1MDY3ZVx1MDYyZVx1MDYzNCBcdTA2NDVcdTA2MmNcdTA2MmZcdTA2MmYgXHUw
NjM1XHUwNjJmXHUwNjI3IixjYW50X2hlYXJfdGhpczoiXHUwNjJmXHUwNjI3XHUw
NjQ2XHUwNjQ0XHUwNjQ4XHUwNjJmIFx1MDYzNVx1MDYyZlx1MDYyNyBcdTA2Mjhc
dTA2NDcgXHUwNjM1XHUwNjQ4XHUwNjMxXHUwNjJhIE1QMyIsaW5jb3JyZWN0X3Ry
eV9hZ2FpbjoiXHUwNjQ2XHUwNjI3XHUwNjJmXHUwNjMxXHUwNjMzXHUwNjJhLiBc
dTA2MmZcdTA2NDhcdTA2MjhcdTA2MjdcdTA2MzFcdTA2NDcgXHUwNjI3XHUwNjQ1
XHUwNjJhXHUwNjJkXHUwNjI3XHUwNjQ2IFx1MDZhOVx1MDY0Nlx1MDZjY1x1MDYy
Zi4iLGltYWdlX2FsdF90ZXh0OiIifSxSZWNhcHRjaGFTdHJfZmk9e3Zpc3VhbF9j
aGFsbGVuZ2U6Ikt1dmF2YWh2aXN0dXMiLGF1ZGlvX2NoYWxsZW5nZToiXHUwMGM0
XHUwMGU0bml2YWh2aXN0dXMiLApyZWZyZXNoX2J0bjoiVXVzaSBrdXZhIixpbnN0
cnVjdGlvbnNfdmlzdWFsOiJLaXJqb2l0YSBuXHUwMGU0a2VtXHUwMGU0c2kga2Fr
c2kgc2FuYWE6IixpbnN0cnVjdGlvbnNfY29udGV4dDoiS2lyam9pdGEgblx1MDBl
NGtlbVx1MDBlNHNpIHNhbmF0OiIsaW5zdHJ1Y3Rpb25zX2F1ZGlvOiJLaXJqb2l0
YSBrdXVsZW1hc2k6IixoZWxwX2J0bjoiT2hqZSIscGxheV9hZ2FpbjoiVG9pc3Rh
IFx1MDBlNFx1MDBlNG5pIHV1ZGVsbGVlbiIsY2FudF9oZWFyX3RoaXM6IkxhdGFh
IFx1MDBlNFx1MDBlNG5pIE1QMy10aWVkb3N0b25hIixpbmNvcnJlY3RfdHJ5X2Fn
YWluOiJWXHUwMGU0XHUwMGU0cmluLiBZcml0XHUwMGU0IHV1ZGVsbGVlbi4iLGlt
YWdlX2FsdF90ZXh0OiJyZUNBUFRDSEEta3V2YSJ9LFJlY2FwdGNoYVN0cl9maWw9
e3Zpc3VhbF9jaGFsbGVuZ2U6Ikt1bXVoYSBuZyBwYWdzdWJvayBuYSB2aXN1YWwi
LGF1ZGlvX2NoYWxsZW5nZToiS3VtdWhhIG5nIHBhZ3N1Ym9rIG5hIGF1ZGlvIiwK
cmVmcmVzaF9idG46Ikt1bXVoYSBuZyBiYWdvbmcgcGFnc3Vib2siLGluc3RydWN0
aW9uc192aXN1YWw6IkktdHlwZSBhbmcgZGFsYXdhbmcgbWdhIHNhbGl0YToiLGlu
c3RydWN0aW9uc19jb250ZXh0OiJJLXR5cGUgYW5nIG1nYSBzYWxpdGEgc2EgbWdh
IGthaG9uOiIsaW5zdHJ1Y3Rpb25zX2F1ZGlvOiJJLXR5cGUgYW5nIGl5b25nIG5h
cmluaWciLGhlbHBfYnRuOiJUdWxvbmciLHBsYXlfYWdhaW46IkktcGxheSBtdWxp
IGFuZyB0dW5vZyIsY2FudF9oZWFyX3RoaXM6IkktZG93bmxvYWQgYW5nIHR1bm9n
IGJpbGFuZyBNUDMiLGluY29ycmVjdF90cnlfYWdhaW46IkhpbmRpIHdhc3RvLiBN
dWxpbmcgc3VidWthbi4iLGltYWdlX2FsdF90ZXh0OiJsYXJhd2FuZyBwYW5naGFt
b24gbmcgcmVDQVBUQ0hBIn0sUmVjYXB0Y2hhU3RyX2ZyPXt2aXN1YWxfY2hhbGxl
bmdlOiJUZXN0IHZpc3VlbCIsYXVkaW9fY2hhbGxlbmdlOiJUZXN0IGF1ZGlvIixy
ZWZyZXNoX2J0bjoiTm91dmVhdSB0ZXN0IiwKaW5zdHJ1Y3Rpb25zX3Zpc3VhbDoi
U2Fpc2lzc2V6IGxlcyBkZXV4IG1vdHMgOiIsaW5zdHJ1Y3Rpb25zX2NvbnRleHQ6
IlNhaXNpc3NleiBsZXMgbW90cyBjaS1kZXNzdXMgOiIsaW5zdHJ1Y3Rpb25zX2F1
ZGlvOiJRdSdlbnRlbmRlei12b3VzID8iLGhlbHBfYnRuOiJBaWRlIixwbGF5X2Fn
YWluOiJSXHUwMGU5XHUwMGU5Y291dGVyIixjYW50X2hlYXJfdGhpczoiVFx1MDBl
OWxcdTAwZTljaGFyZ2VyIGwnYXVkaW8gYXUgZm9ybWF0IE1QMyIsaW5jb3JyZWN0
X3RyeV9hZ2FpbjoiSW5jb3JyZWN0LiBWZXVpbGxleiByXHUwMGU5ZXNzYXllci4i
LGltYWdlX2FsdF90ZXh0OiJJbWFnZSByZUNBUFRDSEEifSxSZWNhcHRjaGFTdHJf
ZnJfY2E9e3Zpc3VhbF9jaGFsbGVuZ2U6Ik9idGVuaXIgdW4gdGVzdCB2aXN1ZWwi
LGF1ZGlvX2NoYWxsZW5nZToiT2J0ZW5pciB1biB0ZXN0IGF1ZGlvIixyZWZyZXNo
X2J0bjoiT2J0ZW5pciB1biBub3V2ZWF1IHRlc3QiLGluc3RydWN0aW9uc192aXN1
YWw6IlNhaXNpc3NleiBsZXMgZGV1eCBtb3RzIDoiLAppbnN0cnVjdGlvbnNfY29u
dGV4dDoiVGFwZXogbGVzIG1vdHMgZGFucyBsZXMgYm9cdTAwZWV0ZXMgZGUgdGV4
dGVcdTAwYTA6IixpbnN0cnVjdGlvbnNfYXVkaW86IlF1J2VudGVuZGV6LXZvdXM/
IixoZWxwX2J0bjoiQWlkZSIscGxheV9hZ2FpbjoiSm91ZXIgbGUgc29uIGRlIG5v
dXZlYXUiLGNhbnRfaGVhcl90aGlzOiJUXHUwMGU5bFx1MDBlOWNoYXJnZXIgbGUg
c29uIGVuIGZvcm1hdCBNUDMiLGluY29ycmVjdF90cnlfYWdhaW46IkVycmV1ciwg
ZXNzYXlleiBcdTAwZTAgbm91dmVhdSIsaW1hZ2VfYWx0X3RleHQ6IkltYWdlIHJl
Q0FQVENIQSJ9LFJlY2FwdGNoYVN0cl9nbD17dmlzdWFsX2NoYWxsZW5nZToiT2J0
ZXIgdW5oYSBwcm9iYSB2aXN1YWwiLGF1ZGlvX2NoYWxsZW5nZToiT2J0ZXIgdW5o
YSBwcm9iYSBkZSBhdWRpbyIscmVmcmVzaF9idG46Ik9idGVyIHVuaGEgcHJvYmEg
bm92YSIsaW5zdHJ1Y3Rpb25zX3Zpc3VhbDoiRXNjcmliZSBhcyBkXHUwMGZhYXMg
cGFsYWJyYXM6IiwKaW5zdHJ1Y3Rpb25zX2NvbnRleHQ6IkVzY3JpYmUgYXMgcGFs
YWJyYXMgbmFzIGNhaXhhczoiLGluc3RydWN0aW9uc19hdWRpbzoiRXNjcmliZSBv
IHF1ZSBlc2NvaXRhczoiLGhlbHBfYnRuOiJBeHVkYSIscGxheV9hZ2FpbjoiUmVw
cm9kdWNpciBvIHNvbiBkZSBub3ZvIixjYW50X2hlYXJfdGhpczoiRGVzY2FyZ2Fy
IHNvbiBjb21vIE1QMyIsaW5jb3JyZWN0X3RyeV9hZ2FpbjoiSW5jb3JyZWN0by4g
VFx1MDBlOW50YW8gZGUgbm92by4iLGltYWdlX2FsdF90ZXh0OiJJbWF4ZSBkZSBw
cm9iYSBkZSByZUNBUFRDSEEifSxSZWNhcHRjaGFTdHJfZ3U9e3Zpc3VhbF9jaGFs
bGVuZ2U6Ilx1MGE4Zlx1MGE5NSBcdTBhYTZcdTBhYzNcdTBhYjZcdTBhY2RcdTBh
YWZcdTBhYmVcdTBhYTRcdTBhY2RcdTBhYWVcdTBhOTUgXHUwYWFhXHUwYWExXHUw
YTk1XHUwYWJlXHUwYWIwIFx1MGFhZVx1MGFjN1x1MGFiM1x1MGFiNVx1MGFjYiIs
YXVkaW9fY2hhbGxlbmdlOiJcdTBhOGZcdTBhOTUgXHUwYTkxXHUwYWExXHUwYWJm
XHUwYTkzIFx1MGFhYVx1MGFhMVx1MGE5NVx1MGFiZVx1MGFiMCBcdTBhYWVcdTBh
YzdcdTBhYjNcdTBhYjVcdTBhY2IiLApyZWZyZXNoX2J0bjoiXHUwYThmXHUwYTk1
IFx1MGFhOFx1MGFiNVx1MGFjYiBcdTBhYWFcdTBhYTFcdTBhOTVcdTBhYmVcdTBh
YjAgXHUwYWFlXHUwYWM3XHUwYWIzXHUwYWI1XHUwYWNiIixpbnN0cnVjdGlvbnNf
dmlzdWFsOiJcdTBhYWNcdTBhYzcgXHUwYWI2XHUwYWFjXHUwYWNkXHUwYWE2IFx1
MGFiMlx1MGE5Nlx1MGFjYjoiLGluc3RydWN0aW9uc19jb250ZXh0OiJcdTBhYWNc
dTBhYzlcdTBhOTVcdTBhY2RcdTBhYjhcdTBhYWVcdTBhYmVcdTBhODIgXHUwYWI2
XHUwYWFjXHUwYWNkXHUwYWE2XHUwYWNiIFx1MGFiMlx1MGE5Nlx1MGFjYjoiLGlu
c3RydWN0aW9uc19hdWRpbzoiXHUwYWE0XHUwYWFlXHUwYWM3IFx1MGE5Y1x1MGFj
NyBcdTBhYjhcdTBhYmVcdTBhODJcdTBhYWRcdTBhYjNcdTBhY2IgXHUwYTliXHUw
YWNiIFx1MGFhNFx1MGFjNyBcdTBhYjJcdTBhOTZcdTBhY2I6IixoZWxwX2J0bjoi
XHUwYWI4XHUwYWI5XHUwYWJlXHUwYWFmIixwbGF5X2FnYWluOiJcdTBhYTdcdTBh
Y2RcdTBhYjVcdTBhYThcdTBhYmYgXHUwYWFiXHUwYWIwXHUwYWMwXHUwYWE1XHUw
YWMwIFx1MGE5YVx1MGFiMlx1MGFiZVx1MGFiNVx1MGFjYiIsCmNhbnRfaGVhcl90
aGlzOiJNUDMgXHUwYWE0XHUwYWIwXHUwYWMwXHUwYTk1XHUwYWM3IFx1MGFhN1x1
MGFjZFx1MGFiNVx1MGFhOFx1MGFiZlx1MGFhOFx1MGFjNyBcdTBhYTFcdTBhYmVc
dTBhODlcdTBhYThcdTBhYjJcdTBhY2JcdTBhYTEgXHUwYTk1XHUwYWIwXHUwYWNi
IixpbmNvcnJlY3RfdHJ5X2FnYWluOiJcdTBhOTZcdTBhY2JcdTBhOWZcdTBhYzFc
dTBhODIuIFx1MGFhYlx1MGFiMFx1MGFjMCBcdTBhYWFcdTBhY2RcdTBhYjBcdTBh
YWZcdTBhYmVcdTBhYjggXHUwYTk1XHUwYWIwXHUwYWNiLiIsaW1hZ2VfYWx0X3Rl
eHQ6InJlQ0FQVENIQSBcdTBhYWFcdTBhYTFcdTBhOTVcdTBhYmVcdTBhYjAgXHUw
YTliXHUwYWFjXHUwYWMwIn0sUmVjYXB0Y2hhU3RyX2hpPXt2aXN1YWxfY2hhbGxl
bmdlOiJcdTA5MTVcdTA5NGJcdTA5MDggXHUwOTM1XHUwOTNmXHUwOTFjXHUwOTQx
XHUwOTA1XHUwOTMyIFx1MDkxYVx1MDk0MVx1MDkyOFx1MDk0Y1x1MDkyNFx1MDk0
MCBcdTA5MzJcdTA5NDdcdTA5MDIiLAphdWRpb19jaGFsbGVuZ2U6Ilx1MDkxNVx1
MDk0Ylx1MDkwOCBcdTA5MTFcdTA5MjFcdTA5M2ZcdTA5MmZcdTA5NGIgXHUwOTFh
XHUwOTQxXHUwOTI4XHUwOTRjXHUwOTI0XHUwOTQwIFx1MDkzMlx1MDk0N1x1MDkw
MiIscmVmcmVzaF9idG46Ilx1MDkxNVx1MDk0Ylx1MDkwOCBcdTA5MjhcdTA5MDgg
XHUwOTFhXHUwOTQxXHUwOTI4XHUwOTRjXHUwOTI0XHUwOTQwIFx1MDkzMlx1MDk0
N1x1MDkwMiIsaW5zdHJ1Y3Rpb25zX3Zpc3VhbDoiXHUwOTI2XHUwOTRiIFx1MDkz
Nlx1MDkyY1x1MDk0ZFx1MjAwZFx1MDkyNiBcdTA5MzJcdTA5M2ZcdTA5MTZcdTA5
NDdcdTA5MDI6IixpbnN0cnVjdGlvbnNfY29udGV4dDoiXHUwOTM2XHUwOTJjXHUw
OTRkXHUyMDBkXHUwOTI2XHUwOTRiXHUwOTAyIFx1MDkxNVx1MDk0YiBcdTA5MmNc
dTA5NDlcdTA5MTVcdTA5NGRcdTIwMGRcdTA5MzggXHUwOTJlXHUwOTQ3XHUwOTAy
IFx1MDkzMlx1MDkzZlx1MDkxNlx1MDk0N1x1MDkwMjoiLGluc3RydWN0aW9uc19h
dWRpbzoiXHUwOTFjXHUwOTRiIFx1MDkwNlx1MDkyYSBcdTA5MzhcdTA5NDFcdTA5
MjggXHUwOTMwXHUwOTM5XHUwOTQ3IFx1MDkzOVx1MDk0OFx1MDkwMiBcdTA5MDlc
dTA5MzhcdTA5NDcgXHUwOTMyXHUwOTNmXHUwOTE2XHUwOTQ3XHUwOTAyOiIsCmhl
bHBfYnRuOiJcdTA5MzhcdTA5MzlcdTA5M2VcdTA5MmZcdTA5MjRcdTA5M2UiLHBs
YXlfYWdhaW46Ilx1MDkyN1x1MDk0ZFx1MjAwZFx1MDkzNVx1MDkyOFx1MDkzZiBc
dTA5MmFcdTA5NDFcdTA5Mjg6IFx1MDkxYVx1MDkzMlx1MDkzZVx1MDkwZlx1MDkw
MiIsY2FudF9oZWFyX3RoaXM6Ilx1MDkyN1x1MDk0ZFx1MjAwZFx1MDkzNVx1MDky
OFx1MDkzZiBcdTA5MTVcdTA5NGIgTVAzIFx1MDkxNVx1MDk0NyBcdTA5MzBcdTA5
NDJcdTA5MmEgXHUwOTJlXHUwOTQ3XHUwOTAyIFx1MDkyMVx1MDkzZVx1MDkwOVx1
MDkyOFx1MDkzMlx1MDk0Ylx1MDkyMSBcdTA5MTVcdTA5MzBcdTA5NDdcdTA5MDIi
LGluY29ycmVjdF90cnlfYWdhaW46Ilx1MDkxN1x1MDkzMlx1MDkyNC4gXHUwOTJh
XHUwOTQxXHUwOTI4OiBcdTA5MmFcdTA5NGRcdTA5MzBcdTA5MmZcdTA5M2VcdTA5
MzggXHUwOTE1XHUwOTMwXHUwOTQ3XHUwOTAyLiIsaW1hZ2VfYWx0X3RleHQ6InJl
Q0FQVENIQSBcdTA5MWFcdTA5NDFcdTA5MjhcdTA5NGNcdTA5MjRcdTA5NDAgXHUw
OTFiXHUwOTM1XHUwOTNmIn0sClJlY2FwdGNoYVN0cl9ocj17dmlzdWFsX2NoYWxs
ZW5nZToiRG9odmF0aSB2aXp1YWxuaSB1cGl0IixhdWRpb19jaGFsbGVuZ2U6IkRv
aHZhdGkgenZ1XHUwMTBkbmkgdXBpdCIscmVmcmVzaF9idG46IkRvaHZhdGkgbm92
aSB1cGl0IixpbnN0cnVjdGlvbnNfdmlzdWFsOiJVcGlcdTAxNjFpdGUgb2JqZSBy
aWplXHUwMTBkaToiLGluc3RydWN0aW9uc19jb250ZXh0OiJVcGlcdTAxNjFpdGUg
cmlqZVx1MDEwZGkgdSBva3ZpcmU6IixpbnN0cnVjdGlvbnNfYXVkaW86IlVwaVx1
MDE2MWl0ZSBcdTAxNjF0byBcdTAxMGR1amV0ZToiLGhlbHBfYnRuOiJQb21vXHUw
MTA3IixwbGF5X2FnYWluOiJQb25vdmkgenZ1ayIsY2FudF9oZWFyX3RoaXM6IlBy
ZXV6bWkgenZ1ayB1IE1QMyBmb3JtYXR1IixpbmNvcnJlY3RfdHJ5X2FnYWluOiJO
aWplIHRvXHUwMTBkbm8uIFBva3VcdTAxNjFhanRlIHBvbm92bm8uIixpbWFnZV9h
bHRfdGV4dDoiU2xpa292bmkgaXphem92IHJlQ0FQVENIQSJ9LFJlY2FwdGNoYVN0
cl9odT0Ke3Zpc3VhbF9jaGFsbGVuZ2U6IlZpenVcdTAwZTFsaXMga2loXHUwMGVk
dlx1MDBlMXMga1x1MDBlOXJcdTAwZTlzZSIsYXVkaW9fY2hhbGxlbmdlOiJIYW5n
a2loXHUwMGVkdlx1MDBlMXMga1x1MDBlOXJcdTAwZTlzZSIscmVmcmVzaF9idG46
Ilx1MDBkYWoga2loXHUwMGVkdlx1MDBlMXMga1x1MDBlOXJcdTAwZTlzZSIsaW5z
dHJ1Y3Rpb25zX3Zpc3VhbDoiQWRqYSBtZWcgYSBrXHUwMGU5dCBzelx1MDBmM3Q6
IixpbnN0cnVjdGlvbnNfY29udGV4dDoiXHUwMGNkcmphIGJlIGEgc3phdmFrYXQg
YSBtZXpcdTAxNTFrYmU6IixpbnN0cnVjdGlvbnNfYXVkaW86Ilx1MDBjZHJqYSBs
ZSwgYW1pdCBoYWxsOiIsaGVscF9idG46IlNcdTAwZmFnXHUwMGYzIixwbGF5X2Fn
YWluOiJIYW5nIGlzbVx1MDBlOXRlbHQgbGVqXHUwMGUxdHN6XHUwMGUxc2EiLGNh
bnRfaGVhcl90aGlzOiJIYW5nIGxldFx1MDBmNmx0XHUwMGU5c2UgTVAzIGZvcm1c
dTAwZTF0dW1iYW4iLGluY29ycmVjdF90cnlfYWdhaW46IkhpYlx1MDBlMXMuIFBy
XHUwMGYzYlx1MDBlMWxrb3p6b24gXHUwMGZhanJhLiIsCmltYWdlX2FsdF90ZXh0
OiJyZUNBUFRDSEEgZWxsZW5cdTAxNTFyelx1MDE1MSBrXHUwMGU5cCJ9LFJlY2Fw
dGNoYVN0cl9oeT17dmlzdWFsX2NoYWxsZW5nZToiXHUwNTRkXHUwNTdmXHUwNTYx
XHUwNTc2XHUwNTYxXHUwNTZjIFx1MDU3Zlx1MDU2NVx1MDU3ZFx1MDU3OFx1MDU3
Mlx1MDU2MVx1MDU2Zlx1MDU2MVx1MDU3NiBcdTA1NmRcdTA1NzZcdTA1NjRcdTA1
NmJcdTA1ODAiLGF1ZGlvX2NoYWxsZW5nZToiXHUwNTRkXHUwNTdmXHUwNTYxXHUw
NTc2XHUwNTYxXHUwNTZjIFx1MDU3MVx1MDU2MVx1MDU3NVx1MDU3Nlx1MDU2MVx1
MDU3NVx1MDU2Ylx1MDU3NiBcdTA1NmRcdTA1NzZcdTA1NjRcdTA1NmJcdTA1ODAi
LHJlZnJlc2hfYnRuOiJcdTA1NGRcdTA1N2ZcdTA1NjFcdTA1NzZcdTA1NjFcdTA1
NmMgXHUwNTc2XHUwNTc4XHUwNTgwIFx1MDU2ZFx1MDU3Nlx1MDU2NFx1MDU2Ylx1
MDU4MCIsaW5zdHJ1Y3Rpb25zX3Zpc3VhbDoiXHUwNTQ0XHUwNTc4XHUwNTgyXHUw
NTdmXHUwNTg0XHUwNTYxXHUwNTYzXHUwNTgwXHUwNTY1XHUwNTg0IFx1MDU2MVx1
MDU3NVx1MDU3ZCBcdTA1NjVcdTA1ODBcdTA1NmZcdTA1NzhcdTA1ODIgXHUwNTYy
XHUwNTYxXHUwNTdjXHUwNTY1XHUwNTgwXHUwNTY4XHUwNTVkIiwKaW5zdHJ1Y3Rp
b25zX2NvbnRleHQ6Ilx1MDU0NFx1MDU3OFx1MDU4Mlx1MDU3Zlx1MDU4NFx1MDU2
MVx1MDU2M1x1MDU4MFx1MDU2NVx1MDU4NCBcdTA1NjJcdTA1NjFcdTA1N2NcdTA1
NjVcdTA1ODBcdTA1NjggXHUwNTdmXHUwNTc4XHUwNTgyXHUwNTgzXHUwNTY1XHUw
NTgwXHUwNTc4XHUwNTgyXHUwNTc0XHUwNTVkIixpbnN0cnVjdGlvbnNfYXVkaW86
Ilx1MDU0NFx1MDU3OFx1MDU4Mlx1MDU3Zlx1MDU4NFx1MDU2MVx1MDU2M1x1MDU4
MFx1MDU2NVx1MDU4NCBcdTA1NjFcdTA1NzVcdTA1NzYsIFx1MDU2Ylx1MDU3Nlx1
MDU3OSBcdTA1NmNcdTA1N2RcdTA1NzhcdTA1ODJcdTA1NzQgXHUwNTY1XHUwNTg0
XHUwNTVkIixoZWxwX2J0bjoiXHUwNTU1XHUwNTYzXHUwNTc2XHUwNTc4XHUwNTgy
XHUwNTY5XHUwNTc1XHUwNTc4XHUwNTgyXHUwNTc2IixwbGF5X2FnYWluOiJcdTA1
NDZcdTA1N2VcdTA1NjFcdTA1NjNcdTA1NjFcdTA1ODBcdTA1NmZcdTA1NjVcdTA1
NmMgXHUwNTcxXHUwNTYxXHUwNTc1XHUwNTc2XHUwNTY4IFx1MDU2Zlx1MDU4MFx1
MDU2Zlx1MDU2Ylx1MDU3NiIsCmNhbnRfaGVhcl90aGlzOiJcdTA1MzJcdTA1NjVc
dTA1N2NcdTA1NzZcdTA1NjVcdTA1NmMgXHUwNTcxXHUwNTYxXHUwNTc1XHUwNTc2
XHUwNTY4IFx1MDU3OFx1MDU4MFx1MDU3YVx1MDU2NVx1MDU3ZCBNUDMiLGluY29y
cmVjdF90cnlfYWdhaW46Ilx1MDU0ZFx1MDU2ZFx1MDU2MVx1MDU2YyBcdTA1Njc6
IFx1MDU1M1x1MDU3OFx1MDU4MFx1MDU3MVx1MDU2NVx1MDU4NCBcdTA1NmZcdTA1
ODBcdTA1NmZcdTA1NmJcdTA1NzY6IixpbWFnZV9hbHRfdGV4dDoiIn0sUmVjYXB0
Y2hhU3RyX2lkPXt2aXN1YWxfY2hhbGxlbmdlOiJEYXBhdGthbiBrYXRhIHBlbmd1
amlhbiBiZXJiZW50dWsgdmlzdWFsIixhdWRpb19jaGFsbGVuZ2U6IkRhcGF0a2Fu
IGthdGEgcGVuZ3VqaWFuIGJlcmJlbnR1ayBhdWRpbyIscmVmcmVzaF9idG46IkRh
cGF0a2FuIGthdGEgcGVuZ3VqaWFuIGJhcnUiLGluc3RydWN0aW9uc192aXN1YWw6
IktldGlrIGR1YSBrYXRhIGluaToiLGluc3RydWN0aW9uc19jb250ZXh0OiJLZXRp
ayBrYXRhIGRpIGRhbGFtIGtvdGFrOiIsCmluc3RydWN0aW9uc19hdWRpbzoiS2V0
aWsgeWFuZyBBbmRhIGRlbmdhcjoiLGhlbHBfYnRuOiJCYW50dWFuIixwbGF5X2Fn
YWluOiJQdXRhciBzdWFyYSBzZWthbGkgbGFnaSIsY2FudF9oZWFyX3RoaXM6IlVu
ZHVoIHN1YXJhIHNlYmFnYWkgTVAzIixpbmNvcnJlY3RfdHJ5X2FnYWluOiJTYWxh
aC4gQ29iYSBsYWdpLiIsaW1hZ2VfYWx0X3RleHQ6IkdhbWJhciB0YW50YW5nYW4g
cmVDQVBUQ0hBIn0sUmVjYXB0Y2hhU3RyX2lzPXt2aXN1YWxfY2hhbGxlbmdlOiJG
XHUwMGUxIGFcdTAwZjBnYW5nc3ByXHUwMGYzZiBzZW0gbXluZCIsYXVkaW9fY2hh
bGxlbmdlOiJGXHUwMGUxIGhsalx1MDBmM1x1MDBmMHByXHUwMGYzZiIscmVmcmVz
aF9idG46IkZcdTAwZTEgblx1MDBmZHR0IGFcdTAwZjBnYW5nc3ByXHUwMGYzZiIs
aW5zdHJ1Y3Rpb25zX3Zpc3VhbDoiU2xcdTAwZTFcdTAwZjB1IGlubiBcdTAwZmVl
c3NpIHR2XHUwMGY2IG9yXHUwMGYwOiIsaW5zdHJ1Y3Rpb25zX2NvbnRleHQ6IlNs
XHUwMGUxXHUwMGYwdSBvclx1MDBmMGluIGlubiBcdTAwZWQgcmVpdGluYToiLApp
bnN0cnVjdGlvbnNfYXVkaW86IlNsXHUwMGUxXHUwMGYwdSBpbm4gXHUwMGZlYVx1
MDBmMCBzZW0gXHUwMGZlXHUwMGZhIGhleXJpcjoiLGhlbHBfYnRuOiJIalx1MDBl
MWxwIixwbGF5X2FnYWluOiJTcGlsYSBobGpcdTAwZjNcdTAwZjAgYWZ0dXIiLGNh
bnRfaGVhcl90aGlzOiJTXHUwMGU2a2phIGhsalx1MDBmM1x1MDBmMCBzZW0gTVAz
IixpbmNvcnJlY3RfdHJ5X2FnYWluOiJSYW5ndC4gUmV5bmR1IGFmdHVyLiIsaW1h
Z2VfYWx0X3RleHQ6Im15bmQgcmVDQVBUQ0hBIGFcdTAwZjBnYW5nc3ByXHUwMGYz
ZnMifSxSZWNhcHRjaGFTdHJfaXQ9e3Zpc3VhbF9jaGFsbGVuZ2U6IlZlcmlmaWNh
IHZpc2l2YSIsYXVkaW9fY2hhbGxlbmdlOiJWZXJpZmljYSBhdWRpbyIscmVmcmVz
aF9idG46Ik51b3ZhIHZlcmlmaWNhIixpbnN0cnVjdGlvbnNfdmlzdWFsOiJEaWdp
dGEgbGUgZHVlIHBhcm9sZToiLGluc3RydWN0aW9uc19jb250ZXh0OiJEaWdpdGEg
bGUgcGFyb2xlIG5lbGxlIGNhc2VsbGU6IiwKaW5zdHJ1Y3Rpb25zX2F1ZGlvOiJE
aWdpdGEgY2lcdTAwZjIgY2hlIHNlbnRpOiIsaGVscF9idG46Ikd1aWRhIixwbGF5
X2FnYWluOiJSaXByb2R1Y2kgZGkgbnVvdm8gYXVkaW8iLGNhbnRfaGVhcl90aGlz
OiJTY2FyaWNhIGF1ZGlvIGluIE1QMyIsaW5jb3JyZWN0X3RyeV9hZ2FpbjoiU2Jh
Z2xpYXRvLiBSaXByb3ZhLiIsaW1hZ2VfYWx0X3RleHQ6IkltbWFnaW5lIGRpIHZl
cmlmaWNhIHJlQ0FQVENIQSJ9LFJlY2FwdGNoYVN0cl9pdz17dmlzdWFsX2NoYWxs
ZW5nZToiXHUwNWU3XHUwNWQxXHUwNWRjIFx1MDVkMFx1MDVlYVx1MDVkMlx1MDVl
OCBcdTA1ZDdcdTA1ZDZcdTA1ZDVcdTA1ZWFcdTA1ZDkiLGF1ZGlvX2NoYWxsZW5n
ZToiXHUwNWU3XHUwNWQxXHUwNWRjIFx1MDVkMFx1MDVlYVx1MDVkMlx1MDVlOCBc
dTA1ZTlcdTA1ZGVcdTA1ZTIiLHJlZnJlc2hfYnRuOiJcdTA1ZTdcdTA1ZDFcdTA1
ZGMgXHUwNWQwXHUwNWVhXHUwNWQyXHUwNWU4IFx1MDVkN1x1MDVkM1x1MDVlOSIs
Cmluc3RydWN0aW9uc192aXN1YWw6Ilx1MDVkNFx1MDVlN1x1MDVkY1x1MDVkMyBc
dTA1ZDBcdTA1ZWEgXHUwNWU5XHUwNWVhXHUwNWQ5IFx1MDVkNFx1MDVkZVx1MDVk
OVx1MDVkY1x1MDVkOVx1MDVkZDoiLGluc3RydWN0aW9uc19jb250ZXh0OiJcdTA1
ZDRcdTA1ZTdcdTA1ZGNcdTA1ZDMgXHUwNWQwXHUwNWVhIFx1MDVkNFx1MDVkZVx1
MDVkOVx1MDVkY1x1MDVkOVx1MDVkZCBcdTA1ZDFcdTA1ZWFcdTA1ZDlcdTA1ZDFc
dTA1ZDVcdTA1ZWE6IixpbnN0cnVjdGlvbnNfYXVkaW86Ilx1MDVkNFx1MDVlN1x1
MDVkY1x1MDVkMyBcdTA1ZDBcdTA1ZWEgXHUwNWRlXHUwNWQ0IFx1MDVlOVx1MDVk
MFx1MDVlYVx1MDVkNCBcdTA1ZTlcdTA1ZDVcdTA1ZGVcdTA1ZTI6IixoZWxwX2J0
bjoiXHUwNWUyXHUwNWQ2XHUwNWU4XHUwNWQ0IixwbGF5X2FnYWluOiJcdTA1ZDRc
dTA1ZTRcdTA1ZTJcdTA1ZGMgXHUwNWU5XHUwNWQ1XHUwNWQxIFx1MDVkMFx1MDVl
YSBcdTA1ZDRcdTA1ZTlcdTA1ZGVcdTA1ZTIiLApjYW50X2hlYXJfdGhpczoiXHUw
NWQ0XHUwNWQ1XHUwNWU4XHUwNWQzIFx1MDVlOVx1MDVkZVx1MDVlMiBcdTA1ZGIt
M01QIixpbmNvcnJlY3RfdHJ5X2FnYWluOiJcdTA1ZTlcdTA1ZDJcdTA1ZDVcdTA1
ZDkuIFx1MDVlMFx1MDVlMVx1MDVkNCBcdTA1ZTlcdTA1ZDVcdTA1ZDEuIixpbWFn
ZV9hbHRfdGV4dDoiXHUwNWVhXHUwNWRlXHUwNWQ1XHUwNWUwXHUwNWVhIFx1MDVk
MFx1MDVlYVx1MDVkMlx1MDVlOCBcdTA1ZTlcdTA1ZGMgcmVDQVBUQ0hBIn0sUmVj
YXB0Y2hhU3RyX2phPXt2aXN1YWxfY2hhbGxlbmdlOiJcdTc1M2JcdTUwY2ZcdTMw
NjdcdTc4YmFcdThhOGRcdTMwNTdcdTMwN2VcdTMwNTkiLGF1ZGlvX2NoYWxsZW5n
ZToiXHU5N2YzXHU1OGYwXHUzMDY3XHU3OGJhXHU4YThkXHUzMDU3XHUzMDdlXHUz
MDU5IixyZWZyZXNoX2J0bjoiXHU1MjI1XHUzMDZlXHU1MzU4XHU4YTllXHUzMDY3
XHUzMDg0XHUzMDhhXHU3NmY0XHUzMDU3XHUzMDdlXHUzMDU5IixpbnN0cnVjdGlv
bnNfdmlzdWFsOiIyIFx1MzA2NFx1MzA2ZVx1NTM1OFx1OGE5ZVx1MzA5Mlx1NTE2
NVx1NTI5Ylx1MzA1N1x1MzA3ZVx1MzA1OToiLAppbnN0cnVjdGlvbnNfY29udGV4
dDoiXHUzMGRjXHUzMGMzXHUzMGFmXHUzMGI5XHU1MTg1XHUzMDZlXHU1MzU4XHU4
YTllXHUzMDkyXHU1MTY1XHU1MjliXHUzMDU3XHUzMDY2XHUzMDRmXHUzMDYwXHUz
MDU1XHUzMDQ0OiIsaW5zdHJ1Y3Rpb25zX2F1ZGlvOiJcdTgwNWVcdTMwNTNcdTMw
NDhcdTMwNWZcdTUzNThcdThhOWVcdTMwOTJcdTUxNjVcdTUyOWJcdTMwNTdcdTMw
N2VcdTMwNTk6IixoZWxwX2J0bjoiXHUzMGQ4XHUzMGViXHUzMGQ3IixwbGF5X2Fn
YWluOiJcdTMwODJcdTMwNDZcdTRlMDBcdTVlYTZcdTgwNWVcdTMwNGYiLGNhbnRf
aGVhcl90aGlzOiJNUDMgXHUzMDY3XHU5N2YzXHU1OGYwXHUzMDkyXHUzMGMwXHUz
MGE2XHUzMGYzXHUzMGVkXHUzMGZjXHUzMGM5IixpbmNvcnJlY3RfdHJ5X2FnYWlu
OiJcdTZiNjNcdTMwNTdcdTMwNGZcdTMwNDJcdTMwOGFcdTMwN2VcdTMwNWJcdTMw
OTNcdTMwMDJcdTMwODJcdTMwNDZcdTRlMDBcdTVlYTZcdTMwODRcdTMwOGFcdTc2
ZjRcdTMwNTdcdTMwNjZcdTMwNGZcdTMwNjBcdTMwNTVcdTMwNDRcdTMwMDIiLApp
bWFnZV9hbHRfdGV4dDoicmVDQVBUQ0hBIFx1NzhiYVx1OGE4ZFx1NzUyOFx1NzUz
Ylx1NTBjZiJ9LFJlY2FwdGNoYVN0cl9rbj17dmlzdWFsX2NoYWxsZW5nZToiXHUw
Y2E2XHUwY2MzXHUwY2I2XHUwY2NkXHUwY2FmIFx1MGNiOFx1MGNiNVx1MGNiZVx1
MGNiMlx1MGNjYVx1MGM4Mlx1MGNhNlx1MGNhOFx1MGNjZFx1MGNhOFx1MGNjMSBc
dTBjYjhcdTBjY2RcdTBjYjVcdTBjYzBcdTBjOTVcdTBjYjBcdTBjYmZcdTBjYjhc
dTBjYmYiLGF1ZGlvX2NoYWxsZW5nZToiXHUwYzg2XHUwY2ExXHUwY2JmXHUwY2Fm
XHUwY2NiIFx1MGNiOFx1MGNiNVx1MGNiZVx1MGNiMlx1MGNjYVx1MGM4Mlx1MGNh
Nlx1MGNhOFx1MGNjZFx1MGNhOFx1MGNjMSBcdTBjYjhcdTBjY2RcdTBjYjVcdTBj
YzBcdTBjOTVcdTBjYjBcdTBjYmZcdTBjYjhcdTBjYmYiLHJlZnJlc2hfYnRuOiJc
dTBjYjlcdTBjY2FcdTBjYjggXHUwY2I4XHUwY2I1XHUwY2JlXHUwY2IyXHUwY2Nh
XHUwYzgyXHUwY2E2XHUwY2E4XHUwY2NkXHUwY2E4XHUwY2MxIFx1MGNhYVx1MGNh
MVx1MGNjNlx1MGNhZlx1MGNiZlx1MGNiMFx1MGNiZiIsCmluc3RydWN0aW9uc192
aXN1YWw6Ilx1MGM4ZVx1MGNiMFx1MGNhMVx1MGNjMSBcdTBjYWFcdTBjYTZcdTBj
OTdcdTBjYjNcdTBjYThcdTBjY2RcdTBjYThcdTBjYzEgXHUwYzlmXHUwY2M4XHUw
Y2FhXHUwY2NkIFx1MGNhZVx1MGNiZVx1MGNhMVx1MGNiZjoiLGluc3RydWN0aW9u
c19jb250ZXh0OiJcdTBjYWNcdTBjYmVcdTBjOTVcdTBjY2RcdTBjYjhcdTBjY2Rc
dTIwMGNcdTBjYThcdTBjYjJcdTBjY2RcdTBjYjJcdTBjYmYgXHUwY2FhXHUwY2E2
XHUwYzk3XHUwY2IzXHUwY2E4XHUwY2NkXHUwY2E4XHUwY2MxIFx1MGM5Zlx1MGNj
OFx1MGNhYVx1MGNjZFx1MjAwYyBcdTBjYWVcdTBjYmVcdTBjYTFcdTBjYmY6Iixp
bnN0cnVjdGlvbnNfYXVkaW86Ilx1MGNhOFx1MGNiZlx1MGNhZVx1MGM5N1x1MGNj
NiBcdTBjOTVcdTBjYzdcdTBjYjNcdTBjYmZcdTBjYjhcdTBjYzFcdTBjYjVcdTBj
YzFcdTBjYTZcdTBjYThcdTBjY2RcdTBjYThcdTBjYzEgXHUwYzlmXHUwY2M4XHUw
Y2FhXHUwY2NkXHUyMDBjIFx1MGNhZVx1MGNiZVx1MGNhMVx1MGNiZjoiLApoZWxw
X2J0bjoiXHUwY2I4XHUwY2I5XHUwY2JlXHUwY2FmIixwbGF5X2FnYWluOiJcdTBj
YTdcdTBjY2RcdTBjYjVcdTBjYThcdTBjYmZcdTBjYWZcdTBjYThcdTBjY2RcdTBj
YThcdTBjYzEgXHUwY2FlXHUwY2E0XHUwY2NkXHUwY2E0XHUwY2M2IFx1MGNhYVx1
MGNjZFx1MGNiMlx1MGNjNyBcdTBjYWVcdTBjYmVcdTBjYTFcdTBjYmYiLGNhbnRf
aGVhcl90aGlzOiJcdTBjYTdcdTBjY2RcdTBjYjVcdTBjYThcdTBjYmZcdTBjYWZc
dTBjYThcdTBjY2RcdTBjYThcdTBjYzEgTVAzIFx1MGNiMFx1MGNjMlx1MGNhYVx1
MGNhNlx1MGNiMlx1MGNjZFx1MGNiMlx1MGNiZiBcdTBjYTFcdTBjY2NcdTBjYThc
dTBjY2RcdTIwMGNcdTBjYjJcdTBjY2JcdTBjYTFcdTBjY2QgXHUwY2FlXHUwY2Jl
XHUwY2ExXHUwY2JmIixpbmNvcnJlY3RfdHJ5X2FnYWluOiJcdTBjYTRcdTBjYWFc
dTBjY2RcdTBjYWFcdTBjYmVcdTBjOTdcdTBjYmZcdTBjYTZcdTBjYzYuIFx1MGNh
ZVx1MGNhNFx1MGNjZFx1MGNhNFx1MGNjYVx1MGNhZVx1MGNjZFx1MGNhZVx1MGNj
NiBcdTBjYWFcdTBjY2RcdTBjYjBcdTBjYWZcdTBjYTRcdTBjY2RcdTBjYThcdTBj
YmZcdTBjYjhcdTBjYmYuIiwKaW1hZ2VfYWx0X3RleHQ6InJlQ0FQVENIQSBcdTBj
YjhcdTBjYjVcdTBjYmVcdTBjYjJcdTBjYzEgXHUwYzlhXHUwY2JmXHUwY2E0XHUw
Y2NkXHUwY2IwIn0sUmVjYXB0Y2hhU3RyX2tvPXt2aXN1YWxfY2hhbGxlbmdlOiJc
dWFkZjhcdWI5YmNcdWM3M2NcdWI4NWMgXHViY2Y0XHVjNTQ4XHViYjM4XHVjNzkw
IFx1YmMxYlx1YWUzMCIsYXVkaW9fY2hhbGxlbmdlOiJcdWM3NGNcdWMxMzFcdWM3
M2NcdWI4NWMgXHViY2Y0XHVjNTQ4XHViYjM4XHVjNzkwIFx1YmMxYlx1YWUzMCIs
cmVmcmVzaF9idG46Ilx1YmNmNFx1YzU0OFx1YmIzOFx1Yzc5MCBcdWMwYzhcdWI4
NWMgXHViYzFiXHVhZTMwIixpbnN0cnVjdGlvbnNfdmlzdWFsOiJcdWI0NTAgXHVi
MmU4XHVjNWI0IFx1Yzc4NVx1YjgyNToiLGluc3RydWN0aW9uc19jb250ZXh0OiJc
dWM3ODVcdWI4MjVcdWI3ODBcdWM1ZDAgXHViMmU4XHVjNWI0IFx1Yzc4NVx1Yjgy
NToiLGluc3RydWN0aW9uc19hdWRpbzoiXHVjNzRjXHVjMTMxIFx1YmNmNFx1YzU0
OFx1YmIzOFx1Yzc5MCBcdWM3ODVcdWI4MjU6IiwKaGVscF9idG46Ilx1YjNjNFx1
YzZjMFx1YjlkMCIscGxheV9hZ2FpbjoiXHVjNzRjXHVjMTMxIFx1YjJlNFx1YzJk
YyBcdWI0ZTNcdWFlMzAiLGNhbnRfaGVhcl90aGlzOiJcdWM3NGNcdWMxMzFcdWM3
NDQgTVAzXHViODVjIFx1YjJlNFx1YzZiNFx1Yjg1Y1x1YjRkYyIsaW5jb3JyZWN0
X3RyeV9hZ2FpbjoiXHVkMmMwXHViODM4XHVjMmI1XHViMmM4XHViMmU0LiBcdWIy
ZTRcdWMyZGMgXHVjMmRjXHViM2M0XHVkNTc0IFx1YzhmY1x1YzEzOFx1YzY5NC4i
LGltYWdlX2FsdF90ZXh0OiJyZUNBUFRDSEEgXHVjNjk0XHVjY2FkIFx1Yzc3NFx1
YmJmOFx1YzljMCJ9LFJlY2FwdGNoYVN0cl9sdD17dmlzdWFsX2NoYWxsZW5nZToi
R2F1dGkgdmFpemRpblx1MDEyZiBhdHBhXHUwMTdlaW5pbW8gdGVzdFx1MDEwNSIs
YXVkaW9fY2hhbGxlbmdlOiJHYXV0aSBnYXJzbyBhdHBhXHUwMTdlaW5pbW8gdGVz
dFx1MDEwNSIscmVmcmVzaF9idG46IkdhdXRpIG5hdWpcdTAxMDUgYXRwYVx1MDE3
ZWluaW1vIHRlc3RcdTAxMDUiLAppbnN0cnVjdGlvbnNfdmlzdWFsOiJcdTAxMmV2
ZXNraXRlIGR1IFx1MDE3ZW9kXHUwMTdlaXVzOiIsaW5zdHJ1Y3Rpb25zX2NvbnRl
eHQ6Ilx1MDEyZXZlc2tpdGUgXHUwMTdlb2RcdTAxN2VpdXMgbGF1a2VsaXVvc2U6
IixpbnN0cnVjdGlvbnNfYXVkaW86Ilx1MDEyZXZlc2tpdGUgdGFpLCBrXHUwMTA1
IGdpcmRpdGU6IixoZWxwX2J0bjoiUGFnYWxiYSIscGxheV9hZ2FpbjoiRGFyIGth
cnRcdTAxMDUgcGFsZWlzdGkgZ2Fyc1x1MDEwNSIsY2FudF9oZWFyX3RoaXM6IkF0
c2lzaVx1MDE3M3N0aSBnYXJzXHUwMTA1IGthaXAgTVAzIixpbmNvcnJlY3RfdHJ5
X2FnYWluOiJOZXRlaXNpbmdhaS4gQmFuZHlraXRlIGRhciBrYXJ0XHUwMTA1LiIs
aW1hZ2VfYWx0X3RleHQ6IlRlc3RvIFx1MjAxZXJlQ0FQVENIQVx1MjAxYyB2YWl6
ZGFzIn0sUmVjYXB0Y2hhU3RyX2x2PXt2aXN1YWxfY2hhbGxlbmdlOiJTYVx1MDE0
NmVtdCB2aXp1XHUwMTAxbHUgaXphaWNpblx1MDEwMWp1bXUiLGF1ZGlvX2NoYWxs
ZW5nZToiU2FcdTAxNDZlbXQgYXVkaW8gaXphaWNpblx1MDEwMWp1bXUiLApyZWZy
ZXNoX2J0bjoiU2FcdTAxNDZlbXQgamF1bnUgaXphaWNpblx1MDEwMWp1bXUiLGlu
c3RydWN0aW9uc192aXN1YWw6IkllcmFrc3RpZXQgZGl2dXMgdlx1MDEwMXJkdXM6
IixpbnN0cnVjdGlvbnNfY29udGV4dDoiSWVyYWtzdGlldCB2XHUwMTAxcmR1cyBs
b2R6aVx1MDE0Nm9zOiIsaW5zdHJ1Y3Rpb25zX2F1ZGlvOiJJZXJha3N0aWV0IGR6
aXJkYW1vOiIsaGVscF9idG46IlBhbFx1MDEyYmR6XHUwMTJiYmEiLHBsYXlfYWdh
aW46IlZcdTAxMTNscmVpeiBhdHNrYVx1MDE0Nm90IHNrYVx1MDE0NnUiLGNhbnRf
aGVhcl90aGlzOiJMZWp1cGllbFx1MDEwMWRcdTAxMTN0IHNrYVx1MDE0NnUgTVAz
XHUwMGEwZm9ybVx1MDEwMXRcdTAxMDEiLGluY29ycmVjdF90cnlfYWdhaW46Ik5l
cGFyZWl6aS4gTVx1MDExM1x1MDEyM2luaWV0IHZcdTAxMTNscmVpei4iLGltYWdl
X2FsdF90ZXh0OiJyZUNBUFRDSEEgaXphaWNpblx1MDEwMWp1bWEgYXR0XHUwMTEz
bHMifSxSZWNhcHRjaGFTdHJfbWw9Cnt2aXN1YWxfY2hhbGxlbmdlOiJcdTBkMTJc
dTBkMzBcdTBkNDEgXHUwZDI2XHUwZDQzXHUwZDM2XHUwZDRkXHUwZDJmIFx1MGQx
YVx1MGQzMlx1MGQxZVx1MGQ0ZFx1MGQxYVx1MGQ0ZCBcdTBkMjhcdTBkNDdcdTBk
MWZcdTBkNDFcdTBkMTUiLGF1ZGlvX2NoYWxsZW5nZToiXHUwZDEyXHUwZDMwXHUw
ZDQxIFx1MGQxM1x1MGQyMVx1MGQzZlx1MGQyZlx1MGQ0YiBcdTBkMWFcdTBkMzJc
dTBkMWVcdTBkNGRcdTBkMWFcdTBkNGQgXHUwZDI4XHUwZDQ3XHUwZDFmXHUwZDQx
XHUwZDE1IixyZWZyZXNoX2J0bjoiXHUwZDEyXHUwZDMwXHUwZDQxIFx1MGQyYVx1
MGQ0MVx1MGQyNFx1MGQzZlx1MGQyZiBcdTBkMWFcdTBkMzJcdTBkMWVcdTBkNGRc
dTBkMWFcdTBkNGQgXHUwZDI4XHUwZDQ3XHUwZDFmXHUwZDQxXHUwZDE1IixpbnN0
cnVjdGlvbnNfdmlzdWFsOiJcdTBkMzBcdTBkMjNcdTBkNGRcdTBkMWZcdTBkNGQg
XHUwZDJhXHUwZDI2XHUwZDE5XHUwZDRkXHUwZDE5XHUwZDdlIFx1MGQxZlx1MGQ0
OFx1MGQyYVx1MGQ0ZFx1MGQyYVx1MGQ0ZCBcdTBkMWFcdTBkNDZcdTBkMmZcdTBk
NGRcdTBkMmZcdTBkNDFcdTBkMTU6IiwKaW5zdHJ1Y3Rpb25zX2NvbnRleHQ6Ilx1
MGQyY1x1MGQ0Ylx1MGQxNVx1MGQ0ZFx1MjAwY1x1MGQzOFx1MGQ0MVx1MGQxNVx1
MGQzM1x1MGQzZlx1MGQzMlx1MGQ0NiBcdTBkMmFcdTBkMjZcdTBkMTlcdTBkNGRc
dTBkMTlcdTBkN2UgXHUwZDFmXHUwZDQ4XHUwZDJhXHUwZDRkXHUwZDJhXHUwZDQx
XHUwZDFhXHUwZDQ2XHUwZDJmXHUwZDRkXHUwZDJmXHUwZDQxXHUwZDE1OiIsaW5z
dHJ1Y3Rpb25zX2F1ZGlvOiJcdTBkMTVcdTBkNDdcdTBkN2VcdTBkMTVcdTBkNGRc
dTBkMTVcdTBkNDFcdTBkMjhcdTBkNGRcdTBkMjhcdTBkMjRcdTBkNGQgXHUwZDFm
XHUwZDQ4XHUwZDJhXHUwZDRkXHUwZDJhXHUwZDRkIFx1MGQxYVx1MGQ0Nlx1MGQy
Zlx1MGQ0ZFx1MGQyZlx1MGQ0MjoiLGhlbHBfYnRuOiJcdTBkMzhcdTBkMzlcdTBk
M2VcdTBkMmZcdTBkMDIiLHBsYXlfYWdhaW46Ilx1MGQzNlx1MGQyY1x1MGQ0ZFx1
MjAwY1x1MGQyNlx1MGQwMiBcdTBkMzVcdTBkNDBcdTBkMjNcdTBkNGRcdTBkMWZc
dTBkNDFcdTBkMDIgXHUwZDJhXHUwZDRkXHUwZDMyXHUwZDQ3IFx1MGQxYVx1MGQ0
Nlx1MGQyZlx1MGQ0ZFx1MGQyZlx1MGQ0MVx1MGQxNSIsCmNhbnRfaGVhcl90aGlz
OiJcdTBkMzZcdTBkMmNcdTBkNGRcdTIwMGNcdTBkMjZcdTBkMDIgTVAzIFx1MGQw
Nlx1MGQyZlx1MGQzZiBcdTBkMjFcdTBkNTdcdTBkN2FcdTBkMzJcdTBkNGJcdTBk
MjFcdTBkNGQgXHUwZDFhXHUwZDQ2XHUwZDJmXHUwZDRkXHUwZDJmXHUwZDQxXHUw
ZDE1IixpbmNvcnJlY3RfdHJ5X2FnYWluOiJcdTBkMjRcdTBkNDZcdTBkMzFcdTBk
NGRcdTBkMzFcdTBkM2VcdTBkMjNcdTBkNGQuIFx1MGQzNVx1MGQ0MFx1MGQyM1x1
MGQ0ZFx1MGQxZlx1MGQ0MVx1MGQwMiBcdTBkMzZcdTBkNGRcdTBkMzBcdTBkMmVc
dTBkM2ZcdTBkMTVcdTBkNGRcdTBkMTVcdTBkNDFcdTBkMTUuIixpbWFnZV9hbHRf
dGV4dDoicmVDQVBUQ0hBIFx1MGQxYVx1MGQzMlx1MGQxZVx1MGQ0ZFx1MGQxYVx1
MGQ0ZCBcdTBkMDdcdTBkMmVcdTBkNDdcdTBkMWNcdTBkNGQifSxSZWNhcHRjaGFT
dHJfbXI9e3Zpc3VhbF9jaGFsbGVuZ2U6Ilx1MDkyNlx1MDk0M1x1MDkzNlx1MDk0
ZFx1MjAwZFx1MDkyZlx1MDkyZVx1MDkzZVx1MDkyOCBcdTA5MDZcdTA5MzVcdTA5
NGRcdTA5MzlcdTA5M2VcdTA5MjggXHUwOTJhXHUwOTRkXHUwOTMwXHUwOTNlXHUw
OTJhXHUwOTRkXHUwOTI0IFx1MDkxNVx1MDkzMFx1MDkzZSIsCmF1ZGlvX2NoYWxs
ZW5nZToiXHUwOTExXHUwOTIxXHUwOTQwXHUwOTEzIFx1MDkwNlx1MDkzNVx1MDk0
ZFx1MDkzOVx1MDkzZVx1MDkyOCBcdTA5MmFcdTA5NGRcdTA5MzBcdTA5M2VcdTA5
MmFcdTA5NGRcdTA5MjQgXHUwOTE1XHUwOTMwXHUwOTNlIixyZWZyZXNoX2J0bjoi
XHUwOTBmXHUwOTE1IFx1MDkyOFx1MDkzNVx1MDk0MFx1MDkyOCBcdTA5MDZcdTA5
MzVcdTA5NGRcdTA5MzlcdTA5M2VcdTA5MjggXHUwOTJhXHUwOTRkXHUwOTMwXHUw
OTNlXHUwOTJhXHUwOTRkXHUwOTI0IFx1MDkxNVx1MDkzMFx1MDkzZSIsaW5zdHJ1
Y3Rpb25zX3Zpc3VhbDoiXHUwOTI2XHUwOTRiXHUwOTI4IFx1MDkzNlx1MDkyY1x1
MDk0ZFx1MDkyNiBcdTA5MWZcdTA5M2VcdTA5MDdcdTA5MmEgXHUwOTE1XHUwOTMw
XHUwOTNlOiIsaW5zdHJ1Y3Rpb25zX2NvbnRleHQ6Ilx1MDkyY1x1MDk0OVx1MDkx
NVx1MDk0ZFx1MjAwZFx1MDkzOFx1MDk0N1x1MDkzOFx1MDkyZVx1MDkyN1x1MDk0
MFx1MDkzMiBcdTA5MzZcdTA5MmNcdTA5NGRcdTIwMGRcdTA5MjYgXHUwOTFmXHUw
OTNlXHUwOTA3XHUwOTJhIFx1MDkxNVx1MDkzMFx1MDkzZToiLAppbnN0cnVjdGlv
bnNfYXVkaW86Ilx1MDkwNlx1MDkyYVx1MDkzMlx1MDk0ZFx1MDkyZlx1MDkzZVx1
MDkzMlx1MDkzZSBcdTA5MWNcdTA5NDcgXHUwOTEwXHUwOTE1XHUwOTQyIFx1MDky
Zlx1MDk0N1x1MDkwOFx1MDkzMiBcdTA5MjRcdTA5NDcgXHUwOTFmXHUwOTNlXHUw
OTA3XHUwOTJhIFx1MDkxNVx1MDkzMFx1MDkzZToiLGhlbHBfYnRuOiJcdTA5MmVc
dTA5MjZcdTA5MjQiLHBsYXlfYWdhaW46Ilx1MDkyN1x1MDk0ZFx1MjAwZFx1MDkz
NVx1MDkyOFx1MDk0MCBcdTA5MmFcdTA5NDFcdTA5MjhcdTA5NGRcdTA5MzlcdTA5
M2UgXHUwOTJhXHUwOTRkXHUyMDBkXHUwOTMyXHUwOTQ3IFx1MDkxNVx1MDkzMFx1
MDkzZSIsY2FudF9oZWFyX3RoaXM6Ik1QMyBcdTA5MzBcdTA5NDFcdTA5MmFcdTA5
M2VcdTA5MjQgXHUwOTI3XHUwOTRkXHUyMDBkXHUwOTM1XHUwOTI4XHUwOTQwIFx1
MDkyMVx1MDkzZVx1MDkwOVx1MDkyOFx1MDkzMlx1MDk0Ylx1MDkyMSBcdTA5MTVc
dTA5MzBcdTA5M2UiLAppbmNvcnJlY3RfdHJ5X2FnYWluOiJcdTA5MDVcdTA5MmZc
dTA5NGJcdTA5MTdcdTA5NGRcdTIwMGRcdTA5MmYuIFx1MDkyYVx1MDk0MVx1MDky
OFx1MDk0ZFx1MjAwZFx1MDkzOVx1MDkzZSBcdTA5MmFcdTA5NGRcdTA5MzBcdTA5
MmZcdTA5MjRcdTA5NGRcdTIwMGRcdTA5MjggXHUwOTE1XHUwOTMwXHUwOTNlLiIs
aW1hZ2VfYWx0X3RleHQ6InJlQ0FQVENIQSBcdTA5MDZcdTA5MzVcdTA5NGRcdTIw
MGRcdTA5MzlcdTA5M2VcdTA5MjggXHUwOTJhXHUwOTRkXHUwOTMwXHUwOTI0XHUw
OTNmXHUwOTJlXHUwOTNlIn0sUmVjYXB0Y2hhU3RyX21zPXt2aXN1YWxfY2hhbGxl
bmdlOiJEYXBhdGthbiBjYWJhcmFuIHZpc3VhbCIsYXVkaW9fY2hhbGxlbmdlOiJE
YXBhdGthbiBjYWJhcmFuIGF1ZGlvIixyZWZyZXNoX2J0bjoiRGFwYXRrYW4gY2Fi
YXJhbiBiYXJ1IixpbnN0cnVjdGlvbnNfdmlzdWFsOiJUYWlwIGtlZHVhLWR1YSBw
ZXJrYXRhYW46IixpbnN0cnVjdGlvbnNfY29udGV4dDoiVGFpcCBwZXJrYXRhYW4g
ZGFsYW0ga290YWs6IiwKaW5zdHJ1Y3Rpb25zX2F1ZGlvOiJUYWlwIGFwYSB5YW5n
IGRpZGVuZ2FyaToiLGhlbHBfYnRuOiJCYW50dWFuIixwbGF5X2FnYWluOiJNYWlu
a2FuIGJ1bnlpIHNla2FsaSBsYWdpIixjYW50X2hlYXJfdGhpczoiTXVhdCB0dXJ1
biBidW55aSBzZWJhZ2FpIE1QMyIsaW5jb3JyZWN0X3RyeV9hZ2FpbjoiVGlkYWsg
YmV0dWwuIEN1YmEgbGFnaS4iLGltYWdlX2FsdF90ZXh0OiJJbWVqIGNhYmFyYW4g
cmVDQVBUQ0hBIn0sUmVjYXB0Y2hhU3RyX25sPXt2aXN1YWxfY2hhbGxlbmdlOiJF
ZW4gdmlzdWVsZSB1aXRkYWdpbmcgcHJvYmVyZW4iLGF1ZGlvX2NoYWxsZW5nZToi
RWVuIGF1ZGlvLXVpdGRhZ2luZyBwcm9iZXJlbiIscmVmcmVzaF9idG46IkVlbiBu
aWV1d2UgdWl0ZGFnaW5nIHByb2JlcmVuIixpbnN0cnVjdGlvbnNfdmlzdWFsOiJU
eXAgZGUgdHdlZSB3b29yZGVuOiIsaW5zdHJ1Y3Rpb25zX2NvbnRleHQ6IlR5cCBk
ZSB3b29yZGVuIGluIGRlIHZha2tlbjoiLGluc3RydWN0aW9uc19hdWRpbzoiVHlw
IHdhdCB1IGhvb3J0OiIsCmhlbHBfYnRuOiJIZWxwIixwbGF5X2FnYWluOiJHZWx1
aWQgb3BuaWV1dyBhZnNwZWxlbiIsY2FudF9oZWFyX3RoaXM6IkdlbHVpZCBkb3du
bG9hZGVuIGFscyBNUDMiLGluY29ycmVjdF90cnlfYWdhaW46Ik9uanVpc3QuIFBy
b2JlZXIgaGV0IG9wbmlldXcuIixpbWFnZV9hbHRfdGV4dDoicmVDQVBUQ0hBLXVp
dGRhZ2luZ3NhZmJlZWxkaW5nIn0sUmVjYXB0Y2hhU3RyX25vPXt2aXN1YWxfY2hh
bGxlbmdlOiJGXHUwMGU1IGVuIGJpbGRldXRmb3JkcmluZyIsYXVkaW9fY2hhbGxl
bmdlOiJGXHUwMGU1IGVuIGx5ZHV0Zm9yZHJpbmciLHJlZnJlc2hfYnRuOiJGXHUw
MGU1IGVuIG55IHV0Zm9yZHJpbmciLGluc3RydWN0aW9uc192aXN1YWw6IlNrcml2
IGlubiBkZSB0byBvcmRlbmU6IixpbnN0cnVjdGlvbnNfY29udGV4dDoiU2tyaXYg
aW5uIG9yZGVuZSBpIGZlbHRlbmU6IixpbnN0cnVjdGlvbnNfYXVkaW86IlNrcml2
IGlubiBkZXQgZHUgaFx1MDBmOHJlcjoiLGhlbHBfYnRuOiJIamVscCIsCnBsYXlf
YWdhaW46IlNwaWxsIGF2IGx5ZCBwXHUwMGU1IG55dHQiLGNhbnRfaGVhcl90aGlz
OiJMYXN0IG5lZCBseWQgc29tIE1QMyIsaW5jb3JyZWN0X3RyeV9hZ2FpbjoiRmVp
bC4gUHJcdTAwZjh2IHBcdTAwZTUgbnl0dC4iLGltYWdlX2FsdF90ZXh0OiJyZUNB
UFRDSEEtdXRmb3JkcmluZ3NiaWxkZSJ9LFJlY2FwdGNoYVN0cl9wbD17dmlzdWFs
X2NoYWxsZW5nZToiUG9rYVx1MDE3YyBwb2Rwb3dpZWRcdTAxN2Egd2l6dWFsblx1
MDEwNSIsYXVkaW9fY2hhbGxlbmdlOiJPZHR3XHUwMGYzcnogcG9kcG93aWVkXHUw
MTdhIGRcdTAxN2F3aVx1MDExOWtvd1x1MDEwNSIscmVmcmVzaF9idG46Ik5vd2Eg
cG9kcG93aWVkXHUwMTdhIixpbnN0cnVjdGlvbnNfdmlzdWFsOiJXcGlzeiBvYmEg
d3lyYXp5OiIsaW5zdHJ1Y3Rpb25zX2NvbnRleHQ6IldwaXN6IHNcdTAxNDJvd2Eg
d3lcdTAxNWJ3aWV0bGFuZSB3IHBvbGFjaDoiLGluc3RydWN0aW9uc19hdWRpbzoi
V3Bpc3ogdXNcdTAxNDJ5c3phbmUgc1x1MDE0Mm93YToiLApoZWxwX2J0bjoiUG9t
b2MiLHBsYXlfYWdhaW46Ik9kdHdcdTAwZjNyeiBkXHUwMTdhd2lcdTAxMTlrIHBv
bm93bmllIixjYW50X2hlYXJfdGhpczoiUG9iaWVyeiBkXHUwMTdhd2lcdTAxMTlr
IGpha28gcGxpayBNUDMiLGluY29ycmVjdF90cnlfYWdhaW46Ik5pZXByYXdpZFx1
MDE0Mm93by4gU3ByXHUwMGYzYnVqIHBvbm93bmllLiIsaW1hZ2VfYWx0X3RleHQ6
IlphZGFuaWUgb2JyYXprb3dlIHJlQ0FQVENIQSJ9LFJlY2FwdGNoYVN0cl9wdD17
dmlzdWFsX2NoYWxsZW5nZToiT2J0ZXIgdW0gZGVzYWZpbyB2aXN1YWwiLGF1ZGlv
X2NoYWxsZW5nZToiT2J0ZXIgdW0gZGVzYWZpbyBkZSBcdTAwZTF1ZGlvIixyZWZy
ZXNoX2J0bjoiT2J0ZXIgdW0gbm92byBkZXNhZmlvIixpbnN0cnVjdGlvbnNfdmlz
dWFsOiJEaWdpdGUgYXMgZHVhcyBwYWxhdnJhczoiLGluc3RydWN0aW9uc19jb250
ZXh0OiJEaWdpdGUgYXMgcGFsYXZyYXMgZGFzIGNhaXhhczoiLGluc3RydWN0aW9u
c19hdWRpbzoiRGlnaXRlIG8gcXVlIHZvY1x1MDBlYSBvdXZlOiIsCmhlbHBfYnRu
OiJBanVkYSIscGxheV9hZ2FpbjoiUmVwcm9kdXppciBzb20gbm92YW1lbnRlIixj
YW50X2hlYXJfdGhpczoiRmF6ZXIgZG93bmxvYWQgZG8gc29tIG5vIGZvcm1hdG8g
TVAzIixpbmNvcnJlY3RfdHJ5X2FnYWluOiJJbmNvcnJldG8uIFRlbnRlIG5vdmFt
ZW50ZS4iLGltYWdlX2FsdF90ZXh0OiJJbWFnZW0gZGUgZGVzYWZpbyByZUNBUFRD
SEEifSxSZWNhcHRjaGFTdHJfcHRfcHQ9e3Zpc3VhbF9jaGFsbGVuZ2U6Ik9idGVy
IHVtIGRlc2FmaW8gdmlzdWFsIixhdWRpb19jaGFsbGVuZ2U6Ik9idGVyIHVtIGRl
c2FmaW8gZGUgXHUwMGUxdWRpbyIscmVmcmVzaF9idG46Ik9idGVyIHVtIG5vdm8g
ZGVzYWZpbyIsaW5zdHJ1Y3Rpb25zX3Zpc3VhbDoiRXNjcmV2YSBhcyBkdWFzIHBh
bGF2cmFzOiIsaW5zdHJ1Y3Rpb25zX2NvbnRleHQ6IkVzY3JldmEgYXMgcGFsYXZy
YXMgbmFzIGNhaXhhczoiLGluc3RydWN0aW9uc19hdWRpbzoiRXNjcmV2YSBvIHF1
ZSBvdXZpcjoiLGhlbHBfYnRuOiJBanVkYSIsCnBsYXlfYWdhaW46IlJlcHJvZHV6
aXIgc29tIG5vdmFtZW50ZSIsY2FudF9oZWFyX3RoaXM6IlRyYW5zZmVyaXIgc29t
IGNvbW8gTVAzIixpbmNvcnJlY3RfdHJ5X2FnYWluOiJJbmNvcnJldG8uIFRlbnRl
IG5vdmFtZW50ZS4iLGltYWdlX2FsdF90ZXh0OiJJbWFnZW0gZGUgZGVzYWZpbyBy
ZUNBUFRDSEEifSxSZWNhcHRjaGFTdHJfcm89e3Zpc3VhbF9jaGFsbGVuZ2U6Ik9i
XHUwMTYzaW5lXHUwMTYzaSB1biBjb2QgY2FwdGNoYSB2aXp1YWwiLGF1ZGlvX2No
YWxsZW5nZToiT2JcdTAxNjNpbmVcdTAxNjNpIHVuIGNvZCBjYXB0Y2hhIGF1ZGlv
IixyZWZyZXNoX2J0bjoiT2JcdTAxNjNpbmVcdTAxNjNpIHVuIG5vdSBjb2QgY2Fw
dGNoYSIsaW5zdHJ1Y3Rpb25zX3Zpc3VhbDoiSW50cm9kdWNlXHUwMTYzaSBjZWxl
IGRvdVx1MDEwMyBjdXZpbnRlOiIsaW5zdHJ1Y3Rpb25zX2NvbnRleHQ6IkludHJv
ZHVjZVx1MDE2M2kgY3V2aW50ZWxlIFx1MDBlZW4gY2FzZXRlOiIsaW5zdHJ1Y3Rp
b25zX2F1ZGlvOiJJbnRyb2R1Y2VcdTAxNjNpIGNlZWEgY2UgYXV6aVx1MDE2M2k6
IiwKaGVscF9idG46IkFqdXRvciIscGxheV9hZ2FpbjoiUmVkYVx1MDE2M2kgc3Vu
ZXR1bCBkaW4gbm91IixjYW50X2hlYXJfdGhpczoiRGVzY1x1MDEwM3JjYVx1MDE2
M2kgZmlcdTAxNWZpZXJ1bCBhdWRpbyBjYSBNUDMiLGluY29ycmVjdF90cnlfYWdh
aW46IkluY29yZWN0LiBcdTAwY2VuY2VyY2FcdTAxNjNpIGRpbiBub3UuIixpbWFn
ZV9hbHRfdGV4dDoiSW1hZ2luZSBkZSB2ZXJpZmljYXJlIHJlQ0FQVENIQSJ9LFJl
Y2FwdGNoYVN0cl9ydT17dmlzdWFsX2NoYWxsZW5nZToiXHUwNDEyXHUwNDM4XHUw
NDM3XHUwNDQzXHUwNDMwXHUwNDNiXHUwNDRjXHUwNDNkXHUwNDMwXHUwNDRmIFx1
MDQzZlx1MDQ0MFx1MDQzZVx1MDQzMlx1MDQzNVx1MDQ0MFx1MDQzYVx1MDQzMCIs
YXVkaW9fY2hhbGxlbmdlOiJcdTA0MTdcdTA0MzJcdTA0NDNcdTA0M2FcdTA0M2Vc
dTA0MzJcdTA0MzBcdTA0NGYgXHUwNDNmXHUwNDQwXHUwNDNlXHUwNDMyXHUwNDM1
XHUwNDQwXHUwNDNhXHUwNDMwIixyZWZyZXNoX2J0bjoiXHUwNDFlXHUwNDMxXHUw
NDNkXHUwNDNlXHUwNDMyXHUwNDM4XHUwNDQyXHUwNDRjIiwKaW5zdHJ1Y3Rpb25z
X3Zpc3VhbDoiXHUwNDEyXHUwNDMyXHUwNDM1XHUwNDM0XHUwNDM4XHUwNDQyXHUw
NDM1IFx1MDQ0Mlx1MDQzZSwgXHUwNDQ3XHUwNDQyXHUwNDNlIFx1MDQzMlx1MDQz
OFx1MDQzNFx1MDQzOFx1MDQ0Mlx1MDQzNToiLGluc3RydWN0aW9uc19jb250ZXh0
OiJcdTA0MTJcdTA0MzJcdTA0MzVcdTA0MzRcdTA0MzhcdTA0NDJcdTA0MzUgXHUw
NDQxXHUwNDNiXHUwNDNlXHUwNDMyXHUwNDMwOiIsaW5zdHJ1Y3Rpb25zX2F1ZGlv
OiJcdTA0MTJcdTA0MzJcdTA0MzVcdTA0MzRcdTA0MzhcdTA0NDJcdTA0MzUgXHUw
NDQyXHUwNDNlLCBcdTA0NDdcdTA0NDJcdTA0M2UgXHUwNDQxXHUwNDNiXHUwNDRi
XHUwNDQ4XHUwNDM4XHUwNDQyXHUwNDM1OiIsaGVscF9idG46Ilx1MDQyMVx1MDQz
Zlx1MDQ0MFx1MDQzMFx1MDQzMlx1MDQzYVx1MDQzMCIscGxheV9hZ2FpbjoiXHUw
NDFmXHUwNDQwXHUwNDNlXHUwNDQxXHUwNDNiXHUwNDQzXHUwNDQ4XHUwNDMwXHUw
NDQyXHUwNDRjIFx1MDQzNVx1MDQ0OVx1MDQzNSBcdTA0NDBcdTA0MzBcdTA0Mzci
LApjYW50X2hlYXJfdGhpczoiXHUwNDE3XHUwNDMwXHUwNDMzXHUwNDQwXHUwNDQz
XHUwNDM3XHUwNDM4XHUwNDQyXHUwNDRjIE1QMy1cdTA0NDRcdTA0MzBcdTA0Mzlc
dTA0M2IiLGluY29ycmVjdF90cnlfYWdhaW46Ilx1MDQxZFx1MDQzNVx1MDQzZlx1
MDQ0MFx1MDQzMFx1MDQzMlx1MDQzOFx1MDQzYlx1MDQ0Y1x1MDQzZFx1MDQzZS4g
XHUwNDFmXHUwNDNlXHUwNDMyXHUwNDQyXHUwNDNlXHUwNDQwXHUwNDM4XHUwNDQy
XHUwNDM1IFx1MDQzZlx1MDQzZVx1MDQzZlx1MDQ0Ylx1MDQ0Mlx1MDQzYVx1MDQ0
My4iLGltYWdlX2FsdF90ZXh0OiJcdTA0MWZcdTA0NDBcdTA0M2VcdTA0MzJcdTA0
MzVcdTA0NDBcdTA0M2FcdTA0MzAgXHUwNDNmXHUwNDNlIFx1MDQ0MVx1MDQzYlx1
MDQzZVx1MDQzMlx1MDQ0MyByZUNBUFRDSEEifSxSZWNhcHRjaGFTdHJfc2s9e3Zp
c3VhbF9jaGFsbGVuZ2U6IlpvYnJhemlcdTAxNjUgdml6dVx1MDBlMWxudSBwb2Rv
YnUiLGF1ZGlvX2NoYWxsZW5nZToiUHJlaHJhXHUwMTY1IHp2dWtvdlx1MDBmYSBw
b2RvYnUiLApyZWZyZXNoX2J0bjoiWm9icmF6aVx1MDE2NSBub3ZcdTAwZmQgdlx1
MDBmZHJheiIsaW5zdHJ1Y3Rpb25zX3Zpc3VhbDoiWmFkYWp0ZSB0aWV0byBkdmUg
c2xvdlx1MDBlMToiLGluc3RydWN0aW9uc19jb250ZXh0OiJaYWRhanRlIHNsb3Zc
dTAwZTEgdiBwb2xpYWNoOiIsaW5zdHJ1Y3Rpb25zX2F1ZGlvOiJaYWRhanRlLCBc
dTAxMGRvIHBvXHUwMTBkdWpldGU6IixoZWxwX2J0bjoiUG9tb2NuXHUwMGVkayIs
cGxheV9hZ2FpbjoiWm5vdmEgcHJlaHJhXHUwMTY1IHp2dWsiLGNhbnRfaGVhcl90
aGlzOiJQcmV2emlhXHUwMTY1IHp2dWsgdiBwb2RvYmUgc1x1MDBmYWJvcnUgTVAz
IixpbmNvcnJlY3RfdHJ5X2FnYWluOiJOZXNwclx1MDBlMXZuZS4gU2tcdTAwZmFz
dGUgdG8gem5vdmEuIixpbWFnZV9hbHRfdGV4dDoiT2JyXHUwMGUxem9rIHphZGFu
aWEgcmVDQVBUQ0hBIn0sUmVjYXB0Y2hhU3RyX3NsPXt2aXN1YWxfY2hhbGxlbmdl
OiJWaXp1YWxuaSBwcmVza3VzIixhdWRpb19jaGFsbGVuZ2U6Ilp2b1x1MDEwZG5p
IHByZXNrdXMiLApyZWZyZXNoX2J0bjoiTm92IHByZXNrdXMiLGluc3RydWN0aW9u
c192aXN1YWw6IlZuZXNpdGUgYmVzZWRpOiIsaW5zdHJ1Y3Rpb25zX2NvbnRleHQ6
IlZuZXNpdGUgYmVzZWRlIHYgb2t2aXJcdTAxMGRraWg6IixpbnN0cnVjdGlvbnNf
YXVkaW86Ik5hdGlwa2FqdGUsIGthaiBzbGlcdTAxNjFpdGU6IixoZWxwX2J0bjoi
UG9tb1x1MDEwZCIscGxheV9hZ2FpbjoiWm5vdmEgcHJlZHZhamFqIHp2b2siLGNh
bnRfaGVhcl90aGlzOiJQcmVuZXNpIHp2b2sga290IE1QMyIsaW5jb3JyZWN0X3Ry
eV9hZ2FpbjoiTmFwYVx1MDEwZG5vLiBQb3NrdXNpdGUgem5vdmEuIixpbWFnZV9h
bHRfdGV4dDoiU2xpa2EgaXp6aXZhIHJlQ0FQVENIQSJ9LFJlY2FwdGNoYVN0cl9z
cj17dmlzdWFsX2NoYWxsZW5nZToiXHUwNDFmXHUwNDQwXHUwNDM4XHUwNDNjXHUw
NDM4XHUwNDQyXHUwNDM1IFx1MDQzMlx1MDQzOFx1MDQzN1x1MDQ0M1x1MDQzNVx1
MDQzYlx1MDQzZFx1MDQzOCBcdTA0NDNcdTA0M2ZcdTA0MzhcdTA0NDIiLAphdWRp
b19jaGFsbGVuZ2U6Ilx1MDQxZlx1MDQ0MFx1MDQzOFx1MDQzY1x1MDQzOFx1MDQ0
Mlx1MDQzNSBcdTA0MzBcdTA0NDNcdTA0MzRcdTA0MzhcdTA0M2UgXHUwNDQzXHUw
NDNmXHUwNDM4XHUwNDQyIixyZWZyZXNoX2J0bjoiXHUwNDFmXHUwNDQwXHUwNDM4
XHUwNDNjXHUwNDM4XHUwNDQyXHUwNDM1IFx1MDQzZFx1MDQzZVx1MDQzMlx1MDQz
OCBcdTA0NDNcdTA0M2ZcdTA0MzhcdTA0NDIiLGluc3RydWN0aW9uc192aXN1YWw6
Ilx1MDQxZVx1MDQ0Mlx1MDQzYVx1MDQ0M1x1MDQ0Nlx1MDQzMFx1MDQ1OFx1MDQ0
Mlx1MDQzNSBcdTA0MzRcdTA0MzJcdTA0MzUgXHUwNDQwXHUwNDM1XHUwNDQ3XHUw
NDM4OiIsaW5zdHJ1Y3Rpb25zX2NvbnRleHQ6Ilx1MDQyM1x1MDQzYVx1MDQ0M1x1
MDQ0Nlx1MDQzMFx1MDQ1OFx1MDQ0Mlx1MDQzNSBcdTA0NDBcdTA0MzVcdTA0NDdc
dTA0MzggXHUwNDQzIFx1MDQzZlx1MDQzZVx1MDQ1OVx1MDQzMDoiLGluc3RydWN0
aW9uc19hdWRpbzoiXHUwNDFlXHUwNDQyXHUwNDNhXHUwNDQzXHUwNDQ2XHUwNDMw
XHUwNDU4XHUwNDQyXHUwNDM1IFx1MDQzZVx1MDQzZFx1MDQzZSBcdTA0NDhcdTA0
NDJcdTA0M2UgXHUwNDQ3XHUwNDQzXHUwNDU4XHUwNDM1XHUwNDQyXHUwNDM1OiIs
CmhlbHBfYnRuOiJcdTA0MWZcdTA0M2VcdTA0M2NcdTA0M2VcdTA0NWIiLHBsYXlf
YWdhaW46Ilx1MDQxZlx1MDQzZVx1MDQzZFx1MDQzZVx1MDQzMlx1MDQzZSBcdTA0
M2ZcdTA0NDNcdTA0NDFcdTA0NDJcdTA0MzggXHUwNDM3XHUwNDMyXHUwNDQzXHUw
NDNhIixjYW50X2hlYXJfdGhpczoiXHUwNDFmXHUwNDQwXHUwNDM1XHUwNDQzXHUw
NDM3XHUwNDNjXHUwNDM4IFx1MDQzN1x1MDQzMlx1MDQ0M1x1MDQzYSBcdTA0M2Fc
dTA0MzBcdTA0M2UgTVAzIFx1MDQ0MVx1MDQzZFx1MDQzOFx1MDQzY1x1MDQzMFx1
MDQzYSIsaW5jb3JyZWN0X3RyeV9hZ2FpbjoiXHUwNDFkXHUwNDM1XHUwNDQyXHUw
NDMwXHUwNDQ3XHUwNDNkXHUwNDNlLiBcdTA0MWZcdTA0M2VcdTA0M2FcdTA0NDNc
dTA0NDhcdTA0MzBcdTA0NThcdTA0NDJcdTA0MzUgXHUwNDNmXHUwNDNlXHUwNDNk
XHUwNDNlXHUwNDMyXHUwNDNlLiIsaW1hZ2VfYWx0X3RleHQ6Ilx1MDQyMVx1MDQz
Ylx1MDQzOFx1MDQzYVx1MDQzMCByZUNBUFRDSEEgXHUwNDNmXHUwNDQwXHUwNDNl
XHUwNDMyXHUwNDM1XHUwNDQwXHUwNDM1In0sClJlY2FwdGNoYVN0cl9zdj17dmlz
dWFsX2NoYWxsZW5nZToiSFx1MDBlNG10YSBjYXB0Y2hhIGkgYmlsZGZvcm1hdCIs
YXVkaW9fY2hhbGxlbmdlOiJIXHUwMGU0bXRhIGNhcHRjaGEgaSBsanVkZm9ybWF0
IixyZWZyZXNoX2J0bjoiSFx1MDBlNG10YSBueSBjYXB0Y2hhIixpbnN0cnVjdGlv
bnNfdmlzdWFsOiJTa3JpdiBiXHUwMGU1ZGEgb3JkZW46IixpbnN0cnVjdGlvbnNf
Y29udGV4dDoiU2tyaXYgb3JkZW4gaSBydXRvcm5hOiIsaW5zdHJ1Y3Rpb25zX2F1
ZGlvOiJTa3JpdiBkZXQgZHUgaFx1MDBmNnI6IixoZWxwX2J0bjoiSGpcdTAwZTRs
cCIscGxheV9hZ2FpbjoiU3BlbGEgdXBwIGxqdWRldCBpZ2VuIixjYW50X2hlYXJf
dGhpczoiSFx1MDBlNG10YSBsanVkIHNvbSBNUDMiLGluY29ycmVjdF90cnlfYWdh
aW46IkZlbC4gRlx1MDBmNnJzXHUwMGY2ayBpZ2VuLiIsaW1hZ2VfYWx0X3RleHQ6
InJlQ0FQVENIQS1iaWxkIn0sUmVjYXB0Y2hhU3RyX3N3PXt2aXN1YWxfY2hhbGxl
bmdlOiJQYXRhIGNoYW5nYW1vdG8geWEga3VvbmEiLAphdWRpb19jaGFsbGVuZ2U6
IlBhdGEgY2hhbmdhbW90byB5YSBzYXV0aSIscmVmcmVzaF9idG46IlBhdGEgY2hh
bmdhbW90byBtcHlhIixpbnN0cnVjdGlvbnNfdmlzdWFsOiJDaGFyYXphIG1hbmVu
byBtYXdpbGk6IixpbnN0cnVjdGlvbnNfY29udGV4dDoiQ2hhcmF6YSBtYW5lbm8g
a2F0aWthIG1hc2FuZHVrdToiLGluc3RydWN0aW9uc19hdWRpbzoiQ2hhcmF6YSB1
bmFjaG9zaWtpYToiLGhlbHBfYnRuOiJNc2FhZGEiLHBsYXlfYWdhaW46IkNoZXph
IHNhdXRpIHRlbmEiLGNhbnRfaGVhcl90aGlzOiJQYWt1YSBzYXV0aSBrYW1hIE1Q
MyIsaW5jb3JyZWN0X3RyeV9hZ2FpbjoiU2lvIHNhaGloaS4gSmFyaWJ1IHRlbmEu
IixpbWFnZV9hbHRfdGV4dDoicGljaGEgeWEgY2hhbmdhbW90byB5YSByZUNBUFRD
SEEifSxSZWNhcHRjaGFTdHJfdGE9e3Zpc3VhbF9jaGFsbGVuZ2U6Ilx1MGJhYVx1
MGJiZVx1MGJiMFx1MGJjZFx1MGJiNVx1MGJjOCBcdTBiOWFcdTBiYzdcdTBiYjJc
dTBiOWVcdTBiY2RcdTBiOWFcdTBiYzhcdTBiYWFcdTBiY2QgXHUwYmFhXHUwYmM2
XHUwYmIxXHUwYmMxXHUwYjk1IiwKYXVkaW9fY2hhbGxlbmdlOiJcdTBiODZcdTBi
OWZcdTBiYmZcdTBiYWZcdTBiY2IgXHUwYjlhXHUwYmM3XHUwYmIyXHUwYjllXHUw
YmNkXHUwYjlhXHUwYmM4XHUwYmFhXHUwYmNkIFx1MGJhYVx1MGJjNlx1MGJiMVx1
MGJjMVx1MGI5NSIscmVmcmVzaF9idG46Ilx1MGJhYVx1MGJjMVx1MGJhNFx1MGJi
Zlx1MGJhZiBcdTBiOWFcdTBiYzdcdTBiYjJcdTBiOWVcdTBiY2RcdTBiOWFcdTBi
YzhcdTBiYWFcdTBiY2QgXHUwYmFhXHUwYmM2XHUwYmIxXHUwYmMxXHUwYjk1Iixp
bnN0cnVjdGlvbnNfdmlzdWFsOiJcdTBiOWFcdTBiY2FcdTBiYjFcdTBiY2RcdTBi
OTVcdTBiYjNcdTBiYzggXHUwYjlmXHUwYmM4XHUwYmFhXHUwYmNkIFx1MGI5YVx1
MGJjNlx1MGJhZlx1MGJjZFx1MGI5NToiLGluc3RydWN0aW9uc19jb250ZXh0OiJc
dTBiYWFcdTBiYzZcdTBiOWZcdTBiY2RcdTBiOWZcdTBiYmZcdTBiYWZcdTBiYmZc
dTBiYjJcdTBiY2QgXHUwYjg5XHUwYmIzXHUwYmNkXHUwYmIzIFx1MGI5YVx1MGJj
YVx1MGJiMVx1MGJjZFx1MGI5NVx1MGJiM1x1MGJjOCBcdTBiODlcdTBiYjNcdTBi
Y2RcdTBiYjNcdTBiYmZcdTBiOWZcdTBiYzFcdTBiOTU6IiwKaW5zdHJ1Y3Rpb25z
X2F1ZGlvOiJcdTBiOTVcdTBiYzdcdTBiOWZcdTBiY2RcdTBiYWFcdTBiYTRcdTBi
YzggXHUwYjlmXHUwYmM4XHUwYmFhXHUwYmNkIFx1MGI5YVx1MGJjNlx1MGJhZlx1
MGJjZFx1MGI5NToiLGhlbHBfYnRuOiJcdTBiODlcdTBiYTRcdTBiYjVcdTBiYmYi
LHBsYXlfYWdhaW46Ilx1MGI5Mlx1MGJiMlx1MGJiZlx1MGJhZlx1MGJjOCBcdTBi
YWVcdTBiYzBcdTBiYTNcdTBiY2RcdTBiOWZcdTBiYzFcdTBiYWVcdTBiY2QgXHUw
Yjg3XHUwYmFmXHUwYjk1XHUwYmNkXHUwYjk1XHUwYmMxIixjYW50X2hlYXJfdGhp
czoiXHUwYjkyXHUwYmIyXHUwYmJmXHUwYmFmXHUwYmM4IE1QMyBcdTBiODZcdTBi
OTUgXHUwYmFhXHUwYmE0XHUwYmJmXHUwYmI1XHUwYmJmXHUwYmIxXHUwYjk1XHUw
YmNkXHUwYjk1XHUwYmMxXHUwYjk1IixpbmNvcnJlY3RfdHJ5X2FnYWluOiJcdTBi
YTRcdTBiYjVcdTBiYjFcdTBiYmVcdTBiYTlcdTBiYTRcdTBiYzEuIFx1MGJhZVx1
MGJjMFx1MGJhM1x1MGJjZFx1MGI5Zlx1MGJjMVx1MGJhZVx1MGJjZCBcdTBiYWVc
dTBiYzFcdTBiYWZcdTBiYjJcdTBiYjVcdTBiYzFcdTBiYWVcdTBiY2QuIiwKaW1h
Z2VfYWx0X3RleHQ6InJlQ0FQVENIQSBcdTBiOWFcdTBiYzdcdTBiYjJcdTBiOWVc
dTBiY2RcdTBiOWFcdTBiY2QgXHUwYmFhXHUwYjlmXHUwYmFlXHUwYmNkIn0sUmVj
YXB0Y2hhU3RyX3RlPXt2aXN1YWxfY2hhbGxlbmdlOiJcdTBjMTJcdTBjMTUgXHUw
YzI2XHUwYzQzXHUwYzM2XHUwYzRkXHUwYzJmXHUwYzJlXHUwYzNlXHUwYzI4IFx1
MGMzOFx1MGMzNVx1MGMzZVx1MGMzMlx1MGM0MVx1MGMyOFx1MGM0MSBcdTBjMzhc
dTBjNGRcdTBjMzVcdTBjNDBcdTBjMTVcdTBjMzBcdTBjM2ZcdTBjMDJcdTBjMWFc
dTBjMDJcdTBjMjFcdTBjM2YiLGF1ZGlvX2NoYWxsZW5nZToiXHUwYzEyXHUwYzE1
IFx1MGMwNlx1MGMyMVx1MGMzZlx1MGMyZlx1MGM0YiBcdTBjMzhcdTBjMzVcdTBj
M2VcdTBjMzJcdTBjNDFcdTBjMjhcdTBjNDEgXHUwYzM4XHUwYzRkXHUwYzM1XHUw
YzQwXHUwYzE1XHUwYzMwXHUwYzNmXHUwYzAyXHUwYzFhXHUwYzAyXHUwYzIxXHUw
YzNmIixyZWZyZXNoX2J0bjoiXHUwYzE1XHUwYzRkXHUwYzMwXHUwYzRhXHUwYzI0
XHUwYzRkXHUwYzI0IFx1MGMzOFx1MGMzNVx1MGMzZVx1MGMzMlx1MGM0MVx1MGMy
OFx1MGM0MSBcdTBjMzhcdTBjNGRcdTBjMzVcdTBjNDBcdTBjMTVcdTBjMzBcdTBj
M2ZcdTBjMDJcdTBjMWFcdTBjMDJcdTBjMjFcdTBjM2YiLAppbnN0cnVjdGlvbnNf
dmlzdWFsOiJcdTBjMzBcdTBjNDZcdTBjMDJcdTBjMjFcdTBjNDEgXHUwYzJhXHUw
YzI2XHUwYzNlXHUwYzMyXHUwYzI4XHUwYzQxIFx1MGMxZlx1MGM0OFx1MGMyYVx1
MGM0ZCBcdTBjMWFcdTBjNDdcdTBjMmZcdTBjMDJcdTBjMjFcdTBjM2Y6IixpbnN0
cnVjdGlvbnNfY29udGV4dDoiXHUwYzJhXHUwYzI2XHUwYzNlXHUwYzMyXHUwYzI4
XHUwYzQxIFx1MGMyYVx1MGM0Nlx1MGMxZlx1MGM0ZFx1MGMxZlx1MGM0Nlx1MGMz
Mlx1MGM0ZFx1MGMzMlx1MGM0YiBcdTBjMWZcdTBjNDhcdTBjMmFcdTBjNGQgXHUw
YzFhXHUwYzQ3XHUwYzJmXHUwYzAyXHUwYzIxXHUwYzNmOiIsaW5zdHJ1Y3Rpb25z
X2F1ZGlvOiJcdTBjMmVcdTBjNDBcdTBjMzBcdTBjNDEgXHUwYzM1XHUwYzNmXHUw
YzI4XHUwYzRkXHUwYzI4XHUwYzI2XHUwYzNmIFx1MGMxZlx1MGM0OFx1MGMyYVx1
MGM0ZCBcdTBjMWFcdTBjNDdcdTBjMmZcdTBjMDJcdTBjMjFcdTBjM2Y6IixoZWxw
X2J0bjoiXHUwYzM4XHUwYzM5XHUwYzNlXHUwYzJmXHUwYzAyIiwKcGxheV9hZ2Fp
bjoiXHUwYzI3XHUwYzRkXHUwYzM1XHUwYzI4XHUwYzNmXHUwYzI4XHUwYzNmIFx1
MGMyZVx1MGMzM1x1MGM0ZFx1MGMzMlx1MGM0MCBcdTBjMmFcdTBjNGRcdTBjMzJc
dTBjNDcgXHUwYzFhXHUwYzQ3XHUwYzJmXHUwYzNmIixjYW50X2hlYXJfdGhpczoi
XHUwYzI3XHUwYzRkXHUwYzM1XHUwYzI4XHUwYzNmXHUwYzI4XHUwYzNmIE1QMyBc
dTBjMzVcdTBjMzJcdTBjNDYgXHUwYzIxXHUwYzRjXHUwYzI4XHUwYzRkXHUyMDBj
XHUwYzMyXHUwYzRiXHUwYzIxXHUwYzRkIFx1MGMxYVx1MGM0N1x1MGMyZlx1MGMz
ZiIsaW5jb3JyZWN0X3RyeV9hZ2FpbjoiXHUwYzI0XHUwYzJhXHUwYzRkXHUwYzJh
XHUwYzQxLiBcdTBjMmVcdTBjMzNcdTBjNGRcdTBjMzJcdTBjNDAgXHUwYzJhXHUw
YzRkXHUwYzMwXHUwYzJmXHUwYzI0XHUwYzRkXHUwYzI4XHUwYzNmXHUwYzAyXHUw
YzFhXHUwYzAyXHUwYzIxXHUwYzNmLiIsaW1hZ2VfYWx0X3RleHQ6InJlQ0FQVENI
QSBcdTBjMzhcdTBjMzVcdTBjM2VcdTBjMzJcdTBjNDEgXHUwYzFhXHUwYzNmXHUw
YzI0XHUwYzRkXHUwYzMwXHUwYzAyIn0sClJlY2FwdGNoYVN0cl90aD17dmlzdWFs
X2NoYWxsZW5nZToiXHUwZTIzXHUwZTMxXHUwZTFhXHUwZTA0XHUwZTI3XHUwZTMy
XHUwZTIxXHUwZTE3XHUwZTQ5XHUwZTMyXHUwZTE3XHUwZTMyXHUwZTIyXHUwZTE0
XHUwZTQ5XHUwZTMyXHUwZTE5XHUwZTIwXHUwZTMyXHUwZTFlIixhdWRpb19jaGFs
bGVuZ2U6Ilx1MGUyM1x1MGUzMVx1MGUxYVx1MGUwNFx1MGUyN1x1MGUzMlx1MGUy
MVx1MGUxN1x1MGU0OVx1MGUzMlx1MGUxN1x1MGUzMlx1MGUyMlx1MGUxNFx1MGU0
OVx1MGUzMlx1MGUxOVx1MGU0MFx1MGUyYVx1MGUzNVx1MGUyMlx1MGUwNyIscmVm
cmVzaF9idG46Ilx1MGUyM1x1MGUzMVx1MGUxYVx1MGUwNFx1MGUyN1x1MGUzMlx1
MGUyMVx1MGUxN1x1MGU0OVx1MGUzMlx1MGUxN1x1MGUzMlx1MGUyMlx1MGU0M1x1
MGUyYlx1MGUyMVx1MGU0OCIsaW5zdHJ1Y3Rpb25zX3Zpc3VhbDoiXHUwZTFlXHUw
ZTM0XHUwZTIxXHUwZTFlXHUwZTRjXHUwZTA0XHUwZTMzXHUwZTJhXHUwZTJkXHUw
ZTA3XHUwZTA0XHUwZTMzXHUwZTE5XHUwZTMxXHUwZTQ5XHUwZTE5OiIsCmluc3Ry
dWN0aW9uc19jb250ZXh0OiJcdTBlMWVcdTBlMzRcdTBlMjFcdTBlMWVcdTBlNGNc
dTBlMDRcdTBlMzNcdTBlMTlcdTBlMzFcdTBlNDlcdTBlMTlcdTBlNDNcdTBlMTlc
dTBlMGFcdTBlNDhcdTBlMmRcdTBlMDdcdTBlMTlcdTBlMzVcdTBlNDk6IixpbnN0
cnVjdGlvbnNfYXVkaW86Ilx1MGUxZVx1MGUzNFx1MGUyMVx1MGUxZVx1MGU0Y1x1
MGUyYVx1MGUzNFx1MGU0OFx1MGUwN1x1MGUxN1x1MGUzNVx1MGU0OFx1MGUwNFx1
MGUzOFx1MGUxM1x1MGU0NFx1MGUxNFx1MGU0OVx1MGUyMlx1MGUzNFx1MGUxOToi
LGhlbHBfYnRuOiJcdTBlMDRcdTBlMjdcdTBlMzJcdTBlMjFcdTBlMGFcdTBlNDhc
dTBlMjdcdTBlMjJcdTBlNDBcdTBlMmJcdTBlMjVcdTBlMzdcdTBlMmQiLHBsYXlf
YWdhaW46Ilx1MGU0MFx1MGUyNVx1MGU0OFx1MGUxOVx1MGU0MFx1MGUyYVx1MGUz
NVx1MGUyMlx1MGUwN1x1MGUyZFx1MGUzNVx1MGUwMVx1MGUwNFx1MGUyM1x1MGUz
MVx1MGU0OVx1MGUwNyIsY2FudF9oZWFyX3RoaXM6Ilx1MGUxNFx1MGUzMlx1MGUy
N1x1MGU0Mlx1MGUyYlx1MGUyNVx1MGUxNFx1MGU0MFx1MGUyYVx1MGUzNVx1MGUy
Mlx1MGUwN1x1MGU0MFx1MGUxYlx1MGU0N1x1MGUxOSBNUDMiLAppbmNvcnJlY3Rf
dHJ5X2FnYWluOiJcdTBlNDRcdTBlMjFcdTBlNDhcdTBlMTZcdTBlMzlcdTBlMDFc
dTBlMTVcdTBlNDlcdTBlMmRcdTBlMDcgXHUwZTI1XHUwZTJkXHUwZTA3XHUwZTJk
XHUwZTM1XHUwZTAxXHUwZTA0XHUwZTIzXHUwZTMxXHUwZTQ5XHUwZTA3IixpbWFn
ZV9hbHRfdGV4dDoiXHUwZTIzXHUwZTJiXHUwZTMxXHUwZTJhXHUwZTIwXHUwZTMy
XHUwZTFlIHJlQ0FQVENIQSJ9LFJlY2FwdGNoYVN0cl90cj17dmlzdWFsX2NoYWxs
ZW5nZToiR1x1MDBmNnJzZWwgc29yZ3UgYWwiLGF1ZGlvX2NoYWxsZW5nZToiU2Vz
bGkgc29yZ3UgYWwiLHJlZnJlc2hfYnRuOiJZZW5pZGVuIHlcdTAwZmNrbGUiLGlu
c3RydWN0aW9uc192aXN1YWw6Ilx1MDEzMGtpIGtlbGltZXlpIHlhelx1MDEzMW46
IixpbnN0cnVjdGlvbnNfY29udGV4dDoiS3V0dWRha2kga2VsaW1lbGVyaSB5YXpc
dTAxMzFuOiIsaW5zdHJ1Y3Rpb25zX2F1ZGlvOiJEdXlkdVx1MDExZnVudXp1IHlh
elx1MDEzMW46IiwKaGVscF9idG46IllhcmRcdTAxMzFtIixwbGF5X2FnYWluOiJT
ZXNpIHRla3JhciBcdTAwZTdhbCIsY2FudF9oZWFyX3RoaXM6IlNlc2kgTVAzIG9s
YXJhayBpbmRpciIsaW5jb3JyZWN0X3RyeV9hZ2FpbjoiWWFubFx1MDEzMVx1MDE1
Zi4gVGVrcmFyIGRlbmV5aW4uIixpbWFnZV9hbHRfdGV4dDoicmVDQVBUQ0hBIHNv
cnVzdSByZXNtaSJ9LFJlY2FwdGNoYVN0cl91az17dmlzdWFsX2NoYWxsZW5nZToi
XHUwNDFlXHUwNDQyXHUwNDQwXHUwNDM4XHUwNDNjXHUwNDMwXHUwNDQyXHUwNDM4
IFx1MDQzMlx1MDQ1Nlx1MDQzN1x1MDQ0M1x1MDQzMFx1MDQzYlx1MDQ0Y1x1MDQz
ZFx1MDQzOFx1MDQzOSBcdTA0NDJcdTA0MzVcdTA0M2FcdTA0NDFcdTA0NDIiLGF1
ZGlvX2NoYWxsZW5nZToiXHUwNDFlXHUwNDQyXHUwNDQwXHUwNDM4XHUwNDNjXHUw
NDMwXHUwNDQyXHUwNDM4IFx1MDQzMFx1MDQ0M1x1MDQzNFx1MDQ1Nlx1MDQzZVx1
MDQzN1x1MDQzMFx1MDQzZlx1MDQzOFx1MDQ0MSIscmVmcmVzaF9idG46Ilx1MDQx
ZVx1MDQzZFx1MDQzZVx1MDQzMlx1MDQzOFx1MDQ0Mlx1MDQzOCBcdTA0NDJcdTA0
MzVcdTA0M2FcdTA0NDFcdTA0NDIiLAppbnN0cnVjdGlvbnNfdmlzdWFsOiJcdTA0
MTJcdTA0MzJcdTA0MzVcdTA0MzRcdTA0NTZcdTA0NDJcdTA0NGMgXHUwNDM0XHUw
NDMyXHUwNDMwIFx1MDQ0MVx1MDQzYlx1MDQzZVx1MDQzMlx1MDQzMDoiLGluc3Ry
dWN0aW9uc19jb250ZXh0OiJcdTA0MTJcdTA0MzJcdTA0MzVcdTA0MzRcdTA0NTZc
dTA0NDJcdTA0NGMgXHUwNDQxXHUwNDNiXHUwNDNlXHUwNDMyXHUwNDMwIFx1MDQz
MiBcdTA0M2ZcdTA0M2VcdTA0M2JcdTA0NGY6IixpbnN0cnVjdGlvbnNfYXVkaW86
Ilx1MDQxMlx1MDQzMlx1MDQzNVx1MDQzNFx1MDQ1Nlx1MDQ0Mlx1MDQ0YyBcdTA0
M2ZcdTA0M2VcdTA0NDdcdTA0NDNcdTA0NDJcdTA0MzU6IixoZWxwX2J0bjoiXHUw
NDE0XHUwNDNlXHUwNDMyXHUwNDU2XHUwNDM0XHUwNDNhXHUwNDMwIixwbGF5X2Fn
YWluOiJcdTA0MTJcdTA0NTZcdTA0MzRcdTA0NDJcdTA0MzJcdTA0M2VcdTA0NDBc
dTA0MzhcdTA0NDJcdTA0MzggXHUwNDM3XHUwNDMwXHUwNDNmXHUwNDM4XHUwNDQx
IFx1MDQ0OVx1MDQzNSBcdTA0NDBcdTA0MzBcdTA0MzciLApjYW50X2hlYXJfdGhp
czoiXHUwNDE3XHUwNDMwXHUwNDMyXHUwNDMwXHUwNDNkXHUwNDQyXHUwNDMwXHUw
NDM2XHUwNDM4XHUwNDQyXHUwNDM4IFx1MDQzN1x1MDQzMFx1MDQzZlx1MDQzOFx1
MDQ0MSBcdTA0NGZcdTA0M2EgTVAzIixpbmNvcnJlY3RfdHJ5X2FnYWluOiJcdTA0
MWRcdTA0MzVcdTA0M2ZcdTA0NDBcdTA0MzBcdTA0MzJcdTA0MzhcdTA0M2JcdTA0
NGNcdTA0M2RcdTA0M2UuIFx1MDQyMVx1MDQzZlx1MDQ0MFx1MDQzZVx1MDQzMVx1
MDQ0M1x1MDQzOVx1MDQ0Mlx1MDQzNSBcdTA0NDlcdTA0MzUgXHUwNDQwXHUwNDMw
XHUwNDM3LiIsaW1hZ2VfYWx0X3RleHQ6Ilx1MDQxN1x1MDQzZVx1MDQzMVx1MDQ0
MFx1MDQzMFx1MDQzNlx1MDQzNVx1MDQzZFx1MDQzZFx1MDQ0ZiBcdTA0MzdcdTA0
MzBcdTA0MzJcdTA0MzRcdTA0MzBcdTA0M2RcdTA0M2RcdTA0NGYgcmVDQVBUQ0hB
In0sUmVjYXB0Y2hhU3RyX3VyPXt2aXN1YWxfY2hhbGxlbmdlOiJcdTA2MjdcdTA2
Y2NcdTA2YTkgXHUwNjQ1XHUwNjMxXHUwNjI2XHUwNmNjIFx1MDY4Nlx1MDZjY1x1
MDY0NFx1MDY0Nlx1MDYyYyBcdTA2MmRcdTA2MjdcdTA2MzVcdTA2NDQgXHUwNmE5
XHUwNjMxXHUwNmNjXHUwNmJhIiwKYXVkaW9fY2hhbGxlbmdlOiJcdTA2MjdcdTA2
Y2NcdTA2YTkgXHUwNjIyXHUwNjg4XHUwNmNjXHUwNjQ4IFx1MDY4Nlx1MDZjY1x1
MDY0NFx1MDY0Nlx1MDYyYyBcdTA2MmRcdTA2MjdcdTA2MzVcdTA2NDQgXHUwNmE5
XHUwNjMxXHUwNmNjXHUwNmJhIixyZWZyZXNoX2J0bjoiXHUwNjI3XHUwNmNjXHUw
NmE5IFx1MDY0Nlx1MDZjY1x1MDYyNyBcdTA2ODZcdTA2Y2NcdTA2NDRcdTA2NDZc
dTA2MmMgXHUwNjJkXHUwNjI3XHUwNjM1XHUwNjQ0IFx1MDZhOVx1MDYzMVx1MDZj
Y1x1MDZiYSIsaW5zdHJ1Y3Rpb25zX3Zpc3VhbDoiXHUwNjJmXHUwNjQ4IFx1MDYy
N1x1MDY0NFx1MDY0MVx1MDYyN1x1MDYzOCBcdTA2NzlcdTA2MjdcdTA2MjZcdTA2
N2UgXHUwNmE5XHUwNjMxXHUwNmNjXHUwNmJhOiIsaW5zdHJ1Y3Rpb25zX2NvbnRl
eHQ6Ilx1MDYyN1x1MDY0NFx1MDY0MVx1MDYyN1x1MDYzOCBcdTA2YTlcdTA2NDgg
XHUwNjJlXHUwNjI3XHUwNjQ2XHUwNjQ4XHUwNmJhIFx1MDY0NVx1MDZjY1x1MDZi
YSBcdTA2NzlcdTA2MjdcdTA2MjZcdTA2N2UgXHUwNmE5XHUwNjMxXHUwNmNjXHUw
NmJhOiIsCmluc3RydWN0aW9uc19hdWRpbzoiXHUwNjIyXHUwNjdlIFx1MDZhOVx1
MDY0OCBcdTA2MmNcdTA2NDggXHUwNjMzXHUwNjQ2XHUwNjI3XHUwNjI2XHUwNmNj
IFx1MDYyZlx1MDZjY1x1MDYyYVx1MDYyNyBcdTA2YzFcdTA2ZDIgXHUwNjI3XHUw
NjMzXHUwNmQyIFx1MDY3OVx1MDYyN1x1MDYyNlx1MDY3ZSBcdTA2YTlcdTA2MzFc
dTA2Y2NcdTA2YmE6IixoZWxwX2J0bjoiXHUwNjQ1XHUwNjJmXHUwNjJmIixwbGF5
X2FnYWluOiJcdTA2MjJcdTA2NDhcdTA2MjdcdTA2MzIgXHUwNjJmXHUwNjQ4XHUw
NjI4XHUwNjI3XHUwNjMxXHUwNmMxIFx1MDY4Nlx1MDY0NFx1MDYyN1x1MDYyNlx1
MDZjY1x1MDZiYSIsY2FudF9oZWFyX3RoaXM6Ilx1MDYyMlx1MDY0OFx1MDYyN1x1
MDYzMiBcdTA2YTlcdTA2NDggTVAzIFx1MDZhOVx1MDZkMiBcdTA2MjhcdTA2Mzdc
dTA2NDhcdTA2MzEgXHUwNjg4XHUwNjI3XHUwNjI0XHUwNjQ2IFx1MDY0NFx1MDY0
OFx1MDY4OCBcdTA2YTlcdTA2MzFcdTA2Y2NcdTA2YmEiLAppbmNvcnJlY3RfdHJ5
X2FnYWluOiJcdTA2M2FcdTA2NDRcdTA2MzdcdTA2ZDQgXHUwNjJmXHUwNjQ4XHUw
NjI4XHUwNjI3XHUwNjMxXHUwNmMxIFx1MDZhOVx1MDY0OFx1MDYzNFx1MDYzNCBc
dTA2YTlcdTA2MzFcdTA2Y2NcdTA2YmFcdTA2ZDQiLGltYWdlX2FsdF90ZXh0OiJy
ZUNBUFRDSEEgXHUwNjg2XHUwNmNjXHUwNjQ0XHUwNjQ2XHUwNjJjIFx1MDY0OFx1
MDYyN1x1MDY0NFx1MDZjYyBcdTA2MzRcdTA2MjhcdTA2Y2NcdTA2YzEifSxSZWNh
cHRjaGFTdHJfdmk9e3Zpc3VhbF9jaGFsbGVuZ2U6Ik5oXHUxZWFkbiB0aFx1MWVl
ZCB0aFx1MDBlMWNoIGhcdTAwZWNuaCBcdTFlYTNuaCIsYXVkaW9fY2hhbGxlbmdl
OiJOaFx1MWVhZG4gdGhcdTFlZWQgdGhcdTAwZTFjaCBcdTAwZTJtIHRoYW5oIixy
ZWZyZXNoX2J0bjoiTmhcdTFlYWRuIHRoXHUxZWVkIHRoXHUwMGUxY2ggbVx1MWVk
YmkiLGluc3RydWN0aW9uc192aXN1YWw6Ik5oXHUxZWFkcCBoYWkgdFx1MWVlYjoi
LGluc3RydWN0aW9uc19jb250ZXh0OiJOaFx1MWVhZHAgY1x1MDBlMWMgdFx1MWVl
YiB0cm9uZyBjXHUwMGUxYyBcdTAwZjQ6IiwKaW5zdHJ1Y3Rpb25zX2F1ZGlvOiJO
aFx1MWVhZHAgblx1MWVkOWkgZHVuZyBiXHUxZWExbiBuZ2hlIHRoXHUxZWE1eToi
LGhlbHBfYnRuOiJUclx1MWVlMyBnaVx1MDBmYXAiLHBsYXlfYWdhaW46IlBoXHUw
MGUxdCBsXHUxZWExaSBcdTAwZTJtIHRoYW5oIixjYW50X2hlYXJfdGhpczoiVFx1
MWVhM2kgXHUwMGUybSB0aGFuaCB4dVx1MWVkMW5nIGRcdTAxYjBcdTFlZGJpIGRc
dTFlYTFuZyBNUDMiLGluY29ycmVjdF90cnlfYWdhaW46IktoXHUwMGY0bmcgY2hc
dTAwZWRuaCB4XHUwMGUxYy4gSFx1MDBlM3kgdGhcdTFlZWQgbFx1MWVhMWkuIixp
bWFnZV9hbHRfdGV4dDoiSFx1MDBlY25oIHhcdTAwZTFjIHRoXHUxZWYxYyByZUNB
UFRDSEEifSxSZWNhcHRjaGFTdHJfemhfY249e3Zpc3VhbF9jaGFsbGVuZ2U6Ilx1
NjUzNlx1NTIzMFx1NGUwMFx1NGUyYVx1ODljNlx1OTg5MVx1OTA4MFx1OGJmNyIs
YXVkaW9fY2hhbGxlbmdlOiJcdTYzNjJcdTRlMDBcdTdlYzRcdTk3ZjNcdTk4OTFc
dTlhOGNcdThiYzFcdTc4MDEiLApyZWZyZXNoX2J0bjoiXHU2MzYyXHU0ZTAwXHU3
ZWM0XHU5YThjXHU4YmMxXHU3ODAxIixpbnN0cnVjdGlvbnNfdmlzdWFsOiJcdThi
ZjdcdTk1MmVcdTUxNjVcdThmZDlcdTRlMjRcdTRlMmFcdThiY2RcdWZmMWEiLGlu
c3RydWN0aW9uc19jb250ZXh0OiJcdTk1MmVcdTUxNjVcdTY4NDZcdTRlMmRcdTY2
M2VcdTc5M2FcdTc2ODRcdTViNTdcdThiY2RcdWZmMWEiLGluc3RydWN0aW9uc19h
dWRpbzoiXHU4YmY3XHU5NTJlXHU1MTY1XHU2MGE4XHU1NDJjXHU1MjMwXHU3Njg0
XHU1MTg1XHU1YmI5XHVmZjFhIixoZWxwX2J0bjoiXHU1ZTJlXHU1MmE5IixwbGF5
X2FnYWluOiJcdTkxY2RcdTY1YjBcdTY0YWRcdTY1M2UiLGNhbnRfaGVhcl90aGlz
OiJcdTRlZTUgTVAzIFx1NjgzY1x1NWYwZlx1NGUwYlx1OGY3ZFx1NThmMFx1OTdm
MyIsaW5jb3JyZWN0X3RyeV9hZ2FpbjoiXHU0ZTBkXHU2YjYzXHU3ODZlXHVmZjBj
XHU4YmY3XHU5MWNkXHU4YmQ1XHUzMDAyIixpbWFnZV9hbHRfdGV4dDoicmVDQVBU
Q0hBIFx1OWE4Y1x1OGJjMVx1NTZmZVx1NzI0NyJ9LApSZWNhcHRjaGFTdHJfemhf
aGs9e3Zpc3VhbF9jaGFsbGVuZ2U6Ilx1NTZkZVx1N2I1NFx1NTcxNlx1NTBjZlx1
OWE1N1x1OGI0OVx1NTU0Zlx1OTg0YyIsYXVkaW9fY2hhbGxlbmdlOiJcdTUzZDZc
dTVmOTdcdThhOWVcdTk3ZjNcdTlhNTdcdThiNDlcdTU1NGZcdTk4NGMiLHJlZnJl
c2hfYnRuOiJcdTYzZGJcdTRlMDBcdTUwMGJcdTlhNTdcdThiNDlcdTU1NGZcdTk4
NGMiLGluc3RydWN0aW9uc192aXN1YWw6Ilx1OGFjYlx1OGYzOFx1NTE2NVx1OTAx
OVx1NTE2OVx1NTAwYlx1NWI1N1x1ZmYxYSIsaW5zdHJ1Y3Rpb25zX2NvbnRleHQ6
Ilx1NTcyOFx1Njg0Nlx1NTE2N1x1OGYzOFx1NTE2NVx1NWI1N1x1OGE1ZVx1ZmYx
YSIsaW5zdHJ1Y3Rpb25zX2F1ZGlvOiJcdTkzNzVcdTUxNjVcdTYwYThcdTYyNDBc
dTgwN2RcdTUyMzBcdTc2ODRcdWZmMWEiLGhlbHBfYnRuOiJcdThhYWFcdTY2MGUi
LHBsYXlfYWdhaW46Ilx1NTE4ZFx1NmIyMVx1NjRhZFx1NjUzZVx1ODA3Mlx1OTdm
MyIsY2FudF9oZWFyX3RoaXM6Ilx1NWMwN1x1ODA3Mlx1OTdmM1x1NGUwYlx1OGYw
OVx1NzBiYSBNUDMiLAppbmNvcnJlY3RfdHJ5X2FnYWluOiJcdTRlMGRcdTZiNjNc
dTc4YmFcdWZmMGNcdTUxOGRcdThhNjZcdTRlMDBcdTZiMjFcdTMwMDIiLGltYWdl
X2FsdF90ZXh0OiJyZUNBUFRDSEEgXHU5YTU3XHU4YjQ5XHU2NTg3XHU1YjU3XHU1
NzE2XHU3MjQ3In0sUmVjYXB0Y2hhU3RyX3poX3R3PXt2aXN1YWxfY2hhbGxlbmdl
OiJcdTUzZDZcdTVmOTdcdTU3MTZcdTcyNDdcdTlhNTdcdThiNDlcdTU1NGZcdTk4
NGMiLGF1ZGlvX2NoYWxsZW5nZToiXHU1M2Q2XHU1Zjk3XHU4YTllXHU5N2YzXHU5
YTU3XHU4YjQ5XHU1NTRmXHU5ODRjIixyZWZyZXNoX2J0bjoiXHU1M2Q2XHU1Zjk3
XHU2NWIwXHU3Njg0XHU5YTU3XHU4YjQ5XHU1NTRmXHU5ODRjIixpbnN0cnVjdGlv
bnNfdmlzdWFsOiJcdThhY2JcdThmMzhcdTUxNjVcdTRlMGJcdTU3MTZcdTRlMmRc
dTc2ODRcdTUxNjlcdTUwMGJcdTViNTdcdWZmMWEiLGluc3RydWN0aW9uc19jb250
ZXh0OiJcdThhY2JcdThmMzhcdTUxNjVcdTY1YjlcdTU4NGFcdTRlMmRcdTc2ODRc
dTY1ODdcdTViNTdcdWZmMWEiLAppbnN0cnVjdGlvbnNfYXVkaW86Ilx1OGFjYlx1
OGYzOFx1NTE2NVx1OGE5ZVx1OTdmM1x1NTE2N1x1NWJiOVx1ZmYxYSIsaGVscF9i
dG46Ilx1OGFhYVx1NjYwZSIscGxheV9hZ2FpbjoiXHU1MThkXHU2YjIxXHU2NGFk
XHU2NTNlIixjYW50X2hlYXJfdGhpczoiXHU0ZWU1IE1QMyBcdTY4M2NcdTVmMGZc
dTRlMGJcdThmMDlcdTgwNzJcdTk3ZjMiLGluY29ycmVjdF90cnlfYWdhaW46Ilx1
OWE1N1x1OGI0OVx1NzhiY1x1NjcwOVx1OGFhNFx1ZmYwY1x1OGFjYlx1NTE4ZFx1
OGE2Nlx1NGUwMFx1NmIyMVx1MzAwMiIsaW1hZ2VfYWx0X3RleHQ6InJlQ0FQVENI
QSBcdTlhNTdcdThiNDlcdTY1ODdcdTViNTdcdTU3MTZcdTcyNDcifSxSZWNhcHRj
aGFTdHJfenU9e3Zpc3VhbF9jaGFsbGVuZ2U6IlRob2xhIGluc2VsZWxvIGVib25h
a2FsYXlvIixhdWRpb19jaGFsbGVuZ2U6IlRob2xhIGluc2VsZWxvIHlva3VsYWxl
bHdheW8iLHJlZnJlc2hfYnRuOiJUaG9sYSBpbnNlbGVsbyBlbnRzaGEiLAppbnN0
cnVjdGlvbnNfdmlzdWFsOiJCaGFsYSBsYXdhIG1hZ2FtYSBhbWFiaWxpOiIsaW5z
dHJ1Y3Rpb25zX2NvbnRleHQ6IkJoYWxhIGFtYWdhbWEgYXNlbWFiaG9raXNpbmk6
IixpbnN0cnVjdGlvbnNfYXVkaW86IkJoYWxhIG9rdXp3YXlvOiIsaGVscF9idG46
IlVzaXpvIixwbGF5X2FnYWluOiJQaGluZGEgdWRsYWxlIG9rdWxhbGVsd2F5byBm
dXRoaSIsY2FudF9oZWFyX3RoaXM6IkxheWlzaGEgdW1zaW5kbyBuamVuZ2UtTVAz
IixpbmNvcnJlY3RfdHJ5X2FnYWluOiJBa3VsdW5naWxlLiBaYW1hIGZ1dGhpLiIs
aW1hZ2VfYWx0X3RleHQ6InVtZmFuZWtpc28gb3lpbnNlbGVsbyB3ZS1yZUNBUFRD
SEEifSxSZWNhcHRjaGFMYW5nTWFwPXtlbjpSZWNhcHRjaGFTdHJfZW4sYWY6UmVj
YXB0Y2hhU3RyX2FmLGFtOlJlY2FwdGNoYVN0cl9hbSxhcjpSZWNhcHRjaGFTdHJf
YXIsImFyLUVHIjpSZWNhcHRjaGFTdHJfYXIsYmc6UmVjYXB0Y2hhU3RyX2JnLGJu
OlJlY2FwdGNoYVN0cl9ibiwKY2E6UmVjYXB0Y2hhU3RyX2NhLGNzOlJlY2FwdGNo
YVN0cl9jcyxkYTpSZWNhcHRjaGFTdHJfZGEsZGU6UmVjYXB0Y2hhU3RyX2RlLGVs
OlJlY2FwdGNoYVN0cl9lbCwiZW4tR0IiOlJlY2FwdGNoYVN0cl9lbiwiZW4tVVMi
OlJlY2FwdGNoYVN0cl9lbixlczpSZWNhcHRjaGFTdHJfZXMsImVzLTQxOSI6UmVj
YXB0Y2hhU3RyX2VzXzQxOSwiZXMtRVMiOlJlY2FwdGNoYVN0cl9lcyxldDpSZWNh
cHRjaGFTdHJfZXQsZXU6UmVjYXB0Y2hhU3RyX2V1LGZhOlJlY2FwdGNoYVN0cl9m
YSxmaTpSZWNhcHRjaGFTdHJfZmksZmlsOlJlY2FwdGNoYVN0cl9maWwsZnI6UmVj
YXB0Y2hhU3RyX2ZyLCJmci1DQSI6UmVjYXB0Y2hhU3RyX2ZyX2NhLCJmci1GUiI6
UmVjYXB0Y2hhU3RyX2ZyLGdsOlJlY2FwdGNoYVN0cl9nbCxndTpSZWNhcHRjaGFT
dHJfZ3UsaGk6UmVjYXB0Y2hhU3RyX2hpLGhyOlJlY2FwdGNoYVN0cl9ocixodTpS
ZWNhcHRjaGFTdHJfaHUsaHk6UmVjYXB0Y2hhU3RyX2h5LGlkOlJlY2FwdGNoYVN0
cl9pZCwKaXM6UmVjYXB0Y2hhU3RyX2lzLGl0OlJlY2FwdGNoYVN0cl9pdCxpdzpS
ZWNhcHRjaGFTdHJfaXcsamE6UmVjYXB0Y2hhU3RyX2phLGtuOlJlY2FwdGNoYVN0
cl9rbixrbzpSZWNhcHRjaGFTdHJfa28sbG46UmVjYXB0Y2hhU3RyX2ZyLGx0OlJl
Y2FwdGNoYVN0cl9sdCxsdjpSZWNhcHRjaGFTdHJfbHYsbWw6UmVjYXB0Y2hhU3Ry
X21sLG1yOlJlY2FwdGNoYVN0cl9tcixtczpSZWNhcHRjaGFTdHJfbXMsbmw6UmVj
YXB0Y2hhU3RyX25sLG5vOlJlY2FwdGNoYVN0cl9ubyxwbDpSZWNhcHRjaGFTdHJf
cGwscHQ6UmVjYXB0Y2hhU3RyX3B0LCJwdC1CUiI6UmVjYXB0Y2hhU3RyX3B0LCJw
dC1QVCI6UmVjYXB0Y2hhU3RyX3B0X3B0LHJvOlJlY2FwdGNoYVN0cl9ybyxydTpS
ZWNhcHRjaGFTdHJfcnUsc2s6UmVjYXB0Y2hhU3RyX3NrLHNsOlJlY2FwdGNoYVN0
cl9zbCxzcjpSZWNhcHRjaGFTdHJfc3Isc3Y6UmVjYXB0Y2hhU3RyX3N2LHN3OlJl
Y2FwdGNoYVN0cl9zdyx0YTpSZWNhcHRjaGFTdHJfdGEsCnRlOlJlY2FwdGNoYVN0
cl90ZSx0aDpSZWNhcHRjaGFTdHJfdGgsdHI6UmVjYXB0Y2hhU3RyX3RyLHVrOlJl
Y2FwdGNoYVN0cl91ayx1cjpSZWNhcHRjaGFTdHJfdXIsdmk6UmVjYXB0Y2hhU3Ry
X3ZpLCJ6aC1DTiI6UmVjYXB0Y2hhU3RyX3poX2NuLCJ6aC1ISyI6UmVjYXB0Y2hh
U3RyX3poX2hrLCJ6aC1UVyI6UmVjYXB0Y2hhU3RyX3poX3R3LHp1OlJlY2FwdGNo
YVN0cl96dSx0bDpSZWNhcHRjaGFTdHJfZmlsLGhlOlJlY2FwdGNoYVN0cl9pdywi
aW4iOlJlY2FwdGNoYVN0cl9pZCxtbzpSZWNhcHRjaGFTdHJfcm8semg6UmVjYXB0
Y2hhU3RyX3poX2NufTt2YXIgUmVjYXB0Y2hhU3RyPVJlY2FwdGNoYVN0cl9lbixS
ZWNhcHRjaGFPcHRpb25zLFJlY2FwdGNoYURlZmF1bHRPcHRpb25zPXt0YWJpbmRl
eDowLHRoZW1lOiJyZWQiLGNhbGxiYWNrOm51bGwsbGFuZzpudWxsLGN1c3RvbV90
aGVtZV93aWRnZXQ6bnVsbCxjdXN0b21fdHJhbnNsYXRpb25zOm51bGwsaW5jbHVk
ZUNvbnRleHQ6ITF9LFJlY2FwdGNoYT17d2lkZ2V0Om51bGwsdGltZXJfaWQ6LTEs
c3R5bGVfc2V0OiExLHRoZW1lOm51bGwsdHlwZToiaW1hZ2UiLGFqYXhfdmVyaWZ5
X2NiOm51bGwsJDpmdW5jdGlvbihhKXtyZXR1cm4ic3RyaW5nIj09dHlwZW9mIGE/
ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYSk6YX0sY3JlYXRlOmZ1bmN0aW9uKGEs
YixjKXtSZWNhcHRjaGEuZGVzdHJveSgpO2ImJihSZWNhcHRjaGEud2lkZ2V0PVJl
Y2FwdGNoYS4kKGIpKTtSZWNhcHRjaGEuX2luaXRfb3B0aW9ucyhjKTtSZWNhcHRj
aGEuX2NhbGxfY2hhbGxlbmdlKGEpfSxkZXN0cm95OmZ1bmN0aW9uKCl7dmFyIGE9
ClJlY2FwdGNoYS4kKCJyZWNhcHRjaGFfY2hhbGxlbmdlX2ZpZWxkIik7YSYmYS5w
YXJlbnROb2RlLnJlbW92ZUNoaWxkKGEpOy0xIT1SZWNhcHRjaGEudGltZXJfaWQm
JmNsZWFySW50ZXJ2YWwoUmVjYXB0Y2hhLnRpbWVyX2lkKTtSZWNhcHRjaGEudGlt
ZXJfaWQ9LTE7aWYoYT1SZWNhcHRjaGEuJCgicmVjYXB0Y2hhX2ltYWdlIikpYS5p
bm5lckhUTUw9IiI7UmVjYXB0Y2hhLndpZGdldCYmKCJjdXN0b20iIT1SZWNhcHRj
aGEudGhlbWU/UmVjYXB0Y2hhLndpZGdldC5pbm5lckhUTUw9IiI6UmVjYXB0Y2hh
LndpZGdldC5zdHlsZS5kaXNwbGF5PSJub25lIixSZWNhcHRjaGEud2lkZ2V0PW51
bGwpfSxmb2N1c19yZXNwb25zZV9maWVsZDpmdW5jdGlvbigpe3ZhciBhPVJlY2Fw
dGNoYS4kKCJyZWNhcHRjaGFfcmVzcG9uc2VfZmllbGQiKTthLmZvY3VzKCl9LGdl
dF9jaGFsbGVuZ2U6ZnVuY3Rpb24oKXtyZXR1cm4idW5kZWZpbmVkIj09dHlwZW9m
IFJlY2FwdGNoYVN0YXRlP251bGw6UmVjYXB0Y2hhU3RhdGUuY2hhbGxlbmdlfSwK
Z2V0X3Jlc3BvbnNlOmZ1bmN0aW9uKCl7dmFyIGE9UmVjYXB0Y2hhLiQoInJlY2Fw
dGNoYV9yZXNwb25zZV9maWVsZCIpO3JldHVybiFhP251bGw6YS52YWx1ZX0sYWph
eF92ZXJpZnk6ZnVuY3Rpb24oYSl7UmVjYXB0Y2hhLmFqYXhfdmVyaWZ5X2NiPWE7
YT1SZWNhcHRjaGEuZ2V0X2NoYWxsZW5nZSgpfHwiIjt2YXIgYj1SZWNhcHRjaGEu
Z2V0X3Jlc3BvbnNlKCl8fCIiO2E9UmVjYXB0Y2hhLl9nZXRfYXBpX3NlcnZlcigp
KyIvYWpheHZlcmlmeT9jPSIrZW5jb2RlVVJJQ29tcG9uZW50KGEpKyImcmVzcG9u
c2U9IitlbmNvZGVVUklDb21wb25lbnQoYik7UmVjYXB0Y2hhLl9hZGRfc2NyaXB0
KGEpfSxfYWpheF92ZXJpZnlfY2FsbGJhY2s6ZnVuY3Rpb24oYSl7UmVjYXB0Y2hh
LmFqYXhfdmVyaWZ5X2NiKGEpfSxfZ2V0X2FwaV9zZXJ2ZXI6ZnVuY3Rpb24oKXt2
YXIgYT13aW5kb3cubG9jYXRpb24ucHJvdG9jb2wsYjtpZigidW5kZWZpbmVkIiE9
dHlwZW9mIF9SZWNhcHRjaGFPdmVycmlkZUFwaVNlcnZlciliPQpfUmVjYXB0Y2hh
T3ZlcnJpZGVBcGlTZXJ2ZXI7ZWxzZXtpZigidW5kZWZpbmVkIiE9dHlwZW9mIFJl
Y2FwdGNoYVN0YXRlJiYic3RyaW5nIj09dHlwZW9mIFJlY2FwdGNoYVN0YXRlLnNl
cnZlciYmMDxSZWNhcHRjaGFTdGF0ZS5zZXJ2ZXIubGVuZ3RoKXJldHVybiBSZWNh
cHRjaGFTdGF0ZS5zZXJ2ZXIucmVwbGFjZSgvXC8rJC8sIiIpO2I9Ind3dy5nb29n
bGUuY29tL3JlY2FwdGNoYS9hcGkifXJldHVybiBhKyIvLyIrYn0sX2NhbGxfY2hh
bGxlbmdlOmZ1bmN0aW9uKGEpe2E9UmVjYXB0Y2hhLl9nZXRfYXBpX3NlcnZlcigp
KyIvY2hhbGxlbmdlP2s9IithKyImYWpheD0xJmNhY2hlc3RvcD0iK01hdGgucmFu
ZG9tKCk7UmVjYXB0Y2hhLmdldExhbmdfKCkmJihhKz0iJmxhbmc9IitSZWNhcHRj
aGEuZ2V0TGFuZ18oKSk7InVuZGVmaW5lZCIhPXR5cGVvZiBSZWNhcHRjaGFPcHRp
b25zLmV4dHJhX2NoYWxsZW5nZV9wYXJhbXMmJihhKz0iJiIrUmVjYXB0Y2hhT3B0
aW9ucy5leHRyYV9jaGFsbGVuZ2VfcGFyYW1zKTsKUmVjYXB0Y2hhT3B0aW9ucy5p
bmNsdWRlQ29udGV4dCYmKGErPSImaW5jbHVkZUNvbnRleHQ9MSIpO1JlY2FwdGNo
YS5fYWRkX3NjcmlwdChhKX0sX2FkZF9zY3JpcHQ6ZnVuY3Rpb24oYSl7dmFyIGI9
ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7Yi50eXBlPSJ0ZXh0L2ph
dmFzY3JpcHQiO2Iuc3JjPWE7UmVjYXB0Y2hhLl9nZXRfc2NyaXB0X2FyZWEoKS5h
cHBlbmRDaGlsZChiKX0sX2dldF9zY3JpcHRfYXJlYTpmdW5jdGlvbigpe3ZhciBh
PWRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJoZWFkIik7cmV0dXJuIGE9
IWF8fDE+YS5sZW5ndGg/ZG9jdW1lbnQuYm9keTphWzBdfSxfaGFzaF9tZXJnZTpm
dW5jdGlvbihhKXtmb3IodmFyIGI9e30sYz0wO2M8YS5sZW5ndGg7YysrKWZvcih2
YXIgZCBpbiBhW2NdKWJbZF09YVtjXVtkXTsiY29udGV4dCI9PWIudGhlbWUmJihi
LmluY2x1ZGVDb250ZXh0PSEwKTtyZXR1cm4gYn0sX2luaXRfb3B0aW9uczpmdW5j
dGlvbihhKXthPQphfHx7fTtSZWNhcHRjaGFPcHRpb25zPVJlY2FwdGNoYS5faGFz
aF9tZXJnZShbUmVjYXB0Y2hhRGVmYXVsdE9wdGlvbnMsYV0pfSxjaGFsbGVuZ2Vf
Y2FsbGJhY2s6ZnVuY3Rpb24oKXt2YXIgYT1SZWNhcHRjaGEud2lkZ2V0O1JlY2Fw
dGNoYS5fcmVzZXRfdGltZXIoKTtSZWNhcHRjaGFTdHI9UmVjYXB0Y2hhLl9oYXNo
X21lcmdlKFtSZWNhcHRjaGFTdHJfZW4sUmVjYXB0Y2hhTGFuZ01hcFtSZWNhcHRj
aGEuZ2V0TGFuZ18oKV18fHt9LFJlY2FwdGNoYU9wdGlvbnMuY3VzdG9tX3RyYW5z
bGF0aW9uc3x8e31dKTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciYmd2luZG93LmFk
ZEV2ZW50TGlzdGVuZXIoInVubG9hZCIsZnVuY3Rpb24oYSl7UmVjYXB0Y2hhLmRl
c3Ryb3koKX0sITEpO1JlY2FwdGNoYS5faXNfaWUoKSYmd2luZG93LmF0dGFjaEV2
ZW50JiZ3aW5kb3cuYXR0YWNoRXZlbnQoIm9uYmVmb3JldW5sb2FkIixmdW5jdGlv
bigpe30pO2lmKDA8bmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCJLSFRNTCIp
KXthPQpkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpZnJhbWUiKTthLnNyYz0iYWJv
dXQ6YmxhbmsiO2Euc3R5bGUuaGVpZ2h0PSIwcHgiO2Euc3R5bGUud2lkdGg9IjBw
eCI7YS5zdHlsZS52aXNpYmlsaXR5PSJoaWRkZW4iO2Euc3R5bGUuYm9yZGVyPSJu
b25lIjt2YXIgYj1kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiVGhpcyBmcmFtZSBw
cmV2ZW50cyBiYWNrL2ZvcndhcmQgY2FjaGUgcHJvYmxlbXMgaW4gU2FmYXJpLiIp
O2EuYXBwZW5kQ2hpbGQoYik7ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhKX1S
ZWNhcHRjaGEuX2ZpbmlzaF93aWRnZXQoKX0sX2FkZF9jc3M6ZnVuY3Rpb24oYSl7
aWYoLTEhPW5hdmlnYXRvci5hcHBWZXJzaW9uLmluZGV4T2YoIk1TSUUgNSIpKWRv
Y3VtZW50LndyaXRlKCc8c3R5bGUgdHlwZT0idGV4dC9jc3MiPicrYSsiPC9zdHls
ZT4iKTtlbHNle3ZhciBiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInN0eWxlIik7
Yi50eXBlPSJ0ZXh0L2NzcyI7Yi5zdHlsZVNoZWV0PwpiLnN0eWxlU2hlZXQuY3Nz
VGV4dD1hOihhPWRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGEpLGIuYXBwZW5kQ2hp
bGQoYSkpO1JlY2FwdGNoYS5fZ2V0X3NjcmlwdF9hcmVhKCkuYXBwZW5kQ2hpbGQo
Yil9fSxfc2V0X3N0eWxlOmZ1bmN0aW9uKGEpe1JlY2FwdGNoYS5zdHlsZV9zZXR8
fChSZWNhcHRjaGEuc3R5bGVfc2V0PSEwLFJlY2FwdGNoYS5fYWRkX2NzcyhhKyJc
blxuLnJlY2FwdGNoYV9pc19zaG93aW5nX2F1ZGlvIC5yZWNhcHRjaGFfb25seV9p
Zl9pbWFnZSwucmVjYXB0Y2hhX2lzbm90X3Nob3dpbmdfYXVkaW8gLnJlY2FwdGNo
YV9vbmx5X2lmX2F1ZGlvLC5yZWNhcHRjaGFfaGFkX2luY29ycmVjdF9zb2wgLnJl
Y2FwdGNoYV9vbmx5X2lmX25vX2luY29ycmVjdF9zb2wsLnJlY2FwdGNoYV9ub3Ro
YWRfaW5jb3JyZWN0X3NvbCAucmVjYXB0Y2hhX29ubHlfaWZfaW5jb3JyZWN0X3Nv
bHtkaXNwbGF5Om5vbmUgIWltcG9ydGFudH0iKSl9LF9pbml0X2J1aWx0aW5fdGhl
bWU6ZnVuY3Rpb24oKXt2YXIgYT0KUmVjYXB0Y2hhLiQsYj1SZWNhcHRjaGEuX2dl
dF9hcGlfc2VydmVyKCksYz1iLmxlbmd0aC0xOyIvIj09YltjXSYmKGI9Yi5zdWJz
dHJpbmcoMCxjKSk7dmFyIGM9UmVjYXB0Y2hhVGVtcGxhdGVzLlZlcnRDc3MsZD1S
ZWNhcHRjaGFUZW1wbGF0ZXMuVmVydEh0bWwsZT1iKyIvaW1nLyIrUmVjYXB0Y2hh
LnRoZW1lLGY9ImdpZiIsYj1SZWNhcHRjaGEudGhlbWU7ImNsZWFuIj09YiYmKGM9
UmVjYXB0Y2hhVGVtcGxhdGVzLkNsZWFuQ3NzLGQ9UmVjYXB0Y2hhVGVtcGxhdGVz
LkNsZWFuSHRtbCxmPSJwbmciKTsiY29udGV4dCI9PWImJihkPVJlY2FwdGNoYVRl
bXBsYXRlcy5Db250ZXh0SHRtbCk7Yz1jLnJlcGxhY2UoL0lNR1JPT1QvZyxlKTtS
ZWNhcHRjaGEuX3NldF9zdHlsZShjKTtSZWNhcHRjaGEud2lkZ2V0LmlubmVySFRN
TD0nPGRpdiBpZD0icmVjYXB0Y2hhX2FyZWEiPicrZCsiPC9kaXY+IjtjPWZ1bmN0
aW9uKGIsYyxkLGgpe3ZhciBnPWEoYisiX2J0biIpO2I9YShiKTtiLnNyYz0KZSsi
LyIrYysiLiIrZjtjPVJlY2FwdGNoYVN0cltkXTtiLmFsdD1jO2cudGl0bGU9Yztn
LmhyZWY9aH07YygicmVjYXB0Y2hhX3JlbG9hZCIsInJlZnJlc2giLCJyZWZyZXNo
X2J0biIsImphdmFzY3JpcHQ6UmVjYXB0Y2hhLnJlbG9hZCgpOyIpO2MoInJlY2Fw
dGNoYV9zd2l0Y2hfYXVkaW8iLCJhdWRpbyIsImF1ZGlvX2NoYWxsZW5nZSIsImph
dmFzY3JpcHQ6UmVjYXB0Y2hhLnN3aXRjaF90eXBlKCdhdWRpbycpOyIpO2MoInJl
Y2FwdGNoYV9zd2l0Y2hfaW1nIiwidGV4dCIsInZpc3VhbF9jaGFsbGVuZ2UiLCJq
YXZhc2NyaXB0OlJlY2FwdGNoYS5zd2l0Y2hfdHlwZSgnaW1hZ2UnKTsiKTtjKCJy
ZWNhcHRjaGFfd2hhdHN0aGlzIiwiaGVscCIsImhlbHBfYnRuIixSZWNhcHRjaGEu
X2dldF9oZWxwX2xpbmsoKSk7YSgicmVjYXB0Y2hhX3doYXRzdGhpc19idG4iKS50
YXJnZXQ9Il9ibGFuayI7YSgicmVjYXB0Y2hhX3doYXRzdGhpc19idG4iKS5vbmNs
aWNrPWZ1bmN0aW9uKCl7UmVjYXB0Y2hhLnNob3doZWxwKCk7CnJldHVybiExfTsi
Y2xlYW4iPT1iJiYoYSgicmVjYXB0Y2hhX2xvZ28iKS5zcmM9ZSsiL2xvZ28uIitm
LGEoInJlY2FwdGNoYV90YWdsaW5lIikuc3JjPWUrIi90YWdsaW5lLiIrZik7YSgi
cmVjYXB0Y2hhX3RhYmxlIikuY2xhc3NOYW1lPSJyZWNhcHRjaGF0YWJsZSByZWNh
cHRjaGFfdGhlbWVfIitSZWNhcHRjaGEudGhlbWU7Yj1mdW5jdGlvbihiLGMpe3Zh
ciBkPWEoYik7ZCYmKFJlY2FwdGNoYVN0YXRlLnJ0bCYmInNwYW4iPT1kLnRhZ05h
bWUudG9Mb3dlckNhc2UoKSYmKGQuZGlyPSJydGwiKSxkLmFwcGVuZENoaWxkKGRv
Y3VtZW50LmNyZWF0ZVRleHROb2RlKFJlY2FwdGNoYVN0cltjXSkpKX07YigicmVj
YXB0Y2hhX2luc3RydWN0aW9uc19pbWFnZSIsImluc3RydWN0aW9uc192aXN1YWwi
KTtiKCJyZWNhcHRjaGFfaW5zdHJ1Y3Rpb25zX2NvbnRleHQiLCJpbnN0cnVjdGlv
bnNfY29udGV4dCIpO2IoInJlY2FwdGNoYV9pbnN0cnVjdGlvbnNfYXVkaW8iLCJp
bnN0cnVjdGlvbnNfYXVkaW8iKTsKYigicmVjYXB0Y2hhX2luc3RydWN0aW9uc19l
cnJvciIsImluY29ycmVjdF90cnlfYWdhaW4iKX0sX2ZpbmlzaF93aWRnZXQ6ZnVu
Y3Rpb24oKXt2YXIgYT1SZWNhcHRjaGEuJCxiPVJlY2FwdGNoYU9wdGlvbnMsYz1i
LnRoZW1lLGQ9e2JsYWNrZ2xhc3M6MSxjbGVhbjoxLGNvbnRleHQ6MSxjdXN0b206
MSxyZWQ6MSx3aGl0ZToxfTtjIGluIGR8fChjPSJyZWQiKTtSZWNhcHRjaGEudGhl
bWV8fChSZWNhcHRjaGEudGhlbWU9Yyk7ImN1c3RvbSIhPVJlY2FwdGNoYS50aGVt
ZT9SZWNhcHRjaGEuX2luaXRfYnVpbHRpbl90aGVtZSgpOlJlY2FwdGNoYS5fc2V0
X3N0eWxlKCIiKTtjPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNwYW4iKTtjLmlk
PSJyZWNhcHRjaGFfY2hhbGxlbmdlX2ZpZWxkX2hvbGRlciI7Yy5zdHlsZS5kaXNw
bGF5PSJub25lIjthKCJyZWNhcHRjaGFfcmVzcG9uc2VfZmllbGQiKS5wYXJlbnRO
b2RlLmluc2VydEJlZm9yZShjLGEoInJlY2FwdGNoYV9yZXNwb25zZV9maWVsZCIp
KTsKYSgicmVjYXB0Y2hhX3Jlc3BvbnNlX2ZpZWxkIikuc2V0QXR0cmlidXRlKCJh
dXRvY29tcGxldGUiLCJvZmYiKTthKCJyZWNhcHRjaGFfaW1hZ2UiKS5zdHlsZS53
aWR0aD0iMzAwcHgiO2EoInJlY2FwdGNoYV9pbWFnZSIpLnN0eWxlLmhlaWdodD0i
NTdweCI7UmVjYXB0Y2hhLnNob3VsZF9mb2N1cz0hMTtSZWNhcHRjaGEuX3NldF9j
aGFsbGVuZ2UoUmVjYXB0Y2hhU3RhdGUuY2hhbGxlbmdlLCJpbWFnZSIpO1JlY2Fw
dGNoYS51cGRhdGVUYWJJbmRleGVzXygpO1JlY2FwdGNoYS53aWRnZXQmJihSZWNh
cHRjaGEud2lkZ2V0LnN0eWxlLmRpc3BsYXk9IiIpO2IuY2FsbGJhY2smJmIuY2Fs
bGJhY2soKX0sdXBkYXRlVGFiSW5kZXhlc186ZnVuY3Rpb24oKXt2YXIgYT1SZWNh
cHRjaGEuJCxiPVJlY2FwdGNoYU9wdGlvbnM7Yi50YWJpbmRleCYmKGI9Yi50YWJp
bmRleCxhKCJyZWNhcHRjaGFfcmVzcG9uc2VfZmllbGQiKS50YWJJbmRleD1iKyss
ImF1ZGlvIj09UmVjYXB0Y2hhLnR5cGUmJgphKCJyZWNhcHRjaGFfYXVkaW9fcGxh
eV9hZ2FpbiIpJiYoYSgicmVjYXB0Y2hhX2F1ZGlvX3BsYXlfYWdhaW4iKS50YWJJ
bmRleD1iKyssYSgicmVjYXB0Y2hhX2F1ZGlvX2Rvd25sb2FkIiksYSgicmVjYXB0
Y2hhX2F1ZGlvX2Rvd25sb2FkIikudGFiSW5kZXg9YisrKSwiY3VzdG9tIiE9UmVj
YXB0Y2hhLnRoZW1lJiYoYSgicmVjYXB0Y2hhX3JlbG9hZF9idG4iKS50YWJJbmRl
eD1iKyssYSgicmVjYXB0Y2hhX3N3aXRjaF9hdWRpb19idG4iKS50YWJJbmRleD1i
KyssYSgicmVjYXB0Y2hhX3N3aXRjaF9pbWdfYnRuIikudGFiSW5kZXg9YisrLGEo
InJlY2FwdGNoYV93aGF0c3RoaXNfYnRuIikudGFiSW5kZXg9YikpfSxzd2l0Y2hf
dHlwZTpmdW5jdGlvbihhKXtSZWNhcHRjaGEudHlwZT1hO1JlY2FwdGNoYS5yZWxv
YWQoImF1ZGlvIj09UmVjYXB0Y2hhLnR5cGU/ImEiOiJ2Iil9LHJlbG9hZDpmdW5j
dGlvbihhKXt2YXIgYj1SZWNhcHRjaGFPcHRpb25zLGM9UmVjYXB0Y2hhU3RhdGU7
CiJ1bmRlZmluZWQiPT10eXBlb2YgYSYmKGE9InIiKTtjPVJlY2FwdGNoYS5fZ2V0
X2FwaV9zZXJ2ZXIoKSsiL3JlbG9hZD9jPSIrYy5jaGFsbGVuZ2UrIiZrPSIrYy5z
aXRlKyImcmVhc29uPSIrYSsiJnR5cGU9IitSZWNhcHRjaGEudHlwZTtiLmluY2x1
ZGVDb250ZXh0JiYoYys9IiZpbmNsdWRlQ29udGV4dD0xIik7UmVjYXB0Y2hhLmdl
dExhbmdfKCkmJihjKz0iJmxhbmc9IitSZWNhcHRjaGEuZ2V0TGFuZ18oKSk7InVu
ZGVmaW5lZCIhPXR5cGVvZiBiLmV4dHJhX2NoYWxsZW5nZV9wYXJhbXMmJihjKz0i
JiIrYi5leHRyYV9jaGFsbGVuZ2VfcGFyYW1zKTsiYXVkaW8iPT1SZWNhcHRjaGEu
dHlwZSYmKGM9Yi5hdWRpb19iZXRhXzEyXzA4P2MrIiZhdWRpb19iZXRhXzEyXzA4
PTEiOmMrIiZuZXdfYXVkaW9fZGVmYXVsdD0xIik7UmVjYXB0Y2hhLnNob3VsZF9m
b2N1cz0idCIhPWE7UmVjYXB0Y2hhLl9hZGRfc2NyaXB0KGMpfSxmaW5pc2hfcmVs
b2FkOmZ1bmN0aW9uKGEsYil7UmVjYXB0Y2hhU3RhdGUuaXNfaW5jb3JyZWN0PQoh
MTtSZWNhcHRjaGEuX3NldF9jaGFsbGVuZ2UoYSxiKTtSZWNhcHRjaGEudXBkYXRl
VGFiSW5kZXhlc18oKX0sX3NldF9jaGFsbGVuZ2U6ZnVuY3Rpb24oYSxiKXt2YXIg
Yz1SZWNhcHRjaGEuJCxkPVJlY2FwdGNoYVN0YXRlO2QuY2hhbGxlbmdlPWE7UmVj
YXB0Y2hhLnR5cGU9YjtjKCJyZWNhcHRjaGFfY2hhbGxlbmdlX2ZpZWxkX2hvbGRl
ciIpLmlubmVySFRNTD0nPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0icmVjYXB0
Y2hhX2NoYWxsZW5nZV9maWVsZCIgaWQ9InJlY2FwdGNoYV9jaGFsbGVuZ2VfZmll
bGQiIHZhbHVlPSInK2QuY2hhbGxlbmdlKyciLz4nO2lmKCJhdWRpbyI9PWIpYygi
cmVjYXB0Y2hhX2ltYWdlIikuaW5uZXJIVE1MPVJlY2FwdGNoYS5nZXRBdWRpb0Nh
cHRjaGFIdG1sKCk7ZWxzZSBpZigiaW1hZ2UiPT1iKXt2YXIgZT1SZWNhcHRjaGEu
X2dldF9hcGlfc2VydmVyKCkrIi9pbWFnZT9jPSIrZC5jaGFsbGVuZ2U7YygicmVj
YXB0Y2hhX2ltYWdlIikuaW5uZXJIVE1MPQonPGltZyBzdHlsZT0iZGlzcGxheTpi
bG9jazsiIGFsdD0iJytSZWNhcHRjaGFTdHIuaW1hZ2VfYWx0X3RleHQrJyIgaGVp
Z2h0PSI1NyIgd2lkdGg9IjMwMCIgc3JjPSInK2UrJyIgLz4nfVJlY2FwdGNoYS5f
Y3NzX3RvZ2dsZSgicmVjYXB0Y2hhX2hhZF9pbmNvcnJlY3Rfc29sIiwicmVjYXB0
Y2hhX25vdGhhZF9pbmNvcnJlY3Rfc29sIixkLmlzX2luY29ycmVjdCk7UmVjYXB0
Y2hhLl9jc3NfdG9nZ2xlKCJyZWNhcHRjaGFfaXNfc2hvd2luZ19hdWRpbyIsInJl
Y2FwdGNoYV9pc25vdF9zaG93aW5nX2F1ZGlvIiwiYXVkaW8iPT1iKTtSZWNhcHRj
aGEuX2NsZWFyX2lucHV0KCk7UmVjYXB0Y2hhLnNob3VsZF9mb2N1cyYmUmVjYXB0
Y2hhLmZvY3VzX3Jlc3BvbnNlX2ZpZWxkKCk7UmVjYXB0Y2hhLl9yZXNldF90aW1l
cigpfSxfcmVzZXRfdGltZXI6ZnVuY3Rpb24oKXtjbGVhckludGVydmFsKFJlY2Fw
dGNoYS50aW1lcl9pZCk7dmFyIGE9TWF0aC5tYXgoMUUzKihSZWNhcHRjaGFTdGF0
ZS50aW1lb3V0LQo2MCksNkU0KTtSZWNhcHRjaGEudGltZXJfaWQ9c2V0SW50ZXJ2
YWwoJ1JlY2FwdGNoYS5yZWxvYWQoInQiKTsnLGEpO3JldHVybiBhfSxzaG93aGVs
cDpmdW5jdGlvbigpe3dpbmRvdy5vcGVuKFJlY2FwdGNoYS5fZ2V0X2hlbHBfbGlu
aygpLCJyZWNhcHRjaGFfcG9wdXAiLCJ3aWR0aD00NjAsaGVpZ2h0PTU4MCxsb2Nh
dGlvbj1ubyxtZW51YmFyPW5vLHN0YXR1cz1ubyx0b29sYmFyPW5vLHNjcm9sbGJh
cnM9eWVzLHJlc2l6YWJsZT15ZXMiKX0sX2NsZWFyX2lucHV0OmZ1bmN0aW9uKCl7
UmVjYXB0Y2hhLiQoInJlY2FwdGNoYV9yZXNwb25zZV9maWVsZCIpLnZhbHVlPSIi
fSxfZGlzcGxheWVycm9yOmZ1bmN0aW9uKGEpe3ZhciBiPVJlY2FwdGNoYS4kO2Io
InJlY2FwdGNoYV9pbWFnZSIpLmlubmVySFRNTD0iIjtiKCJyZWNhcHRjaGFfaW1h
Z2UiKS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShhKSl9LHJl
bG9hZGVycm9yOmZ1bmN0aW9uKGEpe1JlY2FwdGNoYS5fZGlzcGxheWVycm9yKGEp
fSwKX2lzX2llOmZ1bmN0aW9uKCl7cmV0dXJuIDA8bmF2aWdhdG9yLnVzZXJBZ2Vu
dC5pbmRleE9mKCJNU0lFIikmJiF3aW5kb3cub3BlcmF9LF9jc3NfdG9nZ2xlOmZ1
bmN0aW9uKGEsYixjKXt2YXIgZD1SZWNhcHRjaGEud2lkZ2V0O2R8fChkPWRvY3Vt
ZW50LmJvZHkpO3ZhciBlPWQuY2xhc3NOYW1lLGU9ZS5yZXBsYWNlKFJlZ0V4cCgi
KF58XFxzKykiK2ErIihcXHMrfCQpIiksIiAiKSxlPWUucmVwbGFjZShSZWdFeHAo
IihefFxccyspIitiKyIoXFxzK3wkKSIpLCIgIiksZT1lKygiICIrKGM/YTpiKSk7
ZC5jbGFzc05hbWU9ZX0sX2dldF9oZWxwX2xpbms6ZnVuY3Rpb24oKXt2YXIgYT1S
ZWNhcHRjaGEuX2dldF9hcGlfc2VydmVyKCkucmVwbGFjZSgvXC9bYS16QS1aMC05
XStcLz8kLywiL2hlbHAiKSxhPWErKCI/Yz0iK1JlY2FwdGNoYVN0YXRlLmNoYWxs
ZW5nZSk7UmVjYXB0Y2hhLmdldExhbmdfKCkmJihhKz0iJmhsPSIrUmVjYXB0Y2hh
LmdldExhbmdfKCkpO3JldHVybiBhfSxwbGF5QWdhaW46ZnVuY3Rpb24oKXtSZWNh
cHRjaGEuJCgicmVjYXB0Y2hhX2ltYWdlIikuaW5uZXJIVE1MPQpSZWNhcHRjaGEu
Z2V0QXVkaW9DYXB0Y2hhSHRtbCgpfSxnZXRBdWRpb0NhcHRjaGFIdG1sOmZ1bmN0
aW9uKCl7dmFyIGE9UmVjYXB0Y2hhLl9nZXRfYXBpX3NlcnZlcigpKyIvYXVkaW8u
bXAzP2M9IitSZWNhcHRjaGFTdGF0ZS5jaGFsbGVuZ2U7MD09YS5pbmRleE9mKCJo
dHRwczovLyIpJiYoYT0iaHR0cDovLyIrYS5zdWJzdHJpbmcoOCkpO3ZhciBiPVJl
Y2FwdGNoYS5fZ2V0X2FwaV9zZXJ2ZXIoKSsiL2ltZy9hdWRpb2NhcHRjaGEuc3dm
P3YyIixiPVJlY2FwdGNoYS5faXNfaWUoKT8nPG9iamVjdCBjbGFzc2lkPSJjbHNp
ZDpEMjdDREI2RS1BRTZELTExY2YtOTZCOC00NDQ1NTM1NDAwMDAiIGlkPSJhdWRp
b2NhcHRjaGEiIHdpZHRoPSIwIiBoZWlnaHQ9IjAiIGNvZGViYXNlPSJodHRwczov
L2ZwZG93bmxvYWQubWFjcm9tZWRpYS5jb20vZ2V0L2ZsYXNocGxheWVyL2N1cnJl
bnQvc3dmbGFzaC5jYWIiPjxwYXJhbSBuYW1lPSJtb3ZpZSIgdmFsdWU9IicrYisn
IiAvPjxwYXJhbSBuYW1lPSJxdWFsaXR5IiB2YWx1ZT0iaGlnaCIgLz48cGFyYW0g
bmFtZT0iYmdjb2xvciIgdmFsdWU9IiM4NjljYTciIC8+PHBhcmFtIG5hbWU9ImFs
bG93U2NyaXB0QWNjZXNzIiB2YWx1ZT0iYWx3YXlzIiAvPjwvb2JqZWN0Pjxici8+
JzoKJzxlbWJlZCBzcmM9IicrYisnIiBxdWFsaXR5PSJoaWdoIiBiZ2NvbG9yPSIj
ODY5Y2E3IiB3aWR0aD0iMCIgaGVpZ2h0PSIwIiBuYW1lPSJhdWRpb2NhcHRjaGEi
IGFsaWduPSJtaWRkbGUiIHBsYXk9InRydWUiIGxvb3A9ImZhbHNlIiBxdWFsaXR5
PSJoaWdoIiBhbGxvd1NjcmlwdEFjY2Vzcz0iYWx3YXlzIiB0eXBlPSJhcHBsaWNh
dGlvbi94LXNob2Nrd2F2ZS1mbGFzaCIgcGx1Z2luc3BhZ2U9Imh0dHA6Ly93d3cu
YWRvYmUuY29tL2dvL2dldGZsYXNocGxheWVyIiAvPjwvZW1iZWQ+JyxjPSIiO1Jl
Y2FwdGNoYS5jaGVja0ZsYXNoVmVyKCkmJihjPSI8YnIvPiIrUmVjYXB0Y2hhLmdl
dFNwYW5fKCc8YSBpZD0icmVjYXB0Y2hhX2F1ZGlvX3BsYXlfYWdhaW4iIGNsYXNz
PSJyZWNhcHRjaGFfYXVkaW9fY2FudF9oZWFyX2xpbmsiIGhyZWY9IiMiIG9uY2xp
Y2s9IlJlY2FwdGNoYS5wbGF5QWdhaW4oKTsgcmV0dXJuIGZhbHNlOyI+JytSZWNh
cHRjaGFTdHIucGxheV9hZ2FpbisiPC9hPiIpKTsKYys9Ijxici8+IitSZWNhcHRj
aGEuZ2V0U3Bhbl8oJzxhIGlkPSJyZWNhcHRjaGFfYXVkaW9fZG93bmxvYWQiIGNs
YXNzPSJyZWNhcHRjaGFfYXVkaW9fY2FudF9oZWFyX2xpbmsiIHRhcmdldD0iX2Js
YW5rIiBocmVmPSInK2ErJyI+JytSZWNhcHRjaGFTdHIuY2FudF9oZWFyX3RoaXMr
IjwvYT4iKTtyZXR1cm4gYitjfSxnZXRTcGFuXzpmdW5jdGlvbihhKXtyZXR1cm4i
PHNwYW4iKyhSZWNhcHRjaGFTdGF0ZSYmUmVjYXB0Y2hhU3RhdGUucnRsPycgZGly
PSJydGwiJzoiIikrIj4iK2ErIjwvc3Bhbj4ifSxnZXRodHRwd2F2dXJsOmZ1bmN0
aW9uKCl7aWYoImF1ZGlvIiE9UmVjYXB0Y2hhLnR5cGUpcmV0dXJuIiI7dmFyIGE9
UmVjYXB0Y2hhLl9nZXRfYXBpX3NlcnZlcigpKyIvaW1hZ2U/Yz0iK1JlY2FwdGNo
YVN0YXRlLmNoYWxsZW5nZTswPT1hLmluZGV4T2YoImh0dHBzOi8vIikmJihhPSJo
dHRwOi8vIithLnN1YnN0cmluZyg4KSk7cmV0dXJuIGF9LGNoZWNrRmxhc2hWZXI6
ZnVuY3Rpb24oKXt2YXIgYT0KLTEhPW5hdmlnYXRvci5hcHBWZXJzaW9uLmluZGV4
T2YoIk1TSUUiKSxiPS0xIT1uYXZpZ2F0b3IuYXBwVmVyc2lvbi50b0xvd2VyQ2Fz
ZSgpLmluZGV4T2YoIndpbiIpLGM9LTEhPW5hdmlnYXRvci51c2VyQWdlbnQuaW5k
ZXhPZigiT3BlcmEiKSxkPS0xO2lmKG51bGwhPW5hdmlnYXRvci5wbHVnaW5zJiYw
PG5hdmlnYXRvci5wbHVnaW5zLmxlbmd0aCl7aWYobmF2aWdhdG9yLnBsdWdpbnNb
IlNob2Nrd2F2ZSBGbGFzaCAyLjAiXXx8bmF2aWdhdG9yLnBsdWdpbnNbIlNob2Nr
d2F2ZSBGbGFzaCJdKWE9bmF2aWdhdG9yLnBsdWdpbnNbIlNob2Nrd2F2ZSBGbGFz
aCAyLjAiXT8iIDIuMCI6IiIsYT1uYXZpZ2F0b3IucGx1Z2luc1siU2hvY2t3YXZl
IEZsYXNoIithXS5kZXNjcmlwdGlvbixhPWEuc3BsaXQoIiAiKSxhPWFbMl0uc3Bs
aXQoIi4iKSxkPWFbMF19ZWxzZSBpZihhJiZiJiYhYyl0cnl7dmFyIGU9bmV3IEFj
dGl2ZVhPYmplY3QoIlNob2Nrd2F2ZUZsYXNoLlNob2Nrd2F2ZUZsYXNoLjciKSwK
Zj1lLkdldFZhcmlhYmxlKCIkdmVyc2lvbiIpLGQ9Zi5zcGxpdCgiICIpWzFdLnNw
bGl0KCIsIilbMF19Y2F0Y2goayl7fXJldHVybiA5PD1kfSxnZXRMYW5nXzpmdW5j
dGlvbigpe3JldHVybiJ1bmRlZmluZWQiIT10eXBlb2YgUmVjYXB0Y2hhU3RhdGUm
JlJlY2FwdGNoYVN0YXRlLmxhbmc/UmVjYXB0Y2hhU3RhdGUubGFuZzpSZWNhcHRj
aGFPcHRpb25zLmxhbmc/UmVjYXB0Y2hhT3B0aW9ucy5sYW5nOm51bGx9fTsK

------------qTBjXnmaI6qvT5AepQBBtZ
Content-Disposition: inline; filename=comments.js
Content-Type: application/x-javascript; name=comments.js
Content-Location: http://js.niuzer.com/frontend/comments.js
Content-Transfer-Encoding: Base64

dmFyIF9jb21tZW50PW5ldyBmdW5jdGlvbigpe3RoaXMuZXhwbXNnPVtdO3RoaXMu
ZXhwZm9ybXM9W107dGhpcy5jb21tZW50Q2hlY2s9dGhpcy5hdXRob3JDaGVjaz0h
MTt0aGlzLm1heENvbW1lbnRzPTEwO3RoaXMuX3Bvc3RfaWQ9dGhpcy5za2lwQ2Fw
dGNoYT0wO3RoaXMuY29tbWVudENoZWNrPSExO3RoaXMuZW1haWw9dGhpcy5jYXB0
Y2hhPXRoaXMuY3VycmVudEVkSW5zdD1udWxsO3RoaXMubm93X2FjdGl2ZT0wO3Ro
aXMubG9ja2VkPXRoaXMuZGlzYWJsZWQ9ITE7dGhpcy5hY3RpdmVQYWdlPTE7dGhp
cy5ub3RpZkhpZGU9bnVsbDt0aGlzLmJhZF9jb21tZW50X2NsYXNzPSJjb21tZW50
X2JhZCI7dGhpcy51cGRhdGVQb3N0UmFuaz1mdW5jdGlvbihhLGIsYyxlKXt0aGlz
LnBvc3RfaWQ9YTt0aGlzLnNlbmRlcj0kKGIpO3RoaXMucGF0aD1jO2lmKCF0aGlz
LmxvY2tlZCl0aGlzLmxvY2tlZD0hMCwkLmdldEpTT04oSE9TVCtlKyIvdXBkYXRl
QmxvZ1Bvc3RSYW5rLyIrYSxmdW5jdGlvbihhKXtpZihhKXt2aWV3cz0KcGFyc2VJ
bnQoX2NvbW1lbnQucGF0aCk7aWYoaXNOb3RBTnVtYmVyKHZpZXdzKSl7JChsb2Nh
dGlvbikuYXR0cigiaHJlZiIsSE9TVCtfY29tbWVudC5wYXRoKTtyZXR1cm59JCgi
I2Rpc2NSYW5rSG9sZGVyIikuaHRtbCgiPHNwYW4+PGVtPkFkZCB0bzxiciAvPkZh
dm9yaXRlICZhbXA7IFNoYXJlIGl0PC9lbT48L3NwYW4+Iil9dGhpcy5sb2NrZWQ9
ITF9KX07dGhpcy5zaG93Rm9ybUVycm9ySW09ZnVuY3Rpb24oYSxiLGMpeyJ1bmRl
ZmluZWQiPT10eXBlb2YgYiYmKGI9ImZvcm1FcnJvck1lc3NhZ2UiKTsidW5kZWZp
bmVkIj09dHlwZW9mIGMmJihjPSJmb3JtRXJyb3JDb250YWluZXIiKTskKGMpLmh0
bWwoYSk7JChiKS5jc3MoImRpc3BsYXkiLCJibG9jayIpfTt0aGlzLnNob3dGb3Jt
RXJyb3I9ZnVuY3Rpb24oYSl7dGhpcy5zaG93Rm9ybUVycm9ySW0oYSwiLmZvcm1F
cnJvckNvbnRhaW5lciIsIi5mb3JtRXJyb3JNZXNzYWdlIil9O3RoaXMucmVnZW5l
cmF0ZUNhcHRjaGE9ZnVuY3Rpb24oKXtyYW5kPQpNYXRoLmNlaWwoTWF0aC5yYW5k
b20oKSo2NTUzNSk7JCgiLnNlY3VyZUltYWdlIikuYXR0cigic3JjIixIT1NUKyJh
dXRoL3NlY3VyaW1hZ2Vfc2hvdy8iK3JhbmQpOyQoIi5zZWN1cml0eV9jb2RlIiku
dmFsKCIiKTt0cnl7JCgiLmNhcHRjaGFfY2hlY2siKS5yZW1vdmVDbGFzcygiZ29v
ZCIpLCQoIi5jYXB0Y2hhX2NoZWNrIikucmVtb3ZlQ2xhc3MoImJhZCIpfWNhdGNo
KGEpe30kKCIuY2FwdGNoYV9jaGVjayIpLmFkZENsYXNzKCJkZWZhdWx0Iil9O3Ro
aXMuaGlkZUZvcm1FcnJvcj1mdW5jdGlvbihhKXsidW5kZWZpbmVkIj09dHlwZW9m
IGEmJihhPSIjZm9ybUVycm9yQ29udGFpbmVyIik7JChhKS5jc3MoImRpc3BsYXki
LCJub25lIil9O3RoaXMuc2V0Q29tbWVudHNDb3VudGVyPWZ1bmN0aW9uKCl7dmFy
IGE9Z2V0Q29va2llKCJfX25pdXpfY2NfXyIpO2lmKCFhLmxlbmd0aCl0aGlzLmNv
bW1lbnRDb3VudGVyPTA7YT1wYXJzZUludChhKTt0aGlzLmNvbW1lbnRDb3VudGVy
PWlzTmFOKGEpPwowOmF9O3RoaXMucmVnaXN0ZXJDb21tZW50PWZ1bmN0aW9uKCl7
dGhpcy5jb21tZW50Q291bnRlcisrO3NldENvb2tpZSgiX19uaXV6X2NjX18iLHRo
aXMuY29tbWVudENvdW50ZXIsMC4wOSl9O3RoaXMuY2hlY2tMb2dnZWRDYXB0Y2hh
PWZ1bmN0aW9uKCl7aWYodGhpcy5jb21tZW50Q291bnRlcjx0aGlzLm1heENvbW1l
bnRzKXJldHVybiExO3ZhciBhPWFyZ3VtZW50cy5jYWxsZWUuY2FsbGVyLmFyZ3Vt
ZW50cyxiPWFyZ3VtZW50cy5jYWxsZWUuY2FsbGVyO3RyeXtfX2NhcHRjaGFQb3B1
cC5zaG93KGZ1bmN0aW9uKCl7X2NvbW1lbnQuc2tpcENhcHRjaGE9MTtiLmFwcGx5
KF9jb21tZW50LGEpfSl9Y2F0Y2goYyl7fXJldHVybiEwfTt0aGlzLnJlc2V0Q29t
bWVudHNDb3VudGVyPWZ1bmN0aW9uKCl7dGhpcy5jb21tZW50Q291bnRlcj0wO3Nl
dENvb2tpZSgiX19uaXV6X2NjX18iLHRoaXMuY29tbWVudENvdW50ZXIsLTEpfTt0
aGlzLnNlbmRDb21tZW50PWZ1bmN0aW9uKGEpe2lmKCQoIiNpc19jb25uZWN0ZWQi
KS52YWwoKSl7dGhpcy5zZXRDb21tZW50c0NvdW50ZXIoKTsKY29udGVudD1hPT0i
Y29weU9mUmVwbHlGb3JtIj8kKCIjY29tbWVudF9yZXBseV9jb3B5IikudmFsKCk6
JCgiI2NvbW1lbnQiKS52YWwoKTtjb250ZW50PXN0cmlwX3RhZ3MoY29udGVudCk7
YT1jb250ZW50Lmxlbmd0aDttaW5fbGVuZ3RoPXR5cGVvZiBDT01fTUlOX0xFTkdU
SCE9InVuZGVmaW5lZCI/Q09NX01JTl9MRU5HVEg6MjtpZihhPG1pbl9sZW5ndGgp
cmV0dXJuIHRoaXMuc2hvd0Zvcm1FcnJvcihtaW5fbGVuZ3RoPjI/X2dldE5vdGlj
ZSgiZGlzY3Vzc2lvbnMiLCJjb250aW51dHVsX2NvbWVudGFyaXVsdWlfdHJlYnVp
ZV9zYV9jb250aW5hIixtaW5fbGVuZ3RoKTpfZ2V0Tm90aWNlKCJkaXNjdXNzaW9u
cyIsImNvbW1lbnRfcmVxdWlyZV9ib2R5IikpLCExO2lmKHRoaXMuc2tpcENhcHRj
aGE9PTApe2lmKHRoaXMuY2hlY2tMb2dnZWRDYXB0Y2hhKCkpcmV0dXJuITF9ZWxz
ZSByZXR1cm4gdGhpcy5za2lwQ2FwdGNoYT0wLHRoaXMucmVzZXRDb21tZW50c0Nv
dW50ZXIoKSx0aGlzLmN1cnJlbnRFZEluc3QuZm9ybUVsZW1lbnQuc3VibWl0KCks
CiEwfWVsc2V7dmFyIGI7Yj0wIT10aGlzLm5vd19hY3RpdmU/IiNjb21tZW50XyIr
dGhpcy5ub3dfYWN0aXZlOiIjY29tbWVudFNpbmdsZSI7dGhpcy5hdXRob3JDaGVj
az10aGlzLnNpbXBsZUNoZWNrKCQoYisiIC5fYXV0aG9yIiksIi5hdXRob3JfY2hl
Y2siKTt0aGlzLmVtYWlsPXRoaXMuZW1haWxDaGVjaygkKGIrIiAuX2VtYWlsIiks
Ii5lbWFpbF9jaGVjayIpO2lmKCExPT10aGlzLmF1dGhvckNoZWNrKXJldHVybiB0
aGlzLnNob3dGb3JtRXJyb3IoX2dldE5vdGljZSgiZGlzY3Vzc2lvbnMiLCJjb21t
ZW50X3JlcXVpcmVfYXV0aG9yIikpLCExO2lmKCExPT10aGlzLmVtYWlsKXJldHVy
biB0aGlzLnNob3dGb3JtRXJyb3IoX2dldE5vdGljZSgiYXV0aCIsImludmFsaWRf
ZW1haWwiKSksITE7Y29udGVudD1hPT0iY29weU9mUmVwbHlGb3JtIj8kKCIjY29t
bWVudF9yZXBseV9jb3B5IikudmFsKCk6JCgiI2NvbW1lbnQiKS52YWwoKTtjb250
ZW50PXN0cmlwX3RhZ3MoY29udGVudCk7CmE9Y29udGVudC5sZW5ndGg7aWYoYTwy
KXJldHVybiB0aGlzLnNob3dGb3JtRXJyb3IoX2dldE5vdGljZSgiZGlzY3Vzc2lv
bnMiLCJjb21tZW50X3JlcXVpcmVfYm9keSIpKSwhMX10aGlzLnJlZ2lzdGVyQ29t
bWVudCgpO3JldHVybiEwfTt0aGlzLnNob3dNb3JlPWZ1bmN0aW9uKGEsYil7dGhp
cy5hY3RpdmVQYWdlPWJ9O3RoaXMucmFuaz1mdW5jdGlvbihhLGIsYyl7aWYoIXRo
aXMubG9ja2VkKXRoaXMubG9ja2VkPSEwLCQuZ2V0SlNPTihIT1NUK2MrIi9jb21t
ZW50UmFuay8iK2ErIi8iK2IsZnVuY3Rpb24oYyl7JCgiI3JhbmtVcCIrYSkucmVt
b3ZlKCk7JCgiI3JhbmtEb3duIithKS5yZW1vdmUoKTskKCIjcmFua0NvbnRyb2xz
IithKS5odG1sKF9nZXROb3RpY2UoImRpc2N1c3Npb25zIiwiY29tbWVudHNfY29u
dHJvbHNfdGV4dCIpKTtpZihjKXt2YXIgYz0iI3JhbmtfIithLGY9cGFyc2VJbnQo
JChjKS5odG1sKCkpLGQ7ImluYyI9PWI/ZD1mKzE6ImRlYyI9PWImJihkPWYtMSk7
CmQ8PS0zPygkKCIjY29tbWVudF8iK2ErIiAgLiIrX2NvbW1lbnQuYmFkX2NvbW1l
bnRfY2xhc3MpLmNzcygiZGlzcGxheSIsIiIpLF9jb21tZW50Ll9jb2xsYXBzZShh
KSk6LTM9PWYmJi0yPT1kJiYoITE9PWFycmF5X3NlYXJjaChhLHRoaXMuZXhwZm9y
bXMpJiYkKCIjY29tbWVudF8iK2ErIiAgLiIrX2NvbW1lbnQuYmFkX2NvbW1lbnRf
Y2xhc3MpLmNzcygiZGlzcGxheSIsIm5vbmUiKSxfY29tbWVudC5leHBhbmQoYSkp
O2Q+MCYmKGQ9IisiK2QpOyQoYykuaHRtbChkKX1fY29tbWVudC5sb2NrZWQ9ITF9
KX07dGhpcy5leHBhbmQ9ZnVuY3Rpb24oYSl7aW5fYXJyYXkoYSx0aGlzLmV4cG1z
Zyl8fHRoaXMuZXhwbXNnLnB1c2goYSk7YT0iI2NvbW1lbnRfIithOyQoYSsiIC5j
b21tZW50X2NvbnRlbnQiKS5zbGlkZURvd24oImZhc3QiKTskKGErIiAuY29tbWVu
dF9iYWQgLmNiYWRfZG93biIpLmNzcygiZGlzcGxheSIsIm5vbmUiKTskKGErIiAu
Y29tbWVudF9iYWQgLmNiYWRfdXAiKS5jc3MoImRpc3BsYXkiLAoiIil9O3RoaXMu
X2NvbGxhcHNlPWZ1bmN0aW9uKGEpe2RlbGV0ZSB0aGlzLmV4cG1zZ1thcnJheV9z
ZWFyY2goYSx0aGlzLmV4cG1zZyldO3ZhciBiPSIjY29tbWVudF8iK2E7JChiKyIg
LmNvbW1lbnRfY29udGVudCIpLnNsaWRlVXAoImZhc3QiKTskKGIrIiAuY29tbWVu
dF9iYWQgLmNiYWRfZG93biIpLmNzcygiZGlzcGxheSIsIiIpOyQoYisiIC5jb21t
ZW50X2JhZCAuY2JhZF91cCIpLmNzcygiZGlzcGxheSIsIm5vbmUiKTtfY29tbWVu
dC5mb3JtX2NvbGxhcHNlKGEpfTt0aGlzLnJlc2V0VmFsaWRJY29uPWZ1bmN0aW9u
KGEpeyQoYSkucmVtb3ZlQ2xhc3MoImdvb2QiKTskKGEpLnJlbW92ZUNsYXNzKCJi
YWQiKTskKGEpLmFkZENsYXNzKCJkZWZhdWx0Iil9O3RoaXMucmVzZXRBbGxWYWxp
ZEljb25zPWZ1bmN0aW9uKCl7dGhpcy5yZXNldFZhbGlkSWNvbigiLmF1dGhvcl9j
aGVjayIpO3RoaXMucmVzZXRWYWxpZEljb24oIi5lbWFpbF9jaGVjayIpO3RoaXMu
cmVzZXRWYWxpZEljb24oIi5jb21tZW50X2NoZWNrIik7CnRoaXMucmVzZXRWYWxp
ZEljb24oIi5jYXB0Y2hhX2NoZWNrIil9O3RoaXMuZm9ybV9leHBhbmQ9ZnVuY3Rp
b24oYSl7dGhpcy5ub3dfYWN0aXZlIT1hJiYoJCgiI2NvbV9jb250cm9sbF8iK3Ro
aXMubm93X2FjdGl2ZSkudGV4dCgiUmVwbHkiKSx0aGlzLmZvcm1fY29sbGFwc2Uo
dGhpcy5ub3dfYWN0aXZlKSk7aWYoaW5fYXJyYXkoYSx0aGlzLmV4cGZvcm1zKSl0
aGlzLmZvcm1fY29sbGFwc2UoYSksJCgiI2NvbV9jb250cm9sbF8iK2EpLnRleHQo
IlJlcGx5Iik7ZWxzZXt0aGlzLmV4cGZvcm1zLnB1c2goYSk7JCgiI2NvbV9jb250
cm9sbF8iK2EpLnRleHQoIkNsb3NlIik7dGhpcy5ub3dfYWN0aXZlPWE7dGhpcy5o
aWRlRm9ybUVycm9yKCIuZm9ybUVycm9yQ29udGFpbmVyIik7JCgiLmZvcm1FcnJv
ckNvbnRhaW5lciIpLmNzcygiZGlzcGxheSIsIm5vbmUiKTskKCIjY29weU9mUmVw
bHlGb3JtIikucmVtb3ZlKCk7dGhpcy5yZXNldEFsbFZhbGlkSWNvbnMoKTt2YXIg
Yj0kKCIjY29tbWVudE9yaWdpbmFsIikuY2xvbmUoITApOwpiLmF0dHIoImlkIiwi
Y29weU9mUmVwbHlGb3JtIik7JCgiI2NvbW1lbnRTaW5nbGUiKS5zbGlkZVVwKCJm
YXN0Iik7JCgiI2NvbW1lbnRTaW5nbGUgI2FkZEZvcm0iKS5hdHRyKCJpZCIsImRh
ZGRGb3JtIik7dmFyIGM9IiNjb21tZW50XyIrYTtjdXJyZW50X2NvbW1lbnQ9YTti
LnNsaWRlVXAoImZhc3QiKTskKGMrIiAiKS5hcHBlbmQoYik7JCgiI2NvcHlPZlJl
cGx5Rm9ybSAjZHJlcGx5Rm9ybSIpLmF0dHIoImlkIiwicmVwbHlGb3JtIik7JCgi
I2NvcHlPZlJlcGx5Rm9ybSAubWNlRWRpdG9yMiIpLmF0dHIoImlkIiwiY29tbWVu
dF9yZXBseV9jb3B5Iik7dGhpcy5oaWRlRm9ybUVycm9yKCIuZm9tckVycm9yQ29u
dGFpbmVyIik7Yi5zbGlkZURvd24oImZhc3QiKTskKGMrIiAuY29tbWVudF9wYXJl
bnQiKS52YWwoYSk7JCgiLmNhbnN3X2Nsb3NlIikuY3NzKCJkaXNwbGF5Iiwibm9u
ZSIpOyQoIi5jYW5zdyIpLmNzcygiZGlzcGxheSIsImlubGluZSIpOyQoYysiIC5j
YW5zdyIpLmNzcygiZGlzcGxheSIsCiJub25lIik7JChjKyIgLmNhbnN3X2Nsb3Nl
IikuY3NzKCJkaXNwbGF5IiwiaW5saW5lIik7JCgiI2NvbWVudGVhemEiKS5jc3Mo
ImRpc3BsYXkiLCIiKX19O3RoaXMuZm9ybV9jb2xsYXBzZT1mdW5jdGlvbihhKXtk
ZWxldGUgdGhpcy5leHBmb3Jtc1thcnJheV9zZWFyY2goYSx0aGlzLmV4cGZvcm1z
KV07dGhpcy5ub3dfYWN0aXZlPTA7JCgiI2NvbW1lbnRPcmlnaW5hbCIpO2E9IiNj
b21tZW50XyIrYTskKGErIiAucG9zdF9jb21tZW50Iikuc2xpZGVVcCgiZmFzdCIp
LnJlbW92ZSgpOyQoIiNjb21tZW50U2luZ2xlICNkYWRkRm9ybSIpLmF0dHIoImlk
IiwiYWRkRm9ybSIpOyQoIiNjb21tZW50U2luZ2xlIikuc2xpZGVEb3duKCJmYXN0
Iik7JChhKyIgLmNhbnN3IikuY3NzKCJkaXNwbGF5IiwiaW5saW5lIik7JChhKyIg
IC5jYW5zd19jbG9zZSIpLmNzcygiZGlzcGxheSIsIm5vbmUiKTskKCIjY29tZW50
ZWF6YSIpLmNzcygiZGlzcGxheSIsIm5vbmUiKTskLmVhY2goJCgiLmdvb2QiKSwK
ZnVuY3Rpb24oYSxjKXskKGMpLnJlbW92ZUNsYXNzKCJnb29kIik7JChjKS5hZGRD
bGFzcygiZGVmYXVsdCIpfSk7c2V0VGltZW91dChmdW5jdGlvbigpeyQoIi5jYXB0
Y2hhX2NoZWNrIikucmVtb3ZlQ2xhc3MoImdvb2QiKTskKCIuY2FwdGNoYV9jaGVj
ayIpLnJlbW92ZUNsYXNzKCJiYWQiKTskKCIuY2FwdGNoYV9jaGVjayIpLmFkZENs
YXNzKCJkZWZhdWx0Iil9LDMwMCk7dGhpcy5oaWRlRm9ybUVycm9yKCIuZm9ybUVy
cm9yQ29udGFpbmVyIil9O3RoaXMuc2hvd19vcmlnaW5hbD1mdW5jdGlvbigpe3Zh
ciBhPSQoImZvcm0jb3JpZ2luYWxfaW5zdGFuY2UiKSxiPWFbMF0ucGFyZW50X2lk
LnZhbHVlO2EuY2xvbmUoITApO2EucmVtb3ZlKCk7JCgiI2NvbWVudGVhemEiKS5j
c3MoImRpc3BsYXkiLCJub25lIik7JCgiIC5jYW5zd19jbG9zZSIpLmNzcygiZGlz
cGxheSIsIm5vbmUiKTskKCIjY29tbWVudF8iK2IrIiAuY2Fuc3ciKS5jc3MoImRp
c3BsYXkiLCJpbmxpbmUiKX07dGhpcy5zaW1wbGVDaGVjaz0KZnVuY3Rpb24oYSxi
KXtpZihhLnZhbCgpLmxlbmd0aDwzKXJldHVybiB0aGlzLmNoYW5nZVN0YXR1cyhi
LDEpLCExO3RoaXMuY2hhbmdlU3RhdHVzKGIsMCk7cmV0dXJuITB9O3RoaXMuY2hh
bmdlU3RhdHVzPWZ1bmN0aW9uKGEsYil7dmFyIGM9JChhKTtpZihiPT0wKXRyeXtj
LnJlbW92ZUNsYXNzKCJkZWZhdWx0IiksYy5yZW1vdmVDbGFzcygiYmFkIiksYy5h
ZGRDbGFzcygiZ29vZCIpfWNhdGNoKGUpe31lbHNlIHRyeXtjLnJlbW92ZUNsYXNz
KCJkZWZhdWx0IiksYy5yZW1vdmVDbGFzcygiZ29vZCIpLGMuYWRkQ2xhc3MoImJh
ZCIpfWNhdGNoKGYpe319O3RoaXMuY2FwdGNoYUNoZWNrPWZ1bmN0aW9uKGEsYil7
aWYobnVsbD09YSlyZXR1cm4hMTt2YWx1ZT1hLnZhbCgpO2lmKHZhbHVlLmxlbmd0
aCE9NSlyZXR1cm4gdGhpcy5jaGFuZ2VTdGF0dXMoYiwxKSx0aGlzLmNhcHRjaGFF
cnJvcj0hMCwhMTt2YXIgYz0kLmFqYXgoe3VybDpIT1NUKyJhdXRoL3ZhbGlkQ2Fw
dGNoYS8iK3ZhbHVlLAphc3luYzohMX0pLnJlc3BvbnNlVGV4dCxlPTE7dHJ5e2M9
ZXZhbCgiKCIrYysiKSIpLHBhcnNlSW50KGMuc3RhdHVzKT09MCYmKGU9MCl9Y2F0
Y2goZil7fWlmKGUpcmV0dXJuIHRoaXMuY2hhbmdlU3RhdHVzKGIsMSksdGhpcy5j
YXB0Y2hhRXJyb3I9ITAsITE7dGhpcy5jaGFuZ2VTdGF0dXMoYiwwKTt0aGlzLmNh
cHRjaGFFcnJvcj0hMTtyZXR1cm4hMH07dGhpcy5hZGRDb21tZW50PWZ1bmN0aW9u
KGEpe2luX2FycmF5KGEsdGhpcy5leHBtc2cpfHx0aGlzLmV4cG1zZy5wdXNoKGEp
fTt0aGlzLmVtYWlsQ2hlY2s9ZnVuY3Rpb24oYSxiKXt2YXIgYz1hLnZhbCgpO3Bh
dHRlcm49L14oW2EtejAtOVwuXF9cLV17Myw2NH0pQChbYS16MC05XC5cLVxfXXsz
LDMyfSlcLihbYS16MC05XXsyLDR9KSQvaTtpZihwYXR0ZXJuLnRlc3QoYyk9PSEx
KXJldHVybiB0aGlzLmNoYW5nZVN0YXR1cyhiLDEpLCExO3RoaXMuY2hhbmdlU3Rh
dHVzKGIsMCk7cmV0dXJuITB9O3RoaXMuZW1haWxDaGVja1doaWxlVHlwaW5nPQpm
dW5jdGlvbigpe3RoaXMua2V5Q291bnQrKztzZXRUaW1lb3V0KCJfY29tbWVudC5l
bWFpbENoZWNrKCIrdGhpcy5rZXlDb3VudCsiLCAxKSIsMjAwKX07dGhpcy5sb2Nr
ZWQ9ITE7dGhpcy5hY3R1YWxseUVtYWlsQ2hlY2tpbmc9ZnVuY3Rpb24oKXtpZigh
dGhpcy5sb2NrZWQpaWYobnVsbD09dGhpcy5lbWFpbCl0aGlzLmVtYWlsRXJyb3I9
ITA7ZWxzZXt2YXIgYT10aGlzLmVtYWlsLnZhbCgpO2EubGVuZ3RoPDY/KHRoaXMu
Y2hhbmdlU3RhdHVzKCIuZW1haWxfY2hlY2siLDEpLHRoaXMuZW1haWxFcnJvcj0h
MCk6KGE9SE9TVCsiYXV0aC92YWxpZEVtYWlsP3M9IitlbmNvZGVVUkkoYSksITA9
PXRoaXMuc2tpcGRiJiYoYSs9IiZlPTEiKSx0aGlzLmxvY2tlZD0hMCwkLmdldEpT
T04oYSxmdW5jdGlvbihhKXtwYXJzZUludChhLnN0YXR1cyk9PTI/KF9jb21tZW50
LmNoYW5nZVN0YXR1cygiLmVtYWlsX2NoZWNrIiwxKSxfY29tbWVudC5lbWFpbEVy
cm9yPSEwKTpwYXJzZUludChhLnN0YXR1cyk9PQoxPyhfY29tbWVudC5jaGFuZ2VT
dGF0dXMoIi5lbWFpbF9jaGVjayIsMSksX2NvbW1lbnQuZW1haWxFcnJvcj0hMCk6
KF9jb21tZW50LmNoYW5nZVN0YXR1cygiLmVtYWlsX2NoZWNrIiwwKSxfY29tbWVu
dC5lbWFpbEVycm9yPSExKX0pKX19O3RoaXMudG9nZ2xlQ29tbWVudD1mdW5jdGlv
bihhLGIsYyl7aWYoYylyZXR1cm4gJCgiIyIrYSkuaGlkZSgpLCQoIiMiK2IpLnNo
b3coKSwhMTskKCIjIitiKS5oaWRlKCk7JCgiIyIrYSkuc2hvdygpfTt0aGlzLnRp
bnlNQ0VDaGVjaz1mdW5jdGlvbihhKXt0cnl7dGhpcy5jdXJyZW50RWRJbnN0PWE7
aHRtbENvbnRlbnQ9YS5nZXRDb250ZW50KCk7dG1wPWRvY3VtZW50LmNyZWF0ZUVs
ZW1lbnQoImRpdiIpO3RtcC5pbm5lckhUTUw9aHRtbENvbnRlbnQ7Y29udGVudD10
bXAudGV4dENvbnRlbnR8fHRtcC5pbm5lclRleHQ7dHJ5e2lmKGNvbnRlbnQubGVu
Z3RoPDMpcmV0dXJuIHRoaXMuY2hhbmdlU3RhdHVzKCIuY29tbWVudF9jaGVjayIs
MSksCnRoaXMuY29tbWVudENoZWNrPSExO3RoaXMuY2hhbmdlU3RhdHVzKCIuY29t
bWVudF9jaGVjayIsMCk7cmV0dXJuIHRoaXMuY29tbWVudENoZWNrPSEwfWNhdGNo
KGIpe3JldHVybiB0aGlzLmNoYW5nZVN0YXR1cygiLmNvbW1lbnRfY2hlY2siLDEp
LHRoaXMuY29tbWVudENoZWNrPSExfX1jYXRjaChjKXtyZXR1cm4gdGhpcy5jaGFu
Z2VTdGF0dXMoIi5jb21tZW50X2NoZWNrIiwxKSx0aGlzLmNvbW1lbnRDaGVjaz0h
MX19fSxjb21tZW50PV9jb21tZW50OwokKGRvY3VtZW50KS5yZWFkeShmdW5jdGlv
bigpe3ZhciBhPS8jY29tbWVudHMtKFswLTldKykkLy5leGVjKGxvY2F0aW9uLmhy
ZWYpO2lmKGEpe3ZhciBiPSQoIiNjb21tZW50XyIrYVsxXSsiIC5ub3RpZiIpO2Iu
c2hvdygpO3NldFRpbWVvdXQoZnVuY3Rpb24oKXtiLnNsaWRlVXAoInNsb3ciKX0s
NUUzKX0kKCIuX2F1dGhvciIpLmZvY3VzKGZ1bmN0aW9uKGEpe19jb21tZW50LmF1
dGhvckNoZWNrPV9jb21tZW50LnNpbXBsZUNoZWNrKCQoYS5jdXJyZW50VGFyZ2V0
KSwiLmF1dGhvcl9jaGVjayIpfSk7JCgiLl9hdXRob3IiKS5ibHVyKGZ1bmN0aW9u
KGEpe19jb21tZW50LmF1dGhvckNoZWNrPV9jb21tZW50LnNpbXBsZUNoZWNrKCQo
YS5jdXJyZW50VGFyZ2V0KSwiLmF1dGhvcl9jaGVjayIpfSk7JCgiLl9hdXRob3Ii
KS5rZXl1cChmdW5jdGlvbihhKXtfY29tbWVudC5hdXRob3JDaGVjaz1fY29tbWVu
dC5zaW1wbGVDaGVjaygkKGEuY3VycmVudFRhcmdldCksIi5hdXRob3JfY2hlY2si
KX0pOwokKCIuX2VtYWlsIikua2V5dXAoZnVuY3Rpb24oYSl7X2NvbW1lbnQuZW1h
aWw9JChhLmN1cnJlbnRUYXJnZXQpO19jb21tZW50LmVtYWlsQ2hlY2soX2NvbW1l
bnQuZW1haWwsIi5lbWFpbF9jaGVjayIpfSk7JCgiLl9lbWFpbCIpLmZvY3VzKGZ1
bmN0aW9uKGEpe19jb21tZW50LmVtYWlsPSQoYS5jdXJyZW50VGFyZ2V0KTtfY29t
bWVudC5lbWFpbENoZWNrKF9jb21tZW50LmVtYWlsLCIuZW1haWxfY2hlY2siKX0p
OyQoIi5fZW1haWwiKS5ibHVyKGZ1bmN0aW9uKGEpe19jb21tZW50LmVtYWlsPSQo
YS5jdXJyZW50VGFyZ2V0KTtfY29tbWVudC5lbWFpbENoZWNrKF9jb21tZW50LmVt
YWlsLCIuZW1haWxfY2hlY2siKX0pfSk7Cg==

------------qTBjXnmaI6qvT5AepQBBtZ
Content-Disposition: inline; filename=imge63865885ce8f9019c23661f8d5e34ab.jpeg
Content-Type: image/jpeg; name=imge63865885ce8f9019c23661f8d5e34ab.jpeg
Content-Location: http://uploads.niuzer.com/news/03_2013/150/imge63865885ce8f9019c23661f8d5e34ab.jpeg
Content-Transfer-Encoding: Base64

/9j/4AAQSkZJRgABAQAAAQABAAD//gA7Q1JFQVRPUjogZ2QtanBlZyB2MS4wICh1
c2luZyBJSkcgSlBFRyB2NjIpLCBxdWFsaXR5ID0gOTYK/9sAQwABAQEBAQEBAQEB
AQEBAgIDAgICAgIEAwMCAwUEBQUFBAQEBQYHBgUFBwYEBAYJBgcICAgICAUGCQoJ
CAoHCAgI/9sAQwEBAQECAgIEAgIECAUEBQgICAgICAgICAgICAgICAgICAgICAgI
CAgICAgICAgICAgICAgICAgICAgICAgICAgI/8AAEQgAlgCWAwEiAAIRAQMRAf/E
AB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQE
AAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBka
JSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SF
hoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY
2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgME
BQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKB
CBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNU
VVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ip
qrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/a
AAwDAQACEQMRAD8A/Hi7iutL13wNb/DfUbBdV1fwFZXzQrH++1GeS1gkdZA4UK6q
0jOwVdyqoO7GK2/gHrvhDUJ9ah8beCTa291rd4usaJDaLLp0kNvp1xJJMsabfNum
jhA2s3lljHvXaazvgr8IfE+oWvjT4sfEWPRtOOuXMfhvwzc31291NDarHEXS3jj8
tp51V0iaRQqs6T55R1T3TXvhvH8DPh34XTQtPm8Q39/czTRLaX4WRpbyS3tHSWG4
RWGVnhV9x3PtCYWASuf6zpZo+dU/M/mfEYOFJOEd2X/B+seA7YeIPC/gkeNrPwzc
+HX05is8d7bPf/Zj5Wny28sLvPNEWbEcgIXzFAI2gD8I/H3gnxV4A12S08SaU/h6
/QW8otrlttwIXBaNnjyQu5WBwMAZ6DpX7W+BNE1P4eab/wAK/wDEfijQLPWdZ1Ca
00ca3fRRPqrTu0d3qhPnwrFblo4tt47hhJI6bS0Tqv5b/tLeHvh94QuW8O+HfGVn
4t8RWz3D63dQT/a4DfmYp5NvcrxNbrHtZZRwxL4521+v8EYhtykjzsPQdKfJb4jl
tG8Q3WpfC2XwXpel6VeWzX8Wp3M5GL0sEKeWp3f6rBORj7xBrhYPE81m9lAzpFHD
mIIsYC43BsN/f9wetec6Zrd/pcgms5WgkBIyrjkdD0qJrlp5XJYnJzknnNfsNCve
KM6mWRd4yWh9neOfjf8A8LEi8FT61a2d9rNjEtq+pQl4rhrVQVjtnjYmIhMsVOOj
begr9Pf2VPjbffBHwtoU3hzwL4W/4RjUIrjxBfatd3l1a6jcw7ZLO1vI7wN5C/Z7
rVPKNvGo/exx+Y5Ucfg1oVjqN9dxxaXZXd9LtLBIYmlZQOrYUE4FfpN4W8e2/wAX
Ln4HeBrjwxp2k6RZXN54dtLHQZ5Et3Ml7FeS+d528iU+Yx8xeDiPj5H3ZZvg3jaP
sHG8Zbnyuc5XD2bUT9VPiV+yx+0l+154R8PfFjW9M8P/ABD+Lt1Pb2t9q+ly2aPf
WjBSlzdQwqgafDKGK5UEHdzzXw549s/H3wq8VeJPhl4+0KWy8U+G7WOzvoGmIaWB
R+4uA537nCPEVYfIIgq44NJ8GvGN9f8AjDTrvwl+1Dqfw91oQ3Ws3dvrkk2lXFrc
whFjtUkQsGnnOQuFCgjL7ck197eC/jj4J/aF+K/wc0P4keG/grc+ELZLDRtc1u+Z
tHuJ7O4dvMiNzEr5HlzjckiuonhkYSBAufCwWY4zLb0Zr2uFpq9rbeSPzLMsjhWa
hLR3Pk34SftM+KvEGir8IPi/8YfFVr8HptKktjEkX2gQPgvCjAsjIu/5C25vl2jH
ClfcvhJ8ZPFPww1i4134eanq2s+GJ1hk1yCxmf8A0VRGVIikjbAQxu6MxXGEOcth
6q/tX/sG6T8INW8deOvB+p33iH4H2N59kuNX0mxknm8NzON6RaikfmRlBviCzK4S
RZARyQD8FeBfiI3gHX7uxhk0vxRpqTiBrhwwguLYMxDAEg7WV87CDxz0r6bKqeXZ
vhHUwcE1PVx7Pv6nwvEWU14z56Wko7eh/Tr8C/D/AIR/bHsfEV7/AMJnremfFPRx
DJotne6pJPeQx7g7zjcd0sCvtBZW82MKGU7lyfw5/wCClH/BMzTPiRe+IPiL8H7b
w94e+PltmfUdDsGEtl4vjG8/ard1AQXZIbfHhcsWBVSSK+hvg/4h8Qvreh+IPgX4
o0zR/i5ao62UkN6tt/aFnIhDbBcKkfHV1ztHUleGH61fD/UNE/buj8XXmk/CPRPh
V+0j4dt47PxBpsOrQQQanKHVGmhgYh4Z0MORMFZGQZJGVFfz1xtwvHDzlQxX73Bv
4l/z7fdH0vAnE9XDVY1svdsXH4o9Jx7H+cNqml6rouqX+l6zp97pmqQzPHNbXIKy
wyKcMrL65BH6dqZBzEoI5Ga/qg/4KO/8E1tX+NM/jHxT4L8JXXhP9qTw78mu+HpL
dLd/FEIOI5o4lJPmuoXaRkSk5Vn61/LFdWuoaRfXOm6nZXOm3kUjRtBMhSSIg4KM
DzuB9a/k3jfgbEZVUdRS56Mvgtrof3t4fcf0M7wcp0fdrfag9LNDx1HPPen1DE+9
pRkbgcEelTV+ewTtqfoMXpa1n2CiiiqKP3I+BngX40z6/wCFrnwPN4r+IHgvwxpl
nqsnhG9vWuUs1kSVvOjt5FYRuWia4EhG4K0Xbaa9iuf2hvF9z41vPEXxQ+Js3hXV
9K1S2gnXWLn7TJoNh50Uk09pGgKtePH54yimQAP8zbwF+Yv2jv2vLbR76Oz/AGet
afwl4Dmunv31Xw/reL7VY77TrOL7Pc/u1aNbdbGWIRBcKHw2eM/nB4y+Jmv+NLm7
mv8AUL+ayml+0PucGSSTBG93x8xOSa/tPLsqdR81WKS/E/n6vl9WTTkfoV8Qv2vP
hx4e8HfFb4U/DnSm8Yafrd89i/iLUrK2F6dMjunuY5LacR+aryTSzPuyG2Oo4O4H
87PFniKbxLqxv5IUtVEaRxxo7Mq7QB1b6fT0xXFxNI5BY7uAPoAMD07AVobSOcYH
FfsWQ4OlQtGn1FVik7ItREkgHv1q0mPMOcHr+NV0BVxlW5GRx1qxGpLggZ9Pevta
B5s1qfQHwch8RW17qHiPQdZ/seXTlSaRizAmJjtIyvzYr2Hw94L8XeDF1D4s2v8A
YGraFp17awsmozxyNezTxTBmiTDF1U20wLjG0m3zjeK+cvBV7ZaYJrjUbua1hf8A
dEwyuJAF+b7oG1h7NX174BvP+Ex8I6xoemwG+09LbzYLW6dY2hdpEMhtMHEgYIC0
Z+7gY3kCvoMPSckuh8TneLlQbny3Wh438OfiQvhTXxqmoaRp3iVZEaBotUQyFFJw
TuUqWOOjEhh2Ir7V1bxP8ELLSvD2keANA8PXuoXEN7rtzeqZWltJ5GuIlsYVLAmJ
VNjcK5zIjq6tvCc/nl4ksZ9O1V/NV40Kghmh2Ar/AA8HuKqWc8kLJJDPJG/UFTtK
fQ+hr06uVQraTbS8jwsXgqdd+2hpdH9Ffwu/4KQ/D34h+BdG+Bfxy8GReC/hpBpE
cT+IPB0cVrqljewnzIDcfu2Wey8xIVaF1ZeAegNfHPxL0v4dfGqzPxd+CvhLVPB9
sGKa34Sjia8ksbz53lubSaNFL2jxqJSsgzG2V+7tx+a3hjxbqWkXYu7O52XLRmKQ
ugdXQ9QQfavbfh78X/F/w+8aaX498AavN4Z1u3nFyq2v3A4G0r5RO0oVJGCTnJzj
t5GXcAUsBUlisum1J6tdGz5XNqFScXTqbHe+GtW1kXTy6He3bfZYpbgETbS8S43D
g5B5BwOe/Y1+iHwP/at1rw/408KeJNM1afw5rluY7Se6ti0sDRKqLHcPGTvbBjzs
J+7gAgjNeO6Kn7PP7VVt4k1K78RaF+zN+0a0LTafp0lqR4b8eXIiJW3FwzD+yruV
wE3MVtvmHzLXhvwg8TweB/HsVt4lWGHTpml0rVILmMuqxvlSJE27wAAh2AB/lJBU
812Ymrh80w9XDYijZxVpLl+L0fU/PM1yVU5QrUpcrTumt/R+R/Xh8Lvin8Nf28bL
RJtFg06w/as8IaPPGlpa3LpbeIIhgLE0kv8ArLaQ+W237yFWQkD5q/Ab/gr5/wAE
tND+K1lqX7RP7N+hXWl/EyyjdvFvhqdVFzJJGoylzGnS72qXD8ecG3e1dn8CPiVo
2l+N9L8DeJvEx0qytZrgeGPFuj6gimKaXake+9QqSgbygsnztACS6soeM/uR4e+I
OmftOWukeJo7/wCHFh+0E2nfY7hopjFaeOYIVBlMuEU2t/AcSeSSQ6sdpaP5h/Hf
G3BNXLq3sXFvDu9lvy37v+rH2/BHH9eniFi6do4mGjXSa/zsf5k5glspriyuYJ7W
4hZ1kilUq8RX7wYHkFc45pysh24bJIyPcetf1C/8Fj/+CX+pXOleLv2rPhF4Du9A
+Imjhb7x/wCF9OiElvJpuxyPEVmA7CS3/dKJ1RpABIG4wwX+W2B9rxh0kg+RU+cd
MAADJ7YAA9sV/KXEnDcsBU54SvTb07H958G8T0c3waxFNPm6p7p+ZfGO1FBBjyHG
znjPf3HqKK+fktT6em21c/R3xH+wx8Srz4aeEPi94Cn0n4h/Du/QJNe6TfRSJo94
5/493V2Em7luq4IUkV8N69ompeGtWv8AR9WidLu2lMMmFwCVOMgenFf1V/8ABPf/
AIJWaj8eZV8TR/F7RrD4A7/9L0fR/wDRNVaRS4Jla+giUwho2jwSsoG0BTjJ4X9t
T/glP4J8Q+Evjf41/ZQPjT4ta54Pvo4LtLO2+0wYBUXMcVwqKp8pZFzkk8EgkEGv
7to5zl1Kq6Lnaa3P5hwHFFX2zi1zQfXsfzD2yNISI0cqDycYA969D8P/AA68beJ7
O6v/AA74Z1zX7OCNpp3tLdpFhjUHLOQOBx3r2j4p/s2+KvgD4jtdJ+Iuky6f4lsY
kbXdAuX23Wlu+1o0kI43tHLC/lqWZAfnCHisfw54ntfDEcl5Y6rrNvY3SSLaQ2uo
mCSxlPRpR5bo8eVXjuCea/T8sp3pxnDVNaHp4zHJvmgtDjPEHgDWdE8N6B4lvrNd
MS+VzBHIrLLKFOC4B42jgZ9a4gb1ZS+flHX1wM19sv4B0L4g+AfA15oniSbxDqSB
bW802S6dbhZBKS0CI25QhUmQS7vl3NkDAFcB4z+Cui2HxE0Hwx4S1LVL/Q7mCK5m
umtmle1QOTKV2j96sY4LKMEqcZBBP0+BnKUrHj0s0ppe+7NHl3iDwVqug2mhTXNj
PGLuyW9jkB3Aox6jGegPNHhvxNqWiPY3Gm39zBPbPviZWwI39V9PpXtmtLfW7z+B
jqFl4pt9CuHtba7hiePMWcFgdobYTzhgCM9M8V45qXh7VPD2oT6ffW0ELhUkbDhl
UONw+YcZx719fhnornz/ANdhXjKnPv8Agd94r8fTeObfThfwsuswIIRKgAWUdsj1
rh3jlgnK3EbRuoAIrNjIi53Dd1FaCTtI0j/IZGxywz/WvdpO+xx+zUVaK0N7Sjvk
VQwQnvXdaNePYXMMypFJIjb0JHQjp+tcJY28jhZMgZP5V01rLtBjJUEdeRmvShVt
Hl6Hy+ZQ520j6A0rxPH4kuwuoaYsmquhUtarjzuOhUZGT06f4j3O9XSfiRFoVr4b
v2Hi+y05bS5h1ApbtOlvGsUUcEigb8qMBHG/CDLMSTXyF4Z1u90HU7TVrBxHcxZd
c8jPTB5HrXZWepSXUhuTsFwSzsS2C7k5z1ycHnArWpgFNe5p59z4DMMLyt/yn2R8
GdXb+1F+HHjjXbnwv4YmvopY77yN7eHb0sii4j28rlchgOMAH1r9JdI8Wal4J8UN
Pqd/Ya34ns7uz1mcwyv9h1yVHk8vV7VhgwFInt1ZRwjxlXGQwH5o/AXwk3j/AFUa
Nqzaha6HLJEdQ1gWcky6QhOFmuBHmUWwYgSOgYonzKGdURv2J8c/sHfGXRvCc3iq
DX/Cvi8adHI+nXVq6QiKSI7JIL1MlVe5JLbEklUhvPUN5hK/jvHWOwCxsMLipqPM
rWfW58HUyrFYiUq+DTThrdH6caT8fLX4hfs/6T8RfFXiXQvFeu2uqpYaVrjaWtxO
qscSWuoIhMbRuUjjkQAB1lR9uCxH8cf/AAWN/wCCeGj/ALNnxAb9oP4EaDJZ/Azx
NO011p9tidfDGpyAyPGjjObSQl/LZsEbSh5UV+q3wD/aH8Q/BTUPEV34Vml/sXUt
Pe1vNNld0eyuUDfKmd4M0byPsdkdWV2R8RyuyfW9xF4X+Pfwy1O21rQx4i+Futwn
SfEFt5yPJpplTzJluFQYiRX/AH8MmMMJQN29WSv594n8H1NVKVT+HLWD6eh97wL4
7SyzG05yT/lnH9T+Cx5I1LCMs0QwoPWivsD9uD9kbxP+yD8b9Y8BNdLrPgC8B1Dw
xrEn7uPUrFjx8zAAyJnYw/vKe3NFfx/mfCmNwleWHlBtxdj/AEcybP8ACYrCwxNC
acJK61P9PfS/hf4W+AcPgey0zUdH0fw3bJcXFst5EIxbBI8hcDI37QVGR1bK47+W
eDPihoHxT+OvjTUfFmh3XiPwpoFnfRLdwaPPYSSxeQkyiMSlWuwpLx4XCFtwPCGv
0q1HwfoXiY3Vxq9vBeXUkRiMjKAVgD7iqsw5ztAOCM1+Mmv/ALKn7TvxH/bE8T+O
NXs/hZr/AMBYZ7OHwq9tqN5pk/hFoLnfDNsjd5LqSWQ3CTyEqWjkwrKMofouHc1p
YpznXlyyktX6H4Fm+WVcPKPstU7aJH5V/wDBRX/gmnF+058ZNY+K3ih/FnwYluvA
9t4mW81S1W7t7ZXvBFBZzR2wZWkVHQPKSNpbJJwTX8m/x9+GXiD4VfFTxh4G1/St
P03VtOuHgMVvKskTccOrKcEEYI+tf6zfgb9njwUnw18WeHdQ+HOm+HNT8QQTW3iO
ey2Rz61I6BJZt8JyodkyoG3HB7c/50/7Zv7OPif4c/Gj4y+GvG2n+JdJ8O/2o0EG
p6/ZQJLJFDdRxAxOgEaph1X92znO0FAWIH9I+BXHixUp4LETVoL3X3RycSVJYDkq
OLafSzPzI+C+iwTXt7q99rg026sIlmtrYz+XNfMzbCkDfdymdzBuCvFfUXhX4Xas
qatLHfSxan/ZFxfPpjyPbXFvCykB0PUKSqts4Dbc8Dr+gf8AwT0+An7G/wC0tH4z
+C/xLtvEPh/4nShbvwvrmhpdzTM4JzbeUX+zmNgVw4WN8sck9B6J4M+GE3wb+KkX
g/43fDKTwvpem2uoeGNRfW7We4S2QIZLeRJJ2LQmTc6LCsnll4sq8YLK37f/AK2U
44uWGh8S1+R+Z5/n/PF1Ixa02s9T8YPhTo3iTwl8Q7y01BoNNvFn8uSPUkzBMSek
knQA5Bz05r6S+Ongfw54k8JG38GaP4C0bX49XNzeCO4f7cqEGMhmYbfLRtmR338Z
2mvtA+CP2bvD+mfEe58aaXF4xF9bSX9v4aF7PY3tpKJGEUdresjKwwrc+WUxgAsR
ivmX4Y6XcaX8YtV8Qxab4y8OfZNFbxJBpFzAkVxqdrbjBXaC0c+dnm9FBVZyCmAG
+/wWP9pZTaTauj4unn0sXXWOhePJpbufm3q/gzUtB1LUtNuWtLmS2bY00EqtDLzg
NG/R1Jzgj0rBjWSKQoF3MD+GfSv1Q+PPw3+AWqfDN9U8Ew67pHiWE3uoxyz/ADw+
IDI3mRQWHlREQw20RYMHGGZGG4AKzfl9BEwWNQ4ZA2cY5Y/Wvey/MXWi5NWtofom
AzOOJp+07nqfwvvNMj1mC21a0jvrOV1SWNgc7SecHtX1tY/swXHjGz1XxH4H0zW9
Rt4NU/s/+zLW2NxfBWj3pIYEzIIyA4LgEKVAJ5FfOnwY8Jxapqd3fajtbSbZRLOo
B3yA8BEP948jIPFff/gmz8X+EIvCvxJ0zxbfeE9R1SWaC3u7G5H25ZEYpI8aR4YR
qQQ7uRvZTgsBg8WdZpVpUnKjK1uh+YcU5vOnifZ0XZ9T59f4GXHh+Eya7Za9ahox
MkUli6vFEW2iR+Pu5BX2PBxXQeEPgve6nqlva6JDea1qLsRDZ28QMlwmPmUA/wAQ
GcqORX6UeINI+MmreDP7S8K30nxA0JtF+26hNo9jb3CMDICyXh8hZR5iiObYUIby
ycMUy3YfsXfs1eJv2r/ir4l8OfCjxc2gappVm+teHdTvpxZ3Ok36Tqgcx71b7KzM
vmrCWYB1ZFLKVHxWJ8TY0cDUrYqaiodevlpueBUy7HV8TChSd3P7vv2PJPAPwe8O
fCHwL4K+PNz4l8RjQT/aAi+zaebdrW9jt3e3hkkyGaTzUUsp4MWT0bI/bf8AYS+M
Xwg+JPwQ8QfCbV/DWn+F/iz4ag8jxDNDvnbxfbySyzQ3SorEB1eUje+do2pvAIx8
nfGz4Gar+zh8PviL4K/aq8L+GPDnxC1rQLnUbfVNL8SxXFpqOotcKLO4tNJCqrye
Ygin8uFP3LuzswAavy38BeKNW+HPxY0bxdq8F5o+jabf/wBm6l9mvttzJC7CNyZ0
UGUKrs25QWKxn5egP5TmeAp8U4CpiqlTlnSacGuq/U9nL8fUyTMY0XHmVRNSXY+u
f2vvhbb+A/FWreLPBtrGfDFxqy6dNcwmNUmud5FvexKjExwSqGibJyWQtwcY8k+E
/jKHTr6HVbS0vLi8FvJZ6tpcM5txqEIIXjbxuBwRGwK5QYAzX2pL8DJPGOu618Ff
EsGhax4b1XQ5tb8JeNobiSaefSRbyzRwCwZxJezxzO8vlxu0yhVCxsHBH5q+MPC3
in4d68JtT+0RyvO8U91BFKijUImC3EallBDK/wA4G0/LIh5zx+lcJY+hi8J/Z9ad
5xirX3Z+JcfZFXoYh4ynG0Wz9BPjJ8Mf2ZvjL4Q8P6B8XRpvxQ8CQXEepaTfW8RS
70m6aEiS0mVhkbg4cgcZTnmivnHwp4g8aalFeXul/wBmP9sEdxceYHJuZFBHnKED
bAS0mRhckkMPkUkrixPAeEdR+3heXV6HHgvF7PMJSWHw83yR21P7KdB8YeINc1zW
ba8trOTwlpcaJHHED5t9M6lg2ASAOAFGeeT0xn0zwJqmvXltBqGo6FFpFpK2Tbxg
FogTnaTjqCcg9iTXxr4X/Zo+JMXiK88R6D8RG+FMd7qUeoXFhDZS3ixweXCptZUa
UJI37ncJVAGJMum4nH33pl3BLbRWryXUMiHa8jqCzEfKTkcckdOw4r/LvNoQpycK
T06n+peRSqVbTqqz7noVjLMwQrGIhkYVflyBnHT6/n9a8J+Ov7L3wR/aM8OJ4J+N
XgLw7448INcrfT6fcw7UkuFbcJN6bWB3bWPPJUE9K9q85oVhSBH3BByTnd715r8S
PjR8PvhTps+s/EHxboXhO3hVzu1G+it1uMRmTEZcjcwVHO3qcdhgniydVaUuXCuU
X3T1PoscqNSlfF202PkDxh4W/ZI/ZL8Otp3w/wDBPw2+EunopkeLRrSC1uXb7w3S
L+8YfLjBz1Ffnx4r+LP7PX7Rmh/E7WJtL0fxN4fbR55fEd3JaRTXMUUMiQiOWFvm
jB+0q6MSAxyQcg15R/wVo+Pn7Mdr4j+FniXwvc6T4g+LniHQXu/7ODtENQ0ubCx3
UMx2kT/KQibtrKfo1Vv+CJeiWM+s/tEXa+DryHRNUFuL7Vb6z81lmhkVFsheecYz
EplDLbE7wZmJBCqB/UGR4dYTJnnNSpJ1VbRvdX1P5g4iqyxebf2fBJU31R+ZOhfs
NT+Ffj5oHjn4m+DrfxF+zpal/EkCSzREtYxu37ub5jlCp8wRITkvtA3cV8nfthft
BeDfid42174r/D/4Z+FfB76zqG7wtPoEUsF6sdoscHlzkgDdJmVyEG3YduMiv66/
2tfAvg3wb8C/i54c0GPS9Vsta0ObytN02N1BCKJRNcNG7ZYbB80MAY4GQTzX8JP7
R3hvWPhRdeBPCmqaloniqWC3ne2jt4p4k08sfMaG4guI45nlDzrL5wLRshUrn5lH
774VZ/HPa31nE/FFWivI+KxeSSwWI+pRkpHmnxtg8UHwnpuoabpGsP8ADPVSV0y/
aNlgibfveyLbcO8bZ2t124FfIrWlxbpgxsnddw+99K/SL4G/G7XbL4VeLfg3440L
wx8Uvh7fW819ZaTqFs/2nSr5VJS7tpY9rowO7g71IOD618Ea0s0Gry29xFcWOHYi
KZTmNSc45xxX9EZRKS5qFSHK09D3cFjY/wAFdD6S+B+q2+p+CfEGmQ3dnYX9iyX3
lySeX9uQ7YxGp7MrHd9Mmv0c+Lvhvxh4g8U61e/C6wvbnwXpep6laaRNbwvFGyvc
YNtBhVZcKIgYedhdmLDzK/KT4M3tpZ+I5I5bO1vjeQSwHzF3gFlOGVdygOCBg5wD
g4Nftt8APE0V74di0u/sPD8Gg6jI011pdxZmR3uFtUBkjMwZ1jM1qt1JKz7fkdyp
JUV8fxtWnhl7WKunofB5tg6dbHOja19Uzgbf9oTWvDl54T/4Q/xBdeH9DtorO8gt
7CQQTWs9uqjy5mwrGFyhDqpxtJBJyRX6vftaXR0vxV+zb+0b8A3m+FHgDxdajVzq
1jCqXHhq+vVZZrWURn5VlWUOoYY+QgBdpB/Gbx78PJvBOsaf4itore10S+jNxE3n
xu0Eqkb4n2HaTliV3Aja2CMEiu38G6t8VfHmnyeBfDetapreia1pBa6szcMLe2gt
hsMUqHKKsEaoFBHG3jknP5xnnDEMRGnjaEo2Ss4taNPe/e3Q87L+I62HnVwFaOrt
Z9U1/mfSn7Xz+BtOuvD+m+MvjH8TPjZ8btHhniuL3U2WWxhtjP5sKo65KrItxKdy
nKBV3YAOP2b+M37KFh8MfB/wX+Ed98PfAXxN0S60q10TVfFkkUg8icSiSOC9UCRz
FPMZmjmwGjY5yYxivyY/Zy/ZetfiN400GPU/jv4d8UeLL+3fTtH1KLUr2yTw/ILZ
vsz3azxJcyp5qx26iLCZfG4/KF+tfhz4I+OPj/8AaG8PeFPh7400n4ZeING0O48Q
pq9zrN1f6L42sLeOGH7Bc2qXAlD211Fdwk7xKXdppAZNxk/G+M6lNRp4bB1+WnSu
3pbV6/d2P1Th/CTqOeMxlFSnU5Ute1kdl+19+xevwz+Hlz8SPgz4U8XaX4V8Iac+
pxXlpqUlxL4Xv4kS7g1CHzPLVra2dHXMRPySDoFYD4V/aJ+Mfhj9pDxz8Gb7StT0
iNPGnhy1v/FmlWOTdWfi22ililV94JjEnmKCAQMRoMnaK/po+DPhib4i/Ci4s/iL
Lo2qaZrWnk2seneIJxBq0bLLCLe7BOWcYaJpJAwkibbIhPyp/J3+11+z98Vv2fP2
oNSe+0TTNQvPDmnx6rLe2cYiOpack8kUM0qRKCjGPZCzqckxhiRXp+CGd08bmHLi
n+8o35X/ADevoeL4s5RDDUY1KUL056tdUzyDwP4z8L+AdTv7bx3p/ie68HkSw26W
F3sns71XUPFvjO3ZgOxXHJKHnmiu5h8Qa1f+CL6+svh1p/ibQo7+xGpafut7fUXu
JreaazuyIuWh8gzxFtz7mRHbaXRaK/pWtnNHnam9VofzFPh+N7qJ/cZ4VsnjstOi
v9RvdQuIoUika5HzFwo37sKMnduPHAzXolu0QkkhLPKXJfCqMc15J4Utr3TvD+jP
res+bqklukkgVcgEKBtUHnIwcnvXodil68X2gN5JbiPzODj8K/yCqxaqSb3Z/rBl
taLoxjY6+GaONnZklDgYA3Cvgn9t79gjwN+2brHwf1/xv4m1zSIfCt5NP/ZqN5lt
qltKu2aKSE5QlhxvxvGPlIr7qtdOsyFaaLzZ8/MRIxyfzqXWbCXUbK9tI9Sm0uOW
AwiWIIWtj/z1UMCN46ZrqwWPnh5OUOppjsBCvTtPVI+B/wBp/wDYd/Z8+Ouk6PH4
i8O6ZoXieKGLTLLVLeyiD2NsG3/Z0UjaqnPbnn1r1z9nz9lj4NfsofD7UvB3w50P
UbfS9XvW1bVbm4YPHfXjoiF5AOAdkUacDhUA7Zr6Ct7XR9Og0+ygna+jjwhnlKl5
GA+8R0yTzn3r52+P/ia1tJrOxn8VWPhfVsSm2vJJlkuLcCPcfLhcDze6gICRnkmv
r8tzjHYzkwnM2ux8TjstwODjLFOCuj4Z/aj8L/ED4JzeKPjXpHi6K7+FqtJdanFN
qKxJE5Aj/dN5TLDEnAzwMCv5L/8AgoN44h+P3xW/4SKy8P8AiG+0Pw9pEOm6oL/R
ksLnSpd0zoj+X8jo+6SRHGQFkA6YNfrR+39+2f8AtJa2tr8LPgU/jXxd4X1U3Flq
D+IdLWJwYQ3mwxu0YaSJ1BI3sVXIGGxmvxY8OW/jSyvG0X45+HdV8GaXrE0dpFp3
iG3u30lLaHy5XKXZbz4o/NS0D7WAQSPtRQwx/a/g7lDwVGOJxMkqvRL9T+as7xX1
rFSxFGNj5q0q90v4aaxN4j8P6vdX4+yG2KvC8TuCAqmNWyVHHPuCOhr5e+IPiC88
XeJdZ1LU5BeXnkMyugGFAHGcelfqx4Zt/AbXVp/wrHQ7HUtt6t1Z2WoKLhYlViI4
/MbiTKjGDGDzgncCx/ND9ofwNqHgz4i62GtDYw6jNLfxQr+78tJDnYR/dHIFf0vg
MzqVa3tK0WmzHh2rTli5RqSvI828DeI/+Ed1T7RkCRR+7Y9j6g+vX8a/XD4deOdY
8aeGfBuseG4LnS7Xwppl/DLc29yUW4tHllmbz0B3kQid4BgH5CgxgV+L0aEERyFM
dMD6etfbH7P/AI1nsfB/jHSo7a3niuWSGWeRSLm3gd1fzIpFII5hII7iTpkA1pn2
DjiaXsnsacZZa1H63RdpR7dj7XuPjAdatntbXw5oUGmTb1ay+/D5jRCLzMAnazME
bud3b1/Rj9m74aeAdU0X4Ra74P1zVvCnjvxr/a3g6G+t5zcWPhe7VFtopdXfy8QN
fXKSKodlPls2zfjj8ofDOhXGpJ4t0dbOMeIbK3XWWDzIDcWDbUmjhLfM8is8UwUF
gSGJx0Ps3wJ8XSeFfEut+DrjXfBNl8PvEls1vrFr4iSZ9OkSRhGZCkUiyRXEalyJ
eSDIfmJVSfyDjXJpVMG4YKXK4Wb8z4vhyr7PHe2xfvKotH29T6Z8Mw+JtJTWv2fN
e0aOw+JWjeKHSI2sIaBblHkkiikcbViiZzsWRmwisDwSQf0p/Z8+CvgP4MX3gb4q
aL8R/Ft34dxc3ukXVvpc91O2jSp9muNNayQsIrv7SgSZWG2XejDDAivxj1H4mfE/
wJ4x+I3w8g1608IWGp6SuhPdaJKrxrpSyqyP9udDPLEVZk812EoSXbvVc4/cD9iT
44fDJ/2adY+GvxN8P6bbeKtNvxeavr0Mk9hrUFuwlaXU7gxKPOkgkkTcfmaRRufL
Dj8c4+yvF4XBwdP4JJXVk30vc/SOCcfhq9edGp8SvbWyPlb9q/Qvir8O9c8JfETT
/it8WNP/AGPtbu28d21rozw2t9ZpFLD595aQKWXdE97G5jZk+VJBhfvV88ftZePP
FHw38T/Cnx34kuk+JfgHxJoEN/aatHr51ENOSsrRiZeVt3R4maJjlfOYchVr7S+N
vwP8T/AHwP8AANb3XPCv7QeiX/itNV87/hJtR01buR2EsFzaNG48u6SSONxFHKFv
GjQNC5iBT6P/AG7Php8OviN+yR4j+IWu/C/4dWPxoXRI5dV8DLq2nG+0SKK5cxXu
m/Z0KC5kRHYxD5SJHUp8vPmcI8T0MJiMO5wTUvdk1o9erO/O+H5YuhVfO1y6pPax
+Nvwk+Lfwy8M3HiLxZ8PfCOj67bXhijm8L6vqhtmsWdd5uIblgrNGHWRAo4ZXjJw
VAor8+Phh8ePGPwZ8Uav4o+GWpDSZLuzFn51zp8N3mFnD7fLfiMlo84UkZB9qK/r
+XB/tHz0pe69tX/kfhajOOklqf6JnhrUL2b+xrqeWBYzHiKKQhnjjHqe/U13Fn4v
/tKaeeEvLCJDGhVcjIA6VgaBpulySR3llYWqEQiMOGAGPetnS/COk2IdbBruTzJD
MytMWVG4yEB6DjPHfNf41153mz/RTLqTjFJ9D0DTLstxMxjU/MTt5JrQudStQAZh
L5Y/Dce1VLUhfLEMexlG0gHP40/U7WC9aJbjY6gZJ3fMT6ZrGR7DV4NGOttYWrJO
kMZlQt8jHHJ5/rX5k/teXup6/rWlA+ArrX7K2guEuJ8MWU9jApKjIwNxB5xX3N49
8SXejyQQX1rp0MErKqsZm3rzjOAODVC51eJZ0tlmsZ7GGFtlvLtYSuB1x1I+tfZc
M4v6pXjiLXsfm/EuHWMpulJ8tj8WtC8UeMdO8K+IZob/AMLp4iS0DaS+pQ7pIJdv
ys8DsSeuML9Oa/AT40a3+1r8WvEfhHxt+0h4v1jVNItmvrO0Ww0RUjijuVw8kMaf
u3kbJQu3aMdwK/rH/aD1m01HS0XxL4l8C+E/BMcGbtY9Lke9M275UjFscAEY9Gx1
r8Q/2uI9G8QT+HbfwX421r4lulkbY2miaeNNSx2sTGJRNnG4sx+VepJ71/YvhbxF
CeIU60U3Lq+h/JvGUcTgaclh3+B+Rfw4+D2sWPi9fD24alo0K+fJcafci4FlEOFm
kZehVmUkD0wea+SP2yNM1qPxXptrq+oS6xBaWKQ2VzPHiW6iBOCxHQDnA9K/XWb9
nvxT4A0xNd8WeHdc0i2ZUgE8SyyXMkrjcIQ0TI08g4G1cJjqQea/Nj9pq60d4PFl
1rFv4i0XX4rtYrK3eIQhIVXkSxmR5EYnkEsQM1/UeWY2jXnz053X5HxXCmaYlZjF
zi7s/NFIHihFyymEHmPdn5sHqK7v4Z+J7rQfENqYhLPFITG8IYjeDx+nBqbRDqXj
W+stDihmvra3U/MwDeSvfnsK5uaGPw94kWAxhRFcZDY54r6SpOMW5N6H9A4hxqxn
RmtWj9LdETxFe2MfiedvEGqy2t5/Yt4yyztLdBk3RokyqE4TZtVm5dRwQDXX6hDq
vgfVPAWsataWdwI2ttVtBH/qtRspCDkYyFxlkORkNxj5RXi2heMfE8Pg+90/wfPq
tm2q2ovL7+z0SON7NN6zKXA3gMZdhj+6ynBBAArR0bxrPrXgPwx4euoLARaTc3kv
m+WqyyG4MDFDgA5DQNyT3PrXxVSnzuVKduV/efimbYKVKUasNHHp0PrH4x23wa8S
+GNF+IvgLxH4nu7l7l9OvdJ1eaMzi3h8tY4oynzvhGUh3ABBVfvI1a3wo+LOpD4o
aJ8Std1DR01rQ4riW90/yZXg8RTOXZraKOEFHZoiFw+AcDhuh+W5o/Dtve+Hprr+
0Y9OkRjeiCSF5VmUnLplRtXcARnOOx61sfC3xPrHhzV7fUPD/iifw/rT2kv2LUbX
UpbGfTmXnyVniZXj3Kij5Tj5ehr5XM8itgJ0Je9a9r+ZrkuYOWYQrWteydj+gTwf
+0f4U/Zt8SxfDnWbXSviH+zFqb2ev6d4R1ZU8/wPcNC1611Gs4ZWt44EuJVScR+X
JAqnywFc/FHxC8R+OLWabQ7/AOF91rPiLVtYvkttUFi91/ZmoxgS6ZPb3Ee64DLb
ookRcQyRokqgh8n7h/ZF/Zhg+PPws8P/ALReg6tp9/45v4ZtQB8VRpcajbO+nrF9
vtNahTz4ZINl0I4pUlhAnlleMuQW/M3QvGt/eeCPHHw2uL/4y6Ro9tqF9o+i6lrG
oi/N1qNrExbSr+SJ0ivEDSSpHcZUlCCETcyn8I4OjhZY/wBnye9F2d+vofs/E3tq
WEjKL3/I/MnxP8V/ENrZat4W8V6BoFlfwa3cXrSCw8k2c0ufNgChcqrFVcIfu4OO
GorlPEV14o+IGp3+u2sGpXGu2bRWGpeRO8twX2kK7M4aTawhbI+6GXjGcAr+2MLK
fs48uisfnEsohVftJJ3f9dj/AE2tCR0toLS3jAAAwduN/rXe20hhUllEbBMEgYAN
eWW980jR2cMgtoABuYLjIH+z0Fdla3jeWJ+WYnbErt1GPve1f4hVE+a5/ctPEK1k
ju7RpZcLHOrErvJHYGtJFRFDRESknBJGcVzenyb32meYIFJfaeN3+cVcluCP7OWM
tBHIDG7n7xGe9Cjc7IPmV0ZninT1uIJC0Iu2CnYHA4+hr5ov7ZbW4vLrWLS1QSZU
AA7l/wBomvqS9khZSyxEIkewP3HPT6V87fE2Eamy6JDbuJMYmw3Aj6Y/lX0WWYhX
UWj5LP6C+OKPlj4i28mvaellpOnaMbKCTcLy5bfucH/lmvdvrXmsGifCfw7o6eLf
ipP4b8F+JGlxLJKn7+dYf77/AHli98d6+gNf0w6LYQW9givZQKUMbHyzHnuMdTX5
eftZ+NfDuleG/EVnf3z2F75UrsjOy2qgf89VXk1+6cHQliakKFKVulz+cOLZfV5O
bjueb/tvftTeCbfwhpV78K7z4d65PbX6WkmtX3iDfFYCVN4P2aECVcr1+Xopr+dX
9qXw1L8Q9D1H4i3WnppdpcM0y6/qsf2N9cYjzSum2TEv9nAcDz5D5ZHRiflr1q++
PulaprGs3Vl4l8PaROXLWs8ugRSrCy8qzS3Dsu0EMRuUkcV8H/Hvxlo/j+4vNY8X
eJ9b+J3juQ+TBdyzborcAfKsaLiNF/2QBX9h8JZHHLqKp05X6u58NkLqVswWIrQ0
6WW35HzZ4I8WXOg6X4utLaytyt5beWt3GcPFiQHKspx3xXPfaZdb1mxhgt7mWZis
WXfJZ89c1f1PQdT020VNrxzTASEMflX2rqPhzoesWniCPdpbXzWsT38zmHCRgKSp
Z/7uQPrX29TFu+vU/W69SnyzrQWp9geC76y8IeI9Fj1yWzsfCmn6Vc2kkt6kkkMk
jgBwRF85YbiygZ5Qds4+rLz4W+FPD3i3XYrHStTXw4mk3mgz22oCIX9jrVvbyEtc
iJiI5TIF3RrlwXOQMHHw14dOp258S+KNLxq+nCyknmecCTyHaVF3vuBVSrFQzEEF
GI4zkftj/wAE2fjRo2q/B6f4b2srN410668+1EKvFBKJ7cWFtNdiNlO6LyrNXmix
mJiW3MZXf8v4x4lnhn7ahqouzR85lGS08UnSr7y2Z+Tl9dwx6VHJKIplVTvkO75Q
AWxz7jvzVu30OCbVNM8Ma2l94dv5JsTagES4VItsZQmMleCEbPzDOcc5xXoX7TWg
2Xhfx74uh07S7/RIhcqk1jOC0um3AkUy24LMSMPuAfjrnqTTPCHwi1X4qLrPw4vZ
rDRPivpuiWupeHbcpFu1vT5YGuBGXzteQLLGqtnPDjqDXr4jiaFXCQqX0kj4rC8K
1KOJcYbxZ+u3/BOP9o7XP2fNC8J6HbfE9PGPwbdp/wC3r+8UaZBouhhVmmlsYWuV
le5ihd5AAgdvlWFLnY2PAv8Agob8W774a/tFeMfhrb3nhu70m/uodQuPD1kUFzpt
zJATFeI6RxvbyGIxh0dF8wGNsZJr8nNE+NPjP4JyePfDcUuseGrnUxLpfibSJIYf
JuLZVj+R0kRsyK4AZCCskbMjK6s6t758fvipp3xI/Z08C/EfQdH8DaC0uoJa6iJZ
Y1v5tVTEl4FtoYkLxrPK0ySSyOSlxtVRscn82yrII4fOo42DvCf9XP1XFXxGAVJq
0kfLXwv+O2q/Br4leMvEOn6jbxx39sYJi6nEjGRXUkFWOQA/BHGTzzRXzfrc+gaj
401Z9be4hsHiEgEGUO/5ccFiQOZOM+lFf0S8TUjpF6HnUMqg6cXKWtkf6lOkanPe
305RmkaVTLHDGNxMmFG0gduW/KvQdMuIonklmv4IlRQHdsNgdOB6ZGM18Oab8Sbn
xl46l8F+ENStNHi0+O3uLu6iBJcN/AjDqThq+n4v7OvHtbRZ5Li1tmWZYjcbS74A
ZmA6kHt0r/IPMMvlTa5j97y3N4zjZHu2j3MdwXtIS7SE7izttz6celXpZ7SSVbi+
juHuLYmJY92xFB7u3SuF0i8tBIXgklkZpHLzYwowAMn09PwroY7HTriE7o3it3Jk
KtJ80x6kj2rw1JqVkfRwxT5dEXdQ1mTUJWtbPdu2gP5XzBOeOR7YrkPEC2Oi/wBr
z3scUt0AFkJPK7e7en41ryeJtN0KJFt7AlSp245Z/QV4x4mF54j0rVH8wR3Mx8ts
t83vmvXy+H7xN7HkZrioqi+rPl/4m/E661nUJdI8I6ddaneylo1EaA5cHAYY6j3r
8gv2pPAGqfEa2u/BieNI9H+Js9rPc3tstu1wbaMSKgMoQEopdlTc2BuYDqcV+6vg
74aWXh6efUWgt7q5csBcOfmjXPO0e1ecaP8AAHT9R+NGm69qWgXkCzWN5Jc3saqp
1CAIY4LSVz84Efmecv8AeYsT90V+0cN8U0cDWTilofhWe8L4jFLnq9WfydeEf+Ce
3xe1nR4dU8b/AAr8O6lOb93SH7TFaarcRofmS1gmCCcAk5IO0Y5IHNefxfsm/Dab
XdU0uPw3Y+D7/TpG/ty2uL+KTUtNmRyJImhllCxSKOSpH04r+rT9oT4eeMPC7Jq/
gnwl4R1fSraQtfpJp8DXIQtuZoSVyG4PzDGDX8937cA8IeKrfwz8QPDXiPxBofxA
urldD+0TwLFaR4fzFtJ1XDGWJWlZZjy65znFf0LwZ4hSzCSW1z8zz7hyvhpez55L
00PhnxZ4J+CGuRRWngk+JrfVNMiNu9/d6cPJdgf9ZLKgaIqCMcHJ6V8fav4L1DRf
DetXejfFXQddivLx11NbRJFkMY4CgHG5Af4QeK998V+C/wBoKLRdX02+0nWdXvLN
o2yxjuAsUhyskeG3bWU5yM8GvjnxRoF34Bh0yG68QWsmq3nmPc6VIDBc2/P8J5xn
8vWv1jEZlGMFrcvhXLMZ76ctOz1P1U/ZB+F+neKf2PPjB4m8PWeq23xs0H4hWMuj
X6aTLLFq9q1kgk0wzEPAxZHnl+zndKdqyBHVGB8Y+DniHXvhd4x8baBomo2sWgak
ryW94mzfcxRXauvlTxErhWCrI0TOnyHaflG7vf8Agn78RfFi+Afin4I0/wCKV34W
0sEakdJiuYI2vIGEVveyTboyZbf7KzRtAhVpMHnarA+R/FK9fwl46s5ZbyXTdbd4
76yvNJtIrdo1ki2/Zc7VKoofcgQhCoVdgVFC/heHx1Sti6+Fqaps/ZMbhacKNKcd
HFH1d+1L4au/jF4Mi+O2lW5bx1qmnpca5pMt5bRXQmt3WGeeBPMUqWLRsSwIG4tx
wK+Fo/iFB4h8G+B9HuNSuLDxx4bu2fwtq1uqpbx2Ur+Y0Nwc+ZtDxq0THcMSONpB
Ffbv7Kvj658d/Ee28Ok6BamyuWn8NaVcaaHuru9lUwXFjLcFQscN0HYGeXMULshG
GII+OfjN8H9F+H/j/wCJfhTw14iP/CNWls2ueEb2XztmtWTlWzE7Ab3WJiN6g7ni
I6g16WW4xJvA1Oh5uKw8pKOIprVn2J8KLP4Nf8FAPFfiLwX8arDwz8Pf2q2uUs/D
Utlb/wBn6X4mtHi8vydQlJQ/ao7tISsozLL5wj5wAPjr9uX4NT/s7fEX4ZeHPGun
QJJH4XttOaSyW4Ftq4tw8Sanb3EsMJmjcqI/MSPy38oMGO6vGtA174hazrWn+NPB
zatrPxM0ELcQT2bO164QMyTHbkOyFC25lKEAKwIcg/T3xF1/Xv2qv2RPF+oxa74d
8c+NPBmvJq9vZXUkltrGi2VwWE1rYxE7bqAbbdmRVH2bIVFVARToVqmCzCF5Xg3t
2Pdo4eNSjJW1Pyf8Xamy6ybl5DmWMZBwNpBxjJ4PFFcd4z81JbUsXViCcMNp9/lP
I5or9znxHSTtFXRrg8ppulG5/Vv/AMEoP+CxVl8ffHl78O/Hvw71Pw/8VNUtI7Q6
rpEML2TxrwMxvIrRtz1UHqa/rE8GaPanTbeW2muYhLbsrMwBkOHBPze9FFf5k5s+
aim9z7mrQhTxbjBWR9OeF/A1/qXh1tRs5NPtbN3Z1Uu2/huc/KetSWngXVtS1TUi
lxZDyJIbRN07jAeITE8J/tbaKK+Opr94fQ0UuQwdY+FPiV0ub1L/AESKNZGYrvkL
Y+u2ub8MfCjxNqQmu7jUdIa1LFFTzZM/U/JRRXuQS5T5XF6z1N+4+D3iO1kt5TqG
jvboSgTzZBkH1+Ss/wAI+Ddf1DUtXvmm0dy0wliEjyHyo/Kxkcff/TFFFZUJNz1K
g7xszjvjV4S8beHrKC60afw0NTm2webPJIwAZwM42dea/Fr9vr9grxX4e+EnxA+J
vizxL4A1iPT/ALP4ngisrF4UFxZtFIm63KlXZo1uY2YuM+YOKKK/UfDrETjVpqL6
n5zxzSi+aTWqsfz5/td/CbVNG/Z8+GP7UHhfxLJoeqJNNpGoWMOY45Y9zNCyhcAs
MupJx8u0YbANfjX40stSuPGGkajq2oPqV3dWy3YkdiShbtg/X1/Oiiv6hwVaUlqz
g4VpRerXQ+3PhB8ZfEnhr9jj4223h3ULzwzfaT4k0zxGt1aRRNJeJcW81m8MzlRI
wCiRlCuoy2SDivMfG8mo6Fe6XNrrDWbi2sRLZx/aHaGKIyzbFKt82VMci53E4CnP
zbUKK8DLqaWJqSS1uerncn7GJ9Wfs83FrdeM9P8ADXj7wpZahba6IrHRrjR9Xnsp
dMubiaKNp5zsYzIqylhFuG5lU7gAQbf7Rcel614A8MeOGvpY73wzqWoeF0tE00RJ
PZRv9oEUci3H7mLyrhUCBDsO7DHqSivPzV8uO5o76HNhJP6sfntr3jZvAWqaF4t8
Daprvh2K7hkktmiRVktYjKPk2qw3DEQyjMQ2Bk8mvKr343XugN8UtE1bSLa/v9du
F1OK7ti0Emm3pfd9ojZSD8yyMrRfcO89dooor6nBQVSreep9Hw0rwlc8O8Va/p2p
PaqILuGRVBZeCvQdCSSf0HoKKKK+kmlex7eHglBWP//Z

------------qTBjXnmaI6qvT5AepQBBtZ
Content-Disposition: inline; filename=show_ads.js
Content-Type: text/javascript; charset=UTF-8; name=show_ads.js
Content-Location: http://pagead2.googlesyndication.com/pagead/show_ads.js
Content-Transfer-Encoding: Quoted-Printable

(function(){var g=3D!0,h=3Dnull,k=3D!1,aa=3Dfunction(a,b,c){return a.cal=
l.apply(a.bind,arguments)},ba=3Dfunction(a,b,c){if(!a)throw Error();if(2=
<arguments.length){var e=3DArray.prototype.slice.call(arguments,2);retur=
n function(){var c=3DArray.prototype.slice.call(arguments);Array.prototy=
pe.unshift.apply(c,e);return a.apply(b,c)}}return function(){return a.ap=
ply(b,arguments)}},l=3Dfunction(a,b,c){l=3DFunction.prototype.bind&&-1!=3D=
Function.prototype.bind.toString().indexOf("native code")?aa:ba;return l=
.apply(h,arguments)};var m=3D(new Date).getTime();var p=3Dfunction(a){a=3D=
parseFloat(a);return isNaN(a)||1<a||0>a?0:a},ca=3D/^([\w-]+\.)*([\w-]{2,=
})(\:[0-9]+)?$/,da=3Dfunction(a,b){if(!a)return b;var c=3Da.match(ca);re=
turn c?c[0]:b};var ea=3Dp("0.01"),fa=3Dp("0.001"),ia=3Dp("0.1");var s=3D=
function(){return"r20130326"},ja=3D/^true$/.test("false")?g:k,ka=3D/^tru=
e$/.test("false")?g:k;var la=3Dfunction(){return da("","pagead2.googlesy=
ndication.com")};var ma=3D/&/g,na=3D/</g,oa=3D/>/g,pa=3D/\"/g,u=3D{"\x00=
":"\\0","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\x0B":"\=
\x0B",'"':'\\"',"\\":"\\\\"},v=3D{"'":"\\'"};var w=3Dwindow,x,qa=3Dh,y=3D=
document.getElementsByTagName("script");y&&y.length&&(qa=3Dy[y.length-1]=
.parentNode);x=3Dqa;la();var ra=3Dfunction(a){var b=3Dz,c;for(c in b)Obj=
ect.prototype.hasOwnProperty.call(b,c)&&a.call(h,b[c],c,b)},A=3Dfunction=
(a){return!!a&&"function"=3D=3Dtypeof a&&!!a.call},sa=3Dfunction(a,b){if=
(!(2>arguments.length))for(var c=3D1,e=3Darguments.length;c<e;++c)a.push=
(arguments[c])};function ta(a,b){a.addEventListener?a.addEventListener("=
load",b,k):a.attachEvent&&a.attachEvent("onload",b)}
var ua=3Dfunction(a,b){if(!(1E-4>Math.random())){var c=3DMath.random();i=
f(c<b)return a[Math.floor(c/b*a.length)]}return h},B=3Dfunction(a){try{r=
eturn!!a.location.href||""=3D=3D=3Da.location.href}catch(b){return k}};v=
ar va=3Dh,wa=3Dfunction(){if(!va){for(var a=3Dwindow,b=3Da,c=3D0;a!=3Da.=
parent;)if(a=3Da.parent,c++,B(a))b=3Da;else break;va=3Db}return va};var =
C,D=3Dfunction(a){this.c=3D[];this.b=3Da||window;this.a=3D0;this.d=3Dh},=
xa=3Dfunction(a,b){this.l=3Da;this.i=3Db};D.prototype.n=3Dfunction(a,b){=
0=3D=3Dthis.a&&0=3D=3Dthis.c.length&&(!b||b=3D=3Dwindow)?(this.a=3D2,thi=
s.f(new xa(a,window))):this.g(a,b)};D.prototype.g=3Dfunction(a,b){this.c=
.push(new xa(a,b||this.b));ya(this)};D.prototype.o=3Dfunction(a){this.a=3D=
1;a&&(this.d=3Dthis.b.setTimeout(l(this.e,this),a))};D.prototype.e=3Dfun=
ction(){1=3D=3Dthis.a&&(this.d!=3Dh&&(this.b.clearTimeout(this.d),this.d=
=3Dh),this.a=3D0);ya(this)};D.prototype.p=3Dfunction(){return g};
D.prototype.nq=3DD.prototype.n;D.prototype.nqa=3DD.prototype.g;D.prototy=
pe.al=3DD.prototype.o;D.prototype.rl=3DD.prototype.e;D.prototype.sz=3DD.=
prototype.p;var ya=3Dfunction(a){a.b.setTimeout(l(a.m,a),0)};D.prototype=
.m=3Dfunction(){if(0=3D=3Dthis.a&&this.c.length){var a=3Dthis.c.shift();=
this.a=3D2;a.i.setTimeout(l(this.f,this,a),0);ya(this)}};D.prototype.f=3D=
function(a){this.a=3D0;a.l()};
var za=3Dfunction(a){try{return a.sz()}catch(b){return k}},Aa=3Dfunction=
(a){return!!a&&("object"=3D=3Dtypeof a||"function"=3D=3Dtypeof a)&&za(a)=
&&A(a.nq)&&A(a.nqa)&&A(a.al)&&A(a.rl)},Ba=3Dfunction(){if(C&&za(C))retur=
n C;var a=3Dwa(),b=3Da.google_jobrunner;return Aa(b)?C=3Db:a.google_jobr=
unner=3DC=3Dnew D(a)},Ca=3Dfunction(a,b){Ba().nq(a,b)},Da=3Dfunction(a,b=
){Ba().nqa(a,b)};var Ea=3D/MSIE [2-7]|PlayStation|Gecko\/20090226/i,Fa=3D=
/Android|Opera/,Ga=3Dfunction(){var a=3DF,b=3DG.google_ad_width,c=3DG.go=
ogle_ad_height,e=3D["<iframe"],d;for(d in a)a.hasOwnProperty(d)&&sa(e,d+=
"=3D"+a[d]);e.push('style=3D"left:0;position:absolute;top:0;"');e.push("=
></iframe>");b=3D"border:none;height:"+c+"px;margin:0;padding:0;position=
:relative;visibility:visible;width:"+b+"px";return['<ins style=3D"displa=
y:inline-table;',b,'"><ins id=3D"',a.id+"_anchor",'" style=3D"display:bl=
ock;',b,'">',e.join(" "),"</ins></ins>"].join("")};var Ha=3Dfunction(a,b=
,c){c||(c=3Dka?"https":"http");return[c,"://",a,b].join("")};var Ia=3Dfu=
nction(){},Ka=3Dfunction(a,b,c){switch(typeof b){case "string":Ja(b,c);b=
reak;case "number":c.push(isFinite(b)&&!isNaN(b)?b:"null");break;case "b=
oolean":c.push(b);break;case "undefined":c.push("null");break;case "obje=
ct":if(b=3D=3Dh){c.push("null");break}if(b instanceof Array){var e=3Db.l=
ength;c.push("[");for(var d=3D"",f=3D0;f<e;f++)c.push(d),Ka(a,b[f],c),d=3D=
",";c.push("]");break}c.push("{");e=3D"";for(d in b)b.hasOwnProperty(d)&=
&(f=3Db[d],"function"!=3Dtypeof f&&(c.push(e),Ja(d,c),c.push(":"),Ka(a,f=
,c),e=3D
","));c.push("}");break;case "function":break;default:throw Error("Unkno=
wn type: "+typeof b);}},Ma=3D{'"':'\\"',"\\":"\\\\","/":"\\/","\b":"\\b"=
,"\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\x0B":"\\u000b"},Na=3D/\uf=
fff/.test("\uffff")?/[\\\"\x00-\x1f\x7f-\uffff]/g:/[\\\"\x00-\x1f\x7f-\x=
ff]/g,Ja=3Dfunction(a,b){b.push('"');b.push(a.replace(Na,function(a){if(=
a in Ma)return Ma[a];var b=3Da.charCodeAt(0),d=3D"\\u";16>b?d+=3D"000":2=
56>b?d+=3D"00":4096>b&&(d+=3D"0");return Ma[a]=3Dd+b.toString(16)}));b.p=
ush('"')};var H=3D"google_ad_block google_ad_channel google_ad_client go=
ogle_ad_format google_ad_height google_ad_host google_ad_host_channel go=
ogle_ad_host_tier_id google_ad_output google_ad_override google_ad_regio=
n google_ad_section google_ad_slot google_ad_type google_ad_width google=
_adtest google_allow_expandable_ads google_alternate_ad_url google_alter=
nate_color google_analytics_domain_name google_analytics_uacct google_bi=
d google_city google_color_bg google_color_border google_color_line goog=
le_color_link google_color_text google_color_url google_container_id goo=
gle_contents google_country google_cpm google_ctr_threshold google_cust_=
age google_cust_ch google_cust_gender google_cust_id google_cust_interes=
ts google_cust_job google_cust_l google_cust_lh google_cust_u_url google=
_disable_video_autoplay google_ed google_eids google_enable_ose google_e=
ncoding google_font_face google_font_size google_frame_id google_gl goog=
le_hints google_image_size google_kw google_kw_type google_lact google_l=
anguage google_loeid google_max_num_ads google_max_radlink_len google_mt=
l google_num_radlinks google_num_radlinks_per_unit google_num_slots_to_r=
otate google_only_ads_with_video google_only_pyv_ads google_only_usercho=
ice_ads google_override_format google_page_url google_previous_watch goo=
gle_previous_searches google_referrer_url google_region google_reuse_col=
ors google_rl_dest_url google_rl_filtering google_rl_mode google_rt goog=
le_safe google_sc_id google_scs google_sui google_skip google_tag_info g=
oogle_targeting google_tdsma google_tfs google_tl google_ui_features goo=
gle_ui_version google_video_doc_id google_video_product_type google_with=
_pyv_ads google_yt_pt google_yt_up".split(" ");var Oa=3D/\.((google(|gro=
ups|mail|images|print))|gmail)\./,Pa=3Dfunction(){var a=3DI,b=3DOa.test(=
a.location.host);return!(!a.postMessage||!a.localStorage||!a.JSON||b)};v=
ar Qa=3Dfunction(a){this.b=3Da;a.google_iframe_oncopy||(a.google_iframe_=
oncopy=3D{handlers:{}});this.j=3Da.google_iframe_oncopy},Ra;var J=3D"var=
 i=3Dthis.id,s=3Dwindow.google_iframe_oncopy,H=3Ds&&s.handlers,h=3DH&&H[=
i],w=3Dthis.contentWindow,d;try{d=3Dw.document}catch(e){}if(h&&d&&(!d.bo=
dy||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){w.l=
ocation.replace(h)}}";
/[&<>\"]/.test(J)&&(-1!=3DJ.indexOf("&")&&(J=3DJ.replace(ma,"&amp;")),-1=
!=3DJ.indexOf("<")&&(J=3DJ.replace(na,"&lt;")),-1!=3DJ.indexOf(">")&&(J=3D=
J.replace(oa,"&gt;")),-1!=3DJ.indexOf('"')&&(J=3DJ.replace(pa,"&quot;"))=
);Ra=3DJ;Qa.prototype.set=3Dfunction(a,b){this.j.handlers[a]=3Db;this.b.=
addEventListener&&!/MSIE/.test(navigator.userAgent)&&this.b.addEventList=
ener("load",l(this.k,this,a),k)};Qa.prototype.k=3Dfunction(a){a=3Dthis.b=
.document.getElementById(a);var b=3Da.contentWindow.document;if(a.onload=
&&b&&(!b.body||!b.body.firstChild))a.onload()};function Sa(){var a=3DI,b=
=3DI.document,c=3Da.google_ad_width,e=3Da.google_ad_height;if(a.top=3D=3D=
a)return k;var d=3Db.documentElement;if(c&&e){var f=3D1,n=3D1;a.innerHei=
ght?(f=3Da.innerWidth,n=3Da.innerHeight):d&&d.clientHeight?(f=3Dd.client=
Width,n=3Dd.clientHeight):b.body&&(f=3Db.body.clientWidth,n=3Db.body.cli=
entHeight);if(n>2*e||f>2*c)return k}return g};var Ta=3Dfunction(){var a=3D=
"script";return["<",a,' src=3D"',Ha(la(),["/pagead/js/",s(),"/r20130206/=
show_ads_impl.js"].join(""),""),'"></',a,">"].join("")},Ua=3Dfunction(a,=
b,c,e){return function(){var d=3Dk;e&&Ba().al(3E4);try{if(B(a.document.g=
etElementById(b).contentWindow)){var f=3Da.document.getElementById(b).co=
ntentWindow,n=3Df.document;if(!n.body||!n.body.firstChild)n.open(),
f.google_async_iframe_close=3Dg,n.write(c)}else{var R=3Da.document.getEl=
ementById(b).contentWindow,ga;f=3Dc;f=3DString(f);if(f.quote)ga=3Df.quot=
e();else{for(var n=3D['"'],S=3D0;S<f.length;S++){var T=3Df.charAt(S),La=3D=
T.charCodeAt(0),Eb=3Dn,Fb=3DS+1,ha;if(!(ha=3Du[T])){var E;if(31<La&&127>=
La)E=3DT;else{var r=3DT;if(r in v)E=3Dv[r];else if(r in u)E=3Dv[r]=3Du[r=
];else{var q=3Dr,t=3Dr.charCodeAt(0);if(31<t&&127>t)q=3Dr;else{if(256>t)=
{if(q=3D"\\x",16>t||256<t)q+=3D"0"}else q=3D"\\u",4096>t&&(q+=3D"0");q+=3D=
t.toString(16).toUpperCase()}E=3Dv[r]=3Dq}}ha=3DE}Eb[Fb]=3D
ha}n.push('"');ga=3Dn.join("")}R.location.replace("javascript:"+ga)}d=3D=
g}catch(Qb){R=3Dwa().google_jobrunner,Aa(R)&&R.rl()}d&&(new Qa(a)).set(b=
,Ua(a,b,c,k))}},Va=3Dfunction(){var a=3D["<iframe"];ra(function(b,c){a.p=
ush(" "+c+'=3D"'+(b=3D=3Dh?"":b)+'"')});a.push("></iframe>");return a.jo=
in("")},Wa=3Dfunction(a,b){var c=3DI.google_ad_height,e=3Db?'"':"",d=3De=
+"0"+e;a.width=3De+I.google_ad_width+e;a.height=3De+c+e;a.frameborder=3D=
d;a.marginwidth=3Dd;a.marginheight=3Dd;a.vspace=3Dd;a.hspace=3Dd;a.allow=
transparency=3De+"true"+e;a.scrolling=3D
e+"no"+e},Xa=3DMath.floor(1E6*Math.random()),Ya=3Dfunction(a){for(var b=3D=
a.data.split("\n"),c=3D{},e=3D0;e<b.length;e++){var d=3Db[e].indexOf("=3D=
");-1!=3Dd&&(c[b[e].substr(0,d)]=3Db[e].substr(d+1))}b=3Dc[3];if(c[1]=3D=
=3DXa&&(window.google_top_js_status=3D4,a.source=3D=3Dtop&&0=3D=3Db.inde=
xOf(a.origin)&&(window.google_top_url=3Db,window.google_top_js_status=3D=
5),window.google_top_js_callbacks)){for(a=3D0;a<window.google_top_js_cal=
lbacks.length;a++)window.google_top_js_callbacks[a]();window.google_top_=
js_callbacks.length=3D0}};window.google_loader_used=3Dg;(function(a){"go=
ogle_onload_fired"in a||(a.google_onload_fired=3Dk,ta(a,function(){a.goo=
gle_onload_fired=3Dg}))})(window);
if(!window.google_top_experiment&&(window.google_top_experiment=3Dua(["j=
p_c","jp_zl","jp_wfpmr"],ea),"jp_zl"=3D=3D=3Dwindow.google_top_experimen=
t||"jp_wfpmr"=3D=3D=3Dwindow.google_top_experiment)){var Za=3Dwindow,$a=3D=
2;try{Za.top.document=3D=3DZa.document?$a=3D0:B(Za.top)&&($a=3D1)}catch(=
ab){}if(2!=3D=3D$a)window.google_top_js_status=3D0;else if(top.postMessa=
ge){var bb;try{bb=3Dtop.frames.google_top_static_frame?g:k}catch(cb){bb=3D=
k}if(bb){var K=3Dwindow;K.addEventListener?K.addEventListener("message",=
Ya,k):K.attachEvent&&K.attachEvent("onmessage",
Ya);window.google_top_js_status=3D3;var db=3D{"0":"google_loc_request",1=
:Xa},eb=3D[],fb;for(fb in db)eb.push(fb+"=3D"+db[fb]);top.postMessage(eb=
.join("\n"),"*")}else window.google_top_js_status=3D2}else window.google=
_top_js_status=3D1}var gb;if(window.google_enable_async=3D=3D=3Dk)gb=3D0=
;else{var hb=3Dnavigator.userAgent;gb=3D(Ea.test(hb)||Fa.test(hb)?k:g)&&=
!window.google_container_id&&(!window.google_ad_output||"html"=3D=3Dwind=
ow.google_ad_output)}
if(gb){var ib=3Dwindow;ib.google_unique_id?++ib.google_unique_id:ib.goog=
le_unique_id=3D1;var I=3Dwindow,F=3D{};Wa(F,g);F.onload=3D'"'+Ra+'"';for=
(var L,G=3DI,jb=3DG.document,M=3DF.id,kb=3D0;!M||G.document.getElementBy=
Id(M);)M=3D"aswift_"+kb++;F.id=3DM;F.name=3DM;jb.write(Ga());L=3DM;var l=
b,N=3DI;N.google_page_url&&(N.google_page_url=3DString(N.google_page_url=
));for(var mb=3D[],nb=3D0,ob=3DH.length;nb<ob;nb++){var pb=3DH[nb];if(N[=
pb]!=3Dh){var qb;try{var rb=3D[];Ka(new Ia,N[pb],rb);qb=3Drb.join("")}ca=
tch(sb){}qb&&sa(mb,pb,"=3D",qb,";")}}lb=3Dmb.join("");
var O=3Dwindow,tb=3DO.google_ad_output,P=3DO.google_ad_format;if(!P&&("h=
tml"=3D=3Dtb||tb=3D=3Dh))P=3DO.google_ad_width+"x"+O.google_ad_height;P=3D=
P&&(!O.google_ad_slot||O.google_override_format)?P.toLowerCase():"";O.go=
ogle_ad_format=3DP;var Q,ub=3D[w.google_ad_slot,w.google_ad_format,w.goo=
gle_ad_type,w.google_ad_width,w.google_ad_height];if(x){var U;if(x){for(=
var vb=3D[],wb=3D0,V=3Dx;V&&25>wb;V=3DV.parentNode,++wb)vb.push(9!=3DV.n=
odeType&&V.id||"");U=3Dvb.join()}else U=3D"";U&&ub.push(U)}var xb=3D0;if=
(ub){var yb=3Dub.join(":"),zb=3Dyb.length;
if(0=3D=3Dzb)xb=3D0;else{for(var W=3D305419896,Ab=3D0;Ab<zb;Ab++)W^=3D(W=
<<5)+(W>>2)+yb.charCodeAt(Ab)&4294967295;xb=3D0<W?W:4294967296+W}}Q=3Dxb=
.toString();a:{var X=3Dwindow,Y=3DX.google_async_slots;Y||(Y=3DX.google_=
async_slots=3D{});var Bb=3DX.google_unique_id,Z=3DString("number"=3D=3Dt=
ypeof Bb?Bb:0);if(Z in Y&&(Z+=3D"b",Z in Y))break a;Y[Z]=3D{sent:k,w:X.g=
oogle_ad_width||"",h:X.google_ad_height||"",adk:Q,type:X.google_ad_type|=
|"",slot:X.google_ad_slot||"",fmt:X.google_ad_format||"",cli:X.google_ad=
_client||"",saw:[]}}var Cb=3Dja&&"dev"!=3D
s()?ia:fa,Db=3Dja&&"dev"!=3Ds()?["XN","PC"]:["X","XN","S","SN","PC"];/MS=
IE/.test(navigator.userAgent)&&(Db=3D["IX","IC"]);var $=3DI.google_ad_ha=
ndling_experiment||(Pa()?ua(Db,Cb):""),Gb=3D"";if(Pa()&&"S"!=3D$&&"SN"!=3D=
$&&"XN"!=3D$){var Hb;Hb=3D"zrt_ads_frame"+I.google_unique_id;var Ib=3Den=
codeURIComponent(I.google_page_url||Sa()?I.document.referrer:I.document.=
URL),Jb=3Dh;if("PC"=3D=3D$||"IC"=3D=3D$)Jb=3D"K-"+(Ib+"/"+Q+"/"+I.google=
_unique_id);var z=3D{};Wa(z,k);z.style=3D"display:none";var Kb=3DJb;z.id=
=3DHb;z.name=3DHb;var Lb=3Dz,Mb;Mb=3DHa(da("",
"googleads.g.doubleclick.net"),["/pagead/html/",s(),"/r20130206/zrt_look=
up.html",Kb?"#"+encodeURIComponent(Kb):""].join(""));Lb.src=3DMb;Gb=3DVa=
()}for(var Nb=3DI,Ob=3D0,Pb=3DH.length;Ob<Pb;Ob++)Nb[H[Ob]]=3Dh;var Rb=3D=
(new Date).getTime(),Sb=3DI.google_top_experiment,Tb=3D["<!doctype html>=
<html><body>",Gb,"<script>",lb,"google_show_ads_impl=3Dtrue;google_uniqu=
e_id=3D",I.google_unique_id,';google_async_iframe_id=3D"',L,'";google_ad=
_unit_key=3D"',Q,'";google_start_time=3D',
m,";",Sb?'google_top_experiment=3D"'+Sb+'";':"",$?'google_ad_handling_ex=
periment=3D"'+$+'";':"","google_bpp=3D",Rb>m?Rb-m:1,";\x3c/script>",Ta()=
,"</body></html>"].join("");(I.document.getElementById(L)?Ca:Da)(Ua(I,L,=
Tb,g))}else window.google_start_time=3Dm,document.write(Ta());})();

------------qTBjXnmaI6qvT5AepQBBtZ
Content-Disposition: inline; filename=niuzer_com_banner.png
Content-Type: image/png; name=niuzer_com_banner.png
Content-Location: http://www.sunlize.com/images/static/ads_feb_2013/niuzer_com_banner.png
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAATYAAACQCAMAAAC1ULfcAAAAA3NCSVQICAjb4U/g
AAAANlBMVEWCDQDumZDYFQDfQTD98fDnbWD1xcDaJBDpfHD////41NDiUEDzt7Dd
MiDsioD64+DkXlDwqKBu+NyiAAAACXBIWXMAAAsSAAALEgHS3X78AAAAFnRFWHRD
cmVhdGlvbiBUaW1lADAyLzEzLzEzJoUQ7AAAABx0RVh0U29mdHdhcmUAQWRvYmUg
RmlyZXdvcmtzIENTNui8sowAAAdsSURBVHic7ZwLm6ogEIa3TTO8VP7/P7sldxgQ
JtJk53vOHlNE5G24zbD780tC6GfvFzimCBtKhA0lwoYSYUOJsKFE2FAibCgRNpQI
G0qEDSXChhJhQ4mwoUTYUFrF1rVzzxb1c9uVLZw/t+wzt9EKtmFmluahZOGVYpsu
zNNlKld4ndiuPrSXrsUKrxFbN8PUni21VOEVYuv6ELXn4FBoaKgQ26gh3YYnpm64
aZCF7K0+bDc1BBhj56CGiFuRwqvDNgg8jdP/XxuRUGQiUh020R6bs5twFtz6EoXX
hq0NUdPc2gKF14ZN9GHgDO1aztwqwzaJ0QDOIpgWWC1Uhu0a7faHiCnmqTJsfM52
D+W5L8nj+4VXho1zOYXynOJU01UZNl6dRyjPo1R1q8QWnNEOpbEdDx8G23Rb9H7h
/wtbMVWJrcQ6IK7KsPGRtJg3MqjKsK3M24qpMmzXlRlIKR0Pl1RsTVrU3KAB5h1s
Q8EIWr5gD4jwiIfnGLdAOKHrRR6DyHSdeWfZXK52Xd1GyqJS2abbBX7edoKxSedu
qJm2gTDMK27DB2BV02G06m762HHYzlbwdt4HXMC7K16tgblNL1clwG2JdjVLRURN
JxvaAk5XFIPt5F4OLp0/qQC2Sb4U2E45VI+biBEubjqe+9G4lXxxVRPCfGxQGLJU
+DFHociVisjf/VmvaMKN2z6kv/zVDqMA5COzsL2+DTh4e9++oQbjpDom38ytHVMQ
LdhvwA9dwSgByS0L22xSuzzXxCd1tr29hTczWHsZ7rM2uklVI5RncgiM7csepod+
JEfuYhtg8eSr7tfkODDJB27ev0W2zjidrwqZXhUbT5OqoQlN39nJEaJZ7MPFBkvY
8Fl1DmbA2+gXtlRsx5Hbofe8/mPQ2KS5jQa2xu4bW2kwr5M0bPyZjewc7Cik6E8D
0aKPKbq/zd10xN+Yvyg8NXnIKtpZDJ2ZNtYkbJ3kfAYN66wft6FWdlNOJ8vilrbF
PwZWCTYJyPvUanNLwnaTtE6wlfPL5TbdJWl9y/Nwu9wVNz1IBu52sEHhrYvinoKt
49/bXW6w8MxqUi+2odJ2ik9qy0ybhy0ybrRp2Gb7bmAzwIKzSapHMaVusJdTpj4L
GxxLvcjWloBNjp6dbP8hJdajkJJ/L0FyO//KI6SzTQL2q7ey2a1jE0301XVJ98Kx
sOk9DP0qEWWS8Pg2ubjCFRff1f33sNhUrF7NzQCpOV20LsnY5ARo0LkOh413SRc5
g0jr7UHxxG4NW2evnQ6OTfTNkLmNEkgJa1ML994sf1dfuBKikRpzAkfATBZS5+IC
b5bLTbF+lWvhz4chU4QYEuRw6a+bREVf12PYnBUYeLNe16liRA+w9aodFGICoszN
XaU32tgSZrBjBFt3U2s648sZ4W9rDyVPd8WSaAkCytmUGQBRvi/bJwQ9SpltANtj
1gthE1LIyndQ4uKqlctSbmAPVa35EfdAAnJ9mebNw3AbTedBb40A0gN42n1cSMFm
TDTlijnwy39MuSLC2DzPeXoIRjvF+1OZ38PBKg+bjrp4cTdpCCI9iM2P02RErqbG
Ot1PWdjMXqVNi+V58qOCOQG/qbdOd1MONrujAX61GYgc+/Jj0Dnh5e5kne6ldGyN
15sMNjhwnwIgf8dDBjZdamZFyyoRWzOCHo/pOvIh9j4GdsVA8vbXZGFbts40B8BW
XDvsPigs+vMpKBE2lAgbSoQNpTVsh9yQ/HkFsYkhvwS2CtGHsDHniBMr8Iyv1BbY
KtQ6Njk/V61WHM15up3GjKzL3N98zhesjAoo3LeJg+zgmLjIdMNj1r0akDo3GqmX
dGyFR1Kma2jyMbsrq/oGEwibm3RsxSYgZnVF61Ik7LZmpv17bD4Bx9qM+7ybDT6E
7W1svzUMCJnYrGHyV8Oz0kSL1ncB1A+v4ATEXCXIvs2st2U1ZppljqrL04NtFeb2
qaV8nMzhuX0IW5AL1DUeUB/BFmuF1Ej/sYpge8d6SlredlZM2FAibCgRNpTWneKW
e01P9k03nLlyUEso83bwkYl59e2hl1JT7/2x6Vm9OmXuZXsVYZ5EUzPzmouR+Et9
AbZFai3FrFP36INxb/cfmZ7XZeG/lDp+ATbbvSb/fwsb5JXLwxbw+VkL6E202kj1
2To2eQXGhsxrsAjn/BZrOyS27RTD5rjXmHtZ1VK/MtBZ62EQl9fBBvj8VCn7Wxvg
XvMuM3GBOTXzb/cfmZ7XZBHw+clSvgAbUu+8+bbt7C0VxvZPqJXF9o4j7VhOOPK3
oUTYUCJsKBE2lAgbSiC2nw20dUXLirChRNhQImwoETaUCBtKhA0lwoYSYUOJsKFE
2FDKwcYCn1cE37p1RcuKsKGExZYhwvb8eWo5vE75Z54kPvN0pnAxwmbyYBydZCI/
m6jMH8KmsSmTciyLiX+MsBE2Sz/QXxN6H9sCjcUGEajc4ygVm4sqAxvMbuuKllWy
tTFzpAxiU+lG8/zX2Epr64qWFWFDibChRNhQImwoETaUCBtKhA0lwoYSYUOJsKH0
B5GMBjP9cWDvAAAAAElFTkSuQmCC

------------qTBjXnmaI6qvT5AepQBBtZ
Content-Disposition: inline; filename=all.js.htm
Content-Type: text/html; charset=UTF-8; name=all.js.htm
Content-Location: http://js.niuzer.com/frontend/fb/all.js.php
Content-Transfer-Encoding: 8bit

/**
 * This is the stock JSON2 implementation from www.json.org.
 *
 * Modifications include:
 * 1/ Removal of jslint settings
 *
 * @provides fb.thirdparty.json2
 */

/*
    http://www.JSON.org/json2.js
    2009-09-29

    Public Domain.

    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.

    See http://www.JSON.org/js.html

    This file creates a global JSON object containing two methods: stringify
    and parse.

        JSON.stringify(value, replacer, space)
            value       any JavaScript value, usually an object or array.

            replacer    an optional parameter that determines how object
                        values are stringified for objects. It can be a
                        function or an array of strings.

            space       an optional parameter that specifies the indentation
                        of nested structures. If it is omitted, the text will
                        be packed without extra whitespace. If it is a number,
                        it will specify the number of spaces to indent at each
                        level. If it is a string (such as '\t' or '&nbsp;'),
                        it contains the characters used to indent at each level.

            This method produces a JSON text from a JavaScript value.

            When an object value is found, if the object contains a toJSON
            method, its toJSON method will be called and the result will be
            stringified. A toJSON method does not serialize: it returns the
            value represented by the name/value pair that should be serialized,
            or undefined if nothing should be serialized. The toJSON method
            will be passed the key associated with the value, and this will be
            bound to the value

            For example, this would serialize Dates as ISO strings.

                Date.prototype.toJSON = function (key) {
                    function f(n) {
                        // Format integers to have at least two digits.
                        return n < 10 ? '0' + n : n;
                    }

                    return this.getUTCFullYear()   + '-' +
                         f(this.getUTCMonth() + 1) + '-' +
                         f(this.getUTCDate())      + 'T' +
                         f(this.getUTCHours())     + ':' +
                         f(this.getUTCMinutes())   + ':' +
                         f(this.getUTCSeconds())   + 'Z';
                };

            You can provide an optional replacer method. It will be passed the
            key and value of each member, with this bound to the containing
            object. The value that is returned from your method will be
            serialized. If your method returns undefined, then the member will
            be excluded from the serialization.

            If the replacer parameter is an array of strings, then it will be
            used to select the members to be serialized. It filters the results
            such that only members with keys listed in the replacer array are
            stringified.

            Values that do not have JSON representations, such as undefined or
            functions, will not be serialized. Such values in objects will be
            dropped; in arrays they will be replaced with null. You can use
            a replacer function to replace those with JSON values.
            JSON.stringify(undefined) returns undefined.

            The optional space parameter produces a stringification of the
            value that is filled with line breaks and indentation to make it
            easier to read.

            If the space parameter is a non-empty string, then that string will
            be used for indentation. If the space parameter is a number, then
            the indentation will be that many spaces.

            Example:

            text = JSON.stringify(['e', {pluribus: 'unum'}]);
            // text is '["e",{"pluribus":"unum"}]'


            text = JSON.stringify(['e', {pluribus: 'unum'}], null, '\t');
            // text is '[\n\t"e",\n\t{\n\t\t"pluribus": "unum"\n\t}\n]'

            text = JSON.stringify([new Date()], function (key, value) {
                return this[key] instanceof Date ?
                    'Date(' + this[key] + ')' : value;
            });
            // text is '["Date(---current time---)"]'


        JSON.parse(text, reviver)
            This method parses a JSON text to produce an object or array.
            It can throw a SyntaxError exception.

            The optional reviver parameter is a function that can filter and
            transform the results. It receives each of the keys and values,
            and its return value is used instead of the original value.
            If it returns what it received, then the structure is not modified.
            If it returns undefined then the member is deleted.

            Example:

            // Parse the text. Values that look like ISO date strings will
            // be converted to Date objects.

            myData = JSON.parse(text, function (key, value) {
                var a;
                if (typeof value === 'string') {
                    a =
/^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)Z$/.exec(value);
                    if (a) {
                        return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],
                            +a[5], +a[6]));
                    }
                }
                return value;
            });

            myData = JSON.parse('["Date(09/09/2001)"]', function (key, value) {
                var d;
                if (typeof value === 'string' &&
                        value.slice(0, 5) === 'Date(' &&
                        value.slice(-1) === ')') {
                    d = new Date(value.slice(5, -1));
                    if (d) {
                        return d;
                    }
                }
                return value;
            });


    This is a reference implementation. You are free to copy, modify, or
    redistribute.

    This code should be minified before deployment.
    See http://javascript.crockford.com/jsmin.html

    USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO
    NOT CONTROL.
*/


// Create a JSON object only if one does not already exist. We create the
// methods in a closure to avoid creating global variables.

if (!this.JSON) {
    this.JSON = {};
}

(function () {

    function f(n) {
        // Format integers to have at least two digits.
        return n < 10 ? '0' + n : n;
    }

    if (typeof Date.prototype.toJSON !== 'function') {

        Date.prototype.toJSON = function (key) {

            return isFinite(this.valueOf()) ?
                   this.getUTCFullYear()   + '-' +
                 f(this.getUTCMonth() + 1) + '-' +
                 f(this.getUTCDate())      + 'T' +
                 f(this.getUTCHours())     + ':' +
                 f(this.getUTCMinutes())   + ':' +
                 f(this.getUTCSeconds())   + 'Z' : null;
        };

        String.prototype.toJSON =
        Number.prototype.toJSON =
        Boolean.prototype.toJSON = function (key) {
            return this.valueOf();
        };
    }

    var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
        escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
        gap,
        indent,
        meta = {    // table of character substitutions
            '\b': '\\b',
            '\t': '\\t',
            '\n': '\\n',
            '\f': '\\f',
            '\r': '\\r',
            '"' : '\\"',
            '\\': '\\\\'
        },
        rep;


    function quote(string) {

// If the string contains no control characters, no quote characters, and no
// backslash characters, then we can safely slap some quotes around it.
// Otherwise we must also replace the offending characters with safe escape
// sequences.

        escapable.lastIndex = 0;
        return escapable.test(string) ?
            '"' + string.replace(escapable, function (a) {
                var c = meta[a];
                return typeof c === 'string' ? c :
                    '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
            }) + '"' :
            '"' + string + '"';
    }


    function str(key, holder) {

// Produce a string from holder[key].

        var i,          // The loop counter.
            k,          // The member key.
            v,          // The member value.
            length,
            mind = gap,
            partial,
            value = holder[key];

// If the value has a toJSON method, call it to obtain a replacement value.

        if (value && typeof value === 'object' &&
                typeof value.toJSON === 'function') {
            value = value.toJSON(key);
        }

// If we were called with a replacer function, then call the replacer to
// obtain a replacement value.

        if (typeof rep === 'function') {
            value = rep.call(holder, key, value);
        }

// What happens next depends on the value's type.

        switch (typeof value) {
        case 'string':
            return quote(value);

        case 'number':

// JSON numbers must be finite. Encode non-finite numbers as null.

            return isFinite(value) ? String(value) : 'null';

        case 'boolean':
        case 'null':

// If the value is a boolean or null, convert it to a string. Note:
// typeof null does not produce 'null'. The case is included here in
// the remote chance that this gets fixed someday.

            return String(value);

// If the type is 'object', we might be dealing with an object or an array or
// null.

        case 'object':

// Due to a specification blunder in ECMAScript, typeof null is 'object',
// so watch out for that case.

            if (!value) {
                return 'null';
            }

// Make an array to hold the partial results of stringifying this object value.

            gap += indent;
            partial = [];

// Is the value an array?

            if (Object.prototype.toString.apply(value) === '[object Array]') {

// The value is an array. Stringify every element. Use null as a placeholder
// for non-JSON values.

                length = value.length;
                for (i = 0; i < length; i += 1) {
                    partial[i] = str(i, value) || 'null';
                }

// Join all of the elements together, separated with commas, and wrap them in
// brackets.

                v = partial.length === 0 ? '[]' :
                    gap ? '[\n' + gap +
                            partial.join(',\n' + gap) + '\n' +
                                mind + ']' :
                          '[' + partial.join(',') + ']';
                gap = mind;
                return v;
            }

// If the replacer is an array, use it to select the members to be stringified.

            if (rep && typeof rep === 'object') {
                length = rep.length;
                for (i = 0; i < length; i += 1) {
                    k = rep[i];
                    if (typeof k === 'string') {
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (gap ? ': ' : ':') + v);
                        }
                    }
                }
            } else {

// Otherwise, iterate through all of the keys in the object.

                for (k in value) {
                    if (Object.hasOwnProperty.call(value, k)) {
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (gap ? ': ' : ':') + v);
                        }
                    }
                }
            }

// Join all of the member texts together, separated with commas,
// and wrap them in braces.

            v = partial.length === 0 ? '{}' :
                gap ? '{\n' + gap + partial.join(',\n' + gap) + '\n' +
                        mind + '}' : '{' + partial.join(',') + '}';
            gap = mind;
            return v;
        }
    }

// If the JSON object does not yet have a stringify method, give it one.

    if (typeof JSON.stringify !== 'function') {
        JSON.stringify = function (value, replacer, space) {

// The stringify method takes a value and an optional replacer, and an optional
// space parameter, and returns a JSON text. The replacer can be a function
// that can replace values, or an array of strings that will select the keys.
// A default replacer method can be provided. Use of the space parameter can
// produce text that is more easily readable.

            var i;
            gap = '';
            indent = '';

// If the space parameter is a number, make an indent string containing that
// many spaces.

            if (typeof space === 'number') {
                for (i = 0; i < space; i += 1) {
                    indent += ' ';
                }

// If the space parameter is a string, it will be used as the indent string.

            } else if (typeof space === 'string') {
                indent = space;
            }

// If there is a replacer, it must be a function or an array.
// Otherwise, throw an error.

            rep = replacer;
            if (replacer && typeof replacer !== 'function' &&
                    (typeof replacer !== 'object' ||
                     typeof replacer.length !== 'number')) {
                throw new Error('JSON.stringify');
            }

// Make a fake root object containing our value under the key of ''.
// Return the result of stringifying the value.

            return str('', {'': value});
        };
    }


// If the JSON object does not yet have a parse method, give it one.

    if (typeof JSON.parse !== 'function') {
        JSON.parse = function (text, reviver) {

// The parse method takes a text and an optional reviver function, and returns
// a JavaScript value if the text is a valid JSON text.

            var j;

            function walk(holder, key) {

// The walk method is used to recursively walk the resulting structure so
// that modifications can be made.

                var k, v, value = holder[key];
                if (value && typeof value === 'object') {
                    for (k in value) {
                        if (Object.hasOwnProperty.call(value, k)) {
                            v = walk(value, k);
                            if (v !== undefined) {
                                value[k] = v;
                            } else {
                                delete value[k];
                            }
                        }
                    }
                }
                return reviver.call(holder, key, value);
            }


// Parsing happens in four stages. In the first stage, we replace certain
// Unicode characters with escape sequences. JavaScript handles many characters
// incorrectly, either silently deleting them, or treating them as line endings.

            cx.lastIndex = 0;
            if (cx.test(text)) {
                text = text.replace(cx, function (a) {
                    return '\\u' +
                        ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
                });
            }

// In the second stage, we run the text against regular expressions that look
// for non-JSON patterns. We are especially concerned with '()' and 'new'
// because they can cause invocation, and '=' because it can cause mutation.
// But just to be safe, we want to reject all unexpected forms.

// We split the second stage into 4 regexp operations in order to work around
// crippling inefficiencies in IE's and Safari's regexp engines. First we
// replace the JSON backslash pairs with '@' (a non-JSON character). Second, we
// replace all simple value tokens with ']' characters. Third, we delete all
// open brackets that follow a colon or comma or that begin the text. Finally,
// we look to see that the remaining characters are only whitespace or ']' or
// ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.

            if (/^[\],:{}\s]*$/.
test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@').
replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']').
replace(/(?:^|:|,)(?:\s*\[)+/g, ''))) {

// In the third stage we use the eval function to compile the text into a
// JavaScript structure. The '{' operator is subject to a syntactic ambiguity
// in JavaScript: it can begin a block or an object literal. We wrap the text
// in parens to eliminate the ambiguity.

                j = eval('(' + text + ')');

// In the optional fourth stage, we recursively walk the new structure, passing
// each name/value pair to a reviver function for possible transformation.

                return typeof reviver === 'function' ?
                    walk({'': j}, '') : j;
            }

// If the text is not JSON parseable, then a SyntaxError is thrown.

            throw new SyntaxError('JSON.parse');
        };
    }
}());
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *
 *
 * @provides fb.prelude
 */

/**
 * Prelude.
 *
 *     Namespaces are one honking great idea -- let's do more of those!
 *                                                            -- Tim Peters
 *
 * The Prelude is what keeps us from being messy. In order to co-exist with
 * arbitary environments, we need to control our footprint. The one and only
 * rule to follow here is that we need to limit the globals we introduce. The
 * only global we should every have is ``FB``. This is exactly what the prelude
 * enables us to do.
 *
 * The main method to take away from this file is `FB.copy()`_. As the name
 * suggests it copies things. Its powerful -- but to get started you only need
 * to know that this is what you use when you are augmenting the FB object. For
 * example, this is skeleton for how ``FB.Event`` is defined::
 *
 *   FB.provide('Event', {
 *     subscribe: function() { ... },
 *     unsubscribe: function() { ... },
 *     fire: function() { ... }
 *   });
 *
 * This is similar to saying::
 *
 *   FB.Event = {
 *     subscribe: function() { ... },
 *     unsubscribe: function() { ... },
 *     fire: function() { ... }
 *   };
 *
 * Except it does some housekeeping, prevents redefinition by default and other
 * goodness.
 *
 * .. _FB.copy(): #method_FB.copy
 *
 * @class FB
 * @static
 * @access private
 */
if (!window.FB) {
  FB = {
    // use the init method to set these values correctly
    _apiKey     : null,
    _session    : null,
    _userStatus : 'unknown', // or 'notConnected' or 'connected'

    // logging is enabled by default. this is the logging shown to the
    // developer and not at all noisy.
    _logging: true,
    _inCanvas: (
      (window.location.search.indexOf('fb_sig_in_iframe=1') > -1) ||
      (window.location.search.indexOf('session=') > -1)),


    //
    // DYNAMIC DATA
    //
    // the various domains needed for using Connect
    _domain: {
      api      : 'https://api.facebook.com/',
      api_read : 'https://api-read.facebook.com/',
      cdn      : (window.location.protocol == 'https:'
                   ? 'https://s-static.ak.fbcdn.net/'
                   : 'http://static.ak.fbcdn.net/'),
      graph    : 'https://graph.facebook.com/',
      staticfb : 'http://static.ak.facebook.com/',
      www      : window.location.protocol + '//www.facebook.com/'
    },
    _locale: null,
    _localeIsRtl: false,


    /**
     * Copies things from source into target.
     *
     * @access private
     * @param target    {Object}  the target object where things will be copied
     *                            into
     * @param source    {Object}  the source object where things will be copied
     *                            from
     * @param overwrite {Boolean} indicate if existing items should be
     *                            overwritten
     * @param tranform  {function} [Optional], transformation function for
     *        each item
     */
    copy: function(target, source, overwrite, transform) {
      for (var key in source) {
        if (overwrite || typeof target[key] === 'undefined') {
          target[key] = transform ? transform(source[key]) :  source[key];
        }
      }
      return target;
    },

    /**
     * Create a namespaced object.
     *
     * @access private
     * @param name {String} full qualified name ('Util.foo', etc.)
     * @param value {Object} value to set. Default value is {}. [Optional]
     * @return {Object} The created object
     */
    create: function(name, value) {
      var node = window.FB, // We will use 'FB' as root namespace
      nameParts = name ? name.split('.') : [],
      c = nameParts.length;
      for (var i = 0; i < c; i++) {
        var part = nameParts[i];
        var nso = node[part];
        if (!nso) {
          nso = (value && i + 1 == c) ? value : {};
          node[part] = nso;
        }
        node = nso;
      }
      return node;
    },

    /**
     * Copy stuff from one object to the specified namespace that
     * is FB.<target>.
     * If the namespace target doesn't exist, it will be created automatically.
     *
     * @access private
     * @param target    {Object|String}  the target object to copy into
     * @param source    {Object}         the source object to copy from
     * @param overwrite {Boolean}        indicate if we should overwrite
     * @return {Object} the *same* target object back
     */
    provide: function(target, source, overwrite) {
      // a string means a dot separated object that gets appended to, or created
      return FB.copy(
        typeof target == 'string' ? FB.create(target) : target,
        source,
        overwrite
      );
    },

    /**
     * Generates a weak random ID.
     *
     * @access private
     * @return {String} a random ID
     */
    guid: function() {
      return 'f' + (Math.random() * (1<<30)).toString(16).replace('.', '');
    },

    /**
     * Logs a message for the developer if logging is on.
     *
     * @access private
     * @param args {Object} the thing to log
     */
    log: function(args) {
      if (FB._logging) {
        //TODO what is window.Debug, and should it instead be relying on the
        //     event fired below?
//#JSCOVERAGE_IF 0
        if (window.Debug && window.Debug.writeln) {
          window.Debug.writeln(args);
        } else if (window.console) {
          window.console.log(args);
        }
//#JSCOVERAGE_ENDIF
      }

      // fire an event if the event system is available
      if (FB.Event) {
        FB.Event.fire('fb.log', args);
      }
    },

    /**
     * Shortcut for document.getElementById
     * @method $
     * @param {string} DOM id
     * @return DOMElement
     * @access private
     */
    $: function(id) {
      return document.getElementById(id);
    }
  };
}
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.type
 * @layer basic
 * @requires fb.prelude
 */

// Provide Class/Type support.
// TODO: As a temporary hack, this docblock is written as if it describes the
// top level FB namespace. This is necessary because the current documentation
// parser uses the description from this file for some reason.
/**
 * The top level namespace exposed by the SDK. Look at the [readme on
 * **GitHub**][readme] for more information.
 *
 * [readme]: http://github.com/facebook/connect-js
 *
 * @class FB
 * @static
 */
FB.provide('', {
  /**
   * Bind a function to a given context and arguments.
   *
   * @static
   * @access private
   * @param fn {Function} the function to bind
   * @param context {Object} object used as context for function execution
   * @param {...} arguments additional arguments to be bound to the function
   * @returns {Function} the bound function
   */
  bind: function() {
    var
      args    = Array.prototype.slice.call(arguments),
      fn      = args.shift(),
      context = args.shift();
    return function() {
      return fn.apply(
        context,
        args.concat(Array.prototype.slice.call(arguments))
      );
    };
  },

  /**
   * Create a new class.
   *
   * Note: I have to use 'Class' instead of 'class' because 'class' is
   * a reserved (but unused) keyword.
   *
   * @access private
   * @param name {string} class name
   * @param constructor {function} class constructor
   * @param proto {object} instance methods for class
   */
  Class: function(name, constructor, proto) {
    if (FB.CLASSES[name]) {
      return FB.CLASSES[name];
    }

    var newClass = constructor ||  function() {};

    newClass.prototype = proto;
    newClass.prototype.bind = function(fn) {
      return FB.bind(fn, this);
    };

    newClass.prototype.constructor = newClass;
    FB.create(name, newClass);
    FB.CLASSES[name] = newClass;
    return newClass;
  },

  /**
   * Create a subclass
   *
   * Note: To call base class constructor, use this._base(...).
   * If you override a method 'foo' but still want to call
   * the base class's method 'foo', use this._callBase('foo', ...)
   *
   * @access private
   * @param {string} name class name
   * @param {string} baseName,
   * @param {function} constructor class constructor
   * @param {object} proto instance methods for class
   */
  subclass: function(name, baseName, constructor, proto) {
    if (FB.CLASSES[name]) {
      return FB.CLASSES[name];
    }
    var base = FB.create(baseName);
    FB.copy(proto, base.prototype);
    proto._base = base;
    proto._callBase = function(method) {
      var args = Array.prototype.slice.call(arguments, 1);
      return base.prototype[method].apply(this, args);
    };

    return FB.Class(
      name,
      constructor ? constructor : function() {
        if (base.apply) {
          base.apply(this, arguments);
        }
      },
      proto
    );
  },

  CLASSES: {}
});

/**
 * @class FB.Type
 * @static
 * @private
 */
FB.provide('Type', {
  isType: function(obj, type) {
    while (obj) {
      if (obj.constructor === type || obj === type) {
        return true;
      } else {
        obj = obj._base;
      }
    }
    return false;
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *
 *
 * Contains the public method ``FB.api`` and the internal implementation
 * ``FB.ApiServer``.
 *
 * @provides fb.api
 * @requires fb.prelude
 *           fb.qs
 *           fb.flash
 *           fb.json
 */

/**
 * API calls.
 *
 * @class FB
 * @static
 * @access private
 */
FB.provide('', {
  /**
   * Make a API call to the [Graph API](/docs/api).
   *
   * Server-side calls are available via the JavaScript SDK that allow you to
   * build rich applications that can make API calls against the Facebook
   * servers directly from the user's browser. This can improve performance in
   * many scenarios, as compared to making all calls from your server. It can
   * also help reduce, or eliminate the need to proxy the requests thru your
   * own servers, freeing them to do other things.
   *
   * The range of APIs available covers virtually all facets of Facebook.
   * Public data such as [names][names] and [profile pictures][profilepic] are
   * available if you know the id of the user or object. Various parts of the
   * API are available depending on the [connect status and the
   * permissions](FB.login) the user has granted your application.
   *
   * Except the path, all arguments to this function are optional.
   *
   * Get the **f8 Page Object**:
   *
   *     FB.api('/f8', function(response) {
   *       alert(response.company_overview);
   *     });
   *
   * If you have an [authenticated user](FB.login), get their **User Object**:
   *
   *     FB.api('/me', function(response) {
   *       alert(response.name);
   *     });
   *
   * Get the 3 most recent **Post Objects** *Connected* to (in other words,
   * authored by) the *f8 Page Object*:
   *
   *     FB.api('/f8/posts', { limit: 3 }, function(response) {
   *       for (var i=0, l=response.length; i<l; i++) {
   *         var post = response[i];
   *         if (post.message) {
   *           alert('Message: ' + post.message);
   *         } else if (post.attachment && post.attachment.name) {
   *           alert('Attachment: ' + post.attachment.name);
   *         }
   *       }
   *     });
   *
   * If you have an [authenticated user](FB.login) with the
   * [publish_stream](/docs/authentication/permissions) permission, and want
   * to publish a new story to their feed:
   *
   *     var body = 'Reading Connect JS documentation';
   *     FB.api('/me/feed', 'post', { body: body }, function(response) {
   *       if (!response || response.error) {
   *         alert('Error occured');
   *       } else {
   *         alert('Post ID: ' + response);
   *       }
   *     });
   *
   * Or if you want a delete a previously published post:
   *
   *     var postId = '1234567890';
   *     FB.api(postId, 'delete', function(response) {
   *       if (!response || response.error) {
   *         alert('Error occured');
   *       } else {
   *         alert('Post was deleted');
   *       }
   *     });
   *
   *
   * ### Old REST API calls
   *
   * This method can also be used to invoke calls to the
   * [Old REST API](../rest/). The function signature for invoking REST API
   * calls is:
   *
   *     FB.api(params, callback)
   *
   * For example, to invoke [links.getStats](../rest/links.getStats):
   *
   *     FB.api(
   *       {
   *         method: 'links.getStats',
   *         urls: 'facebook.com,developers.facebook.com'
   *       },
   *       function(response) {
   *         alert(
   *           'Total: ' + (response[0].total_count + response[1].total_count));
   *       }
   *     );
   *
   * [names]: https://graph.facebook.com/naitik
   * [profilepic]: https://graph.facebook.com/naitik/picture
   *
   * @access public
   * @param path {String} the url path
   * @param method {String} the http method (default `"GET"`)
   * @param params {Object} the parameters for the query
   * @param cb {Function} the callback function to handle the response
   */
  api: function() {
    if (typeof arguments[0] === 'string') {
      FB.ApiServer.graph.apply(FB.ApiServer, arguments);
    } else {
      FB.ApiServer.rest.apply(FB.ApiServer, arguments);
    }
  }
});

/**
 * API call implementations.
 *
 * @class FB.ApiServer
 * @access private
 */
FB.provide('ApiServer', {
  METHODS: ['get', 'post', 'delete', 'put'],
  _callbacks: {},
  _readOnlyCalls: {
    fql_query: true,
    fql_multiquery: true,
    friends_get: true,
    notifications_get: true,
    stream_get: true,
    users_getinfo: true
  },

  /**
   * Make a API call to Graph server. This is the **real** RESTful API.
   *
   * Except the path, all arguments to this function are optional. So any of
   * these are valid:
   *
   *   FB.api('/me') // throw away the response
   *   FB.api('/me', function(r) { console.log(r) })
   *   FB.api('/me', { fields: 'email' }); // throw away response
   *   FB.api('/me', { fields: 'email' }, function(r) { console.log(r) });
   *   FB.api('/12345678', 'delete', function(r) { console.log(r) });
   *   FB.api(
   *     '/me/feed',
   *     'post',
   *     { body: 'hi there' },
   *     function(r) { console.log(r) }
   *   );
   *
   * @access private
   * @param path   {String}   the url path
   * @param method {String}   the http method
   * @param params {Object}   the parameters for the query
   * @param cb     {Function} the callback function to handle the response
   */
  graph: function() {
    var
      args = Array.prototype.slice.call(arguments),
      path = args.shift(),
      next = args.shift(),
      method,
      params,
      cb;

    while (next) {
      var type = typeof next;
      if (type === 'string' && !method) {
        method = next.toLowerCase();
      } else if (type === 'function' && !cb) {
        cb = next;
      } else if (type === 'object' && !params) {
        params = next;
      } else {
        FB.log('Invalid argument passed to FB.api(): ' + next);
        return;
      }
      next = args.shift();
    }

    method = method || 'get';
    params = params || {};

    // remove prefix slash if one is given, as it's already in the base url
    if (path[0] === '/') {
      path = path.substr(1);
    }

    if (FB.Array.indexOf(FB.ApiServer.METHODS, method) < 0) {
      FB.log('Invalid method passed to FB.api(): ' + method);
      return;
    }

    FB.ApiServer.oauthRequest('graph', path, method, params, cb);
  },

  /**
   * Old school restserver.php calls.
   *
   * @access private
   * @param params {Object} The required arguments vary based on the method
   * being used, but specifying the method itself is mandatory:
   *
   * Property | Type    | Description                      | Argument
   * -------- | ------- | -------------------------------- | ------------
   * method   | String  | The API method to invoke.        | **Required**
   * @param cb {Function} The callback function to handle the response.
   */
  rest: function(params, cb) {
    var method = params.method.toLowerCase().replace('.', '_');
    // this is an optional dependency on FB.Auth
    // Auth.revokeAuthorization affects the session
    if (FB.Auth && method === 'auth_revokeauthorization') {
      var old_cb = cb;
      cb = function(response) {
        if (response === true) {
          FB.Auth.setSession(null, 'notConnected');
        }
        old_cb && old_cb(response);
      };
    }

    params.format = 'json-strings';
    params.api_key = FB._apiKey;
    var domain = FB.ApiServer._readOnlyCalls[method] ? 'api_read' : 'api';
    FB.ApiServer.oauthRequest(domain, 'restserver.php', 'get', params, cb);
  },

  /**
   * Add the oauth parameter, and fire off a request.
   *
   * @access private
   * @param domain {String}   the domain key, one of 'api', 'api_read',
   *                          or 'graph'
   * @param path   {String}   the request path
   * @param method {String}   the http method
   * @param params {Object}   the parameters for the query
   * @param cb     {Function} the callback function to handle the response
   */
  oauthRequest: function(domain, path, method, params, cb) {
    // add oauth token if we have one
    if (FB._session &&
        FB._session.access_token &&
        !params.access_token) {
      params.access_token = FB._session.access_token;
    }
    params.sdk = 'joey';

    try {
      FB.ApiServer.jsonp(domain, path, method, FB.JSON.flatten(params), cb);
    } catch (x) {
      if (FB.Flash.hasMinVersion()) {
        FB.ApiServer.flash(domain, path, method, FB.JSON.flatten(params), cb);
      } else {
        throw new Error('Flash is required for this API call.');
      }
    }
  },

  /**
   * Basic JSONP Support.
   *
   * @access private
   * @param domain {String}   the domain key, one of 'api', 'api_read',
   *                          or 'graph'
   * @param path   {String}   the request path
   * @param method {String}   the http method
   * @param params {Object}   the parameters for the query
   * @param cb     {Function} the callback function to handle the response
   */
  jsonp: function(domain, path, method, params, cb) {
    var
      g      = FB.guid(),
      script = document.createElement('script');

    // jsonp needs method overrides as the request itself is always a GET
    if (domain === 'graph' && method !== 'get') {
      params.method = method;
    }
    params.callback = 'FB.ApiServer._callbacks.' + g;

    var url = (
      FB._domain[domain] + path +
      (path.indexOf('?') > -1 ? '&' : '?') +
      FB.QS.encode(params)
    );
    if (url.length > 2000) {
      throw new Error('JSONP only support a maximum of 2000 bytes of input.');
    }

    // this is the JSONP callback invoked by the response
    FB.ApiServer._callbacks[g] = function(response) {
      cb && cb(response);
      delete FB.ApiServer._callbacks[g];
      script.parentNode.removeChild(script);
    };

    script.src = url;
    document.getElementsByTagName('head')[0].appendChild(script);
  },

  /**
   * Flash based HTTP Client.
   *
   * @access private
   * @param domain {String}   the domain key, one of 'api' or 'graph'
   * @param path   {String}   the request path
   * @param method {String}   the http method
   * @param params {Object}   the parameters for the query
   * @param cb     {Function} the callback function to handle the response
   */
  flash: function(domain, path, method, params, cb) {
    if (!window.FB_OnXdHttpResult) {
      // the SWF calls this global function when a HTTP response is available
      // FIXME: remove global
      window.FB_OnXdHttpResult = function(reqId, data) {
        FB.ApiServer._callbacks[reqId](decodeURIComponent(data));
      };
    }

    FB.Flash.onReady(function() {
      var
        url  = FB._domain[domain] + path,
        body = FB.QS.encode(params);

      if (method === 'get') {
        // convert GET to POST if needed based on URL length
        if (url.length + body.length > 2000) {
          if (domain === 'graph') {
            params.method = 'get';
          }
          method = 'post';
          body = FB.QS.encode(params);
        } else {
          url += (url.indexOf('?') > -1 ? '&' : '?') + body;
          body = '';
        }
      } else if (method !== 'post') {
        // we use method override and do a POST for PUT/DELETE as flash has
        // trouble otherwise
        if (domain === 'graph') {
          params.method = method;
        }
        method = 'post';
        body = FB.QS.encode(params);
      }

      // fire the request
      var reqId = document.XdComm.sendXdHttpRequest(
        method.toUpperCase(), url, body, null);

      // callback
      FB.ApiServer._callbacks[reqId] = function(response) {
        cb && cb(FB.JSON.parse(response));
        delete FB.ApiServer._callbacks[reqId];
      };
    });
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *
 *
 * @provides fb.auth
 * @requires fb.prelude
 *           fb.qs
 *           fb.event
 *           fb.json
 *           fb.ui
 */

/**
 * Authentication, Authorization & Sessions.
 *
 * @class FB
 * @static
 * @access private
 */
FB.provide('', {
  /**
   * Find out the current status from the server, and get a session if the user
   * is connected.
   *
   * The user's status or the question of *who is the current user* is
   * the first thing you will typically start with. For the answer, we
   * ask facebook.com. Facebook will answer this question in one of
   * two ways:
   *
   * 1. Someone you don't know.
   * 2. Someone you know and have interacted with. Here's a session for them.
   *
   * Here's how you find out:
   *
   *     FB.getLoginStatus(function(response) {
   *       if (response.session) {
   *         // logged in and connected user, someone you know
   *       } else {
   *         // no user session available, someone you dont know
   *       }
   *     });
   *
   * The example above will result in the callback being invoked **once**
   * on load based on the session from www.facebook.com. JavaScript applications
   * are typically written with heavy use of events, and the SDK **encourages**
   * this by exposing various events. These are fired by the various
   * interactions with authentication flows, such as [FB.login()][login] or
   * [[wiki:fb:login-button]]. Widgets such as [[wiki:fb:comments (XFBML)]]
   * may also trigger authentication.
   *
   * **Events**
   *
   * #### auth.login
   * This event is fired when your application first notices the user (in other
   * words, gets a session when it didn't already have a valid one).
   * #### auth.logout
   * This event is fired when your application notices that there is no longer
   * a valid user (in other words, it had a session but can no longer validate
   * the current user).
   * #### auth.sessionChange
   * This event is fired for **any** auth related change as they all affect the
   * session: login, logout, session refresh. Sessions are refreshed over time
   * as long as the user is active with your application.
   * #### auth.statusChange
   * Typically you will want to use the auth.sessionChange event. But in rare
   * cases, you want to distinguish between these three states:
   *
   * - Connected
   * - Logged into Facebook but not connected with your application
   * - Not logged into Facebook at all.
   *
   * The [FB.Event.subscribe][subscribe] and
   * [FB.Event.unsubscribe][unsubscribe] functions are used to subscribe to
   * these events. For example:
   *
   *     FB.Event.subscribe('auth.login', function(response) {
   *       // do something with response
   *     });
   *
   * The response object returned to all these events is the same as the
   * response from [FB.getLoginStatus][getLoginStatus], [FB.login][login] or
   * [FB.logout][logout]. This response object contains:
   *
   * status
   * : The status of the User. One of `connected`, `notConnected` or `unknown`.
   *
   * session
   * : The session object.
   *
   * perms
   * : The comma separated permissions string. This is specific to a
   *   permissions call. It is not persistent.
   *
   * [subscribe]: /docs/reference/javascript/FB.Event.subscribe
   * [unsubscribe]: /docs/reference/javascript/FB.Event.unsubscribe
   * [getLoginStatus]: /docs/reference/javascript/FB.getLoginStatus
   * [login]: /docs/reference/javascript/FB.login
   * [logout]: /docs/reference/javascript/FB.logout
   *
   * @access public
   * @param cb {Function} The callback function.
   * @param force {Boolean} Force reloading the login status (default `false`).
   */
  getLoginStatus: function(cb, force) {
    if (!FB._apiKey) {
      FB.log('FB.getLoginStatus() called before calling FB.init().');
      return;
    }

    // we either invoke the callback right away if the status has already been
    // loaded, or queue it up for when the load is done.
    if (cb) {
      if (!force && FB.Auth._loadState == 'loaded') {
        cb({ status: FB._userStatus, session: FB._session });
        return;
      } else {
        FB.Event.subscribe('FB.loginStatus', cb);
      }
    }

    // if we're already loading, and this is not a force load, we're done
    if (!force && FB.Auth._loadState == 'loading') {
      return;
    }

    FB.Auth._loadState = 'loading';

    // invoke the queued sessionLoad callbacks
    var lsCb = function(response) {
      // done
      FB.Auth._loadState = 'loaded';

      // invoke callbacks
      FB.Event.fire('FB.loginStatus', response);
      FB.Event.clear('FB.loginStatus');
    };

    // finally make the call to login status
    FB.ui({ method: 'auth.status', display: 'hidden' }, lsCb);
  },

  /**
   * *Synchronous* accessor for the current Session. The **synchronous**
   * nature of this method is what sets it apart from the other login methods.
   * It is similar in nature to [FB.getLoginStatus()][FB.getLoginStatus], but
   * it just **returns** the session. Many parts of your application already
   * *assume* the user is connected with your application. In such cases, you
   * may want to avoid the overhead of making asynchronous calls.
   *
   * NOTE: You should never use this method at *page load* time. Generally, it
   * is safer to use [FB.getLoginStatus()][FB.getLoginStatus] if you are
   * unsure.
   *
   * [FB.getLoginStatus]: /docs/reference/javascript/FB.getLoginStatus
   *
   * @access public
   * @return {Object} the current Session if available, `null` otherwise
   */
  getSession: function() {
    return FB._session;
  },

  /**
   * Login/Authorize/Permissions.
   *
   * Once you have determined the user's status, you may need to
   * prompt the user to login. It is best to delay this action to
   * reduce user friction when they first arrive at your site. You can
   * then prompt and show them the "Connect with Facebook" button
   * bound to an event handler which does the following:
   *
   *     FB.login(function(response) {
   *       if (response.session) {
   *         // user successfully logged in
   *       } else {
   *         // user cancelled login
   *       }
   *     });
   *
   * You should **only** call this on a user event as it opens a
   * popup. Most browsers block popups, _unless_ they were initiated
   * from a user event, such as a click on a button or a link.
   *
   *
   * Depending on your application's needs, you may need additional
   * permissions from the user. A large number of calls do not require
   * any additional permissions, so you should first make sure you
   * need a permission. This is a good idea because this step
   * potentially adds friction to the user's process. Another point to
   * remember is that this call can be made even _after_ the user has
   * first connected. So you may want to delay asking for permissions
   * until as late as possible:
   *
   *     FB.login(function(response) {
   *       if (response.session) {
   *         if (response.perms) {
   *           // user is logged in and granted some permissions.
   *           // perms is a comma separated list of granted permissions
   *         } else {
   *           // user is logged in, but did not grant any permissions
   *         }
   *       } else {
   *         // user is not logged in
   *       }
   *     }, {perms:'read_stream,publish_stream,offline_access'});
   *
   * @access public
   * @param cb {Function} The callback function.
   * @param opts {Object} (_optional_) Options to modify login behavior.
   *
   * Name                     | Type    | Description
   * ------------------------ | ------- | --------------------------------------------------------------------------------
   * perms                    | String  | Comma separated list of [Extended permissions](/docs/authentication/permissions)
   * enable_profile_selector  | Boolean | When true, prompt the user to grant permission for one or more Pages.
   * profile_selector_ids     | String  | Comma separated list of IDs to display in the profile selector.
   */
  login: function(cb, opts) {
    opts = FB.copy({ method: 'auth.login', display: 'popup' }, opts || {});
    FB.ui(opts, cb);
  },

  /**
   * Logout the user in the background.
   *
   * Just like logging in is tied to facebook.com, so is logging out -- and
   * this call logs the user out of both Facebook and your site. This is a
   * simple call:
   *
   *     FB.logout(function(response) {
   *       // user is now logged out
   *     });
   *
   * NOTE: You can only log out a user that is connected to your site.
   *
   * @access public
   * @param cb {Function} The callback function.
   */
  logout: function(cb) {
    FB.ui({ method: 'auth.logout', display: 'hidden' }, cb);
  }
});

/**
 * Internal Authentication implementation.
 *
 * @class FB.Auth
 * @static
 * @access private
 */
FB.provide('Auth', {
  // pending callbacks for FB.getLoginStatus() calls
  _callbacks: [],

  /**
   * Set a new session value. Invokes all the registered subscribers
   * if needed.
   *
   * @access private
   * @param session {Object}  the new Session
   * @param status  {String}  the new status
   * @return       {Object}  the "response" object
   */
  setSession: function(session, status) {
    // detect special changes before changing the internal session
    var
      login         = !FB._session && session,
      logout        = FB._session && !session,
      both          = FB._session && session && FB._session.uid != session.uid,
      sessionChange = login || logout || (FB._session && session &&
                         FB._session.session_key != session.session_key),
      statusChange  = status != FB._userStatus;

    var response = {
      session : session,
      status  : status
    };

    FB._session = session;
    FB._userStatus = status;

    // If cookie support is enabled, set the cookie. Cookie support does not
    // rely on events, because we want the cookie to be set _before_ any of the
    // event handlers are fired. Note, this is a _weak_ dependency on Cookie.
    if (sessionChange && FB.Cookie && FB.Cookie.getEnabled()) {
      FB.Cookie.set(session);
    }

    // events
    if (statusChange) {
      /**
       * Fired when the status changes.
       *
       * @event auth.statusChange
       */
      FB.Event.fire('auth.statusChange', response);
    }
    if (logout || both) {
      /**
       * Fired when a logout action is performed.
       *
       * @event auth.logout
       */
      FB.Event.fire('auth.logout', response);
    }
    if (login || both) {
      /**
       * Fired when a login action is performed.
       *
       * @event auth.login
       */
      FB.Event.fire('auth.login', response);
    }
    if (sessionChange) {
      /**
       * Fired when the session changes. This includes a session being
       * refreshed, or a login or logout action.
       *
       * @event auth.sessionChange
       */
      FB.Event.fire('auth.sessionChange', response);
    }

    // re-setup a timer to refresh the session if needed. we only do this if
    // FB.Auth._loadState exists, indicating that the application relies on the
    // JS to get and refresh session information (vs managing it themselves).
    if (FB.Auth._refreshTimer) {
      window.clearTimeout(FB.Auth._refreshTimer);
      delete FB.Auth._refreshTimer;
    }
    if (FB.Auth._loadState && session && session.expires) {
      // refresh every 20 minutes. we don't rely on the expires time because
      // then we would also need to rely on the local time available in JS
      // which is often incorrect.
      FB.Auth._refreshTimer = window.setTimeout(function() {
        FB.getLoginStatus(null, true); // force refresh
      }, 1200000); // 20 minutes
    }

    return response;
  },

  /**
   * This handles receiving a session from:
   *  - login_status.php
   *  - login.php
   *  - tos.php
   *
   * It also (optionally) handles the ``xxRESULTTOKENxx`` response from:
   *  - prompt_permissions.php
   *
   * And calls the given callback with::
   *
   *   {
   *     session: session or null,
   *     status: 'unknown' or 'notConnected' or 'connected',
   *     perms: comma separated string of perm names
   *   }
   *
   * @access private
   * @param cb        {Function} the callback function
   * @param frame     {String}   the frame id for the callback is tied to
   * @param target    {String}   parent or opener to indicate window relation
   * @param isDefault {Boolean}  is this the default callback for the frame
   * @param status    {String}   the connect status this handler will trigger
   * @param session   {Object}   backup session, if none is found in response
   * @return         {String}   the xd url bound to the callback
   */
  xdHandler: function(cb, frame, target, isDefault, status, session) {
    return FB.UIServer._xdNextHandler(function(params) {
      try {
        session = FB.JSON.parse(params.session);
      } catch (x) {
        // ignore parse errors
      }
      var response = FB.Auth.setSession(session || null, status);

      // incase we were granted some new permissions
      response.perms = (
        params.result != 'xxRESULTTOKENxx' && params.result || '');

      // user defined callback
      cb && cb(response);
    }, frame, target, isDefault) + '&result=xxRESULTTOKENxx';
  }
});

FB.provide('UIServer.Methods', {
  'auth.login': {
    size      : { width: 627, height: 326 },
    url       : 'login.php',
    transform : function(call) {
      //FIXME
      if (!FB._apiKey) {
        FB.log('FB.login() called before calling FB.init().');
        return;
      }

      // if we already have a session and permissions are not being requested,
      // we just fire the callback
      if (FB._session && !call.params.perms) {
        FB.log('FB.login() called when user is already connected.');
        call.cb && call.cb({ status: FB._userStatus, session: FB._session });
        return;
      }

      var
        xdHandler = FB.Auth.xdHandler,
        cb        = call.cb,
        id        = call.id,
        session   = FB._session,
        cancel    = xdHandler(
          cb,
          id,
          'opener',
          true, // isDefault
          FB._userStatus,
          session),
        next      = xdHandler(
          cb,
          id,
          'opener',
          false, // isDefault
          'connected',
          session);

      FB.copy(call.params, {
        cancel_url              : cancel,
        channel_url             : window.location.toString(),
        next                    : next,
        fbconnect               : FB._inCanvas ? 0 : 1,
        req_perms               : call.params.perms,
        enable_profile_selector : call.params.enable_profile_selector,
        profile_selector_ids    : call.params.profile_selector_ids,
        return_session          : 1,
        session_version         : 3,
        v                       : '1.0'
      });
      delete call.cb;
      delete call.params.perms; //TODO fix name to be the same on server

      return call;
    }
  },

  'auth.logout': {
    url       : 'logout.php',
    transform : function(call) {
      //FIXME make generic
      if (!FB._apiKey) {
        FB.log('FB.logout() called before calling FB.init().');
      } else if (!FB._session) {
        FB.log('FB.logout() called without a session.');
      } else {
        call.params.next = FB.Auth.xdHandler(
          call.cb, call.id, 'parent', false, 'unknown');
        return call;
      }
    }
  },

  'auth.status': {
    url       : 'extern/login_status.php',
    transform : function(call) {
      var
        cb = call.cb,
        id = call.id,
        xdHandler = FB.Auth.xdHandler;
      delete call.cb;
      FB.copy(call.params, {
        no_session : xdHandler(cb, id, 'parent', false, 'notConnected'),
        no_user    : xdHandler(cb, id, 'parent', false, 'unknown'),
        ok_session : xdHandler(cb, id, 'parent', false, 'connected'),
        session_version : 3,
        extern: FB._inCanvas ? 0 : 2
      });
      return call;
    }
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *
 *
 * @provides fb.canvas
 * @requires fb.prelude
 *           fb.array
 *           fb.content
 *           fb.qs
 */

/**
 * Things used by Canvas apps.
 *
 * ---------------------------------------------------------------------
 * IMPORTANT NOTE: IF YOU ARE USING THESE FUNCTIONS, MAKE SURE YOU GO TO
 *
 * http://www.facebook.com/developers
 *
 * CLICK YOUR APP, CLICK EDIT SETTINGS, CLICK MIGRATIONS AND ENABLE
 *
 * New SDKs
 * ---------------------------------------------------------------------
 *
 * @class FB.Canvas
 * @static
 * @access private
 */
FB.provide('Canvas', {
  /**
   * The timer. We keep it around so we can shut if off
   */
  _timer: null,

  /**
   * Tells Facebook to resize your iframe.
   *
   * ## Migration Requirement
   *
   * To use this function, you MUST have enabled the *New SDKs*
   * [migration](http://developers.facebook.com/blog/post/363).
   *
   * ## Examples
   *
   * Call this whenever you need a resize. This usually means, once after
   * pageload, and whenever your content size changes.
   *
   *     window.fbAsyncInit = function() {
   *       FB.Canvas.setSize();
   *     }
   *
   *     // Do things that will sometimes call sizeChangeCallback()
   *
   *     function sizeChangeCallback() {
   *       FB.Canvas.setSize();
   *     }
   *
   * It will default to the current size of the frame, but if you have a need
   * to pick your own size, you can use the params array.
   *
   *     FB.Canvas.setSize({ width: 640, height: 480 }); // Live in the past
   *
   * The max width is whatever you picked in your app settings, and there is no
   * max height.
   *
   * @param {Object} params
   *
   * Property | Type    | Description                      | Argument   | Default
   * -------- | ------- | -------------------------------- | ---------- | -------
   * width    | Integer | Desired width. Max is app width. | *Optional* | frame width
   * height   | Integer | Desired height.                  | *Optional* | frame height
   *
   * @author ptarjan
   */
  setSize: function(params) {
    // setInterval calls its function with an integer
    if (typeof params != "object") {
      params = {};
    }
    params = FB.copy(params || {}, FB.Canvas._computeContentSize());

    // Deep compare
    if (FB.Canvas._lastSize &&
        FB.Canvas._lastSize.width == params.width &&
        FB.Canvas._lastSize.height == params.height) {
      return false;
    }
    FB.Canvas._lastSize = params;

    FB.Canvas._sendMessageToFacebook({
      method: 'setSize',
      params: params
    });
    return true;
  },

  /**
   * Starts or stops a timer which resizes your iframe every few milliseconds.
   *
   * Used to be known as:
   * [startTimerToSizeToContent](http://wiki.developers.facebook.com/index.php/Resizable_IFrame)
   *
   * ## Migration Requirement
   *
   * To use this function, you MUST have enabled the *New SDKs*
   * [migration](http://developers.facebook.com/blog/post/363).
   *
   * ## Examples
   *
   * This function is useful if you know your content will change size, but you
   * don't know when. There will be a slight delay, so if you know when your
   * content changes size, you should call [setSize](FB.Canvas.setSize)
   * yourself (and save your user's CPU cycles).
   *
   *     window.fbAsyncInit = function() {
   *       FB.Canvas.setAutoResize();
   *     }
   *
   * If you ever need to stop the timer, just pass false.
   *
   *     FB.Canvas.setAutoResize(false);
   *
   * If you want the timer to run at a different interval, you can do that too.
   *
   *     FB.Canvas.setAutoResize(91); // Paul's favourite number
   *
   * Note: If there is only 1 parameter and it is a number, it is assumed to be
   * the interval.
   *
   * @param {Boolean} onOrOff Whether to turn the timer on or off. truthy ==
   * on, falsy == off. **default** is true
   * @param {Integer} interval How often to resize (in ms). **default** is
   * 100ms
   *
   * @author ptarjan
   */
  setAutoResize: function(onOrOff, interval) {
    // I did this a few times, so I expect many users will too
    if (interval === undefined && typeof onOrOff == "number") {
      interval = onOrOff;
      onOrOff = true;
    }

    if (onOrOff === undefined || onOrOff) {
      if (FB.Canvas._timer === null) {
        FB.Canvas._timer =
          window.setInterval(FB.Canvas.setSize,
                             interval || 100); // 100 ms is the default
      }
      FB.Canvas.setSize();
    } else {
      if (FB.Canvas._timer !== null) {
        window.clearInterval(FB.Canvas._timer);
        FB.Canvas._timer = null;
      }
    }
  },

  /**
   * Determine the size of the actual contents of the iframe.
   *
   * This is the same number jQuery seems to give for
   * $(document).height() but still causes a scrollbar in some browsers
   * on some sites.
   * Patches and test cases are welcome.
   */
  _computeContentSize: function() {
    var body = document.body,
        docElement = document.documentElement,
        right = 0,
        bottom = Math.max(
          Math.max(body.offsetHeight, body.scrollHeight) +
            body.offsetTop,
          Math.max(docElement.offsetHeight, docElement.scrollHeight) +
            docElement.offsetTop);

    if (body.offsetWidth < body.scrollWidth) {
      right = body.scrollWidth + body.offsetLeft;
    } else {
      FB.Array.forEach(body.childNodes, function(child) {
        var childRight = child.offsetWidth + child.offsetLeft;
        if (childRight > right) {
          right = childRight;
        }
      });
    }
    if (docElement.clientLeft > 0) {
      right += (docElement.clientLeft * 2);
    }
    if (docElement.clientTop > 0) {
      bottom += (docElement.clientTop * 2);
    }

    return {height: bottom, width: right};
  },

  /**
   * Sends a request back to facebook.
   *
   * @author ptarjan
   */
  _sendMessageToFacebook: function(message) {
    var url = FB._domain.staticfb + 'connect/canvas_proxy.php#' +
      FB.QS.encode({method: message.method,
                    params: FB.JSON.stringify(message.params)});

     var root = FB.Content.appendHidden('');
     FB.Content.insertIframe({
       url: url,
       root: root,
       width: 1,
       height: 1,
       onload: function() {
         setTimeout(function() {
           root.parentNode.removeChild(root);
         }, 10);
       }
     });
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *
 *
 * @provides fb.content
 * @requires fb.prelude fb.array
 */

/**
 * "Content" is a very flexible term. Helpers for things like hidden
 * DOM content, iframes and popups.
 *
 * @class FB.Content
 * @static
 * @access private
 */
FB.provide('Content', {
  _root       : null,
  _hiddenRoot : null,
  _callbacks  : {},

  /**
   * Append some content.
   *
   * @access private
   * @param content {String|Node} a DOM Node or HTML string
   * @param root    {Node}        (optional) a custom root node
   * @return {Node} the node that was just appended
   */
  append: function(content, root) {
    // setup the root node, creating it if necessary
    if (!root) {
      if (!FB.Content._root) {
        FB.Content._root = root = FB.$('fb-root');
        if (!root) {
          FB.log('The "fb-root" div has not been created.');
          return;
        } else {
          root.className += ' fb_reset';
        }
      } else {
        root = FB.Content._root;
      }
    }

    if (typeof content == 'string') {
      var div = document.createElement('div');
      root.appendChild(div).innerHTML = content;
      return div;
    } else {
      return root.appendChild(content);
    }
  },

  /**
   * Append some hidden content.
   *
   * @access private
   * @param content {String|Node} a DOM Node or HTML string
   * @return {Node} the node that was just appended
   */
  appendHidden: function(content) {
    if (!FB.Content._hiddenRoot) {
      var
        hiddenRoot = document.createElement('div'),
        style      = hiddenRoot.style;
      style.position = 'absolute';
      style.top      = '-10000px';
      style.width    = style.height = 0;
      FB.Content._hiddenRoot = FB.Content.append(hiddenRoot);
    }

    return FB.Content.append(content, FB.Content._hiddenRoot);
  },

  /**
   * Insert a new iframe. Unfortunately, its tricker than you imagine.
   *
   * NOTE: These iframes have no border, overflow hidden and no scrollbars.
   *
   * The opts can contain:
   *   root       DOMElement  required root node (must be empty)
   *   url        String      required iframe src attribute
   *   className  String      optional class attribute
   *   height     Integer     optional height in px
   *   id         String      optional id attribute
   *   name       String      optional name attribute
   *   onload     Function    optional onload handler
   *   width      Integer     optional width in px
   *
   * @access private
   * @param opts {Object} the options described above
   */
  insertIframe: function(opts) {
    //
    // Browsers evolved. Evolution is messy.
    //
    opts.id = opts.id || FB.guid();
    opts.name = opts.name || FB.guid();

    // Dear IE, screw you. Only works with the magical incantations.
    // Dear FF, screw you too. Needs src _after_ DOM insertion.
    // Dear Webkit, you're okay. Works either way.
    var
      guid = FB.guid(),

      // Since we set the src _after_ inserting the iframe node into the DOM,
      // some browsers will fire two onload events, once for the first empty
      // iframe insertion and then again when we set the src. Here some
      // browsers are Webkit browsers which seem to be trying to do the
      // "right thing". So we toggle this boolean right before we expect the
      // correct onload handler to get fired.
      srcSet = false,
      onloadDone = false;
    FB.Content._callbacks[guid] = function() {
      if (srcSet && !onloadDone) {
        onloadDone = true;
        opts.onload && opts.onload(opts.root.firstChild);
      }
    };

//#JSCOVERAGE_IF
    if (document.attachEvent) {
      var html = (
        '<iframe' +
          ' id="' + opts.id + '"' +
          ' name="' + opts.name + '"' +
          (opts.className ? ' class="' + opts.className + '"' : '') +
          ' style="border:none;' +
                  (opts.width ? 'width:' + opts.width + 'px;' : '') +
                  (opts.height ? 'height:' + opts.height + 'px;' : '') +
                  '"' +
          ' src="' + opts.url + '"' +
          ' frameborder="0"' +
          ' scrolling="no"' +
          ' allowtransparency="true"' +
          ' onload="FB.Content._callbacks.' + guid + '()"' +
        '></iframe>'
      );

      // There is an IE bug with iframe caching that we have to work around. We
      // need to load a dummy iframe to consume the initial cache stream. The
      // setTimeout actually sets the content to the HTML we created above, and
      // because its the second load, we no longer suffer from cache sickness.
      // It must be javascript:false instead of about:blank, otherwise IE6 will
      // complain in https.
      // Since javascript:false actually result in an iframe containing the
      // string 'false', we set the iframe height to 1px so that it gets loaded
      // but stays invisible.
      opts.root.innerHTML = '<iframe src="javascript:false"'+
                            ' frameborder="0"'+
                            ' scrolling="no"'+
                            ' style="height:1px"></iframe>';

      // Now we'll be setting the real src.
      srcSet = true;

      // You may wonder why this is a setTimeout. Read the IE source if you can
      // somehow get your hands on it, and tell me if you figure it out. This
      // is a continuation of the above trick which apparently does not work if
      // the innerHTML is changed right away. We need to break apart the two
      // with this setTimeout 0 which seems to fix the issue.
      window.setTimeout(function() {
        opts.root.innerHTML = html;
      }, 0);
    } else {
      // This block works for all non IE browsers. But it's specifically
      // designed for FF where we need to set the src after inserting the
      // iframe node into the DOM to prevent cache issues.
      var node = document.createElement('iframe');
      node.id = opts.id;
      node.name = opts.name;
      node.onload = FB.Content._callbacks[guid];
      node.style.border = 'none';
      node.style.overflow = 'hidden';
      if (opts.className) {
        node.className = opts.className;
      }
      if (opts.height) {
        node.style.height = opts.height + 'px';
      }
      if (opts.width) {
        node.style.width = opts.width + 'px';
      }
      opts.root.appendChild(node);

      // Now we'll be setting the real src.
      srcSet = true;

      node.src = opts.url;
    }
  },

  /**
   * Dynamically generate a <form> and POST it to the given target.
   *
   * The opts MUST contain:
   *   url     String  action URL for the form
   *   target  String  the target for the form
   *   params  Object  the key/values to be used as POST input
   *
   * @access protected
   * @param opts {Object} the options
   */
  postTarget: function(opts) {
    var form = document.createElement('form');
    form.action = opts.url;
    form.target = opts.target;
    form.method = 'POST';
    FB.Content.appendHidden(form);

    FB.Array.forEach(opts.params, function(val, key) {
      if (val !== null && val !== undefined) {
        var input = document.createElement('input');
        input.name = key;
        input.value = val;
        form.appendChild(input);
      }
    });

    form.submit();
    form.parentNode.removeChild(form);
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *
 *
 * @provides fb.cookie
 * @requires fb.prelude
 *           fb.qs
 *           fb.event
 */

/**
 * Cookie Support.
 *
 * @class FB.Cookie
 * @static
 * @access private
 */
FB.provide('Cookie', {
  /**
   * Holds the base_domain property to match the Cookie domain.
   *
   * @access private
   * @type String
   */
  _domain: null,

  /**
   * Indicate if Cookie support should be enabled.
   *
   * @access private
   * @type Boolean
   */
  _enabled: false,

  /**
   * Enable or disable Cookie support.
   *
   * @access private
   * @param val {Boolean} true to enable, false to disable
   */
  setEnabled: function(val) {
    FB.Cookie._enabled = val;
  },

  /**
   * Return the current status of the cookie system.
   *
   * @access private
   * @returns {Boolean} true if Cookie support is enabled
   */
  getEnabled: function() {
    return FB.Cookie._enabled;
  },

  /**
   * Try loading the session from the Cookie.
   *
   * @access private
   * @return {Object} the session object from the cookie if one is found
   */
  load: function() {
    var
      // note, we have the opening quote for the value in the regex, but do
      // not have a closing quote. this is because the \b already handles it.
      cookie = document.cookie.match('\\bfbs_' + FB._apiKey + '="([^;]*)\\b'),
      session;

    if (cookie) {
      // url encoded session stored as "sub-cookies"
      session = FB.QS.decode(cookie[1]);
      // decodes as a string, convert to a number
      session.expires = parseInt(session.expires, 10);
      // capture base_domain for use when we need to clear
      FB.Cookie._domain = session.base_domain;
    }

    return session;
  },

  /**
   * Helper function to set cookie value.
   *
   * @access private
   * @param val    {String} the string value (should already be encoded)
   * @param ts     {Number} a unix timestamp denoting expiry
   * @param domain {String} optional domain for cookie
   */
  setRaw: function(val, ts, domain) {
    document.cookie =
      'fbs_' + FB._apiKey + '="' + val + '"' +
      (val && ts == 0 ? '' : '; expires=' + new Date(ts * 1000).toGMTString()) +
      '; path=/' +
      (domain ? '; domain=.' + domain : '');

    // capture domain for use when we need to clear
    FB.Cookie._domain = domain;
  },

  /**
   * Set the cookie using the given session object.
   *
   * @access private
   * @param session {Object} the session object
   */
  set: function(session) {
    session
      ? FB.Cookie.setRaw(
          FB.QS.encode(session),
          session.expires,
          session.base_domain)
      : FB.Cookie.clear();
  },

  /**
   * Clear the cookie.
   *
   * @access private
   */
  clear: function() {
    FB.Cookie.setRaw('', 0, FB.Cookie._domain);
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.dialog
 * @requires fb.prelude
 *           fb.intl
 *           fb.array
 *           fb.content
 *           fb.dom
 *           fb.css.dialog
 */

/**
 * Dialog creation and management.
 *
 * @class FB.Dialog
 * @static
 * @private
 */
FB.provide('Dialog', {
  /**
   * The loader element.
   *
   * @access private
   * @type DOMElement
   */
  _loaderEl: null,

  /**
   * The stack of active dialogs.
   *
   * @access private
   * @type Array
   */
  _stack: [],

  /**
   * The currently visible dialog.
   *
   * @access private
   * @type DOMElement
   */
  _active: null,

  /**
   * Find the root dialog node for a given element. This will walk up the DOM
   * tree and while a node exists it will check to see if has the fb_dialog
   * class and if it does returns it.
   *
   * @access private
   * @param node {DOMElement} a child node of the dialog
   * @return {DOMElement} the root dialog element if found
   */
  _findRoot: function(node) {
    while (node) {
      if (FB.Dom.containsCss(node, 'fb_dialog')) {
        return node;
      }
      node = node.parentNode;
    }
  },

  /**
   * Show the "Loading..." dialog. This is a special dialog which does not
   * follow the standard stacking semantics. If a callback is provided, a
   * cancel action is provided using the "X" icon.
   *
   * @access private
   * @param cb {Function} optional callback for the "X" action
   */
  _showLoader: function(cb) {
    if (!FB.Dialog._loaderEl) {
      FB.Dialog._loaderEl = FB.Dialog._findRoot(FB.Dialog.create({
        content: (
          '<div class="fb_dialog_loader">' +
            FB.Intl.tx('sh:loading') +
            '<a id="fb_dialog_loader_close"></a>' +
          '</div>'
        )
      }));
    }

    // this needs to be done for each invocation of _showLoader. since we don't
    // stack loaders and instead simply hold on to the last one, it is possible
    // that we are showing nothing when we can potentially be showing the
    // loading dialog for a previously activated but not yet loaded dialog.
    var loaderClose = FB.$('fb_dialog_loader_close');
    if (cb) {
      FB.Dom.removeCss(loaderClose, 'fb_hidden');
      loaderClose.onclick = function() {
        FB.Dialog._hideLoader();
        cb();
      };
    } else {
      FB.Dom.addCss(loaderClose, 'fb_hidden');
      loaderClose.onclick = null;
    }

    FB.Dialog._makeActive(FB.Dialog._loaderEl);
  },

  /**
   * Hide the loading dialog if one is being shown.
   *
   * @access private
   */
  _hideLoader: function() {
    if (FB.Dialog._loaderEl && FB.Dialog._loaderEl == FB.Dialog._active) {
      FB.Dialog._loaderEl.style.top = '-10000px';
    }
  },

  /**
   * Center a dialog based on its current dimensions and place it in the
   * visible viewport area.
   *
   * @access private
   * @param el {DOMElement} the dialog node
   */
  _makeActive: function(el) {
    FB.Dialog._lowerActive();
    var
      dialog = {
        width  : parseInt(el.offsetWidth, 10),
        height : parseInt(el.offsetHeight, 10)
      },
      view   = FB.Dom.getViewportInfo(),
      left   = (view.scrollLeft + (view.width - dialog.width) / 2),
      top    = (view.scrollTop + (view.height - dialog.height) / 2.5);
    el.style.left = (left > 0 ? left : 0) + 'px';
    el.style.top = (top > 0 ? top : 0) + 'px';
    FB.Dialog._active = el;
  },

  /**
   * Lower the current active dialog if there is one.
   *
   * @access private
   * @param node {DOMElement} the dialog node
   */
  _lowerActive: function() {
    if (!FB.Dialog._active) {
      return;
    }
    FB.Dialog._active.style.top = '-10000px';
    FB.Dialog._active = null;
  },

  /**
   * Remove the dialog from the stack.
   *
   * @access private
   * @param node {DOMElement} the dialog node
   */
  _removeStacked: function(dialog) {
    FB.Dialog._stack = FB.Array.filter(FB.Dialog._stack, function(node) {
      return node != dialog;
    });
  },

  /**
   * Create a dialog. Returns the node of the dialog within which the caller
   * can inject markup. Optional HTML string or a DOMElement can be passed in
   * to be set as the content. Note, the dialog is hidden by default.
   *
   * @access protected
   * @param opts {Object} Options:
   * Property  | Type              | Description                       | Default
   * --------- | ----------------- | --------------------------------- | -------
   * content   | String|DOMElement | HTML String or DOMElement         |
   * loader    | Boolean           | `true` to show the loader dialog  | `false`
   * onClose   | Boolean           | callback if closed                |
   * closeIcon | Boolean           | `true` to show close icon         | `false`
   * visible   | Boolean           | `true` to make visible            | `false`
   *
   * @return {DOMElement} the dialog content root
   */
  create: function(opts) {
    opts = opts || {};
    if (opts.loader) {
      FB.Dialog._showLoader(opts.onClose);
    }

    var
      dialog      = document.createElement('div'),
      contentRoot = document.createElement('div'),
      className   = 'fb_dialog';

    // optional close icon
    if (opts.closeIcon && opts.onClose) {
      var closeIcon = document.createElement('a');
      closeIcon.className = 'fb_dialog_close_icon';
      closeIcon.onclick = opts.onClose;
      dialog.appendChild(closeIcon);
    }

    // handle rounded corners j0nx
//#JSCOVERAGE_IF
    if (FB.Dom.getBrowserType() == 'ie') {
      className += ' fb_dialog_legacy';
      FB.Array.forEach(
        [
          'vert_left',
          'vert_right',
          'horiz_top',
          'horiz_bottom',
          'top_left',
          'top_right',
          'bottom_left',
          'bottom_right'
        ],
        function(name) {
          var span = document.createElement('span');
          span.className = 'fb_dialog_' + name;
          dialog.appendChild(span);
        }
      );
    } else {
      className += ' fb_dialog_advanced';
    }

    if (opts.content) {
      FB.Content.append(opts.content, contentRoot);
    }

    dialog.className = className;
    contentRoot.className = 'fb_dialog_content';

    dialog.appendChild(contentRoot);
    FB.Content.append(dialog);

    if (opts.visible) {
      FB.Dialog.show(dialog);
    }

    return contentRoot;
  },

  /**
   * Raises the given dialog. Any active dialogs are automatically lowered. An
   * active loading indicator is suppressed. An already-lowered dialog will be
   * raised and it will be put at the top of the stack. A dialog never shown
   * before will be added to the top of the stack.
   *
   * @access protected
   * @param dialog {DOMElement} a child element of the dialog
   */
  show: function(dialog) {
    dialog = FB.Dialog._findRoot(dialog);
    if (dialog) {
      FB.Dialog._removeStacked(dialog);
      FB.Dialog._hideLoader();
      FB.Dialog._makeActive(dialog);
      FB.Dialog._stack.push(dialog);
    }
  },

  /**
   * Remove the dialog, show any stacked dialogs.
   *
   * @access protected
   * @param dialog {DOMElement} a child element of the dialog
   */
  remove: function(dialog) {
    dialog = FB.Dialog._findRoot(dialog);
    if (dialog) {
      var is_active = FB.Dialog._active == dialog;
      FB.Dialog._removeStacked(dialog);
      if (is_active) {
        if (FB.Dialog._stack.length > 0) {
          FB.Dialog.show(FB.Dialog._stack.pop());
        } else {
          FB.Dialog._lowerActive();
        }
      }

      // wait before the actual removal because of race conditions with async
      // flash crap. seriously, dont ever ask me about it.
      // if we remove this without deferring, then in IE only, we'll get an
      // uncatchable error with no line numbers, function names, or stack
      // traces. the 3 second delay isn't a problem because the <div> is
      // already hidden, it's just not removed from the DOM yet.
      window.setTimeout(function() {
        dialog.parentNode.removeChild(dialog);
      }, 3000);
    }
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.event
 * @requires fb.prelude fb.array
 */

// NOTE: We tag this as FB.Event even though it is actually FB.EventProvider to
// work around limitations in the documentation system.
/**
 * Event handling mechanism for globally named events.
 *
 * @static
 * @class FB.Event
 */
FB.provide('EventProvider', {
  /**
   * Returns the internal subscriber array that can be directly manipulated by
   * adding/removing things.
   *
   * @access private
   * @return {Object}
   */
  subscribers: function() {
    // this odd looking logic is to allow instances to lazily have a map of
    // their events. if subscribers were an object literal itself, we would
    // have issues with instances sharing the subscribers when its being used
    // in a mixin style.
    if (!this._subscribersMap) {
      this._subscribersMap = {};
    }
    return this._subscribersMap;
  },

  /**
   * Subscribe to a given event name, invoking your callback function whenever
   * the event is fired.
   *
   * For example, suppose you want to get notified whenever the session
   * changes:
   *
   *     FB.Event.subscribe('auth.sessionChange', function(response) {
   *       // do something with response.session
   *     });
   *
   * Global Events:
   *
   * - auth.login -- fired when the user logs in
   * - auth.logout -- fired when the user logs out
   * - auth.sessionChange -- fired when the session changes
   * - auth.statusChange -- fired when the status changes
   * - xfbml.render -- fired when a call to FB.XFBML.parse() completes
   * - edge.create -- fired when the user likes something (fb:like)
   * - comments.add -- fired when the user adds a comment (fb:comments)
   * - fb.log -- fired on log message
   *
   * @access public
   * @param name {String} Name of the event.
   * @param cb {Function} The handler function.
   */
  subscribe: function(name, cb) {
    var subs = this.subscribers();

    if (!subs[name]) {
      subs[name] = [cb];
    } else {
      subs[name].push(cb);
    }
  },

  /**
   * Removes subscribers, inverse of [FB.Event.subscribe](FB.Event.subscribe).
   *
   * Removing a subscriber is basically the same as adding one. You need to
   * pass the same event name and function to unsubscribe that you passed into
   * subscribe. If we use a similar example to
   * [FB.Event.subscribe](FB.event.subscribe), we get:
   *
   *     var onSessionChange = function(response) {
   *       // do something with response.session
   *     };
   *     FB.Event.subscribe('auth.sessionChange', onSessionChange);
   *
   *     // sometime later in your code you dont want to get notified anymore
   *     FB.Event.unsubscribe('auth.sessionChange', onSessionChange);
   *
   * @access public
   * @param name {String} Name of the event.
   * @param cb {Function} The handler function.
   */
  unsubscribe: function(name, cb) {
    var subs = this.subscribers()[name];

    FB.Array.forEach(subs, function(value, key) {
      if (value == cb) {
        subs[key] = null;
      }
    });
  },

  /**
   * Repeatedly listen for an event over time. The callback is invoked
   * immediately when monitor is called, and then every time the event
   * fires. The subscription is canceled when the callback returns true.
   *
   * @access private
   * @param {string} name Name of event.
   * @param {function} callback A callback function. Any additional arguments
   * to monitor() will be passed on to the callback. When the callback returns
   * true, the monitoring will cease.
   */
  monitor: function(name, callback) {
    if (!callback()) {
      var
        ctx = this,
        fn = function() {
          if (callback.apply(callback, arguments)) {
            ctx.unsubscribe(name, fn);
          }
        };

      this.subscribe(name, fn);
    }
  },

  /**
   * Removes all subscribers for named event.
   *
   * You need to pass the same event name that was passed to FB.Event.subscribe.
   * This is useful if the event is no longer worth listening to and you
   * believe that multiple subscribers have been set up.
   *
   * @access private
   * @param name    {String}   name of the event
   */
  clear: function(name) {
    delete this.subscribers()[name];
  },

  /**
   * Fires a named event. The first argument is the name, the rest of the
   * arguments are passed to the subscribers.
   *
   * @access private
   * @param name {String} the event name
   */
  fire: function() {
    var
      args = Array.prototype.slice.call(arguments),
      name = args.shift();

    FB.Array.forEach(this.subscribers()[name], function(sub) {
      // this is because we sometimes null out unsubscribed rather than jiggle
      // the array
      if (sub) {
        sub.apply(this, args);
      }
    });
  }
});

/**
 * Event handling mechanism for globally named events.
 *
 * @class FB.Event
 * @extends FB.EventProvider
 */
FB.provide('Event', FB.EventProvider);
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *
 *
 * @provides fb.flash
 * @requires fb.prelude
 *           fb.qs
 *           fb.content
 */

/**
 * Flash Support.
 *
 * @class FB.Flash
 * @static
 * @access private
 */
FB.provide('Flash', {
  //
  // DYNAMIC DATA
  //
  _minVersions: [
    [9,  0, 159, 0 ],
    [10, 0, 22,  87]
  ],
  _swfPath: 'swf/XdComm.swf',

  /**
   * The onReady callbacks.
   *
   * @access private
   * @type Array
   */
  _callbacks: [],

  /**
   * Initialize the SWF.
   *
   * @access private
   */
  init: function() {
    // only initialize once
    if (FB.Flash._init) {
      return;
    }
    FB.Flash._init = true;

    // the SWF calls this global function to notify that its ready
    // FIXME: should allow the SWF to take a flashvar that controls the name
    // of this function. we should not have any globals other than FB.
    window.FB_OnFlashXdCommReady = function() {
      FB.Flash._ready = true;
      for (var i=0, l=FB.Flash._callbacks.length; i<l; i++) {
        FB.Flash._callbacks[i]();
      }
      FB.Flash._callbacks = [];
    };

    // create the swf
    var
      IE   = !!document.attachEvent,
      swf  = FB._domain.cdn + FB.Flash._swfPath,
      html = (
        '<object ' +
          'type="application/x-shockwave-flash" ' +
          'id="XdComm" ' +
          (IE ? 'name="XdComm" ' : '') +
          (IE ? '' : 'data="' + swf + '" ') +
          (IE
              ? 'classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" '
              : ''
          ) +
          'allowscriptaccess="always">' +
          '<param name="movie" value="' + swf + '"></param>' +
          '<param name="allowscriptaccess" value="always"></param>' +
        '</object>'
      );

    FB.Content.appendHidden(html);
  },

  /**
   * Check that the minimal version of Flash we need is available.
   *
   * @access private
   * @return {Boolean} true if the minimum version requirements are matched
   */
  hasMinVersion: function() {
    if (typeof FB.Flash._hasMinVersion === 'undefined') {
      var
        versionString,
        i,
        l,
        version = [];
      try {
        versionString = new ActiveXObject('ShockwaveFlash.ShockwaveFlash')
                          .GetVariable('$version');
      } catch(x) {
        if (navigator.mimeTypes.length > 0) {
          var mimeType = 'application/x-shockwave-flash';
          if (navigator.mimeTypes[mimeType].enabledPlugin) {
            var name = 'Shockwave Flash';
            versionString = (navigator.plugins[name + ' 2.0'] ||
                             navigator.plugins[name])
                            .description;
          }
        }
      }

      // take the string and come up with an array of integers:
      //   [10, 0, 22]
      if (versionString) {
        var parts = versionString
                      .replace(/\D+/g, ',')
                      .match(/^,?(.+),?$/)[1]
                      .split(',');
        for (i=0, l=parts.length; i<l; i++) {
          version.push(parseInt(parts[i], 10));
        }
      }

      // start by assuming we dont have the min version.
      FB.Flash._hasMinVersion = false;

      // look through all the allowed version definitions.
      majorVersion:
      for (i=0, l=FB.Flash._minVersions.length; i<l; i++) {
        var spec = FB.Flash._minVersions[i];

        // we only accept known major versions, and every supported major
        // version has at least one entry in _minVersions. only if the major
        // version matches, does the rest of the check make sense.
        if (spec[0] != version[0]) {
          continue;
        }

        // the rest of the version components must be equal or higher
        for (var m=1, n=spec.length, o=version.length; (m<n && m<o); m++) {
          if (version[m] < spec[m]) {
            // less means this major version is no good
//#JSCOVERAGE_IF 0
            FB.Flash._hasMinVersion = false;
            continue majorVersion;
//#JSCOVERAGE_ENDIF
          } else {
            FB.Flash._hasMinVersion = true;
            if (version[m] > spec[m]) {
              // better than needed
              break majorVersion;
            }
          }
        }
      }
    }

    return FB.Flash._hasMinVersion;
  },

  /**
   * Register a function that needs to ensure Flash is ready.
   *
   * @access private
   * @param cb {Function} the function
   */
  onReady: function(cb) {
    FB.Flash.init();
    if (FB.Flash._ready) {
      // this forces the cb to be asynchronous to ensure no one relies on the
      // _potential_ synchronous nature.
      window.setTimeout(cb, 0);
    } else {
      FB.Flash._callbacks.push(cb);
    }
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *
 *
 * JavaScript library providing Facebook Connect integration.
 *
 * @provides fb.init
 * @requires fb.prelude
 *           fb.auth
 *           fb.api
 *           fb.cookie
 *           fb.ui
 *           fb.xd
 */

/**
 * This is the top level for all the public APIs.
 *
 * @class FB
 * @static
 * @access public
 */
FB.provide('', {
  /**
   * Initialize the library.
   *
   * Typical initialization enabling all optional features:
   *
   *      <div id="fb-root"></div>
   *      <script src="http://connect.facebook.net/en_US/all.js"></script>
   *      <script>
   *        FB.init({
   *          appId  : 'YOUR APP ID',
   *          status : true, // check login status
   *          cookie : true, // enable cookies to allow the server to access the session
   *          xfbml  : true  // parse XFBML
   *        });
   *      </script>
   *
   * The best place to put this code is right before the closing
   * `</body>` tag.
   *
   * ### Asynchronous Loading
   *
   * The library makes non-blocking loading of the script easy to use by
   * providing the `fbAsyncInit` hook. If this global function is defined, it
   * will be executed when the library is loaded:
   *
   *     <div id="fb-root"></div>
   *     <script>
   *       window.fbAsyncInit = function() {
   *         FB.init({
   *           appId  : 'YOUR APP ID',
   *           status : true, // check login status
   *           cookie : true, // enable cookies to allow the server to access the session
   *           xfbml  : true  // parse XFBML
   *         });
   *       };
   *
   *       (function() {
   *         var e = document.createElement('script');
   *         e.src = document.location.protocol + '//connect.facebook.net/en_US/all.js';
   *         e.async = true;
   *         document.getElementById('fb-root').appendChild(e);
   *       }());
   *     </script>
   *
   * The best place to put the asynchronous version of the code is right after
   * the opening `<body>` tag. This allows Facebook initialization to happen in
   * parallel with the initialization on the rest of your page.
   *
   * ### Internationalization
   *
   * Facebook Connect features are available many locales. You can replace the
   * `en_US` locale specifed above with one of the [supported Facebook
   * Locales][locales]. For example, to load up the library and trigger dialogs,
   * popups and plugins to be in Hindi (`hi_IN`), you can load the library from
   * this URL:
   *
   *     http://connect.facebook.net/hi_IN/all.js
   *
   * [locales]: http://wiki.developers.facebook.com/index.php/Facebook_Locales
   *
   * ### SSL
   *
   * Facebook Connect is also available over SSL. You should only use this when
   * your own page is served over `https://`. The library will rely on the
   * current page protocol at runtime. The SSL URL is the same, only the
   * protocol is changed:
   *
   *     https://connect.facebook.net/en_US/all.js
   *
   * **Note**: Some [UI methods][FB.ui] like **stream.publish** and
   * **stream.share** can be used without registering an application or calling
   * this method. If you are using an appId, all methods **must** be called
   * after this method.
   *
   * [FB.ui]: /docs/reference/javascript/FB.ui
   *
   * @access public
   * @param options {Object}
   *
   * Property | Type    | Description                          | Argument   | Default
   * -------- | ------- | ------------------------------------ | ---------- | -------
   * appId    | String  | Your application ID.                 | *Optional* | `null`
   * cookie   | Boolean | `true` to enable cookie support.     | *Optional* | `false`
   * logging  | Boolean | `false` to disable logging.          | *Optional* | `true`
   * session  | Object  | Use specified session object.        | *Optional* | `null`
   * status   | Boolean | `true` to fetch fresh status.        | *Optional* | `false`
   * xfbml    | Boolean | `true` to parse [[wiki:XFBML]] tags. | *Optional* | `false`
   */
  init: function(options) {
    // only need to list values here that do not already have a falsy default.
    // this is why cookie/session/status are not listed here.
    options = FB.copy(options || {}, {
      logging: true
    });

    FB._apiKey = options.appId || options.apiKey;

    // disable logging if told to do so, but only if the url doesnt have the
    // token to turn it on. this allows for easier debugging of third party
    // sites even if logging has been turned off.
    if (!options.logging &&
        window.location.toString().indexOf('fb_debug=1') < 0) {
      FB._logging = false;
    }

    FB.XD.init(options.channelUrl);

    if (FB._apiKey) {
      // enable cookie support if told to do so
      FB.Cookie.setEnabled(options.cookie);

      // if an explicit session was not given, try to _read_ an existing cookie.
      // we dont enable writing automatically, but we do read automatically.
      options.session = options.session || FB.Cookie.load();

      // set the session
      FB.Auth.setSession(options.session,
                         options.session ? 'connected' : 'unknown');

      // load a fresh session if requested
      if (options.status) {
        FB.getLoginStatus();
      }
    }

    // weak dependency on XFBML
    if (options.xfbml) {
      // do this in a setTimeout to delay it until the current call stack has
      // finished executing
      window.setTimeout(function() {
        if (FB.XFBML) {
          FB.Dom.ready(FB.XFBML.parse);
        }
      }, 0);
    }
  }
});

// this is useful when the library is being loaded asynchronously
//
// we do it in a setTimeout to wait until the current event loop as finished.
// this allows potential library code being included below this block (possible
// when being served from an automatically combined version)
window.setTimeout(function() { if (window.fbAsyncInit) { fbAsyncInit(); }}, 0);
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *
 *
 * Contains the public method ``FB.Insights.impression`` for analytics pixel
 *
 * @provides fb.insights
 * @requires fb.prelude
 */

/**
 * Analytics pixel calls. If you are unsure about the potential that
 * integrating Facebook could provide your application, you can use this light
 * weight image beacon to collect some insights.
 *
 * TODO: Where does one go to look at this data?
 *
 * @class FB.Insights
 * @static
 * @access private
 */
FB.provide('Insights', {
  /**
   * This method should be called once by each page where you want to track
   * impressions.
   *
   *     FB.Insights.impression(
   *       {
   *         api_key: 'API_KEY',
   *         lid: 'EVENT_TYPE'
   *       }
   *     );
   *
   * @access private
   * @param params {Object} parameters for the impression
   * @param cb {Function} optional - called with the result of the action
   */
  impression: function(params, cb) {
    // no http or https so browser will use protocol of current page
    // see http://www.faqs.org/rfcs/rfclist.html#/page/1808
    var g = FB.guid(),
        u = "//ah8.facebook.com/impression.php/" + g + "/",
        i = new Image(1, 1),
        s = [];

    if (!params.api_key && FB._apiKey) {
      params.api_key = FB._apiKey;
    }
    for (var k in params) {
      s.push(encodeURIComponent(k) + '=' + encodeURIComponent(params[k]));
    }

    u += '?' + s.join('&');
    if (cb) {
      i.onload = cb;
    }
    i.src = u;
  }
});

/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.intl
 * @requires fb.prelude
 */

/**
 * Provides i18n machinery.
 *
 * @class FB.Intl
 * @static
 * @access private
 */
FB.provide('Intl', {
  /**
   * Regular expression snippet containing all the characters that we
   * count as sentence-final punctuation.
   */
  _punctCharClass: (
    '[' +
      '.!?' +
      '\u3002' +  // Chinese/Japanese period
      '\uFF01' +  // Fullwidth exclamation point
      '\uFF1F' +  // Fullwidth question mark
      '\u0964' +  // Hindi "full stop"
      '\u2026' +  // Chinese ellipsis
      '\u0EAF' +  // Laotian ellipsis
      '\u1801' +  // Mongolian ellipsis
      '\u0E2F' +  // Thai ellipsis
      '\uFF0E' +  // Fullwidth full stop
    ']'
  ),

  /**
   * Checks whether a string ends in sentence-final punctuation. This logic is
   * about the same as the PHP ends_in_punct() function; it takes into account
   * the fact that we consider a string like "foo." to end with a period even
   * though there's a quote mark afterward.
   */
  _endsInPunct: function(str) {
    if (typeof str != 'string') {
      return false;
    }

    return str.match(new RegExp(
      FB.Intl._punctCharClass +
      '[' +
        ')"' +
        "'" +
        // JavaScript doesn't support Unicode character
        // properties in regexes, so we have to list
        // all of these individually. This is an
        // abbreviated list of the "final punctuation"
        // and "close punctuation" Unicode codepoints,
        // excluding symbols we're unlikely to ever
        // see (mathematical notation, etc.)
        '\u00BB' +  // Double angle quote
        '\u0F3B' +  // Tibetan close quote
        '\u0F3D' +  // Tibetan right paren
        '\u2019' +  // Right single quote
        '\u201D' +  // Right double quote
        '\u203A' +  // Single right angle quote
        '\u3009' +  // Right angle bracket
        '\u300B' +  // Right double angle bracket
        '\u300D' +  // Right corner bracket
        '\u300F' +  // Right hollow corner bracket
        '\u3011' +  // Right lenticular bracket
        '\u3015' +  // Right tortoise shell bracket
        '\u3017' +  // Right hollow lenticular bracket
        '\u3019' +  // Right hollow tortoise shell
        '\u301B' +  // Right hollow square bracket
        '\u301E' +  // Double prime quote
        '\u301F' +  // Low double prime quote
        '\uFD3F' +  // Ornate right parenthesis
        '\uFF07' +  // Fullwidth apostrophe
        '\uFF09' +  // Fullwidth right parenthesis
        '\uFF3D' +  // Fullwidth right square bracket
        '\s' +
      ']*$'
    ));
  },

  /**
   * i18n string formatting
   *
   * @param str {String} the string id
   * @param args {Object} the replacement tokens
   */
  _tx: function (str, args) {
    // Does the token substitution for tx() but without the string lookup.
    // Used for in-place substitutions in translation mode.
    if (args !== undefined) {
      if (typeof args != 'object') {
        FB.log(
          'The second arg to FB.Intl._tx() must be an Object for ' +
          'tx(' + str + ', ...)'
        );
      } else {
        var regexp;
        for (var key in args) {
          if (args.hasOwnProperty(key)) {
            // _tx("You are a {what}.", {what:'cow!'}) should be "You are a
            // cow!" rather than "You are a cow!."

            if (FB.Intl._endsInPunct(args[key])) {
              // Replace both the token and the sentence-final punctuation
              // after it, if any.
              regexp = new RegExp('\{' + key + '\}' +
                                    FB.Intl._punctCharClass + '*',
                                  'g');
            } else {
              regexp = new RegExp('\{' + key + '\}', 'g');
            }
            str = str.replace(regexp, args[key]);
          }
        }
      }
    }
    return str;
  },

  /**
   * i18n string formatting
   *
   * @access private
   * @param str {String} the string id
   * @param args {Object} the replacement tokens
   */
  tx: function (str, args) {
    // this is replaced by the i18n machinery when the resources are localized
    function tx(str, args) {
      void(0);
    }

    // Fail silently if the string table isn't defined. This behaviour is used
    // when a developer chooses the host the library themselves, rather than
    // using the one served from facebook.
    if (!FB.Intl._stringTable) {
      return null;
    }
    return FBIntern.Intl._tx(FB.Intl._stringTable[str], args);
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.json
 * @requires fb.prelude
 *           fb.thirdparty.json2
 */

/**
 * Simple wrapper around standard JSON to handle third-party library quirks.
 *
 * @class FB.JSON
 * @static
 * @access private
 */
FB.provide('JSON', {
  /**
   * Stringify an object.
   *
   * @param obj {Object} the input object
   * @return {String} the JSON string
   */
  stringify: function(obj) {
    // PrototypeJS is incompatible with native JSON or JSON2 (which is what
    // native JSON is based on)
    if (window.Prototype && Object.toJSON) {
      return Object.toJSON(obj);
    } else {
      return JSON.stringify(obj);
    }
  },

  /**
   * Parse a JSON string.
   *
   * @param str {String} the JSON string
   * @param {Object} the parsed object
   */
  parse: function(str) {
    return JSON.parse(str);
  },

  /**
   * Flatten an object to "stringified" values only. This is useful as a
   * pre-processing query strings where the server expects query parameter
   * values to be JSON encoded.
   *
   * @param obj {Object} the input object
   * @return {Object} object with only string values
   */
  flatten: function(obj) {
    var flat = {};
    for (var key in obj) {
      if (obj.hasOwnProperty(key)) {
        var value = obj[key];
        if (null === value || undefined === value) {
          continue;
        } else if (typeof value == 'string') {
          flat[key] = value;
        } else {
          flat[key] = FB.JSON.stringify(value);
        }
      }
    }
    return flat;
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *
 *
 * @provides fb.qs
 * @requires fb.prelude fb.array
 */

/**
 * Query String encoding & decoding.
 *
 * @class FB.QS
 * @static
 * @access private
 */
FB.provide('QS', {
  /**
   * Encode parameters to a query string.
   *
   * @access private
   * @param   params {Object}  the parameters to encode
   * @param   sep    {String}  the separator string (defaults to '&')
   * @param   encode {Boolean} indicate if the key/value should be URI encoded
   * @return        {String}  the query string
   */
  encode: function(params, sep, encode) {
    sep    = sep === undefined ? '&' : sep;
    encode = encode === false ? function(s) { return s; } : encodeURIComponent;

    var pairs = [];
    FB.Array.forEach(params, function(val, key) {
      if (val !== null && typeof val != 'undefined') {
        pairs.push(encode(key) + '=' + encode(val));
      }
    });
    pairs.sort();
    return pairs.join(sep);
  },

  /**
   * Decode a query string into a parameters object.
   *
   * @access private
   * @param   str {String} the query string
   * @return     {Object} the parameters to encode
   */
  decode: function(str) {
    var
      decode = decodeURIComponent,
      params = {},
      parts  = str.split('&'),
      i,
      pair;

    for (i=0; i<parts.length; i++) {
      pair = parts[i].split('=', 2);
      if (pair && pair[0]) {
        params[decode(pair[0])] = decode(pair[1]);
      }
    }

    return params;
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.ui
 * @requires fb.prelude
 *           fb.content
 *           fb.dialog
 *           fb.qs
 *           fb.json
 *           fb.xd
 */

/**
 * UI Calls.
 *
 * @class FB
 * @static
 * @access private
 */
FB.provide('', {
  /**
   * Method for triggering UI interaction with Facebook as iframe dialogs or
   * popups, like publishing to the stream, sharing links.
   *
   * Example **stream.publish**:
   *
   *      FB.ui(
   *        {
   *          method: 'stream.publish',
   *          message: 'getting educated about Facebook Connect',
   *          attachment: {
   *            name: 'Connect',
   *            caption: 'The Facebook Connect JavaScript SDK',
   *            description: (
   *              'A small JavaScript library that allows you to harness ' +
   *              'the power of Facebook, bringing the user\'s identity, ' +
   *              'social graph and distribution power to your site.'
   *            ),
   *            href: 'http://github.com/facebook/connect-js'
   *          },
   *          action_links: [
   *            { text: 'Code', href: 'http://github.com/facebook/connect-js' }
   *          ],
   *          user_message_prompt: 'Share your thoughts about Connect'
   *        },
   *        function(response) {
   *          if (response && response.post_id) {
   *            alert('Post was published.');
   *          } else {
   *            alert('Post was not published.');
   *          }
   *        }
   *      );
   *
   * Example **stream.share**:
   *
   *      var share = {
   *        method: 'stream.share',
   *        u: 'http://fbrell.com/'
   *      };
   *
   *      FB.ui(share, function(response) { console.log(response); });
   *
   * @access public
   * @param params {Object} The required arguments vary based on the method
   * being used, but specifying the method itself is mandatory. If *display* is
   * not specified, then iframe dialogs will be used when possible, and popups
   * otherwise.
   *
   * Property | Type    | Description                        | Argument
   * -------- | ------- | ---------------------------------- | ------------
   * method   | String  | The UI dialog to invoke.           | **Required**
   * display  | String  | Specify `"popup"` to force popups. | **Optional**
   * @param cb {Function} Optional callback function to handle the result. Not
   * all methods may have a response.
   */
  ui: function(params, cb) {
    if (!params.method) {
      FB.log('"method" is a required parameter for FB.ui().');
      return;
    }

    var call = FB.UIServer.prepareCall(params, cb);
    if (!call) { // aborted
      return;
    }

    // each allowed "display" value maps to a function
    var displayName = call.params.display;
    if (displayName == 'dialog') { // TODO remove once all dialogs are on
                                   // uiserver
      displayName = 'iframe';
    }
    var displayFn = FB.UIServer[displayName];
    if (!displayFn) {
      FB.log('"display" must be one of "popup", "iframe" or "hidden".');
      return;
    }

    displayFn(call);
  }
});

/**
 * Internal UI functions.
 *
 * @class FB.UIServer
 * @static
 * @access private
 */
FB.provide('UIServer', {
  /**
   * UI Methods will be defined in this namespace.
   */
  Methods: {},

  _active        : {},
  _defaultCb     : {},
  _resultToken   : '"xxRESULTTOKENxx"',

  /**
   * Serves as a generic transform for UI Server dialogs. Once all dialogs are
   * built on UI Server, this will just become the default behavior.
   *
   * Current transforms:
   * 1) display=dialog -> display=iframe. Most of the old Connect stuff uses
   *    dialog, but UI Server uses iframe.
   * 2) Renaming of channel_url parameter to channel.
   */
  genericTransform: function(call) {
    if (call.params.display == 'dialog') {
      call.params.display = 'iframe';
      call.params.channel = FB.UIServer._xdChannelHandler(
        call.id,
        'parent.parent'
      );
    }
    return call;
  },

  /**
   * Prepares a generic UI call.
   *
   * @access private
   * @param params {Object} the user supplied parameters
   * @param cb {Function} the response callback
   * @returns {Object} the call data
   */
  prepareCall: function(params, cb) {
    var
      method = FB.UIServer.Methods[params.method.toLowerCase()],
      id     = FB.guid();

    if (!method) {
      FB.log('"' + params.method.toLowerCase() + '" is an unknown method.');
      return;
    }

    // default stuff
    FB.copy(params, {
      api_key     : FB._apiKey,
      // TODO change "dialog" to "iframe" once moved to uiserver
      display     : FB._session ? 'dialog' : 'popup',
      locale      : FB._locale,
      sdk         : 'joey',
      session_key : FB._session && FB._session.session_key
    });

    // cannot use an iframe "dialog" if a session is not available
    if (!FB._session && params.display == 'dialog' && !method.loggedOutIframe) {
      FB.log('"dialog" mode can only be used when the user is connected.');
      params.display = 'popup';
    }

    // the basic call data
    var call = {
      cb     : cb,
      id     : id,
      size   : method.size || {},
      url    : FB._domain.www + method.url,
      params : params
    };

    // optional method transform
    if (method.transform) {
      call = method.transform(call);

      // nothing returned from a transform means we abort
      if (!call) {
        return;
      }
    }

    // setting these after to ensure the value is based on the final
    // params.display value
    var relation = call.params.display == 'popup' ? 'opener' : 'parent';
    if (!(call.id in FB.UIServer._defaultCb) && !('next' in call.params)) {
      call.params.next = FB.UIServer._xdResult(
        call.cb,
        call.id,
        relation,
        true // isDefault
      );
    }
    if (relation === 'parent') {
      call.params.channel_url = FB.UIServer._xdChannelHandler(
        id,
        'parent.parent'
      );
    }

    // set this at the end to include all possible params
    var encodedQS = FB.QS.encode(FB.JSON.flatten(call.params));
    if ((call.url + encodedQS).length > 2000) {
      call.post = true;
    } else {
      if (encodedQS) {
        call.url += '?' + encodedQS;
      }
    }

    return call;
  },

  /**
   * Open a popup window with the given url and dimensions and place it at the
   * center of the current window.
   *
   * @access private
   * @param call {Object} the call data
   */
  popup: function(call) {
    // we try to place it at the center of the current window
    var
      screenX    = typeof window.screenX      != 'undefined'
        ? window.screenX
        : window.screenLeft,
      screenY    = typeof window.screenY      != 'undefined'
        ? window.screenY
        : window.screenTop,
      outerWidth = typeof window.outerWidth   != 'undefined'
        ? window.outerWidth
        : document.documentElement.clientWidth,
      outerHeight = typeof window.outerHeight != 'undefined'
        ? window.outerHeight
        : (document.documentElement.clientHeight - 22), // 22= IE toolbar height
      width    = call.size.width,
      height   = call.size.height,
      left     = parseInt(screenX + ((outerWidth - width) / 2), 10),
      top      = parseInt(screenY + ((outerHeight - height) / 2.5), 10),
      features = (
        'width=' + width +
        ',height=' + height +
        ',left=' + left +
        ',top=' + top
      );

    // either a empty window and then a POST, or a direct GET to the full url
    if (call.post) {
      FB.UIServer._active[call.id] = window.open(
        'about:blank',
        call.id,
        features
      );
      FB.Content.postTarget({
        url    : call.url,
        target : call.id,
        params : call.params
      });
    } else {
      FB.UIServer._active[call.id] = window.open(
        call.url,
        call.id,
        features
      );
    }

    // if there's a default close action, setup the monitor for it
    if (call.id in FB.UIServer._defaultCb) {
      FB.UIServer._popupMonitor();
    }
  },

  /**
   * Builds and inserts a hidden iframe based on the given call data.
   *
   * @access private
   * @param call {Object} the call data
   */
  hidden: function(call) {
    call.className = 'FB_UI_Hidden';
    call.root = FB.Content.appendHidden('');
    FB.UIServer._insertIframe(call);
  },

  /**
   * Builds and inserts a iframe dialog based on the given call data.
   *
   * @access private
   * @param call {Object} the call data
   */
  iframe: function(call) {
    call.className = 'FB_UI_Dialog';
    call.root = FB.Dialog.create({
      onClose: function() {
        FB.UIServer._triggerDefault(call.id);
      },
      loader: true,
      closeIcon: true
    });
    FB.Dom.addCss(call.root, 'fb_dialog_iframe');
    FB.UIServer._insertIframe(call);
  },

  /**
   * Inserts an iframe based on the given call data.
   *
   * @access private
   * @param call {Object} the call data
   */
  _insertIframe: function(call) {
    // either a empty iframe and then a POST, or a direct GET to the full url
    if (call.post) {
      FB.Content.insertIframe({
        url       : 'about:blank',
        root      : call.root,
        className : call.className,
        width     : call.size.width,
        height    : call.size.height,
        onload    : function(node) {
          FB.UIServer._active[call.id] = node;
          FB.Content.postTarget({
            url    : call.url,
            target : node.name,
            params : call.params
          });
        }
      });
    } else {
      FB.Content.insertIframe({
        url       : call.url,
        root      : call.root,
        className : call.className,
        width     : call.size.width,
        height    : call.size.height,
        onload    : function(node) {
          FB.UIServer._active[call.id] = node;
        }
      });
    }
  },

  /**
   * Trigger the default action for the given call id.
   *
   * @param id {String} the call id
   */
  _triggerDefault: function(id) {
    FB.UIServer._xdRecv(
      { frame: id },
      FB.UIServer._defaultCb[id] || function() {}
    );
  },

  /**
   * Start and manage the window monitor interval. This allows us to invoke
   * the default callback for a window when the user closes the window
   * directly.
   *
   * @access private
   */
  _popupMonitor: function() {
    // check all open windows
    var found;
    for (var id in FB.UIServer._active) {
      // ignore prototype properties, and ones without a default callback
      if (FB.UIServer._active.hasOwnProperty(id) &&
          id in FB.UIServer._defaultCb) {
        var win = FB.UIServer._active[id];

        // ignore iframes
        try {
          if (win.tagName) {
            // is an iframe, we're done
            continue;
          }
        } catch (x) {
          // probably a permission error
        }

        try {
          // found a closed window
          if (win.closed) {
            FB.UIServer._triggerDefault(id);
          } else {
            found = true; // need to monitor this open window
          }
        } catch (y) {
          // probably a permission error
        }
      }
    }

    if (found && !FB.UIServer._popupInterval) {
      // start the monitor if needed and it's not already running
      FB.UIServer._popupInterval = window.setInterval(
        FB.UIServer._popupMonitor,
        100
      );
    } else if (!found && FB.UIServer._popupInterval) {
      // shutdown if we have nothing to monitor but it's running
      window.clearInterval(FB.UIServer._popupInterval);
      FB.UIServer._popupInterval = null;
    }
  },

  /**
   * Handles channel messages. These should be general, like a resize message.
   * Custom logic should be handled as part of the "next" handler.
   *
   * @access private
   * @param frame {String} the frame id
   * @param relation {String} the frame relation
   * @return {String} the handler url
   */
  _xdChannelHandler: function(frame, relation) {
    return FB.XD.handler(function(data) {
      var node = FB.UIServer._active[frame];
      if (!node) { // dead handler
        return;
      }
      if (data.type == 'resize') {
        if (data.height) {
          node.style.height = data.height + 'px';
        }
        if (data.width) {
          node.style.width = data.width + 'px';
        }
        FB.Dialog.show(node);
      }
    }, relation, true);
  },

  /**
   * A "next handler" is a specialized XD handler that will also close the
   * frame. This can be a hidden iframe, iframe dialog or a popup window.
   *
   * @access private
   * @param cb        {Function} the callback function
   * @param frame     {String}   frame id for the callback will be used with
   * @param relation  {String}   parent or opener to indicate window relation
   * @param isDefault {Boolean}  is this the default callback for the frame
   * @return         {String}   the xd url bound to the callback
   */
  _xdNextHandler: function(cb, frame, relation, isDefault) {
    if (isDefault) {
      FB.UIServer._defaultCb[frame] = cb;
    }

    return FB.XD.handler(function(data) {
      FB.UIServer._xdRecv(data, cb);
    }, relation) + '&frame=' + frame;
  },

  /**
   * Handles the parsed message, invokes the bound callback with the data and
   * removes the related window/frame. This is the asynchronous entry point for
   * when a message arrives.
   *
   * @access private
   * @param data {Object} the message parameters
   * @param cb {Function} the callback function
   */
  _xdRecv: function(data, cb) {
    var frame = FB.UIServer._active[data.frame];

    // iframe
    try {
      if (FB.Dom.containsCss(frame, 'FB_UI_Hidden')) {
        // wait before the actual removal because of race conditions with async
        // flash crap. seriously, dont ever ask me about it.
        window.setTimeout(function() {
          // remove iframe's parentNode to match what FB.UIServer.hidden() does
          frame.parentNode.parentNode.removeChild(frame.parentNode);
        }, 3000);
      } else if (FB.Dom.containsCss(frame, 'FB_UI_Dialog')) {
        FB.Dialog.remove(frame);
      }
    } catch (x) {
      // do nothing, permission error
    }

    // popup window
    try {
      if (frame.close) {
        frame.close();
        FB.UIServer._popupCount--;
      }
    } catch (y) {
      // do nothing, permission error
    }

    // cleanup and fire
    delete FB.UIServer._active[data.frame];
    delete FB.UIServer._defaultCb[data.frame];
    cb(data);
  },

  /**
   * Some Facebook redirect URLs use a special ``xxRESULTTOKENxx`` to return
   * custom values. This is a convenience function to wrap a callback that
   * expects this value back.
   *
   * @access private
   * @param cb        {Function} the callback function
   * @param frame     {String}   the frame id for the callback is tied to
   * @param target    {String}   parent or opener to indicate window relation
   * @param isDefault {Boolean}  is this the default callback for the frame
   * @return          {String}   the xd url bound to the callback
   */
  _xdResult: function(cb, frame, target, isDefault) {
    return (
      FB.UIServer._xdNextHandler(function(params) {
        cb && cb(params.result &&
                 params.result != FB.UIServer._resultToken &&
                 JSON.parse(params.result));
      }, frame, target, isDefault) +
      '&result=' + encodeURIComponent(FB.UIServer._resultToken)
    );
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.ui.methods
 * @requires fb.prelude
 *           fb.ui
 */

/**
 * Simple UI methods. Consider putting complex UI methods in their own modules.
 *
 * NOTE: Right now, Methods need to provide an initial size, as well as a URL.
 * In the UIServer enabled world, we should not need the URL.
 */
FB.provide('UIServer.Methods', {
  'friends.add': {
    size      : { width: 575, height: 240 },
    url       : 'connect/uiserver.php',
    transform : FB.UIServer.genericTransform
  },

  'stream.publish': {
    size : { width: 575, height: 240 },
    url  : 'connect/prompt_feed.php',
    transform: function(call) {
      var cb = call.cb;
      call.cb = function(result) {
        if (result) {
          if (result.postId) {
            result = { post_id: result.postId };
          } else {
            result = null;
          }
        }
        cb && cb(result);
      };

      call.params.callback = FB.UIServer._xdResult(
        call.cb,
        call.id,
        call.params.display == 'popup' ? 'opener' : 'parent',
        true
      );
      return call;
    }
  },

  'stream.share': {
    size      : { width: 575, height: 380 },
    url       : 'sharer.php',
    transform : function(call) {
      if (!call.params.u) {
        call.params.u = window.location.toString();
      }
      return call;
    }
  },

  'fbml.dialog': {
    size            : { width: 575, height: 300 },
    url             : 'render_fbml.php',
    loggedOutIframe : true
  },

  'bookmark.add': {
    size      : { width: 460, height: 226 },
    url       : 'connect/uiserver.php',
    transform : FB.UIServer.genericTransform
  },

  'profile.addtab': {
    size      : { width: 460, height: 226 },
    url       : 'connect/uiserver.php',
    transform : FB.UIServer.genericTransform
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *
 *
 * @provides fb.xd
 * @requires fb.prelude
 *           fb.qs
 *           fb.flash
 */

/**
 * The cross domain communication layer.
 *
 * @class FB.XD
 * @static
 * @access private
 */
FB.provide('XD', {
  _origin    : null,
  _transport : null,
  _callbacks : {},
  _forever   : {},

  /**
   * Initialize the XD layer. Native postMessage or Flash is required.
   *
   * @param channelUrl {String} optional channel URL
   * @access private
   */
  init: function(channelUrl) {
    // only do init once, if this is set, we're already done
    if (FB.XD._origin) {
      return;
    }

    // We currently disable postMessage in IE8 because it does not work with
    // window.opener. We can probably be smarter about it.
//#JSCOVERAGE_IF
    if (window.addEventListener && window.postMessage) {
      // The origin here is used for postMessage security. It needs to be based
      // on the URL of the current window. It is required and validated by
      // Facebook as part of the xd_proxy.php.
      FB.XD._origin = (window.location.protocol + '//' +
                       window.location.host + '/' + FB.guid());
      FB.XD.PostMessage.init();
      FB.XD._transport = 'postmessage';
    } else if (!channelUrl && FB.Flash.hasMinVersion()) {
      // The origin here is used for Flash XD security. It needs to be based on
      // document.domain rather than the URL of the current window. It is
      // required and validated by Facebook as part of the xd_proxy.php.
      FB.XD._origin = (window.location.protocol + '//' + document.domain +
                       '/' + FB.guid());
      FB.XD.Flash.init();
      FB.XD._transport = 'flash';
    } else {
      FB.XD._transport = 'fragment';
      FB.XD.Fragment._channelUrl = channelUrl || window.location.toString();
    }
  },

  /**
   * Resolve a id back to a node. An id is a string like:
   *   top.frames[5].frames['crazy'].parent.frames["two"].opener
   *
   * @param   id {String}   the string to resolve
   * @returns    {Node}     the resolved window object
   * @throws  SyntaxError   if the id is malformed
   */
  resolveRelation: function(id) {
    var
      pt,
      matches,
      parts = id.split('.'),
      node = window;

    for (var i=0, l=parts.length; i<l; i++) {
      pt = parts[i];

      if (pt === 'opener' || pt === 'parent' || pt === 'top') {
        node = node[pt];
      } else if (matches = /^frames\[['"]?([a-zA-Z0-9-_]+)['"]?\]$/.exec(pt)) {
        // these regex has the `feature' of fixing some badly quoted strings
        node = node.frames[matches[1]];
      } else {
        throw new SyntaxError('Malformed id to resolve: ' + id + ', pt: ' + pt);
      }
    }

    return node;
  },

  /**
   * Builds a url attached to a callback for xd messages.
   *
   * This is one half of the XD layer. Given a callback function, we generate
   * a xd URL which will invoke the function. This allows us to generate
   * redirect urls (used for next/cancel and so on) which will invoke our
   * callback functions.
   *
   * @access private
   * @param cb       {Function} the callback function
   * @param relation {String}   parent or opener to indicate window relation
   * @param forever  {Boolean}  indicate this handler needs to live forever
   * @return        {String}   the xd url bound to the callback
   */
  handler: function(cb, relation, forever) {
    // if for some reason, we end up trying to create a handler on a page that
    // is already being used for XD comm as part of the fragment, we simply
    // return 'javascript:false' to prevent a recursive page load loop
    //
    // the // after it makes any appended things to the url become a JS
    // comment, and prevents JS parse errors. cloWntoWn.
    if (window.location.toString().indexOf(FB.XD.Fragment._magic) > 0) {
      return 'javascript:false;//';
    }

    // the ?=& tricks login.php into appending at the end instead
    // of before the fragment as a query string
    // FIXME
    var
      xdProxy = FB._domain.cdn + 'connect/xd_proxy.php#?=&',
      id = FB.guid();

    // in fragment mode, the url is the current page and a fragment with a
    // magic token
    if (FB.XD._transport == 'fragment') {
      xdProxy = FB.XD.Fragment._channelUrl;
      var poundIndex = xdProxy.indexOf('#');
      if (poundIndex > 0) {
        xdProxy = xdProxy.substr(0, poundIndex);
      }
      xdProxy += (
        (xdProxy.indexOf('?') < 0 ? '?' : '&') +
        FB.XD.Fragment._magic + '#?=&'
      );
    }

    if (forever) {
      FB.XD._forever[id] = true;
    }

    FB.XD._callbacks[id] = cb;
    return xdProxy + FB.QS.encode({
      cb        : id,
      origin    : FB.XD._origin,
      relation  : relation || 'opener',
      transport : FB.XD._transport
    });
  },

  /**
   * Handles the raw or parsed message and invokes the bound callback with
   * the data and removes the related window/frame.
   *
   * @access private
   * @param data {String|Object} the message fragment string or parameters
   */
  recv: function(data) {
    if (typeof data == 'string') {
      data = FB.QS.decode(data);
    }

    var cb = FB.XD._callbacks[data.cb];
    if (!FB.XD._forever[data.cb]) {
      delete FB.XD._callbacks[data.cb];
    }
    cb && cb(data);
  },

  /**
   * Provides Native ``window.postMessage`` based XD support.
   *
   * @class FB.XD.PostMessage
   * @static
   * @for FB.XD
   * @access private
   */
  PostMessage: {
    /**
     * Initialize the native PostMessage system.
     *
     * @access private
     */
    init: function() {
      var H = FB.XD.PostMessage.onMessage;
      window.addEventListener
        ? window.addEventListener('message', H, false)
        : window.attachEvent('onmessage', H);
    },

    /**
     * Handles a message event.
     *
     * @access private
     * @param event {Event} the event object
     */
    onMessage: function(event) {
      FB.XD.recv(event.data);
    }
  },

  /**
   * Provides Flash Local Connection based XD support.
   *
   * @class FB.XD.Flash
   * @static
   * @for FB.XD
   * @access private
   */
  Flash: {
    /**
     * Initialize the Flash Local Connection.
     *
     * @access private
     */
    init: function() {
      FB.Flash.onReady(function() {
        document.XdComm.postMessage_init('FB.XD.Flash.onMessage',
                                         FB.XD._origin);
      });
    },

    /**
     * Handles a message received by the Flash Local Connection.
     *
     * @access private
     * @param message {String} the URI encoded string sent by the SWF
     */
    onMessage: function(message) {
      FB.XD.recv(decodeURIComponent(message));
    }
  },

  /**
   * Provides XD support via a fragment by reusing the current page.
   *
   * @class FB.XD.Fragment
   * @static
   * @for FB.XD
   * @access private
   */
  Fragment: {
    _magic: 'fb_xd_fragment',

    /**
     * Check if the fragment looks like a message, and dispatch if it does.
     */
    checkAndDispatch: function() {
      var
        loc = window.location.toString(),
        fragment = loc.substr(loc.indexOf('#') + 1),
        magicIndex = loc.indexOf(FB.XD.Fragment._magic);

      if (magicIndex > 0) {
        // make these no-op to help with performance
        //
        // this works independent of the module being present or not, or being
        // loaded before or after
        FB.init = FB.getLoginStatus = FB.api = function() {};

        // display none helps prevent loading of some stuff
        document.documentElement.style.display = 'none';

        FB.XD.resolveRelation(
          FB.QS.decode(fragment).relation).FB.XD.recv(fragment);
      }
    }
  }
});

// NOTE: self executing code.
//
// if the page is being used for fragment based XD messaging, we need to
// dispatch on load without needing any API calls. it only does stuff if the
// magic token is found in the fragment.
FB.XD.Fragment.checkAndDispatch();
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *
 *
 * @provides fb.compat.ui
 * @requires fb.prelude
 *           fb.qs
 *           fb.ui
 *           fb.json
 */

/**
 * NOTE: You should use FB.ui() instead.
 *
 * UI Calls.
 *
 * @class FB
 * @static
 * @access private
 */
FB.provide('', {
  /**
   * NOTE: You should use FB.ui() instead.
   *
   * Sharing is the light weight way of distributing your content. As opposed
   * to the structured data explicitly given in the [FB.publish][publish] call,
   * with share you simply provide the URL.
   *
   *      FB.share('http://github.com/facebook/connect-js');
   *
   * Calling [FB.share][share] without any arguments will share the current
   * page.
   *
   * This call can be used without requiring the user to sign in.
   *
   * [publish]: /docs/?u=facebook.jslib-alpha.FB.publish
   * [share]: /docs/?u=facebook.jslib-alpha.FB.share
   *
   * @access private
   * @param u {String} the url (defaults to current URL)
   */
  share: function(u) {
    FB.log('FB.share() has been deprecated. Please use FB.ui() instead.');
    FB.ui({
      display : 'popup',
      method  : 'stream.share',
      u       : u
    });
  },

  /**
   * NOTE: You should use FB.ui() instead.
   *
   * Publish a post to the stream.
   *
   * This is the main, fully featured distribution mechanism for you
   * to publish into the user's stream. It can be used, with or
   * without an API key. With an API key you can control the
   * Application Icon and get attribution. You must also do this if
   * you wish to use the callback to get notified of the `post_id`
   * and the `message` the user typed in the published post, or find
   * out if the user did not publish (clicked on the skipped button).
   *
   * Publishing is a powerful feature that allows you to submit rich
   * media and provide a integrated experience with control over your
   * stream post. You can guide the user by choosing the prompt,
   * and/or a default message which they may customize. In addition,
   * you may provide image, video, audio or flash based attachments
   * with along with their metadata. You also get the ability to
   * provide action links which show next to the "Like" and "Comment"
   * actions. All this together provides you full control over your
   * stream post. In addition, if you may also specify a target for
   * the story, such as another user or a page.
   *
   * A post may contain the following properties:
   *
   * Property            | Type   | Description
   * ------------------- | ------ | --------------------------------------
   * message             | String | This allows prepopulating the message.
   * attachment          | Object | An [[wiki:Attachment (Streams)]] object.
   * action_links        | Array  | An array of [[wiki:Action Links]].
   * actor_id            | String | A actor profile/page id.
   * target_id           | String | A target profile id.
   * user_message_prompt | String | Custom prompt message.
   *
   * The post and all the parameters are optional, so use what is best
   * for your specific case.
   *
   * Example:
   *
   *     var post = {
   *       message: 'getting educated about Facebook Connect',
   *       attachment: {
   *         name: 'Facebook Connect JavaScript SDK',
   *         description: (
   *           'A JavaScript library that allows you to harness ' +
   *           'the power of Facebook, bringing the user\'s identity, ' +
   *           'social graph and distribution power to your site.'
   *         ),
   *         href: 'http://github.com/facebook/connect-js'
   *       },
   *       action_links: [
   *         {
   *           text: 'GitHub Repo',
   *           href: 'http://github.com/facebook/connect-js'
   *         }
   *       ],
   *       user_message_prompt: 'Share your thoughts about Facebook Connect'
   *     };
   *
   *     FB.publish(
   *       post,
   *       function(published_post) {
   *         if (published_post) {
   *           alert(
   *             'The post was successfully published. ' +
   *             'Post ID: ' + published_post.post_id +
   *             '. Message: ' + published_post.message
   *           );
   *         } else {
   *           alert('The post was not published.');
   *         }
   *       }
   *     );
   *
   * @access private
   * @param post {Object} the post object
   * @param cb {Function} called with the result of the action
   */
  publish: function(post, cb) {
    FB.log('FB.publish() has been deprecated. Please use FB.ui() instead.');
    post = post || {};
    FB.ui(FB.copy({
      display : 'popup',
      method  : 'stream.publish',
      preview : 1
    }, post || {}), cb);
  },

  /**
   * NOTE: You should use FB.ui() instead.
   *
   * Prompt the user to add the given id as a friend.
   *
   * @access private
   * @param id {String} the id of the target user
   * @param cb {Function} called with the result of the action
   */
  addFriend: function(id, cb) {
    FB.log('FB.addFriend() has been deprecated. Please use FB.ui() instead.');
    FB.ui({
      display : 'popup',
      id      : id,
      method  : 'friend.add'
    }, cb);
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.array
 * @layer basic
 * @requires fb.prelude
 */

/**
 * Array related helper methods.
 *
 * @class FB.Array
 * @private
 * @static
 */
FB.provide('Array', {
  /**
   * Get index of item inside an array. Return's -1 if element is not found.
   *
   * @param arr {Array} Array to look through.
   * @param item {Object} Item to locate.
   * @return {Number} Index of item.
   */
  indexOf: function (arr, item) {
    if (arr.indexOf) {
      return arr.indexOf(item);
    }
    var length = arr.length;
    if (length) {
      for (var index = 0; index < length; index++) {
        if (arr[index] === item) {
          return index;
        }
      }
    }
    return -1;
  },

  /**
   * Merge items from source into target, but only if they dont exist. Returns
   * the target array back.
   *
   * @param target {Array} Target array.
   * @param source {Array} Source array.
   * @return {Array} Merged array.
   */
  merge: function(target, source) {
    for (var i=0; i < source.length; i++) {
      if (FB.Array.indexOf(target, source[i]) < 0) {
        target.push(source[i]);
      }
    }
    return target;
  },

  /**
   * Create an new array from the given array and a filter function.
   *
   * @param arr {Array} Source array.
   * @param fn {Function} Filter callback function.
   * @return {Array} Filtered array.
   */
  filter: function(arr, fn) {
    var b = [];
    for (var i=0; i < arr.length; i++) {
      if (fn(arr[i])) {
        b.push(arr[i]);
      }
    }
    return b;
  },

  /**
   * Create an array from the keys in an object.
   *
   * Example: keys({'x': 2, 'y': 3'}) returns ['x', 'y']
   *
   * @param obj {Object} Source object.
   * @param proto {Boolean} Specify true to include inherited properties.
   * @return {Array} The array of keys.
   */
  keys: function(obj, proto) {
    var arr = [];
    for (var key in obj) {
      if (proto || obj.hasOwnProperty(key)) {
        arr.push(key);
      }
    }
    return arr;
  },

  /**
   * Create an array by performing transformation on the items in a source
   * array.
   *
   * @param arr {Array} Source array.
   * @param transform {Function} Transformation function.
   * @return {Array} The transformed array.
   */
  map: function(arr, transform) {
    var ret = [];
    for (var i=0; i < arr.length; i++) {
      ret.push(transform(arr[i]));
    }
    return ret;
  },

  /**
   * For looping through Arrays and Objects.
   *
   * @param {Object} item   an Array or an Object
   * @param {Function} fn   the callback function for iteration.
   *    The function will be pass (value, [index/key], item) paramters
   * @param {Bool} proto  indicate if properties from the prototype should
   *                      be included
   *
   */
   forEach: function(item, fn, proto) {
    if (!item) {
      return;
    }

    if (Object.prototype.toString.apply(item) === '[object Array]' ||
        (!(item instanceof Function) && typeof item.length == 'number')) {
      if (item.forEach) {
        item.forEach(fn);
      } else {
        for (var i=0, l=item.length; i<l; i++) {
          fn(item[i], i, item);
        }
      }
    } else {
      for (var key in item) {
        if (proto || item.hasOwnProperty(key)) {
          fn(item[key], key, item);
        }
      }
    }
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.dom
 * @layer basic
 * @requires fb.prelude
 *           fb.event
 *           fb.string
 *           fb.array
 */

/**
 * This provides helper methods related to DOM.
 *
 * @class FB.Dom
 * @static
 * @private
 */
FB.provide('Dom', {
  /**
   * Check if the element contains a class name.
   *
   * @param dom {DOMElement} the element
   * @param className {String} the class name
   * @return {Boolean}
   */
  containsCss: function(dom, className) {
    var cssClassWithSpace = ' ' + dom.className + ' ';
    return cssClassWithSpace.indexOf(' ' + className + ' ') >= 0;
  },

  /**
   * Add a class to a element.
   *
   * @param dom {DOMElement} the element
   * @param className {String} the class name
   */
  addCss: function(dom, className) {
    if (!FB.Dom.containsCss(dom, className)) {
      dom.className = dom.className + ' ' + className;
    }
  },

  /**
   * Remove a class from the element.
   *
   * @param dom {DOMElement} the element
   * @param className {String} the class name
   */
  removeCss: function(dom, className) {
    if (FB.Dom.containsCss(dom, className)) {
      dom.className = dom.className.replace(className, '');
      FB.Dom.removeCss(dom, className); // in case of repetition
    }
  },

  /**
   * Returns the computed style for the element
   *
   * note: requires browser specific names to be passed for specials
   *       border-radius -> ('-moz-border-radius', 'border-radius')
   *
   * @param dom {DOMElement} the element
   * @param styleProp {String} the property name
   */
  getStyle: function (dom, styleProp) {
    var y = false, s = dom.style;
    if (styleProp == 'opacity') {
      if (s.opacity) { return s.opacity * 100; }
      if (s.MozOpacity) { return s.MozOpacity * 100; }
      if (s.KhtmlOpacity) { return s.KhtmlOpacity * 100; }
      if (s.filters) { return s.filters.alpha.opacity; }
      return 0; // TODO(alpjor) fix default opacity
    } else {
      if (dom.currentStyle) { // camelCase (e.g. 'marginTop')
        FB.Array.forEach(styleProp.match(/\-([a-z])/g), function(match) {
          styleProp = styleProp.replace(match, match.substr(1,1).toUpperCase());
        });
        y = dom.currentStyle[styleProp];
      } else { // dashes (e.g. 'margin-top')
        FB.Array.forEach(styleProp.match(/[A-Z]/g), function(match) {
          styleProp = styleProp.replace(match, '-'+ match.toLowerCase());
        });
        if (window.getComputedStyle) {
          y = document.defaultView
           .getComputedStyle(dom,null).getPropertyValue(styleProp);
          // special handling for IE
          // for some reason it doesn't return '0%' for defaults. so needed to
          // translate 'top' and 'left' into '0px'
          if (styleProp == 'background-position-y' ||
              styleProp == 'background-position-x') {
            if (y == 'top' || y == 'left') { y = '0px'; }
          }
        }
      }
    }
    return y;
  },

  /**
   * Sets the style for the element to value
   *
   * note: requires browser specific names to be passed for specials
   *       border-radius -> ('-moz-border-radius', 'border-radius')
   *
   * @param dom {DOMElement} the element
   * @param styleProp {String} the property name
   * @param value {String} the css value to set this property to
   */
  setStyle: function(dom, styleProp, value) {
    var s = dom.style;
    if (styleProp == 'opacity') {
      if (value >= 100) { value = 99.999; } // fix for Mozilla < 1.5b2
      if (value < 0) { value = 0; }
      s.opacity = value/100;
      s.MozOpacity = value/100;
      s.KhtmlOpacity = value/100;
      if (s.filters) { s.filters.alpha.opacity = value; }
    } else { s[styleProp] = value; }
  },

  /**
   * Dynamically add a script tag.
   *
   * @param src {String} the url for the script
   */
  addScript: function(src) {
    var script = document.createElement('script');
    script.type = "text/javascript";
    script.src = src;
    return document.getElementsByTagName('HEAD')[0].appendChild(script);
  },

  /**
   * Add CSS rules using a <style> tag.
   *
   * @param styles {String} the styles
   * @param names {Array} the component names that the styles represent
   */
  addCssRules: function(styles, names) {
    if (!FB.Dom._cssRules) {
      FB.Dom._cssRules = {};
    }

    // note, we potentially re-include CSS if it comes with other CSS that we
    // have previously not included.
    var allIncluded = true;
    FB.Array.forEach(names, function(id) {
      if (!(id in FB.Dom._cssRules)) {
        allIncluded = false;
        FB.Dom._cssRules[id] = true;
      }
    });

    if (allIncluded) {
      return;
    }

//#JSCOVERAGE_IF
    if (FB.Dom.getBrowserType() != 'ie') {
      var style = document.createElement('style');
      style.type = 'text/css';
      style.textContent = styles;
      document.getElementsByTagName('HEAD')[0].appendChild(style);
    } else {
      try {
        document.createStyleSheet().cssText = styles;
      } catch (exc) {
        // major problem on IE : You can only create 31 stylesheet objects with
        // this method. We will have to add the styles into an existing
        // stylesheet.
        if (document.styleSheets[0]) {
          document.styleSheets[0].cssText += styles;
        }
      }
    }
  },

  /**
   * Get browser type.
   *
   * @return string 'ie' | 'mozilla' |'safari' | 'other'
   */
  getBrowserType: function() {
    if (!FB.Dom._browserType) {
      var
        userAgent = window.navigator.userAgent.toLowerCase(),
        // list of known browser. NOTE: the order is important
        keys  = ['msie', 'firefox', 'safari', 'gecko'],
        names = ['ie',   'mozilla', 'safari', 'mozilla'];
      for (var i = 0; i < keys.length; i++) {
        if (userAgent.indexOf(keys[i]) >= 0) {
          FB.Dom._browserType = names[i];
          break;
        }
      }
    }
    return FB.Dom._browserType;
  },

  /**
   * Get the viewport info. Contains size and scroll offsets.
   *
   * @returns {Object} with the width and height
   */
  getViewportInfo: function() {
    // W3C compliant, or fallback to body
    var root = (document.documentElement && document.compatMode == 'CSS1Compat')
      ? document.documentElement
      : document.body;
    return {
      scrollTop  : root.scrollTop,
      scrollLeft : root.scrollLeft,
      width      : self.innerWidth  ? self.innerWidth  : root.clientWidth,
      height     : self.innerHeight ? self.innerHeight : root.clientHeight
    };
  },

  /**
   * Bind a function to be executed when the DOM is ready. It will be executed
   * immediately if the DOM is already ready.
   *
   * @param {Function} the function to invoke when ready
   */
  ready: function(fn) {
    if (FB.Dom._isReady) {
      fn();
    } else {
      FB.Event.subscribe('dom.ready', fn);
    }
  }
});

// NOTE: This code is self-executing. This is necessary in order to correctly
// determine the ready status.
(function() {
  // Handle when the DOM is ready
  function domReady() {
    FB.Dom._isReady = true;
    FB.Event.fire('dom.ready');
    FB.Event.clear('dom.ready');
  }

  // In case we're already ready.
  if (FB.Dom._isReady || document.readyState == 'complete') {
    return domReady();
  }

  // Good citizens.
  if (document.addEventListener) {
    document.addEventListener('DOMContentLoaded', domReady, false);
  // Bad citizens.
  } else if (document.attachEvent) {
    document.attachEvent('onreadystatechange', domReady);
  }

  // Bad citizens.
  // If IE is used and page is not in a frame, continuously check to see if
  // the document is ready
  if (FB.Dom.getBrowserType() == 'ie' && window === top) {
    (function() {
      try {
        // If IE is used, use the trick by Diego Perini
        // http://javascript.nwbox.com/IEContentLoaded/
        document.documentElement.doScroll('left');
      } catch(error) {
        setTimeout(arguments.callee, 0);
        return;
      }

      // and execute any waiting functions
      domReady();
    })();
  }

  // Ultimate Fallback.
  var oldonload = window.onload;
  window.onload = function() {
    domReady();
    if (oldonload) {
      if (typeof oldonload == 'string') {
        eval(oldonload);
      } else {
        oldonload();
      }
    }
  };
})();
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.obj
 * @requires fb.type
 *           fb.json
 *           fb.event
 */

/**
 * Base object type that support events.
 *
 * @class FB.Obj
 * @private
 */
FB.Class('Obj', null,
  FB.copy({
    /**
     * Set property on an object and fire property changed event if changed.
     *
     * @param {String} Property name. A event with the same name
     *                 will be fire when the property is changed.
     * @param {Object} new value of the property
     * @private
     */
     setProperty: function(name, value) {
       // Check if property actually changed
       if (FB.JSON.stringify(value) != FB.JSON.stringify(this[name])) {
         this[name] = value;
         this.fire(name, value);
       }
     }
  }, FB.EventProvider)
);
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.string
 * @layer basic
 * @requires fb.prelude
 *
 */

/**
 * Utility function related to Strings.
 *
 * @class FB.String
 * @static
 * @private
 */
FB.provide('String', {
  /**
   * Strip leading and trailing whitespace.
   *
   * @param s {String} the string to trim
   * @returns {String} the trimmed string
   */
  trim: function(s) {
    return s.replace(/^\s*|\s*$/g, '');
  },

  /**
   * Format a string.
   *
   * Example:
   *     FB.String.format('{0}.facebook.com/{1}', 'www', 'login.php')
   * Returns:
   *     'www.facebook.com/login.php'
   *
   * Example:
   *     FB.String.format('foo {0}, {1}, {0}', 'x', 'y')
   * Returns:
   *     'foo x, y, x'
   *
   * @static
   * @param format {String} the format specifier
   * @param arguments {...} placeholder arguments
   * @returns {String} the formatted string
   */
  format: function(format) {
    if (!FB.String.format._formatRE) {
      FB.String.format._formatRE = /(\{[^\}^\{]+\})/g;
    }

    var values = arguments;

    return format.replace(
      FB.String.format._formatRE,
      function(str, m) {
        var
          index = parseInt(m.substr(1), 10),
          value = values[index + 1];
        if (value === null || value === undefined) {
          return '';
        }
        return value.toString();
      }
    );
  },

  /**
   * Escape an string so that it can be embedded inside another string
   * as quoted string.
   *
   * @param value {String} string to quote
   * @return {String} an quoted string
   */
  quote: function(value) {
    var
      quotes = /["\\\x00-\x1f\x7f-\x9f]/g,
      subst = {    // table of character substitutions
        '\b': '\\b',
        '\t': '\\t',
        '\n': '\\n',
        '\f': '\\f',
        '\r': '\\r',
        '"' : '\\"',
        '\\': '\\\\'
      };

    return quotes.test(value) ?
      '"' + value.replace(quotes, function (a) {
        var c = subst[a];
        if (c) {
          return c;
        }
        c = a.charCodeAt();
        return '\\u00' + Math.floor(c/16).toString(16) + (c % 16).toString(16);
      }) + '"' :
      '"' + value + '"';
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.waitable
 * @layer data
 * @requires fb.prelude fb.type fb.string fb.array fb.event fb.obj
 */

/**
 * A container for asynchronous data that may not be available immediately.
 * This is base type for results returned from FB.Data.query()
 * method.
 *
 * @class FB.Waitable
 */
FB.subclass('Waitable', 'Obj',
  /**
   * Construct a Waitable object.
   *
   * @access private
   * @constructor
   */
  function() {},
  {
  /**
   * Set value property of the data object. This will
   * cause "value" event to be fire on the object. Any callback functions
   * that are waiting for the data through wait() methods will be invoked
   * if the value was previously not set.
   *
   * @private
   * @param {Object} value new value for the Waitable
   */
  set: function(value) {
    this.setProperty('value', value);
  },


  /**
   * Fire the error event.
   *
   * @access private
   * @param ex {Exception} the exception object
   */
  error: function(ex) {
    this.fire("error", ex);
  },

  /**
   * Register a callback for an asynchronous value, which will be invoked when
   * the value is ready.
   *
   * Example
   * -------
   *
   * In this
   *      val v = get_a_waitable();
   *      v.wait(function (value) {
   *        // handle the value now
   *      },
   *      function(error) {
   *        // handle the errro
   *      });
   *      // later, whoever generated the waitable will call .set() and
   *      // invoke the callback
   *
   * @param {Function} callback A callback function that will be invoked
   * when this.value is set. The value property will be passed to the
   * callback function as a parameter
   * @param {Function} errorHandler [optional] A callback function that
   * will be invoked if there is an error in getting the value. The errorHandler
   * takes an optional Error object.
   */
  wait: function(callback, errorHandler) {
    // register error handler first incase the monitor call causes an exception
    if (errorHandler) {
      this.subscribe('error', errorHandler);
    }

    this.monitor('value', this.bind(function() {
      if (this.value !== undefined) {
        callback(this.value);
        return true;
      }
    }));
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.data.query
 * @layer data
 * @requires fb.waitable
 */

/**
 * Object that represents the results of an asynchronous FQL query, typically
 * constructed by a call [FB.Data.query](FB.Data.query)().
 *
 * These objects can be used in one of two ways:
 *
 * * Call [wait](FB.Waitable.wait)() to handle the value when it's ready:
 *
 *         var query = FB.Data.query(
 *           'select name from page where username = 'barackobama');
 *         query.wait(function(result) {
 *           document.getElementById('page').innerHTML = result[0].name
 *         });
 *
 * * Pass it as an argument to a function that takes a Waitable. For example,
 *   in this case you can construct the second query without waiting for the
 *   results from the first, and it will combine them into one request:
 *
 *         var query = FB.Data.query(
 *           'select username from page where page_id = 6815841748');
 *         var dependentQuery = FB.Data.query(
 *           'select name from page where username in ' +
 *           '(select username from {0})', query);
 *
 *         // now wait for the results from the dependent query
 *         dependentQuery.wait(function(data) {
 *           document.getElementById('page').innerHTML = result[0].name
 *         });
 *
 * * Wait for multiple waitables at once with [FB.Data.waitOn](FB.Data.waitOn).
 *
 * Check out the [tests][tests] for more usage examples.
 * [tests]: http://github.com/facebook/connect-js/blob/master/tests/js/data.js
 *
 * @class FB.Data.Query
 * @access public
 * @extends FB.Waitable
 */
FB.subclass('Data.Query', 'Waitable',
  function() {
    if (!FB.Data.Query._c) {
      FB.Data.Query._c = 1;
    }
    this.name = 'v_' + FB.Data.Query._c++;
  },
  {
  /**
   * Use the array of arguments using the FB.String.format syntax to build a
   * query, parse it and populate this Query instance.
   *
   * @params args
   */
  parse: function(args) {
    var
      fql = FB.String.format.apply(null, args),
      re = (/^select (.*?) from (\w+)\s+where (.*)$/i).exec(fql); // Parse it
    this.fields = this._toFields(re[1]);
    this.table = re[2];
    this.where = this._parseWhere(re[3]);

    for (var i=1; i < args.length; i++) {
      if (FB.Type.isType(args[i], FB.Data.Query)) {
        // Indicate this query can not be merged because
        // others depend on it.
        args[i].hasDependency = true;
      }
    }

    return this;
  },

  /**
   * Renders the query in FQL format.
   *
   * @return {String} FQL statement for this query
   */
  toFql: function() {
    var s = 'select ' + this.fields.join(',') + ' from ' +
            this.table + ' where ';
    switch (this.where.type) {
      case 'unknown':
        s += this.where.value;
        break;
      case 'index':
        s += this.where.key + '=' + this._encode(this.where.value);
        break;
      case 'in':
        if (this.where.value.length == 1) {
          s += this.where.key + '=' +  this._encode(this.where.value[0]);
        } else {
          s += this.where.key + ' in (' +
            FB.Array.map(this.where.value, this._encode).join(',') + ')';
        }
        break;
    }
    return s;
  },

  /**
   * Encode a given value for use in a query string.
   *
   * @param value {Object} the value to encode
   * @returns {String} the encoded value
   */
  _encode: function(value) {
    return typeof(value) == 'string' ? FB.String.quote(value) : value;
  },

  /**
   * Return the name for this query.
   *
   * TODO should this be renamed?
   *
   * @returns {String} the name
   */
  toString: function() {
    return '#' + this.name;
  },

  /**
   * Return an Array of field names extracted from a given string. The string
   * here is a comma separated list of fields from a FQL query.
   *
   * Example:
   *     query._toFields('abc, def,  ghi ,klm')
   * Returns:
   *     ['abc', 'def', 'ghi', 'klm']
   *
   * @param s {String} the field selection string
   * @returns {Array} the fields
   */
  _toFields: function(s) {
    return FB.Array.map(s.split(','), FB.String.trim);
  },

  /**
   * Parse the where clause from a FQL query.
   *
   * @param s {String} the where clause
   * @returns {Object} parsed where clause
   */
  _parseWhere: function(s) {
    // First check if the where is of pattern
    // key = XYZ
    var
      re = (/^\s*(\w+)\s*=\s*(.*)\s*$/i).exec(s),
      result,
      value,
      type = 'unknown';
    if (re) {
      // Now check if XYZ is either an number or string.
      value = re[2];
      // The RegEx expression for checking quoted string
      // is from http://blog.stevenlevithan.com/archives/match-quoted-string
      if (/^(["'])(?:\\?.)*?\1$/.test(value)) {
        // Use eval to unquote the string
        // convert
        value = eval(value);
        type = 'index';
      } else if (/^\d+\.?\d*$/.test(value)) {
        type = 'index';
      }
    }

    if (type == 'index') {
      // a simple <key>=<value> clause
      result = { type: 'index', key: re[1], value: value };
    } else {
      // Not a simple <key>=<value> clause
      result = { type: 'unknown', value: s };
    }
    return result;
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.data
 * @layer data
 * @requires fb.prelude
 *           fb.type
 *           fb.api
 *           fb.array
 *           fb.string
 *           fb.obj
 *           fb.data.query
 *           fb.json
 */


/**
 * Data access class for accessing Facebook data efficiently.
 *
 * FB.Data is a data layer that offers the following advantages over
 * direct use of FB.Api:
 *
 * 1. Reduce number of individual HTTP requests through the following
 *    optimizations:
 *
 *   a. Automatically combine individual data requests into a single
 *      multi-query request.
 *
 *   b. Automatic query optimization.
 *
 *   c. Enable caching of data through browser local cache (not implemented yet)
 *
 * 2. Reduce complexity of asynchronous API programming, especially multiple
 *     asynchronous request, though FB.Waitable and FB.waitOn.
 *
 * @class FB.Data
 * @access public
 * @static
 */
FB.provide('Data', {
  /**
   * Performs a parameterized FQL query and returns a [FB.Data.query](FB.Data.query)
   * object which can be waited on for the asynchronously fetched data.
   *
   * Examples
   * --------
   *
   * Make a simple FQL call and handle the results.
   *
   *      var query = FB.Data.query('select name, uid from user where uid={0}',
   *                                user_id);
   *      query.wait(function(rows) {
   *        document.getElementById('name').innerHTML =
   *          'Your name is ' + rows[0].name;
   *      });
   *
   * Display the names and events of 10 random friends. This can't be done
   * using a simple FQL query because you need more than one field from more
   * than one table, so we use FB.Data.query to help construct the call to
   * [[api:fql.multiquery]].
   *
   *      // First, get ten of the logged-in user's friends and the events they
   *      // are attending. In this query, the argument is just an int value
   *      // (the logged-in user id). Note, we are not firing the query yet.
   *      var query = FB.Data.query(
   *            "select uid, eid from event_member "
   *          + "where uid in "
   *          + "(select uid2 from friend where uid1 = {0}"
   *          + " order by rand() limit 10)",
   *          user_id);
   *
   *      // Now, construct two dependent queries - one each to get the
   *      // names of the friends and the events referenced
   *      var friends = FB.Data.query(
   *            "select uid, name from user where uid in "
   *          + "(select uid from {0})", query);
   *      var events = FB.Data.query(
   *            "select eid, name from event where eid in "
   *          + " (select eid from {0})", query);
   *
   *      // Now, register a callback which will execute once all three
   *      // queries return with data
   *      FB.Data.waitOn([query, friends, events], function() {
   *        // build a map of eid, uid to name
   *        var eventNames = friendNames = {};
   *        FB.Array.forEach(events.value, function(row) {
   *          eventNames[row.eid] = row.name;
   *        });
   *        FB.Array.forEach(friends.value, function(row) {
   *          friendNames[row.uid] = row.name;
   *        });
   *
   *        // now display all the results
   *        var html = '';
   *        FB.Array.forEach(query.value, function(row) {
   *          html += '<p>'
   *            + friendNames[row.uid]
   *            + ' is attending '
   *            + eventNames[row.eid]
   *            + '</p>';
   *        });
   *        document.getElementById('display').innerHTML = html;
   *      });
   *
   * @param {String} template FQL query string template. It can contains
   * optional formatted parameters in the format of '{<argument-index>}'.
   * @param {Object} data optional 0-n arguments of data. The arguments can be
   * either real data (String or Integer) or an [FB.Data.query](FB.Data.query)
   * object from a previos [FB.Data.query](FB.Data.query).
   * @return {FB.Data.Query}
   * An async query object that contains query result.
   */
  query: function(template, data) {
    var query = new FB.Data.Query().parse(arguments);
    FB.Data.queue.push(query);
    FB.Data._waitToProcess();
    return query;
  },

  /**
   * Wait until the results of all queries are ready. See also
   * [FB.Data.query](FB.Data.query) for more examples of usage.
   *
   * Examples
   * --------
   *
   * Wait for several queries to be ready, then perform some action:
   *
   *      var queryTemplate = 'select name from profile where id={0}';
   *      var u1 = FB.Data.query(queryTemplate, 4);
   *      var u2 = FB.Data.query(queryTemplate, 1160);
   *      FB.Data.waitOn([u1, u2], function(args) {
   *        log('u1 value = '+ args[0].value);
   *        log('u2 value = '+ args[1].value);
   *      });
   *
   * Same as above, except we take advantage of JavaScript closures to
   * avoid using args[0], args[1], etc:
   *
   *      var queryTemplate = 'select name from profile where id={0}';
   *      var u1 = FB.Data.query(queryTemplate, 4);
   *      var u2 = FB.Data.query(queryTemplate, 1160);
   *      FB.Data.waitOn([u1, u2], function(args) {
   *        log('u1 value = '+ u1.value);
   *        log('u2 value = '+ u2.value);
   *      });
   *
   * Create a new Waitable that computes its value based on other Waitables:
   *
   *      var friends = FB.Data.query('select uid2 from friend where uid1={0}',
   *                                  FB.getSession().uid);
   *      // ...
   *      // Create a Waitable that is the count of friends
   *      var count = FB.Data.waitOn([friends], 'args[0].length');
   *      displayFriendsCount(count);
   *      // ...
   *      function displayFriendsCount(count) {
   *        count.wait(function(result) {
   *          log('friends count = ' + result);
   *        });
   *      }
   *
   * You can mix Waitables and data in the list of dependencies
   * as well.
   *
   *      var queryTemplate = 'select name from profile where id={0}';
   *      var u1 = FB.Data.query(queryTemplate, 4);
   *      var u2 = FB.Data.query(queryTemplate, 1160);
   *
   *      // FB.getSession().uid is just an Integer
   *      FB.Data.waitOn([u1, u2, FB.getSession().uid], function(args) {
   *          log('u1 = '+ args[0]);
   *          log('u2 = '+ args[1]);
   *          log('uid = '+ args[2]);
   *       });
   *
   * @param dependencies {Array} an array of dependencies to wait on. Each item
   * could be a Waitable object or actual value.
   * @param callback {Function} A function callback that will be invoked
   * when all the data are ready. An array of ready data will be
   * passed to the callback. If a string is passed, it will
   * be evaluted as a JavaScript string.
   * @return {FB.Waitable} A Waitable object that will be set with the return
   * value of callback function.
   */
  waitOn: function(dependencies, callback) {
    var
      result = new FB.Waitable(),
      count = dependencies.length;

    // For developer convenience, we allow the callback
    // to be a string of javascript expression
    if (typeof(callback) == 'string') {
      var s = callback;
      callback = function(args) {
        return eval(s);
      };
    }

    FB.Array.forEach(dependencies, function(item) {
      item.monitor('value', function() {
        var done = false;
        if (FB.Data._getValue(item) !== undefined) {
          count--;
          done = true;
        }
        if (count === 0) {
          var value = callback(FB.Array.map(dependencies, FB.Data._getValue));
          result.set(value !== undefined ? value : true);
        }
        return done;
      });
    });
    return result;
  },

  /**
   * Helper method to get value from Waitable or return self.
   *
   * @param item {FB.Waitable|Object} potential Waitable object
   * @returns {Object} the value
   */
  _getValue: function(item) {
    return FB.Type.isType(item, FB.Waitable) ? item.value : item;
  },

  /**
   * Alternate method from query, this method is more specific but more
   * efficient. We use it internally.
   *
   * @access private
   * @param fields {Array} the array of fields to select
   * @param table {String} the table name
   * @param name {String} the key name
   * @param value {Object} the key value
   * @returns {FB.Data.Query} the query object
   */
  _selectByIndex: function(fields, table, name, value) {
    var query = new FB.Data.Query();
    query.fields = fields;
    query.table = table;
    query.where = { type: 'index', key: name, value: value };
    FB.Data.queue.push(query);
    FB.Data._waitToProcess();
    return query;
  },

  /**
   * Set up a short timer to ensure that we process all requests at once. If
   * the timer is already set then ignore.
   */
  _waitToProcess: function() {
    if (FB.Data.timer < 0) {
      FB.Data.timer = setTimeout(FB.Data._process, 10);
    }
  },

  /**
   * Process the current queue.
   */
  _process: function() {
    FB.Data.timer = -1;

    var
      mqueries = {},
      q = FB.Data.queue;
    FB.Data.queue = [];

    for (var i=0; i < q.length; i++) {
      var item = q[i];
      if (item.where.type == 'index' && !item.hasDependency) {
        FB.Data._mergeIndexQuery(item, mqueries);
      } else {
        mqueries[item.name] = item;
      }
    }

    // Now make a single multi-query API call
    var params = { method: 'fql.multiquery', queries: {} };
    FB.copy(params.queries, mqueries, true, function(query) {
      return query.toFql();
    });

    params.queries = FB.JSON.stringify(params.queries);

    FB.api(params, function(result) {
      if (result.error_msg) {
        FB.Array.forEach(mqueries, function(q) {
          q.error(Error(result.error_msg));
        });
      } else {
        FB.Array.forEach(result, function(o) {
          mqueries[o.name].set(o.fql_result_set);
        });
      }
    });
  },

  /**
   * Check if y can be merged into x
   * @private
   */
  _mergeIndexQuery: function(item, mqueries) {
    var key = item.where.key,
    value = item.where.value;

    var name = 'index_' +  item.table + '_' + key;
    var master = mqueries[name];
    if (!master) {
      master = mqueries[name] = new FB.Data.Query();
      master.fields = [key];
      master.table = item.table;
      master.where = {type: 'in', key: key, value: []};
    }

    // Merge fields
    FB.Array.merge(master.fields, item.fields);
    FB.Array.merge(master.where.value, [value]);

    // Link data from master to item
    master.wait(function(r) {
      item.set(FB.Array.filter(r, function(x) {
        return x[key] == value;
      }));
    });
  },

  timer: -1,
  queue: []
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.xfbml.element
 * @layer xfbml
 * @requires fb.type fb.event fb.array
 */

/**
 * Base class for all XFBML elements. To create your own XFBML element, make a
 * class that derives from this, and then call [FB.XFBML.registerTag](FB.XFBML.registerTag).
 *
 * @access private
 * @class FB.XFBML.Element
 */
FB.Class('XFBML.Element',
  /**
   * Create a new Element.
   *
   * @access private
   * @constructor
   * @param dom {DOMElement} the DOMElement for the tag
   */
  function(dom) {
    this.dom = dom;
  },

  FB.copy({
  /**
   * Get the value of an attribute associated with this tag.
   *
   * Note, the transform function is never executed over the default value. It
   * is only used to transform user set attribute values.
   *
   * @access private
   * @param name {String} Name of the attribute.
   * @param defaultValue {Object} Default value if attribute isn't set.
   * @param transform {Function} Optional function to transform found value.
   * @return {Object} final value
   */
  getAttribute: function(name, defaultValue, transform) {
    var value = (
      this.dom.getAttribute(name) ||
      this.dom.getAttribute(name.replace(/-/g, '_')) ||
      this.dom.getAttribute(name.replace(/-/g, ''))
    );
    return value ? (transform ? transform(value) : value) : defaultValue;
  },

  /**
   * Helper function to extract boolean attribute value.
   *
   * @access private
   * @param name {String} Name of the attribute.
   * @param defaultValue {Object} Default value if attribute isn't set.
   */
  _getBoolAttribute: function(name, defaultValue) {
    return this.getAttribute(name, defaultValue, function(s) {
      s = s.toLowerCase();
      return s == 'true' || s == '1' || s == 'yes' || s == 'on';
    });
  },

  /**
   * Get an integer value for size in pixels.
   *
   * @access private
   * @param name {String} Name of the attribute.
   * @param defaultValue {Object} Default value if attribute isn't set.
   */
  _getPxAttribute: function(name, defaultValue) {
    return this.getAttribute(name, defaultValue, function(s) {
      var size = parseInt(s.replace('px', ''), 10);
      if (isNaN(size)) {
        return defaultValue;
      } else {
        return size;
      }
    });
  },

  /**
   * Get a value if it is in the allowed list, otherwise return the default
   * value. This function ignores case and expects you to use only lower case
   * allowed values.
   *
   * @access private
   * @param name {String} Name of the attribute.
   * @param defaultValue {Object} Default value
   * @param allowed {Array} List of allowed values.
   */
  _getAttributeFromList: function(name, defaultValue, allowed) {
    return this.getAttribute(name, defaultValue, function(s) {
      s = s.toLowerCase();
      if (FB.Array.indexOf(allowed, s) > -1) {
        return s;
      } else {
        return defaultValue;
      }
    });
  },

  /**
   * Check if this node is still valid and in the document.
   *
   * @access private
   * @returns {Boolean} true if element is valid
   */
  isValid: function() {
    for (var dom = this.dom; dom; dom = dom.parentNode) {
      if (dom == document.body) {
        return true;
      }
    }
  },

  /**
   * Clear this element and remove all contained elements.
   *
   * @access private
   */
  clear: function() {
    this.dom.innerHTML = '';
  }
}, FB.EventProvider));
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.xfbml
 * @layer xfbml
 * @requires fb.prelude
 *           fb.array
 */

/**
 * Methods for the rendering of [[wiki:XFBML]] tags.
 *
 * To render the tags, simply put the tags anywhere in your page, and then
 * call:
 *
 *      FB.XFBML.parse();
 *
 * @class FB.XFBML
 * @static
 */
FB.provide('XFBML', {
  /**
   * The time allowed for all tags to finish rendering.
   *
   * @type Number
   */
  _renderTimeout: 30000,

  /**
   * Parse and render XFBML markup in the document.
   *
   * Examples
   * --------
   *
   * By default, this is all you need to make XFBML work:
   *
   *       FB.XFBML.parse();
   *
   * Alternately, you may want to only evaluate a portion of
   * the document. In that case, you can pass in the elment.
   *
   *       FB.XFBML.parse(document.getElementById('foo'));
   *
   * @access public
   * @param dom {DOMElement} (optional) root DOM node, defaults to body
   * @param cb {Function} (optional) invoked when elements are rendered
   */
  parse: function(dom, cb) {
    dom = dom || document.body;

    // We register this function on each tag's "render" event. This allows us
    // to invoke the callback when we're done rendering all the found elements.
    //
    // We start with count=1 rather than 0, and finally call onTagDone() after
    // we've kicked off all the tag processing. This ensures that we do not hit
    // count=0 before we're actually done queuing up all the tags.
    var
      count = 1,
      onTagDone = function() {
        count--;
        if (count === 0) {
          // Invoke the user specified callback for this specific parse() run.
          cb && cb();

          // Also fire a global event. A global event is fired for each
          // invocation to FB.XFBML.parse().
          FB.Event.fire('xfbml.render');
        }
      };

    // First, find all tags that are present
    FB.Array.forEach(FB.XFBML._tagInfos, function(tagInfo) {
      // default the xmlns if needed
      if (!tagInfo.xmlns) {
        tagInfo.xmlns = 'fb';
      }

      var xfbmlDoms = FB.XFBML._getDomElements(
        dom,
        tagInfo.xmlns,
        tagInfo.localName
      );
      for (var i=0; i < xfbmlDoms.length; i++) {
        count++;
        FB.XFBML._processElement(xfbmlDoms[i], tagInfo, onTagDone);
      }
    });

    // Setup a timer to ensure all tags render within a given timeout
    window.setTimeout(function() {
      if (count > 0) {
        FB.log(
          count + ' XFBML tags failed to render in ' +
          FB.XFBML._renderTimeout + 'ms.'
        );
      }
    }, FB.XFBML._renderTimeout);
    // Call once to handle count=1 as described above.
    onTagDone();
  },

  /**
   * Register a custom XFBML tag. If you create an custom XFBML tag, you can
   * use this method to register it so the it can be treated like
   * any build-in XFBML tags.
   *
   * Example
   * -------
   *
   * Register fb:name tag that is implemented by class FB.XFBML.Name
   *       tagInfo = {xmlns: 'fb',
   *                  localName: 'name',
   *                  className: 'FB.XFBML.Name'},
   *       FB.XFBML.registerTag(tagInfo);
   *
   * @access private
   * @param {Object} tagInfo
   * an object containiner the following keys:
   * - xmlns
   * - localName
   * - className
   */
  registerTag: function(tagInfo) {
    FB.XFBML._tagInfos.push(tagInfo);
  },


  //////////////// Private methods ////////////////////////////////////////////

  /**
   * Process an XFBML element.
   *
   * @access private
   * @param dom {DOMElement} the dom node
   * @param tagInfo {Object} the tag information
   * @param cb {Function} the function to bind to the "render" event for the tag
   */
  _processElement: function(dom, tagInfo, cb) {
    // Check if element for the dom already exists
    var element = dom._element;
    if (element) {
      element.subscribe('render', cb);
      element.process();
    } else {
      var processor = function() {
        var fn = eval(tagInfo.className);

        // TODO(naitik) cleanup after f8
        //
        // currently, tag initialization is done via a constructor function,
        // there by preventing a tag implementation to vary between two types
        // of objects. post f8, this should be changed to a factory function
        // which would allow the login button to instantiate the Button based
        // tag or Iframe based tag depending on the attribute value.
        var getBoolAttr = function(attr) {
            var attr = dom.getAttribute(attr);
            return (attr && FB.Array.indexOf(
                      ['true', '1', 'yes', 'on'],
                      attr.toLowerCase()) > -1);
        }

        var isLogin = false;
        var showFaces = true;
        var renderInIframe = false;
        if (tagInfo.className === 'FB.XFBML.LoginButton') {
          renderInIframe = getBoolAttr('render-in-iframe');
          showFaces = getBoolAttr('show-faces');
          isLogin = renderInIframe || showFaces;
          if (isLogin) {
            fn = FB.XFBML.Login;
          }
        }

        element = dom._element = new fn(dom);
        if (isLogin) {
          var extraParams = {show_faces: showFaces};
          var perms = dom.getAttribute('perms');
          if (perms) {
            extraParams['perms'] = perms;
          }
          element.setExtraParams(extraParams);
        }

        element.subscribe('render', cb);
        element.process();

      };

      if (FB.CLASSES[tagInfo.className.substr(3)]) {
        processor();
      } else {
        FB.log('Tag ' + tagInfo.className + ' was not found.');
      }
    }
  },

  /**
   * Get all the DOM elements present under a given node with a given tag name.
   *
   * @access private
   * @param dom {DOMElement} the root DOM node
   * @param xmlns {String} the XML namespace
   * @param localName {String} the unqualified tag name
   * @return {DOMElementCollection}
   */
  _getDomElements: function(dom, xmlns, localName) {
    // Different browsers behave slightly differently in handling tags
    // with custom namespace.
    var fullName = xmlns + ':' + localName;

    switch (FB.Dom.getBrowserType()) {
    case 'mozilla':
      // Use document.body.namespaceURI as first parameter per
      // suggestion by Firefox developers.
      // See https://bugzilla.mozilla.org/show_bug.cgi?id=531662
      return dom.getElementsByTagNameNS(document.body.namespaceURI, fullName);
    case 'ie':
      // accessing document.namespaces when the library is being loaded
      // asynchronously can cause an error if the document is not yet ready
      try {
        var docNamespaces = document.namespaces;
        if (docNamespaces && docNamespaces[xmlns]) {
          return dom.getElementsByTagName(localName);
        }
      } catch(e) {
        // introspection doesn't yield any identifiable information to scope
      }

      // It seems that developer tends to forget to declare the fb namespace
      // in the HTML tag (xmlns:fb="http://www.facebook.com/2008/fbml") IE
      // has a stricter implementation for custom tags. If namespace is
      // missing, custom DOM dom does not appears to be fully functional. For
      // example, setting innerHTML on it will fail.
      //
      // If a namespace is not declared, we can still find the element using
      // GetElementssByTagName with namespace appended.
      return dom.getElementsByTagName(fullName);
    default:
      return dom.getElementsByTagName(fullName);
    }
  },

  /**
   * Register the default set of base tags. Each entry must have a localName
   * and a className property, and can optionally have a xmlns property which
   * if missing defaults to 'fb'.
   *
   * NOTE: Keep the list alpha sorted.
   */
  _tagInfos: [
    { localName: 'activity',        className: 'FB.XFBML.Activity'        },
    { localName: 'add-profile-tab', className: 'FB.XFBML.AddProfileTab'   },
    { localName: 'bookmark',        className: 'FB.XFBML.Bookmark'        },
    { localName: 'comments',        className: 'FB.XFBML.Comments'        },
    { localName: 'connect-bar',     className: 'FB.XFBML.ConnectBar'      },
    { localName: 'fan',             className: 'FB.XFBML.Fan'             },
    { localName: 'like',            className: 'FB.XFBML.Like'            },
    { localName: 'like-box',        className: 'FB.XFBML.LikeBox'         },
    { localName: 'live-stream',     className: 'FB.XFBML.LiveStream'      },
    { localName: 'login',           className: 'FB.XFBML.Login'           },
    { localName: 'login-button',    className: 'FB.XFBML.LoginButton'     },
    { localName: 'facepile',        className: 'FB.XFBML.Facepile'        },
    { localName: 'friendpile',      className: 'FB.XFBML.Friendpile'      },
    { localName: 'name',            className: 'FB.XFBML.Name'            },
    { localName: 'profile-pic',     className: 'FB.XFBML.ProfilePic'      },
    { localName: 'recommendations', className: 'FB.XFBML.Recommendations' },
    { localName: 'serverfbml',      className: 'FB.XFBML.ServerFbml'      },
    { localName: 'share-button',    className: 'FB.XFBML.ShareButton'     },
    { localName: 'social-bar',      className: 'FB.XFBML.SocialBar'       }
  ]
});

/*
 * For IE, we will try to detect if document.namespaces contains 'fb' already
 * and add it if it does not exist.
 */
// wrap in a try/catch because it can throw an error if the library is loaded
// asynchronously and the document is not ready yet
(function() {
  try {
    if (document.namespaces && !document.namespaces.item.fb) {
       document.namespaces.add('fb');
    }
  } catch(e) {
    // introspection doesn't yield any identifiable information to scope
  }
}());
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.helper
 * @layer xfbml
 * @requires fb.prelude
 */

/**
 * Helper class for XFBML
 * @class FB.Helper
 * @static
 * @private
 */
FB.provide('Helper', {
  /**
   * Check if an id is an user id, instead of a page id
   *
   * [NOTE:] This code is based on is_user_id function in our server code.
   * If that function changes, we'd have to update this one as well.
   *
   * @param {uid} id
   * @returns {Boolean} true if the given id is a user id
   */
  isUser: function(id) {
    return id < 2200000000 || (
              id >= 100000000000000 &&  // 100T is first 64-bit UID
              id <= 100099999989999); // 100T + 3,333,333*30,000 - 1)
  },

  /**
   * Return the current user's UID if available.
   *
   * @returns {String|Number} returns the current user's UID or null
   */
  getLoggedInUser: function() {
    return FB._session ? FB._session.uid : null;
  },

  /**
   * Uppercase the first character of the String.
   *
   * @param s {String} the string
   * @return {String} the string with an uppercase first character
   */
  upperCaseFirstChar: function(s) {
    if (s.length > 0) {
      return s.substr(0, 1).toUpperCase() + s.substr(1);
    }
    else {
      return s;
    }
  },

  /**
   * Link to the explicit href or profile.php.
   *
   * @param userInfo {FB.UserInfo} User info object.
   * @param html {String} Markup for the anchor tag.
   * @param href {String} Custom href.
   * @returns {String} the anchor tag markup
   */
  getProfileLink: function(userInfo, html, href) {
    href = href || (userInfo ? FB._domain.www + 'profile.php?id=' +
                    userInfo.uid : null);
    if (href) {
      html = '<a class="fb_link" href="' + href + '">' + html + '</a>';
    }
    return html;
  },

  /**
   * Convenienve function to fire an event handler attribute value. This is a
   * no-op for falsy values, eval for strings and invoke for functions.
   *
   * @param handler {Object}
   * @param scope {Object}
   * @param args {Array}
   */
  invokeHandler: function(handler, scope, args) {
    if (handler) {
      if (typeof handler === 'string') {
        eval(handler);
      } else if (handler.apply) {
        handler.apply(scope, args || []);
      }
    }
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.xfbml.iframewidget
 * @layer xfbml
 * @requires fb.type
 *           fb.event
 *           fb.xfbml.element
 *           fb.content
 *           fb.qs
 *           fb.css.iframewidget
 */

/**
 * Base implementation for iframe based XFBML Widgets.
 *
 * @class FB.XFBML.IframeWidget
 * @extends FB.XFBML.Element
 * @private
 */
FB.subclass('XFBML.IframeWidget', 'XFBML.Element', null, {
  /**
   * Indicate if the loading animation should be shown while the iframe is
   * loading.
   */
  _showLoader: true,

  /**
   * Indicate if the widget should be reprocessed when the user enters or
   * leaves the "unknown" state. (Logs in/out of facebook, but not the
   * application.)
   */
  _refreshOnAuthChange: false,

  /**
   * Indicates if the widget should be reprocessed on auth.statusChange events.
   * This is the default for XFBML Elements, but is usually undesirable for
   * Iframe Widgets.
   */
  _allowReProcess: false,

  /**
   * Indicates when the widget will be made visible.
   *
   *   load: when the iframe's page onload event is fired
   *   resize: when the first resize message is received
   */
  _visibleAfter: 'load',

  /////////////////////////////////////////////////////////////////////////////
  // Methods the implementation MUST override
  /////////////////////////////////////////////////////////////////////////////

  /**
   * Implemented by the inheriting class to return a **name** and **params**.
   *
   * The name is the the file name in the plugins directory. So the name "fan"
   * translates to the path "/plugins/fan.php". This enforces consistency.
   *
   * The params should be the query params needed for the widget. API Key,
   * Session Key, SDK and Locale are automatically included.
   *
   * @return {Object} an object containing a **name** and **params**.
   */
  getUrlBits: function() {
    throw new Error('Inheriting class needs to implement getUrlBits().');
  },

  /////////////////////////////////////////////////////////////////////////////
  // Methods the implementation CAN override
  /////////////////////////////////////////////////////////////////////////////

  /**
   * This method is invoked before any processing is done to do any initial
   * setup and do any necessary validation on the attributes. A return value of
   * false will indicate that validation was unsuccessful and processing will
   * be halted. If you are going to return false and halt processing, you
   * should ensure you use FB.log() to output a short informative message
   * before doing so.
   *
   * @return {Boolean} true to continue processing, false to halt it
   */
  setupAndValidate: function() {
    return true;
  },

  /**
   * This is useful for setting up event handlers and such which should not be
   * run again if the widget is reprocessed.
   */
  oneTimeSetup: function() {},

  /**
   * Implemented by the inheriting class to return the initial size for the
   * iframe. If the inheriting class does not implement this, we default to
   * null which implies no element level style. This is useful if you are
   * defining the size based on the className.
   *
   * @return {Object} object with a width and height as Numbers (pixels assumed)
   */
  getSize: function() {},

  /**
   * Implemented by the inheriting class if it needs to override the name
   * attribute of the iframe node. Returning null will auto generate the name.
   *
   * @return {String} the name of the iframe
   */
  getIframeName: function() {},

  /////////////////////////////////////////////////////////////////////////////
  // Public methods the implementation CAN use
  /////////////////////////////////////////////////////////////////////////////

  /**
   * Get a channel url for use with this widget.
   *
   * @return {String} the channel URL
   */
  getChannelUrl: function() {
    if (!this._channelUrl) {
      // parent.parent => the message will be going from cdn => fb => app (with
      // cdn being the deepest frame, and app being the top frame)
      var self = this;
      this._channelUrl = FB.XD.handler(function(message) {
        self.fire('xd.' + message.type, message);
      }, 'parent.parent', true);
    }
    return this._channelUrl;
  },

  /**
   * Returns the iframe node (if it has already been created).
   *
   * @return {DOMElement} the iframe DOM element
   */
  getIframeNode: function() {
    // not caching to allow for the node to change over time without needing
    // house-keeping for the cached reference.
    return this.dom.getElementsByTagName('iframe')[0];
  },

  /////////////////////////////////////////////////////////////////////////////
  // Private methods the implementation MUST NOT use or override
  /////////////////////////////////////////////////////////////////////////////

  /**
   * Inheriting classes should not touch the DOM directly, and are only allowed
   * to override the methods defined at the top.
   *
   * @param force {Boolean} force reprocessing of the node
   */
  process: function(force) {
    // guard agains reprocessing if needed
    if (this._done) {
      if (!this._allowReProcess && !force) {
        return;
      }
      this.clear();
    } else {
      this._oneTimeSetup();
    }
    this._done = true;

    if (!this.setupAndValidate()) {
      // failure to validate means we're done rendering what we can
      this.fire('render');
      return;
    }

    // show the loader if needed
    if (this._showLoader) {
      this._addLoader();
    }

    // it's always hidden by default
    FB.Dom.addCss(this.dom, 'fb_iframe_widget');
    if (this._visibleAfter != 'immediate') {
      FB.Dom.addCss(this.dom, 'fb_hide_iframes');
    } else {
      this.subscribe('iframe.onload', FB.bind(this.fire, this, 'render'));
    }

    // the initial size
    var size = this.getSize() || {};

    // we use a GET request if the URL is less than 2k, otherwise we need to do
    // a <form> POST. we prefer a GET because it prevents the "POST resend"
    // warning browsers shown on page refresh.
    var url = this._getURL() + '?' + FB.QS.encode(this._getQS());
    if (url.length > 2000) {
      // we will POST the form once the empty about:blank iframe is done loading
      url = 'about:blank';
      var onload = FB.bind(function() {
        this._postRequest();
        this.unsubscribe('iframe.onload', onload);
      }, this);
      this.subscribe('iframe.onload', onload);
    }

    FB.Content.insertIframe({
      url    : url,
      root   : this.dom.appendChild(document.createElement('span')),
      name   : this.getIframeName(),
      height : size.height,
      width  : size.width,
      onload : FB.bind(this.fire, this, 'iframe.onload')
    });
  },

  /**
   * Internal one time setup logic.
   */
  _oneTimeSetup: function() {
    // the XD messages we want to handle. it is safe to subscribe to these even
    // if they will not get used.
    this.subscribe('xd.resize', FB.bind(this._handleResizeMsg, this));

    // weak dependency on FB.Auth
    if (FB.getLoginStatus) {
      this.subscribe(
        'xd.refreshLoginStatus',
        FB.bind(FB.getLoginStatus, FB, function(){}, true));
      this.subscribe(
        'xd.logout',
        FB.bind(FB.logout, FB, function(){}));
    }

    // setup forwarding of auth.statusChange events
    if (this._refreshOnAuthChange) {
      this._setupAuthRefresh();
    }

    // if we need to make it visible on iframe load
    if (this._visibleAfter == 'load') {
      this.subscribe('iframe.onload', FB.bind(this._makeVisible, this));
    }

    // hook for subclasses
    this.oneTimeSetup();
  },

  /**
   * Make the iframe visible and remove the loader.
   */
  _makeVisible: function() {
    this._removeLoader();
    FB.Dom.removeCss(this.dom, 'fb_hide_iframes');
    this.fire('render');
  },

  /**
   * Most iframe plugins do not tie their internal state to the "Connected"
   * state of the application. In other words, the fan box knows who you are
   * even if the page it contains does not. These plugins therefore only need
   * to reload when the user signs in/out of facebook, not the application.
   *
   * This misses the case where the user switched logins without the
   * application knowing about it. Unfortunately this is not possible/allowed.
   */
  _setupAuthRefresh: function() {
    FB.getLoginStatus(FB.bind(function(response) {
      var lastStatus = response.status;
      FB.Event.subscribe('auth.statusChange', FB.bind(function(response) {
        if (!this.isValid()) {
          return;
        }
        // if we gained or lost a user, reprocess
        if (lastStatus == 'unknown' || response.status == 'unknown') {
          this.process(true);
        }
        lastStatus = response.status;
      }, this));
    }, this));
  },

  /**
   * Invoked by the iframe when it wants to be resized.
   */
  _handleResizeMsg: function(message) {
    if (!this.isValid()) {
      return;
    }
    var iframe = this.getIframeNode();
    iframe.style.height = message.height + 'px';
    if (message.width) {
      iframe.style.width = message.width + 'px';
    }
    iframe.style.border = 'none';
    this._makeVisible();
  },

  /**
   * Add the loader.
   */
  _addLoader: function() {
    if (!this._loaderDiv) {
      FB.Dom.addCss(this.dom, 'fb_iframe_widget_loader');
      this._loaderDiv = document.createElement('div');
      this._loaderDiv.className = 'FB_Loader';
      this.dom.appendChild(this._loaderDiv);
    }
  },

  /**
   * Remove the loader.
   */
  _removeLoader: function() {
    if (this._loaderDiv) {
      FB.Dom.removeCss(this.dom, 'fb_iframe_widget_loader');
      if (this._loaderDiv.parentNode) {
        this._loaderDiv.parentNode.removeChild(this._loaderDiv);
      }
      this._loaderDiv = null;
    }
  },

  /**
   * Get's the final QS/Post Data for the iframe with automatic params added
   * in.
   *
   * @return {Object} the params object
   */
  _getQS: function() {
    return FB.copy({
      api_key     : FB._apiKey,
      locale      : FB._locale,
      sdk         : 'joey',
      session_key : FB._session && FB._session.session_key
    }, this.getUrlBits().params);
  },

  /**
   * Gets the final URL based on the name specified in the bits.
   *
   * @return {String} the url
   */
  _getURL: function() {
    return FB._domain.www + 'plugins/' + this.getUrlBits().name + '.php';
  },

  /**
   * Will do the POST request to the iframe.
   */
  _postRequest: function() {
    FB.Content.postTarget({
      url    : this._getURL(),
      target : this.getIframeNode().name,
      params : this._getQS()
    });
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.xfbml.buttonelement
 * @layer xfbml
 * @requires fb.type fb.xfbml.element fb.css.button fb.string
 */

/**
 * Base class for a button element.
 *
 * @class FB.XFBML.ButtonElement
 * @extends  FB.XFBML.Element
 * @private
 */
FB.subclass('XFBML.ButtonElement', 'XFBML.Element', null, {
  _allowedSizes: ['icon', 'small', 'medium', 'large', 'xlarge'],

  /////////////////////////////////////////////////////////////////////////////
  // Methods the implementation MUST override
  /////////////////////////////////////////////////////////////////////////////

  /**
   * Invoked when the button is clicked.
   */
  onClick: function() {
    throw new Error('Inheriting class needs to implement onClick().');
  },

  /////////////////////////////////////////////////////////////////////////////
  // Methods the implementation CAN override
  /////////////////////////////////////////////////////////////////////////////

  /**
   * This method is invoked before any processing is done to do any initial
   * setup and do any necessary validation on the attributes. A return value of
   * false will indicate that validation was unsuccessful and processing will
   * be halted. If you are going to return false and halt processing, you
   * should ensure you use FB.log() to output a short informative message
   * before doing so.
   *
   * @return {Boolean} true to continue processing, false to halt it
   */
  setupAndValidate: function() {
    return true;
  },

  /**
   * Should return the button markup. The default behaviour is to return the
   * original innerHTML of the element.
   *
   * @return {String} the HTML markup for the button
   */
  getButtonMarkup: function() {
    return this.getOriginalHTML();
  },

  /////////////////////////////////////////////////////////////////////////////
  // Public methods the implementation CAN use
  /////////////////////////////////////////////////////////////////////////////

  /**
   * Get the original innerHTML of the element.
   *
   * @return {String} the original innerHTML
   */
  getOriginalHTML: function() {
    return this._originalHTML;
  },

  /////////////////////////////////////////////////////////////////////////////
  // Private methods the implementation MUST NOT use or override
  /////////////////////////////////////////////////////////////////////////////

  /**
   * Processes this tag.
   */
  process: function() {
    if (!('_originalHTML' in this)) {
      this._originalHTML = FB.String.trim(this.dom.innerHTML);
    }

    if (!this.setupAndValidate()) {
      // failure to validate means we're done rendering what we can
      this.fire('render');
      return;
    }

    var
      size = this._getAttributeFromList('size', 'medium', this._allowedSizes),
      className = '',
      markup    = '';

    if (size == 'icon') {
      className = 'fb_button_simple';
    } else {
      var rtl_suffix = FB._localeIsRtl ? '_rtl' : '';
      markup = this.getButtonMarkup();
      className = 'fb_button' + rtl_suffix + ' fb_button_' + size + rtl_suffix;
    }

    this.dom.innerHTML = (
      '<a class="' + className + '">' +
        '<span class="fb_button_text">' + markup + '</span>' +
      '</a>'
    );

    // the firstChild is the anchor tag we just setup above
    this.dom.firstChild.onclick = FB.bind(this.onClick, this);

    this.fire('render');
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.xfbml.edgewidget
 * @layer xfbml
 * @requires fb.type
 *           fb.dom
 *           fb.event
 *           fb.helper
 *           fb.xfbml.iframewidget
 *           fb.xfbml.edgecommentwidget
 */

/**
 * Base implementation for Edge Widgets.
 *
 * @class FB.XFBML.EdgeWidget
 * @extends FB.XFBML.IframeWidget
 * @private
 */
FB.subclass('XFBML.EdgeWidget', 'XFBML.IframeWidget', null, {
  /**
   * Make the iframe visible only when it has finished loading.
   */
  _visibleAfter: 'immediate',
  _showLoader: false,

  /**
   * Do initial attribute processing.
   */
  setupAndValidate : function() {
    FB.Dom.addCss(this.dom, 'fb_edge_widget_with_comment');
    this._attr = {
      channel_url      : this.getChannelUrl(),
      debug            : this._getBoolAttribute('debug'),
      href             : this.getAttribute('href', window.location.href),
      is_permalink     : this._getBoolAttribute('is-permalink'),
      node_type        : this.getAttribute('node-type', 'link'),
      width            : this._getWidgetWidth(),
      font             : this.getAttribute('font'),
      layout           : this._getLayout(),
      colorscheme      : this.getAttribute('color-scheme'),
      action           : this.getAttribute('action'),
      show_faces       : this._shouldShowFaces(),
      no_resize        : this._getBoolAttribute('no_resize')
    };

    return true;
  },

  // TODO(jcain): update so that master iframe controls everything,
  // including commenting
  oneTimeSetup : function() {
    // for now, showing the comment dialog also implies the user created an
    // edge to the thing, so we alias it.
    this.subscribe('xd.presentEdgeCommentDialog',
                   FB.bind(this._onEdgeCreate, this));
    this.subscribe('xd.presentEdgeCommentDialog',
                   FB.bind(this._handleEdgeCommentDialogPresentation, this));
    this.subscribe('xd.dismissEdgeCommentDialog',
                   FB.bind(this._handleEdgeCommentDialogDismissal, this));
    this.subscribe('xd.hideEdgeCommentDialog',
                   FB.bind(this._handleEdgeCommentDialogHide, this));
    this.subscribe('xd.showEdgeCommentDialog',
                   FB.bind(this._handleEdgeCommentDialogShow, this));

  },

  /**
   * Get the initial size.
   *
   * @return {Object} the size
   */
  getSize: function() {
    return {
      width: this._getWidgetWidth(),
      height: this._getWidgetHeight()
    };
  },

  /**
   * Returns the height of the widget iframe, taking into
   * account the chosen layout, a user-supplied height, and
   * the min and max values we'll allow.  As it turns out, we
   * don't see too much.  (At the moment, we ignore the any
   * user-defined height, but that might change.)
   *
   * This logic is replicated in html/plugins/like.php and
   * lib/external_node/param_validation.php, and must be replicated
   * because it helps size the client's iframe.
   *
   * @return {String} the CSS-legitimate width in pixels, as
   *         with '460px'.
   */
  _getWidgetHeight : function() {
    var layout = this._getLayout();
    var should_show_faces = this._shouldShowFaces() ? 'show' : 'hide';
    var layoutToDefaultHeightMap =
      { 'standard' : {'show': 80, 'hide': 35},
        'bar' : {'show': 45 , 'hide': 35},
        'button_count' : {'show': 21, 'hide': 21}};
    return layoutToDefaultHeightMap[layout][should_show_faces];
  },

  /**
   * Returns the width of the widget iframe, taking into
   * account the chosen layout, the user supplied width, and
   * the min and max values we'll allow.  There is much more
   * flexibility in how wide the widget is, so a user-supplied
   * width just needs to fall within a certain range.
   *
   * This logic is replicated in html/plugins/like.php and
   * lib/external_node/param_validation.php, and must be replicated
   * because it helps size the client's iframe.
   *
   * @return {String} the CSS-legitimate width in pixels, as
   *         with '460px'.
   */
  _getWidgetWidth : function() {
    var layout = this._getLayout();
    var should_show_faces = this._shouldShowFaces() ? 'show' : 'hide';
    var button_count_default_width =
      this.getAttribute('action') === 'recommend' ? 130 : 90;
    var layoutToDefaultWidthMap =
      { 'standard': {'show': 450,
                     'hide': 450},
        'bar': {'show': 700,
                'hide': 450},
        'button_count': {'show': button_count_default_width,
                         'hide': button_count_default_width}};
    var defaultWidth = layoutToDefaultWidthMap[layout][should_show_faces];
    var width = this._getPxAttribute('width', defaultWidth)

    var allowedWidths =
      { 'bar' : {'min' : 600, 'max' : 900 },
        'standard' : {'min' : 225, 'max' : 900},
        'button_count' : {'min' : button_count_default_width,
                          'max' : 900}};
    if (width < allowedWidths[layout].min) {
      width = allowedWidths[layout].min;
    } else if (width > allowedWidths[layout].max) {
      width = allowedWidths[layout].max;
    }

    return width;
  },

  /**
   * Returns the layout provided by the user, which can be
   * any one of 'standard', 'box', or 'bar'.  If the user
   * omits a layout, or if they layout they specify is invalid,
   * then we just go with 'standard'.
   *
   * This logic is replicated in html/plugins/like.php and
   * lib/external_node/param_validation.php, and must be replicated
   * because it helps size the client's iframe.
   *
   * @return {String} the layout of the Connect Widget.
   */
  _getLayout : function() {
    return this._getAttributeFromList('layout',
                                      'standard',
                                      ['standard', 'bar', 'button_count']);
  },

  /**
   * Returns true if and only if we should be showing faces in the
   * widget, and false otherwise.
   *
   * This logic is replicated in html/plugins/like.php and
   * lib/external_node/param_validation.php, and must be replicated
   * because it helps size the client's iframe.
   *
   * @return {String} described above.
   */
  _shouldShowFaces : function() {
    return this._getLayout() !== 'button_count' &&
           this._getBoolAttribute('show-faces', true);
  },

  /**
   * Handles the event fired when the user actually connects to
   * something.  The idea is to tell the host to drop in
   * another iframe widget--an FB.XFBML.EdgeCommentWidget--
   * and sensibly position it so it partially overlays
   * the mother widget.
   *
   * @param {Object} message a dictionary of information about the
   *        event.
   * @return void
   */
  _handleEdgeCommentDialogPresentation : function(message) {
    if (!this.isValid()) {
      return;
    }

    var comment_node = document.createElement('span');
    var opts = {
      commentNode : comment_node,
      externalUrl : message.externalURL,
      width : 330,
      height : 200,
      masterFrameName : message.masterFrameName,
      relativeHeightOffset : '26px'
    };

    this._commentSlave = new FB.XFBML.EdgeCommentWidget(opts);
    this.dom.appendChild(comment_node);
    this._commentSlave.process();
    this._commentWidgetNode = comment_node;
  },

  /**
   * Handles the XD event instructing the host to
   * remove the comment widget iframe.  The DOM node
   * for this widget is currently carrying just one child
   * node, which is the span representing the iframe.
   * We just need to return that one child in order for the
   * comment widget to disappear.
   *
   * @param {Object} message a dictionary of information about
   *        the event.
   * @return void
   */
  _handleEdgeCommentDialogDismissal : function(message) {
    if (this._commentWidgetNode) {
      this.dom.removeChild(this._commentWidgetNode);
      delete this._commentWidgetNode;
    }
  },

  /**
   * Handles the XD event instructing the hose to hide the comment
   * widget iframe.
   */
  _handleEdgeCommentDialogHide: function() {
    if (this._commentWidgetNode) {
      this._commentWidgetNode.style.display="none";
    }
  },

  /**
   * Handles the XD event instructing the hose to show the comment
   * widget iframe.
   */
  _handleEdgeCommentDialogShow: function() {
    if (this._commentWidgetNode) {
      this._commentWidgetNode.style.display="block";
    }
  },

  /**
   * Invoked when the user likes/recommends/whatever the thing to create an
   * edge.
   */
  _onEdgeCreate: function() {
    this.fire('edge.create', this._attr.href); // dynamically attached
    FB.Event.fire('edge.create', this._attr.href, this); // global
    FB.Helper.invokeHandler(
      this.getAttribute('on-create'), this, [this._attr.href]); // inline
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.xfbml.activity
 * @layer xfbml
 * @requires fb.type fb.xfbml.iframewidget
 */

/**
 * Implementation for fb:activity tag.
 *
 * @class FB.XFBML.Activity
 * @extends FB.XFBML.IframeWidget
 * @private
 */
FB.subclass('XFBML.Activity', 'XFBML.IframeWidget', null, {
  _visibleAfter: 'load',

  /**
   * Refresh the iframe on auth.statusChange events.
   */
  _refreshOnAuthChange: true,

  /**
   * Do initial attribute processing.
   */
  setupAndValidate: function() {
    this._attr = {
      border_color    : this.getAttribute('border-color'),
      colorscheme     : this.getAttribute('color-scheme'),
      font            : this.getAttribute('font'),
      header          : this._getBoolAttribute('header'),
      height          : this._getPxAttribute('height', 300),
      recommendations : this._getBoolAttribute('recommendations'),
      site            : this.getAttribute('site', location.hostname),
      width           : this._getPxAttribute('width', 300)
    };

    return true;
  },

  /**
   * Get the initial size.
   *
   * @return {Object} the size
   */
  getSize: function() {
    return { width: this._attr.width, height: this._attr.height };
  },

  /**
   * Get the URL bits for the iframe.
   *
   * @return {Object} the iframe URL bits
   */
  getUrlBits: function() {
    return { name: 'activity', params: this._attr };
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.xfbml.comments
 * @layer xfbml
 * @requires fb.type fb.xfbml.iframewidget fb.auth
 */

/**
 * Implementation for fb:comments tag.
 *
 * @class FB.XFBML.Comments
 * @extends FB.XFBML.IframeWidget
 * @private
 */
FB.subclass('XFBML.Comments', 'XFBML.IframeWidget', null, {
  /**
   * Make the iframe visible only when we get the initial resize message.
   */
  _visibleAfter: 'resize',

  /**
   * Refresh the iframe on auth.statusChange events.
   */
  _refreshOnAuthChange: true,

  /**
   * Do initial attribute processing.
   */
  setupAndValidate: function() {
    // query parameters to the comments iframe
    var attr = {
      channel_url : this.getChannelUrl(),
      css         : this.getAttribute('css'),
      notify      : this.getAttribute('notify'),
      numposts    : this.getAttribute('num-posts', 10),
      quiet       : this.getAttribute('quiet'),
      reverse     : this.getAttribute('reverse'),
      simple      : this.getAttribute('simple'),
      title       : this.getAttribute('title', document.title),
      url         : this.getAttribute('url', document.URL),
      width       : this._getPxAttribute('width', 550),
      xid         : this.getAttribute('xid')
    };

    // default xid to current URL
    if (!attr.xid) {
      // We always want the URL minus the hash "#" also note the encoding here
      // and down below when the url is built. This is intentional, so the
      // string received by the server is url-encoded and thus valid.
      var index = document.URL.indexOf('#');
      if (index > 0) {
        attr.xid = encodeURIComponent(document.URL.substring(0, index));
      }
      else {
        attr.xid = encodeURIComponent(document.URL);
      }
    }
    this._attr = attr;
    return true;
  },

  /**
   * Setup event handlers.
   */
  oneTimeSetup: function() {
    this.subscribe('xd.addComment', FB.bind(this._handleCommentMsg, this));
  },

  /**
   * Get the initial size.
   *
   * @return {Object} the size
   */
  getSize: function() {
    return { width: this._attr.width, height: 200 };
  },

  /**
   * Get the URL bits for the iframe.
   *
   * @return {Object} the iframe URL bits
   */
  getUrlBits: function() {
    return { name: 'comments', params: this._attr };
  },

  /**
   * Invoked by the iframe when a comment is added. Note, this feature needs to
   * be enabled by specifying the notify=true attribute on the tag. This is in
   * order to improve performance by only requiring this overhead when a
   * developer explicitly said they want it.
   *
   * @param message {Object} the message received via XD
   */
  _handleCommentMsg: function(message) {
    //TODO (naitik) what should we be giving the developers here? is there a
    //              comment_id they can get?
    if (!this.isValid()) {
      return;
    }
    FB.Event.fire('comments.add', {
      post: message.post,
      user: message.user,
      widget: this
    });
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.xfbml.fan
 * @layer xfbml
 * @requires fb.type fb.xfbml.iframewidget
 */

/**
 * Implementation for fb:fan tag.
 *
 * @class FB.XFBML.Fan
 * @extends FB.XFBML.IframeWidget
 * @private
 */
FB.subclass('XFBML.Fan', 'XFBML.IframeWidget', null, {
  _visibleAfter: 'load',

  /**
   * Do initial attribute processing.
   */
  setupAndValidate: function() {
    this._attr = {
      api_key     : FB._apiKey,
      connections : this.getAttribute('connections', '10'),
      css         : this.getAttribute('css'),
      height      : this._getPxAttribute('height'),
      id          : this.getAttribute('profile-id'),
      logobar     : this._getBoolAttribute('logo-bar'),
      name        : this.getAttribute('name'),
      stream      : this._getBoolAttribute('stream', true),
      width       : this._getPxAttribute('width', 300)
    };

    // "id" or "name" is required
    if (!this._attr.id && !this._attr.name) {
      FB.log('<fb:fan> requires one of the "id" or "name" attributes.');
      return false;
    }

    var height = this._attr.height;
    if (!height) {
      if ((!this._attr.connections || this._attr.connections === '0') &&
          !this._attr.stream) {
        height = 65;
      } else if (!this._attr.connections || this._attr.connections === '0') {
        height = 375;
      } else if (!this._attr.stream) {
        height = 250;
      } else {
        height = 550;
      }
    }
    // add space for logobar
    if (this._attr.logobar) {
      height += 25;
    }

    this._attr.height = height;
    return true;
  },

  /**
   * Get the initial size.
   *
   * @return {Object} the size
   */
  getSize: function() {
    return { width: this._attr.width, height: this._attr.height };
  },

  /**
   * Get the URL bits for the iframe.
   *
   * @return {Object} the iframe URL bits
   */
  getUrlBits: function() {
    return { name: 'fan', params: this._attr };
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.xfbml.like
 * @layer xfbml
 * @requires fb.type fb.xfbml.edgewidget
 */

/**
 * Implementation for fb:like tag.
 *
 * @class FB.XFBML.Like
 * @extends FB.XFBML.EdgeWidget
 * @private
 */
FB.subclass('XFBML.Like', 'XFBML.EdgeWidget', null, {

  /**
   * Get the URL bits for the iframe.
   *
   * @return {Object} the iframe URL bits
   */
  getUrlBits: function() {
    return { name: 'like', params: this._attr };
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.xfbml.livestream
 * @layer xfbml
 * @requires fb.type fb.xfbml.iframewidget
 */

/**
 * Implementation for fb:live-stream tag.
 *
 * @class FB.XFBML.LiveStream
 * @extends FB.XFBML.IframeWidget
 * @private
 */
FB.subclass('XFBML.LiveStream', 'XFBML.IframeWidget', null, {
  _visibleAfter: 'load',

  /**
   * Do initial attribute processing.
   */
  setupAndValidate: function() {
    this._attr = {
      height                 : this._getPxAttribute('height', 500),
      hideFriendsTab         : this.getAttribute('hide-friends-tab'),
      redesigned             : this._getBoolAttribute('redesigned-stream'),
      width                  : this._getPxAttribute('width', 400),
      xid                    : this.getAttribute('xid', 'default'),
      always_post_to_friends : this._getBoolAttribute('always-post-to-friends',
                                                      false)
    };

    return true;
  },

  /**
   * Get the initial size.
   *
   * @return {Object} the size
   */
  getSize: function() {
    return { width: this._attr.width, height: this._attr.height };
  },

  /**
   * Get the URL bits for the iframe.
   *
   * @return {Object} the iframe URL bits
   */
  getUrlBits: function() {
    var name = this._attr.redesigned ? 'live_stream_box' : 'livefeed';
    return { name: name, params: this._attr };
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.xfbml.loginbutton
 * @layer xfbml
 * @requires fb.type
 *           fb.intl
 *           fb.xfbml.buttonelement
 *           fb.helper
 *           fb.auth
 */

/**
 * Implementation for fb:login-button tag.
 *
 * @class FB.XFBML.LoginButton
 * @extends  FB.XFBML.ButtonElement
 * @private
 */
FB.subclass('XFBML.LoginButton', 'XFBML.ButtonElement', null, {
  /**
   * Do initial attribute processing.
   *
   * @return {Boolean} true to continue processing, false to halt it
   */
  setupAndValidate: function() {
    this.autologoutlink = this._getBoolAttribute('auto-logout-link');
    this.onlogin = this.getAttribute('on-login');
    this.perms = this.getAttribute('perms');
    this.length = this._getAttributeFromList(
      'length',         // name
      'short',          // defaultValue
      ['long', 'short'] // allowed
    );
    this.iframe = this._getBoolAttribute('iframe');

    if (this.autologoutlink) {
      FB.Event.subscribe('auth.statusChange', FB.bind(this.process, this));
    }

    return true;
  },

  /**
   * Should return the button markup. The default behaviour is to return the
   * original innerHTML of the element.
   *
   * @return {String} the HTML markup for the button
   */
  getButtonMarkup: function() {
    var originalHTML = this.getOriginalHTML();
    if (originalHTML === '') {
      if (FB.getSession() && this.autologoutlink) {
        return FB.Intl.tx('cs:logout');
      } else {
        return this.length == 'short'
          ? FB.Intl.tx('cs:connect')
          : FB.Intl.tx('cs:connect-with-facebook');
      }
    } else {
      return originalHTML;
    }
  },

  /**
   * The ButtonElement base class will invoke this when the button is clicked.
   */
  onClick: function() {
    if (!FB.getSession() || !this.autologoutlink) {
      FB.login(FB.bind(this._authCallback, this), { perms: this.perms });
    } else {
      FB.logout(FB.bind(this._authCallback, this));
    }
  },

  /**
   * This will be invoked with the result of the FB.login() or FB.logout() to
   * pass the result to the developer specified callback if any.
   *
   * @param response {Object} the auth response object
   */
  _authCallback: function(response) {
    FB.Helper.invokeHandler(this.onlogin, this, [response]);
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.xfbml.name
 * @layer xfbml
 * @requires fb.type fb.xfbml  fb.dom fb.xfbml.element fb.data fb.helper
 */

/**
 * @class FB.XFBML.Name
 * @extends  FB.XFBML.Element
 * @private
 */
FB.subclass('XFBML.Name', 'XFBML.Element', null, {
  /**
   * Processes this tag.
   */
  process: function() {
    FB.copy(this, {
      _uid           : this.getAttribute('uid'),
      _firstnameonly : this._getBoolAttribute('first-name-only'),
      _lastnameonly  : this._getBoolAttribute('last-name-only'),
      _possessive    : this._getBoolAttribute('possessive'),
      _reflexive     : this._getBoolAttribute('reflexive'),
      _objective     : this._getBoolAttribute('objective'),
      _linked        : this._getBoolAttribute('linked', true),
      _subjectId     : this.getAttribute('subject-id')
    });

    if (!this._uid) {
      FB.log('"uid" is a required attribute for <fb:name>');
      this.fire('render');
      return;
    }

    var fields = [];
    if (this._firstnameonly) {
      fields.push('first_name');
    } else if (this._lastnameonly) {
      fields.push('last_name');
    } else {
      fields.push('name');
    }

    if (this._subjectId) {
      fields.push('sex');

      if (this._subjectId == FB.Helper.getLoggedInUser()) {
        this._reflexive = true;
      }
    }

    var data;
    // Wait for status to be known
    FB.Event.monitor('auth.statusChange', this.bind(function() {
      // Is Element still in DOM tree?
      if (!this.isValid()) {
        this.fire('render');
        return true; // Stop processing
      }

      if (FB._userStatus) {
        if (this._uid == 'loggedinuser') {
          this._uid = FB.Helper.getLoggedInUser();
        }

        if (FB.Helper.isUser(this._uid)) {
          data = FB.Data._selectByIndex(fields, 'user', 'uid', this._uid);
        } else {
          data = FB.Data._selectByIndex(['name', 'id'], 'profile', 'id',
                                        this._uid);
        }
        data.wait(this.bind(function(data) {
          if (this._uid) {
            if (this._subjectId == this._uid) {
              this._renderPronoun(data[0]);
            } else {
              this._renderOther(data[0]);
            }
          }
          this.fire('render');
        }));
      }
      return false;
    }));
  },

  /**
   * Given this name, figure out the proper (English) pronoun for it.
   */
  _renderPronoun: function(userInfo) {
    var
      word = '',
      objective = this._objective;
    if (this._subjectId) {
      objective = true;
      if (this._subjectId === this._uid) {
        this._reflexive = true;
      }
    }
    if (this._uid == FB.Connect.get_loggedInUser() &&
        this._getBoolAttribute('use-you', true)) {
      if (this._possessive) {
        if (this._reflexive) {
          word = 'your own';
        } else {
          word = 'your';
        }
      } else {
        if (this._reflexive) {
          word = 'yourself';
        } else {
          word = 'you';
        }
      }
    }
    else {
      switch (userInfo.sex) {
        case 'male':
          if (this._possessive) {
            word = this._reflexive ? 'his own' : 'his';
          } else {
            if (this._reflexive) {
              word = 'himself';
            } else if (objective) {
              word = 'him';
            } else {
              word = 'he';
            }
          }
          break;
        case 'female':
          if (this._possessive) {
            word = this._reflexive ? 'her own' : 'her';
          } else {
            if (this._reflexive) {
              word = 'herself';
            } else if (objective) {
              word = 'her';
            } else {
              word = 'she';
            }
          }
          break;
        default:
          if (this._getBoolAttribute('use-they', true)) {
            if (this._possessive) {
              if (this._reflexive) {
                word = 'their own';
              } else {
                word = 'their';
              }
            } else {
              if (this._reflexive) {
                word = 'themselves';
              } else if (objective) {
                word = 'them';
              } else {
                word = 'they';
              }
            }
          }
          else {
            if (this._possessive) {
              if (this._reflexive) {
                word = 'his/her own';
              } else {
                word = 'his/her';
              }
            } else {
              if (this._reflexive) {
                word = 'himself/herself';
              } else if (objective) {
                word = 'him/her';
              } else {
                word = 'he/she';
              }
            }
          }
          break;
      }
    }
    if (this._getBoolAttribute('capitalize', false)) {
      word = FB.Helper.upperCaseFirstChar(word);
    }
    this.dom.innerHTML = word;
  },

  /**
   * Handle rendering of the element, using the
   * metadata that came with it.
   */
  _renderOther: function(userInfo) {
    if (!userInfo) {
      return;
    }
    var
      name = '',
      html = '';
    if (this._uid == FB.Helper.getLoggedInUser() &&
        this._getBoolAttribute('use-you', true)) {
      if (this._reflexive) {
        if (this._possessive) {
          name = 'your own';
        } else {
          name = 'yourself';
        }
      } else {
        //  The possessive works really nicely this way!
        if (this._possessive) {
          name = 'your';
        } else {
          name = 'you';
        }
      }
    }
    else {
      //  FQLCantSee structures will show as null.
      if (null === userInfo.first_name) {
        userInfo.first_name = '';
      }
      if (null === userInfo.last_name) {
        userInfo.last_name = '';
      }
      if (this._firstnameonly) {
        name = userInfo.first_name;
      } else if (this._lastnameonly) {
        name = userInfo.last_name;
      }

      if (!name) {
        name = userInfo.name;
      }

      if (name !== '' && this._possessive) {
        name += '\'s';
      }
    }

    if (!name) {
      name = this.getAttribute('if-cant-see', 'Facebook User');
    }
    if (name) {
      if (this._getBoolAttribute('capitalize', false)) {
        name = FB.Helper.upperCaseFirstChar(name);
      }
      if (this._linked) {
        html = FB.Helper.getProfileLink(userInfo, name,
          this.getAttribute('href', null));
      } else {
        html = name;
      }
    }
    this.dom.innerHTML = html;
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.xfbml.profilepic
 * @layer xfbml
 * @requires fb.type fb.xfbml fb.string fb.dom fb.xfbml.element fb.data
 *           fb.helper
 */

/**
 * @class FB.XFBML.ProfilePic
 * @extends  FB.XFBML.Element
 * @private
 */
FB.subclass('XFBML.ProfilePic', 'XFBML.Element', null, {
  /**
   * Processes this tag.
   */
  process: function() {
    var
      size = this.getAttribute('size', 'thumb'),
      picFieldName = FB.XFBML.ProfilePic._sizeToPicFieldMap[size],
      width = this._getPxAttribute('width'),
      height = this._getPxAttribute('height'),
      style = this.dom.style,
      uid = this.getAttribute('uid');

    // Check if we need to add facebook logo image
    if (this._getBoolAttribute('facebook-logo')) {
      picFieldName += '_with_logo';
    }

    if (width) {
      width = width + 'px';
      style.width = width;
    }
    if (height) {
      height = height + 'px';
      style.height = height;
    }

    var renderFn = this.bind(function(result) {
      var
        userInfo = result ? result[0] : null,
        imgSrc = userInfo ? userInfo[picFieldName] : null;

      if (!imgSrc) {
        // Create default
        imgSrc = FB._domain.cdn + FB.XFBML.ProfilePic._defPicMap[picFieldName];
      }
      // Copy width, height style, and class name of fb:profile-pic down to the
      // image element we create
      var
        styleValue = (
          (width ? 'width:' + width + ';' : '') +
          (height ? 'height:' + width + ';' : '')
        ),
        html = FB.String.format(
          '<img src="{0}" alt="{1}" title="{1}" style="{2}" class="{3}" />',
          imgSrc,
          userInfo ? userInfo.name : '',
          styleValue,
          this.dom.className
        );

      if (this._getBoolAttribute('linked', true)) {
        html = FB.Helper.getProfileLink(
          userInfo,
          html,
          this.getAttribute('href', null)
        );
      }
      this.dom.innerHTML = html;
      FB.Dom.addCss(this.dom, 'fb_profile_pic_rendered');
      this.fire('render');
    });

    // Wait for status to be known
    FB.Event.monitor('auth.statusChange', this.bind(function() {
      //Is Element still in DOM tree
      if (!this.isValid()) {
        this.fire('render');
        return true; // Stop processing
      }

      if (this.getAttribute('uid', null) == 'loggedinuser') {
        uid = FB.Helper.getLoggedInUser();
      }

      // Is status known?
      if (FB._userStatus && uid) {
        // Get data
        // Use profile if uid is a user, but a page
        FB.Data._selectByIndex(
          ['name', picFieldName],
          FB.Helper.isUser(uid) ? 'user' : 'profile',
          FB.Helper.isUser(uid) ? 'uid' : 'id',
          uid
        ).wait(renderFn);
      } else {
        // Render default
        renderFn();
      }
    }));
  }
});

FB.provide('XFBML.ProfilePic', {
  /**
   * Maps field type to placeholder/silhouette image.
   *
   * This dynamic data is replaced with rsrc.php backed URLs by Haste.
   */
  _defPicMap: {
    pic                  : 'pics/s_silhouette.jpg',
    pic_big              : 'pics/d_silhouette.gif',
    pic_big_with_logo    : 'pics/d_silhouette_logo.gif',
    pic_small            : 'pics/t_silhouette.jpg',
    pic_small_with_logo  : 'pics/t_silhouette_logo.gif',
    pic_square           : 'pics/q_silhouette.gif',
    pic_square_with_logo : 'pics/q_silhouette_logo.gif',
    pic_with_logo        : 'pics/s_silhouette_logo.gif'
  },

  /**
   * Maps user specified attribute for size to a field type.
   */
  _sizeToPicFieldMap: {
    n      : 'pic_big',
    normal : 'pic_big',
    q      : 'pic_square',
    s      : 'pic',
    small  : 'pic',
    square : 'pic_square',
    t      : 'pic_small',
    thumb  : 'pic_small'
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.xfbml.recommendations
 * @layer xfbml
 * @requires fb.type fb.xfbml.iframewidget
 */

/**
 * Implementation for fb:recommendations tag.
 *
 * @class FB.XFBML.Recommendations
 * @extends FB.XFBML.IframeWidget
 * @private
 */
FB.subclass('XFBML.Recommendations', 'XFBML.IframeWidget', null, {
  _visibleAfter: 'load',

  /**
   * Refresh the iframe on auth.statusChange events.
   */
  _refreshOnAuthChange: true,


  /**
   * Do initial attribute processing.
   */
  setupAndValidate: function() {
    this._attr = {
      border_color : this.getAttribute('border-color'),
      colorscheme  : this.getAttribute('color-scheme'),
      font         : this.getAttribute('font'),
      header       : this._getBoolAttribute('header'),
      height       : this._getPxAttribute('height', 300),
      site         : this.getAttribute('site', location.hostname),
      width        : this._getPxAttribute('width', 300)
    };

    return true;
  },

  /**
   * Get the initial size.
   *
   * @return {Object} the size
   */
  getSize: function() {
    return { width: this._attr.width, height: this._attr.height };
  },

  /**
   * Get the URL bits for the iframe.
   *
   * @return {Object} the iframe URL bits
   */
  getUrlBits: function() {
    return { name: 'recommendations', params: this._attr };
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.xfbml.serverfbml
 * @layer xfbml
 * @requires fb.type fb.content fb.xfbml.iframewidget fb.auth
 */

/**
 * Implementation for fb:serverfbml tag.
 *
 * @class FB.XFBML.ServerFbml
 * @extends FB.XFBML.IframeWidget
 * @private
 */
FB.subclass('XFBML.ServerFbml', 'XFBML.IframeWidget', null, {
  /**
   * Make the iframe visible only when we get the initial resize message.
   */
  _visibleAfter: 'resize',

  /**
   * Do initial attribute processing.
   */
  setupAndValidate: function() {
    // query parameters to the comments iframe
    this._attr = {
      channel_url : this.getChannelUrl(),
      fbml        : this.getAttribute('fbml'),
      width       : this._getPxAttribute('width')
    };

    // fbml may also be specified as a child script tag
    if (!this._attr.fbml) {
      var child = this.dom.getElementsByTagName('script')[0];
      if (child && child.type === 'text/fbml') {
        this._attr.fbml = child.innerHTML;
      }
    }

    // if still no fbml, error
    if (!this._attr.fbml) {
      FB.log('<fb:serverfbml> requires the "fbml" attribute.');
      return false;
    }

    return true;
  },

  /**
   * Get the initial size.
   *
   * @return {Object} the size
   */
  getSize: function() {
    return { width: this._attr.width, height: this._attr.height };
  },

  /**
   * Get the URL bits for the iframe.
   *
   * @return {Object} the iframe URL bits
   */
  getUrlBits: function() {
    return { name: 'serverfbml', params: this._attr };
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.xfbml.sharebutton
 * @layer xfbml
 * @requires fb.type
 *           fb.intl
 *           fb.xfbml
 *           fb.string
 *           fb.dom
 *           fb.xfbml.element
 *           fb.ui
 *           fb.data
 *           fb.helper
 *           fb.css.sharebutton
 */

/**
 * Implementation for fb:share-button tag.
 * @class FB.XFBML.ShareButton
 * @extends  FB.XFBML.Element
 * @private
 */
FB.subclass('XFBML.ShareButton', 'XFBML.Element', null, {
  /**
   * Processes this tag.
   */
  process: function() {
    this._href = this.getAttribute('href', window.location.href);

    //TODO: When we turn sharepro on, replace icon_link with button_count
    this._type = this.getAttribute('type', 'icon_link');

    this._renderButton(true);
  },

  /**
   * Render's the button.
   *
   * @access private
   * @param skipRenderEvent {Boolean} indicate if firing of the render event
   * should be skipped. This is useful because the _renderButton() function may
   * recursively call itself to do the final render, which is when we want to
   * fire the render event.
   */
  _renderButton: function(skipRenderEvent) {
    if (!this.isValid()) {
      this.fire('render');
      return;
    }

    var
      contentStr = '',
      post = '',
      pre = '',
      classStr = '',
      share = FB.Intl.tx('sh:share-button'),
      wrapperClass = '';

    switch (this._type) {
    case 'icon':
    case 'icon_link':
      classStr = 'fb_button_simple';
      contentStr = (
        '<span class="fb_button_text">' +
          (this._type == 'icon_link' ? share : '&nbsp;') +
        '</span>'
      );
      skipRenderEvent = false;
      break;
    case 'link':
      contentStr = FB.Intl.tx('cs:share-on-facebook');
      skipRenderEvent = false;
      break;
    case 'button':
      contentStr = '<span class="fb_button_text">' + share +  '</span>';
      classStr = 'fb_button fb_button_small';
      skipRenderEvent = false;
      break;
    case 'button_count':
      contentStr = '<span class="fb_button_text">' + share +  '</span>';
      post = (
        '<span class="fb_share_count_nub_right">&nbsp;</span>' +
        '<span class="fb_share_count fb_share_count_right">'+
          this._getCounterMarkup() +
        '</span>'
      );
      classStr = 'fb_button fb_button_small';
      break;
    default:
      // box count
      contentStr = '<span class="fb_button_text">' + share +  '</span>';
      pre = (
        '<span class="fb_share_count_nub_top">&nbsp;</span>' +
        '<span class="fb_share_count fb_share_count_top">' +
          this._getCounterMarkup() +
        '</span>'
      );
      classStr = 'fb_button fb_button_small';
      wrapperClass = 'fb_share_count_wrapper';
    }
    this.dom.innerHTML = FB.String.format(
      '<span class="{0}">{4}<a href="{1}" class="{2}" ' +
      'onclick=\'FB.ui({6});return false;\'' +
      'target="_blank">{3}</a>{5}</span>',
      wrapperClass,
      this._href,
      classStr,
      contentStr,
      pre,
      post,
      FB.JSON.stringify({ method: 'stream.share', u: this._href })
    );

    if (!skipRenderEvent) {
      this.fire('render');
    }
  },

  _getCounterMarkup: function() {
    if (!this._count) {
      this._count = FB.Data._selectByIndex(
        ['total_count'],
        'link_stat',
        'url',
        this._href
      );
    }

    if (this._count.value !== undefined) {
      if (this._count.value.length > 0) {
        var c = this._count.value[0].total_count;
        if (c > 3) {
          var prettyCount = c >= 10000000 ? Math.round(c/1000000) + 'M' :
                            (c >= 10000 ? Math.round(c/1000) + 'K' : c);
          return (
            '<span class="fb_share_count_inner">' +
              prettyCount +
            '</span>'
          );
        }
      }
    } else {
      this._count.wait(FB.bind(this._renderButton, this, false));
    }

    return '';
  }
});
/**
 * Copyright Facebook Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @provides fb.intl.en_US
 * @requires fb.prelude
 */

/**
 * Provides the en_US version of the required strings for use by those choosing
 * to host the library themselves rather than use the one we serve.
 *
 * TODO (naitik) This is a temporary solution. In the long run, we should
 * provide the ability to generate this file for any locale using the API.
 *
 * Note: This file is not included in the version of the library served by
 * facebook.
 *
 * @class FB.Intl
 * @static
 * @access public
 */
FB.provide('FB.Intl', {
  _stringTable: {
    'sh:loading': 'Loading...',
    'sh:share-button': 'Share',
    'cs:share-on-facebook': 'Share on Facebook',
    'cs:connect': 'Connect',
    'cs:connect-with-facebook': 'Connect with Facebook',
    'cs:logout': 'Facebook Logout',
    'cs:bookmark-on-facebook': 'Bookmark on Facebook',
    'cs:add-profile-tab-on-facebook': 'Add Profile Tab on Facebook'
  }
});
FB.Dom.addCssRules("\/**\n * Copyright Facebook Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n * Styles for the client side Dialogs.\n *\n * @author naitik\n * @provides fb.css.dialog\n * @requires fb.css.base fb.dom\n *\/\n\n.fb_dialog {\n  position: absolute;\n  top: -10000px;\n  z-index: 10001;\n}\n.fb_dialog_advanced {\n  background: rgba(82, 82, 82, 0.7);\n  padding: 10px;\n  -moz-border-radius: 8px;\n  -webkit-border-radius: 8px;\n}\n.fb_dialog_content {\n  background: #ffffff;\n  color: #333333;\n}\n.fb_dialog_close_icon {\n  background: url(http:\/\/static.ak.fbcdn.net\/images\/fbconnect\/connect_icon_remove.gif) no-repeat scroll 3px 0 transparent;\n  cursor: pointer;\n  display: block;\n  height: 16px;\n  position: absolute;\n  right: 19px;\n  top: 18px;\n  width: 14px;\n  \/* this rule applies to all IE browsers only because using the \\9 hack *\/\n  top: 10px\\9;\n  right: 7px\\9;\n}\n.fb_dialog_close_icon:hover {\n  background: url(http:\/\/static.ak.fbcdn.net\/images\/fbconnect\/connect_icon_remove.gif) no-repeat scroll -10px 0 transparent;\n}\n.fb_dialog_loader {\n  background-color: #f2f2f2;\n  border: 1px solid #606060;\n  font-size: 24px;\n  padding: 20px;\n}\n#fb_dialog_loader_close {\n  background: url(http:\/\/static.ak.fbcdn.net\/images\/sidebar\/close-off.gif) no-repeat scroll left top transparent;\n  cursor: pointer;\n  display: -moz-inline-block;\n  display: inline-block;\n  height: 9px;\n  margin-left: 20px;\n  position: relative;\n  vertical-align: middle;\n  width: 9px;\n}\n#fb_dialog_loader_close:hover {\n  background-image: url(http:\/\/static.ak.fbcdn.net\/images\/gigaboxx\/clear_search.png);\n}\n\n\n\/**\n * Rounded corners and borders with alpha transparency for older browsers.\n *\/\n.fb_dialog_top_left,\n.fb_dialog_top_right,\n.fb_dialog_bottom_left,\n.fb_dialog_bottom_right {\n  height: 10px;\n  width: 10px;\n  overflow: hidden;\n  position: absolute;\n}\n\/* @noflip *\/\n.fb_dialog_top_left {\n  background: url(http:\/\/static.ak.fbcdn.net\/imgs\/pop-dialog-sprite.png) no-repeat 0 0;\n  left: -10px;\n  top: -10px;\n}\n\/* @noflip *\/\n.fb_dialog_top_right {\n  background: url(http:\/\/static.ak.fbcdn.net\/imgs\/pop-dialog-sprite.png) no-repeat 0 -10px;\n  right: -10px;\n  top: -10px;\n}\n\/* @noflip *\/\n.fb_dialog_bottom_left {\n  background: url(http:\/\/static.ak.fbcdn.net\/imgs\/pop-dialog-sprite.png) no-repeat 0 -20px;\n  bottom: -10px;\n  left: -10px;\n}\n\/* @noflip *\/\n.fb_dialog_bottom_right {\n  background: url(http:\/\/static.ak.fbcdn.net\/imgs\/pop-dialog-sprite.png) no-repeat 0 -30px;\n  right: -10px;\n  bottom: -10px;\n}\n.fb_dialog_vert_left,\n.fb_dialog_vert_right,\n.fb_dialog_horiz_top,\n.fb_dialog_horiz_bottom {\n  position: absolute;\n  background: #525252;\n  filter: alpha(opacity=70);\n  opacity: .7;\n}\n.fb_dialog_vert_left,\n.fb_dialog_vert_right {\n  width: 10px;\n  height: 100%;\n}\n.fb_dialog_vert_left {\n  margin-left: -10px;\n}\n.fb_dialog_vert_right {\n  right: 0;\n  margin-right: -10px;\n}\n.fb_dialog_horiz_top,\n.fb_dialog_horiz_bottom {\n  width: 100%;\n  height: 10px;\n}\n.fb_dialog_horiz_top {\n  margin-top: -10px;\n}\n.fb_dialog_horiz_bottom {\n  bottom: 0;\n  margin-bottom: -10px;\n}\n\n\/* dialogs used for iframe need this to prevent potential whitespace from\n * showing because iframes are inline elements and not block level elements. *\/\n.fb_dialog_iframe {\n  line-height: 0;\n}\n\/**\n * Copyright Facebook Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @author blaise\n * @provides fb.css.button\n * @layer xfbml\n *\/\n\n\/**\n * simple buttons are very completely separate from the pretty buttons below.\n *\/\n.fb_button_simple,\n.fb_button_simple_rtl {\n  background-image: url(http:\/\/static.ak.fbcdn.net\/images\/connect_favicon.png);\n  background-repeat: no-repeat;\n  cursor: pointer;\n  outline: none;\n  text-decoration: none;\n}\n.fb_button_simple_rtl {\n background-position: right 0px;\n}\n\n.fb_button_simple .fb_button_text {\n  margin: 0 0 0px 20px;\n  padding-bottom: 1px;\n}\n\n.fb_button_simple_rtl .fb_button_text {\n  margin: 0px 10px 0px 0px;\n}\n\na.fb_button_simple:hover .fb_button_text,\na.fb_button_simple_rtl:hover .fb_button_text,\n.fb_button_simple:hover .fb_button_text,\n.fb_button_simple_rtl:hover .fb_button_text  {\n  text-decoration: underline;\n}\n\n\n\/**\n * these are the new style pretty buttons with various size options\n *\/\n.fb_button,\n.fb_button_rtl {\n  background: #29447e url(http:\/\/static.ak.fbcdn.net\/images\/connect_sprite.png);\n  background-repeat: no-repeat;\n  cursor: pointer;\n  display: inline-block;\n  padding: 0px 0px 0px 1px;\n  text-decoration: none;\n  outline: none;\n}\n\n.fb_button .fb_button_text,\n.fb_button_rtl .fb_button_text {\n  background: #5f78ab url(http:\/\/static.ak.fbcdn.net\/images\/connect_sprite.png);\n  border-top: solid 1px #879ac0;\n  border-bottom: solid 1px #1a356e;\n  color: white;\n  display: block;\n  font-family: \"lucida grande\",tahoma,verdana,arial,sans-serif;\n  font-weight: bold;\n  padding: 2px 6px 3px 6px;\n  margin: 1px 1px 0px 21px;\n  text-shadow: none;\n}\n\n\na.fb_button,\na.fb_button_rtl,\n.fb_button,\n.fb_button_rtl {\n  text-decoration: none;\n}\n\na.fb_button:active .fb_button_text,\na.fb_button_rtl:active .fb_button_text,\n.fb_button:active .fb_button_text,\n.fb_button_rtl:active .fb_button_text {\n  border-bottom: solid 1px #29447e;\n  border-top: solid 1px #45619d;\n  background: #4f6aa3;\n  text-shadow: none;\n}\n\n\n.fb_button_xlarge,\n.fb_button_xlarge_rtl {\n  background-position: left -60px;\n  font-size: 24px;\n  line-height: 30px;\n}\n.fb_button_xlarge .fb_button_text {\n  padding: 3px 8px 3px 12px;\n  margin-left: 38px;\n}\na.fb_button_xlarge:active {\n  background-position: left -99px;\n}\n.fb_button_xlarge_rtl {\n  background-position: right -268px;\n}\n.fb_button_xlarge_rtl .fb_button_text {\n  padding: 3px 8px 3px 12px;\n  margin-right: 39px;\n}\na.fb_button_xlarge_rtl:active {\n  background-position: right -307px;\n}\n\n.fb_button_large,\n.fb_button_large_rtl {\n  background-position: left -138px;\n  font-size: 13px;\n  line-height: 16px;\n}\n.fb_button_large .fb_button_text {\n  margin-left: 24px;\n  padding: 2px 6px 4px 6px;\n}\na.fb_button_large:active {\n  background-position: left -163px;\n}\n.fb_button_large_rtl {\n  background-position: right -346px;\n}\n.fb_button_large_rtl .fb_button_text {\n  margin-right: 25px;\n}\na.fb_button_large_rtl:active {\n  background-position: right -371px;\n}\n\n.fb_button_medium,\n.fb_button_medium_rtl  {\n  background-position: left -188px;\n  font-size: 11px;\n  line-height: 14px;\n}\na.fb_button_medium:active  {\n  background-position: left -210px;\n}\n\n.fb_button_medium_rtl  {\n  background-position: right -396px;\n}\n.fb_button_text_rtl,\n.fb_button_medium_rtl .fb_button_text {\n  padding: 2px 6px 3px 6px;\n  margin-right: 22px;\n}\na.fb_button_medium_rtl:active  {\n  background-position: right -418px;\n}\n\n.fb_button_small,\n.fb_button_small_rtl {\n  background-position: left -232px;\n  font-size: 10px;\n  line-height: 10px;\n}\n.fb_button_small .fb_button_text {\n  padding: 2px 6px 3px;\n  margin-left: 17px;\n}\na.fb_button_small:active,\n.fb_button_small:active {\n  background-position: left -250px;\n}\n\n.fb_button_small_rtl {\n  background-position: right -440px;\n}\n.fb_button_small_rtl .fb_button_text {\n  padding: 2px 6px;\n  margin-right: 18px;\n}\na.fb_button_small_rtl:active {\n  background-position: right -458px;\n}\n\/**\n * Copyright Facebook Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @author arunv\n * @provides fb.css.sharebutton\n * @layer xfbml\n * @requires fb.css.button\n *\/\n.fb_share_count_wrapper {\n  position: relative;\n  float: left;\n}\n\n.fb_share_count {\n  background: #b0b9ec none repeat scroll 0 0;\n  color: #333333;\n  font-family: \"lucida grande\", tahoma, verdana, arial, sans-serif;\n  text-align: center;\n}\n\n.fb_share_count_inner {\n  background: #e8ebf2;\n  display: block;\n}\n\n.fb_share_count_right {\n  margin-left: -1px;\n  display: inline-block;\n}\n\n.fb_share_count_right .fb_share_count_inner {\n  border-top: solid 1px #e8ebf2;\n  border-bottom: solid 1px #b0b9ec;\n  margin: 1px 1px 0px 1px;\n  font-size: 10px;\n  line-height: 10px;\n  padding: 2px 6px 3px;\n  font-weight: bold;\n}\n\n.fb_share_count_top {\n  display: block;\n  letter-spacing: -1px;\n  line-height: 34px;\n  margin-bottom: 7px;\n  font-size: 22px;\n  border: solid 1px #b0b9ec;\n}\n\n.fb_share_count_nub_top {\n  border: none;\n  display: block;\n  position: absolute;\n  left: 7px;\n  top: 35px;\n  margin: 0;\n  padding: 0;\n  width: 6px;\n  height: 7px;\n  background-repeat: no-repeat;\n  background-image: url(http:\/\/static.ak.fbcdn.net\/images\/sharepro\/sp_h_nub.png);\n}\n\n.fb_share_count_nub_right {\n  border: none;\n  display: inline-block;\n  padding: 0;\n  width: 5px;\n  height: 10px;\n  background-repeat: no-repeat;\n  background-image: url(http:\/\/static.ak.fbcdn.net\/images\/sharepro\/sp_v_nub.png);\n  vertical-align: top;\n  background-position:right 5px;\n  z-index: 10;\n  left: 2px;\n  margin: 0px 2px 0px 0px;\n  position: relative;\n}\n\n.fb_share_no_count {\n  display: none;\n}\n\n.fb_share_size_Small .fb_share_count_right .fb_share_count_inner {\n  font-size: 10px;\n}\n\n.fb_share_size_Medium .fb_share_count_right .fb_share_count_inner {\n  font-size: 11px;\n  padding: 2px 6px 3px;\n  letter-spacing: -1px;\n  line-height: 14px;\n}\n\n.fb_share_size_Large .fb_share_count_right .fb_share_count_inner {\n  font-size: 13px;\n  line-height: 16px;\n  padding: 2px 6px 4px;\n  font-weight: normal;\n  letter-spacing: -1px;\n}\n\/**\n * Copyright Facebook Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @author naitik\n * @provides fb.css.base\n *\/\n\n.fb_hidden {\n  position: absolute;\n  top: -10000px;\n  z-index: 10001;\n}\n\n.fb_reset {\n  background: none;\n  border-spacing: 0;\n  border: 0px;\n  color: #000;\n  cursor: auto;\n  direction: ltr;\n  font-family: \"lucida grande\", tahoma, verdana, arial, sans-serif;\n  font-size: 11px;\n  font-style: normal;\n  font-variant: normal;\n  font-weight: normal;\n  letter-spacing: normal;\n  line-height: 1;\n  margin: 0;\n  overflow: visible;\n  padding: 0;\n  text-align: left;\n  text-decoration: none;\n  text-indent: 0;\n  text-shadow: none;\n  text-transform: none;\n  visibility: visible;\n  white-space: normal;\n  word-spacing: normal;\n}\n\n.fb_link img {\n  border: none;\n}\n\/**\n * Copyright Facebook Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @author naitik\n * @provides fb.css.iframewidget\n * @layer xfbml\n *\/\n.fb_iframe_widget {\n  position: relative;\n  display: -moz-inline-block; \/* ff2 *\/\n  display: inline-block;\n}\n.fb_iframe_widget iframe {\n  \/* this is necessary for IE. without it, once hidden, it wont become visible\n   * again *\/\n  position: relative;\n  \/* this is to remove the bottom margin appearing on the iframe widgets *\/\n  vertical-align: text-bottom;\n}\n\n.fb_iframe_widget span {\n  \/* this is necessary for IE as well. without it, the content of the iframe would be\n   * totally off when resizing the parent window.\n   * probably related to this bug http:\/\/friendlybit.com\/css\/ie6-resize-bug\/\n   *\/\n   position: relative;\n}\n\n.fb_hide_iframes iframe {\n  position: relative;\n  left: -10000px;\n}\n.fb_iframe_widget_loader {\n  position: relative;\n  display: inline-block;\n}\n.fb_iframe_widget_loader iframe {\n  min-height: 32px;\n  z-index: 2;\n  zoom: 1;\n}\n.fb_iframe_widget_loader .FB_Loader {\n  background: url(http:\/\/static.ak.fbcdn.net\/images\/loaders\/indicator_blue_large.gif) no-repeat;\n  height: 32px;\n  width: 32px;\n  margin-left: -16px;\n  position: absolute;\n  left: 50%;\n  z-index: 4;\n}\n", ["pkg"])
------------qTBjXnmaI6qvT5AepQBBtZ
Content-Disposition: inline; filename=all.js
Content-Type: application/x-javascript; charset=utf-8; name=all.js
Content-Location: http://connect.facebook.net/en_US/all.js
Content-Transfer-Encoding: Base64

LyoxMzY0MzYyMzY5LDE3MTg4MTI1MCxKSVQgQ29uc3RydWN0aW9uOiB2NzY3NDY4
LGVuX1VTKi8KCi8qKgogKiBDb3B5cmlnaHQgRmFjZWJvb2sgSW5jLgogKgogKiBM
aWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wCiAq
IGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKi8K
dHJ5IHt3aW5kb3cuRkIgfHwgKGZ1bmN0aW9uKHdpbmRvdykgewp2YXIgc2VsZiA9
IHdpbmRvdywgZG9jdW1lbnQgPSB3aW5kb3cuZG9jdW1lbnQ7CnZhciBzZXRUaW1l
b3V0ID0gd2luZG93LnNldFRpbWVvdXQsIHNldEludGVydmFsID0gd2luZG93LnNl
dEludGVydmFsO3ZhciBfX0RFVl9fID0gMDsKZnVuY3Rpb24gZW1wdHlGdW5jdGlv
bigpIHt9OwoKdmFyIHJlcXVpcmUsX19kOyhmdW5jdGlvbihhKXt2YXIgYj17fSxj
PXt9LGQ9WydnbG9iYWwnLCdyZXF1aXJlJywncmVxdWlyZUR5bmFtaWMnLCdyZXF1
aXJlTGF6eScsJ21vZHVsZScsJ2V4cG9ydHMnXTtyZXF1aXJlPWZ1bmN0aW9uKGUs
Zil7aWYoYy5oYXNPd25Qcm9wZXJ0eShlKSlyZXR1cm4gY1tlXTtpZighYi5oYXNP
d25Qcm9wZXJ0eShlKSl7aWYoZilyZXR1cm4gbnVsbDt0aHJvdyBuZXcgRXJyb3Io
J01vZHVsZSAnK2UrJyBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO312YXIgZz1iW2Vd
LGg9Zy5kZXBzLGk9aC5sZW5ndGgsaixrPVtdO2Zvcih2YXIgbD0wO2w8aTtsKysp
e3N3aXRjaChoW2xdKXtjYXNlICdtb2R1bGUnOmo9ZzticmVhaztjYXNlICdleHBv
cnRzJzpqPWcuZXhwb3J0czticmVhaztjYXNlICdnbG9iYWwnOmo9YTticmVhaztj
YXNlICdyZXF1aXJlJzpqPXJlcXVpcmU7YnJlYWs7Y2FzZSAncmVxdWlyZUR5bmFt
aWMnOmo9cmVxdWlyZTticmVhaztjYXNlICdyZXF1aXJlTGF6eSc6aj1udWxsO2Jy
ZWFrO2RlZmF1bHQ6aj1yZXF1aXJlKGhbbF0pO31rLnB1c2goaik7fWcuZmFjdG9y
eS5hcHBseShhLGspO2NbZV09Zy5leHBvcnRzO3JldHVybiBnLmV4cG9ydHM7fTtf
X2Q9ZnVuY3Rpb24oZSxmLGcsaCl7c3dpdGNoKHR5cGVvZiBnKXtjYXNlICdmdW5j
dGlvbic6YltlXT17ZmFjdG9yeTpnLGRlcHM6ZC5jb25jYXQoZiksZXhwb3J0czp7
fX07aWYoaD09PTMpcmVxdWlyZShlKTticmVhaztjYXNlICdvYmplY3QnOmNbZV09
ZzticmVhaztkZWZhdWx0OnRocm93IG5ldyBUeXBlRXJyb3IoJ1dyb25nIHR5cGUg
Zm9yIGZhY3Rvcnkgb2JqZWN0Jyk7fX07fSkodGhpcyk7CnZhciBFUzUgPSBmdW5j
dGlvbigpewpfX2QoIkVTNUFycmF5UHJvdG90eXBlIixbXSxmdW5jdGlvbihhLGIs
YyxkLGUsZil7dmFyIGc9e307Zy5tYXA9ZnVuY3Rpb24oaCxpKXtpZih0eXBlb2Yg
aCE9J2Z1bmN0aW9uJyl0aHJvdyBuZXcgVHlwZUVycm9yKCk7dmFyIGosaz10aGlz
Lmxlbmd0aCxsPW5ldyBBcnJheShrKTtmb3Ioaj0wO2o8azsrK2opaWYoaiBpbiB0
aGlzKWxbal09aC5jYWxsKGksdGhpc1tqXSxqLHRoaXMpO3JldHVybiBsO307Zy5m
b3JFYWNoPWZ1bmN0aW9uKGgsaSl7Zy5tYXAuY2FsbCh0aGlzLGgsaSk7fTtnLmZp
bHRlcj1mdW5jdGlvbihoLGkpe2lmKHR5cGVvZiBoIT0nZnVuY3Rpb24nKXRocm93
IG5ldyBUeXBlRXJyb3IoKTt2YXIgaixrLGw9dGhpcy5sZW5ndGgsbT1bXTtmb3Io
aj0wO2o8bDsrK2opaWYoaiBpbiB0aGlzKXtrPXRoaXNbal07aWYoaC5jYWxsKGks
ayxqLHRoaXMpKW0ucHVzaChrKTt9cmV0dXJuIG07fTtnLmV2ZXJ5PWZ1bmN0aW9u
KGgsaSl7aWYodHlwZW9mIGghPSdmdW5jdGlvbicpdGhyb3cgbmV3IFR5cGVFcnJv
cigpO3ZhciBqPW5ldyBPYmplY3QodGhpcyksaz1qLmxlbmd0aDtmb3IodmFyIGw9
MDtsPGs7bCsrKWlmKGwgaW4gailpZighaC5jYWxsKGksaltsXSxsLGopKXJldHVy
biBmYWxzZTtyZXR1cm4gdHJ1ZTt9O2cuc29tZT1mdW5jdGlvbihoLGkpe2lmKHR5
cGVvZiBoIT0nZnVuY3Rpb24nKXRocm93IG5ldyBUeXBlRXJyb3IoKTt2YXIgaj1u
ZXcgT2JqZWN0KHRoaXMpLGs9ai5sZW5ndGg7Zm9yKHZhciBsPTA7bDxrO2wrKylp
ZihsIGluIGopaWYoaC5jYWxsKGksaltsXSxsLGopKXJldHVybiB0cnVlO3JldHVy
biBmYWxzZTt9O2cuaW5kZXhPZj1mdW5jdGlvbihoLGkpe3ZhciBqPXRoaXMubGVu
Z3RoO2l8PTA7aWYoaTwwKWkrPWo7Zm9yKDtpPGo7aSsrKWlmKGkgaW4gdGhpcyYm
dGhpc1tpXT09PWgpcmV0dXJuIGk7cmV0dXJuIC0xO307ZS5leHBvcnRzPWc7fSk7
Cl9fZCgiRVM1RnVuY3Rpb25Qcm90b3R5cGUiLFtdLGZ1bmN0aW9uKGEsYixjLGQs
ZSxmKXt2YXIgZz17fTtnLmJpbmQ9ZnVuY3Rpb24oaCl7aWYodHlwZW9mIHRoaXMh
PSdmdW5jdGlvbicpdGhyb3cgbmV3IFR5cGVFcnJvcignQmluZCBtdXN0IGJlIGNh
bGxlZCBvbiBhIGZ1bmN0aW9uJyk7dmFyIGk9dGhpcyxqPUFycmF5LnByb3RvdHlw
ZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKTtmdW5jdGlvbiBrKCl7cmV0dXJuIGku
YXBwbHkoaCxqLmNvbmNhdChBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1
bWVudHMpKSk7fWsuZGlzcGxheU5hbWU9J2JvdW5kOicrKGkuZGlzcGxheU5hbWV8
fGkubmFtZXx8Jyg/KScpO2sudG9TdHJpbmc9ZnVuY3Rpb24gbCgpe3JldHVybiAn
Ym91bmQ6ICcraTt9O3JldHVybiBrO307ZS5leHBvcnRzPWc7fSk7Cl9fZCgiRVM1
U3RyaW5nUHJvdG90eXBlIixbXSxmdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9
e307Zy50cmltPWZ1bmN0aW9uKCl7aWYodGhpcz09bnVsbCl0aHJvdyBuZXcgVHlw
ZUVycm9yKCdTdHJpbmcucHJvdG90eXBlLnRyaW0gY2FsbGVkIG9uIG51bGwgb3Ig
dW5kZWZpbmVkJyk7cmV0dXJuIFN0cmluZy5wcm90b3R5cGUucmVwbGFjZS5jYWxs
KHRoaXMsL15ccyt8XHMrJC9nLCcnKTt9O2UuZXhwb3J0cz1nO30pOwpfX2QoIkVT
NUFycmF5IixbXSxmdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9e307Zy5pc0Fy
cmF5PWZ1bmN0aW9uKGgpe3JldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5n
LmNhbGwoaCk9PSdbb2JqZWN0IEFycmF5XSc7fTtlLmV4cG9ydHM9Zzt9KTsKX19k
KCJFUzVPYmplY3QiLFtdLGZ1bmN0aW9uKGEsYixjLGQsZSxmKXt2YXIgZz17fTtn
LmNyZWF0ZT1mdW5jdGlvbihoKXt2YXIgaT10eXBlb2YgaDtpZihpIT0nb2JqZWN0
JyYmaSE9J2Z1bmN0aW9uJyl0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QgcHJv
dG90eXBlIG1heSBvbmx5IGJlIGEgT2JqZWN0IG9yIG51bGwnKTt2YXIgaj1uZXcg
RnVuY3Rpb24oKTtqLnByb3RvdHlwZT1oO3JldHVybiBuZXcgaigpO307Zy5rZXlz
PWZ1bmN0aW9uKGgpe3ZhciBpPXR5cGVvZiBoO2lmKGkhPSdvYmplY3QnJiZpIT0n
ZnVuY3Rpb24nfHxoPT09bnVsbCl0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3Qu
a2V5cyBjYWxsZWQgb24gbm9uLW9iamVjdCcpO3ZhciBqPVtdO2Zvcih2YXIgayBp
biBoKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChoLGsp
KWoucHVzaChrKTt2YXIgbD0hKHt0b1N0cmluZzp0cnVlfSkucHJvcGVydHlJc0Vu
dW1lcmFibGUoJ3RvU3RyaW5nJyksbT1bJ3RvU3RyaW5nJywndG9Mb2NhbGVTdHJp
bmcnLCd2YWx1ZU9mJywnaGFzT3duUHJvcGVydHknLCdpc1Byb3RvdHlwZU9mJywn
cHJvdG90eXBlSXNFbnVtZXJhYmxlJywnY29uc3RydWN0b3InXTtpZihsKWZvcih2
YXIgbj0wO248bS5sZW5ndGg7bisrKXt2YXIgbz1tW25dO2lmKE9iamVjdC5wcm90
b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChoLG8pKWoucHVzaChvKTt9cmV0dXJu
IGo7fTtlLmV4cG9ydHM9Zzt9KTsKX19kKCJFUzVEYXRlIixbXSxmdW5jdGlvbihh
LGIsYyxkLGUsZil7dmFyIGc9e307Zy5ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3
IERhdGUoKS5nZXRUaW1lKCk7fTtlLmV4cG9ydHM9Zzt9KTsKLyoqCiAqIEBwcm92
aWRlc01vZHVsZSBKU09OMwogKiBAb3B0aW9uIHByZXNlcnZlLWhlYWRlcgogKgog
KiEgSlNPTiB2My4yLjMgfCBodHRwOi8vYmVzdGllanMuZ2l0aHViLmNvbS9qc29u
MyB8IENvcHlyaWdodCAyMDEyLCBLaXQgQ2FtYnJpZGdlIHwgaHR0cDovL2tpdC5t
aXQtbGljZW5zZS5vcmcKICovX19kKCJKU09OMyIsW10sZnVuY3Rpb24oYSxiLGMs
ZCxlLGYpeyhmdW5jdGlvbigpe3ZhciBnPXt9LnRvU3RyaW5nLGgsaSxqLGs9ZS5l
eHBvcnRzPXt9LGw9J3siQSI6WzEsdHJ1ZSxmYWxzZSxudWxsLCJcXHUwMDAwXFxi
XFxuXFxmXFxyXFx0Il19JyxtLG4sbyxwLHEscixzLHQsdSx2LHcseCx5LHosYWEs
YmE9bmV3IERhdGUoLTM1MDk4MjczMzQ1NzMyOTIpLGNhLGRhLGVhO3RyeXtiYT1i
YS5nZXRVVENGdWxsWWVhcigpPT0tMTA5MjUyJiZiYS5nZXRVVENNb250aCgpPT09
MCYmYmEuZ2V0VVRDRGF0ZSgpPT0xJiZiYS5nZXRVVENIb3VycygpPT0xMCYmYmEu
Z2V0VVRDTWludXRlcygpPT0zNyYmYmEuZ2V0VVRDU2Vjb25kcygpPT02JiZiYS5n
ZXRVVENNaWxsaXNlY29uZHMoKT09NzA4O31jYXRjaChmYSl7fWlmKCFiYSl7Y2E9
TWF0aC5mbG9vcjtkYT1bMCwzMSw1OSw5MCwxMjAsMTUxLDE4MSwyMTIsMjQzLDI3
MywzMDQsMzM0XTtlYT1mdW5jdGlvbihnYSxoYSl7cmV0dXJuIGRhW2hhXSszNjUq
KGdhLTE5NzApK2NhKChnYS0xOTY5KyhoYT0rKGhhPjEpKSkvNCktY2EoKGdhLTE5
MDEraGEpLzEwMCkrY2EoKGdhLTE2MDEraGEpLzQwMCk7fTt9aWYodHlwZW9mIEpT
T049PSJvYmplY3QiJiZKU09OKXtrLnN0cmluZ2lmeT1KU09OLnN0cmluZ2lmeTtr
LnBhcnNlPUpTT04ucGFyc2U7fWlmKChtPXR5cGVvZiBrLnN0cmluZ2lmeT09ImZ1
bmN0aW9uIiYmIWVhKSl7KGJhPWZ1bmN0aW9uKCl7cmV0dXJuIDE7fSkudG9KU09O
PWJhO3RyeXttPWsuc3RyaW5naWZ5KDApPT09IjAiJiZrLnN0cmluZ2lmeShuZXcg
TnVtYmVyKCkpPT09IjAiJiZrLnN0cmluZ2lmeShuZXcgU3RyaW5nKCkpPT0nIiIn
JiZrLnN0cmluZ2lmeShnKT09PWomJmsuc3RyaW5naWZ5KGopPT09aiYmay5zdHJp
bmdpZnkoKT09PWomJmsuc3RyaW5naWZ5KGJhKT09PSIxIiYmay5zdHJpbmdpZnko
W2JhXSk9PSJbMV0iJiZrLnN0cmluZ2lmeShbal0pPT0iW251bGxdIiYmay5zdHJp
bmdpZnkobnVsbCk9PSJudWxsIiYmay5zdHJpbmdpZnkoW2osZyxudWxsXSk9PSJb
bnVsbCxudWxsLG51bGxdIiYmay5zdHJpbmdpZnkoe3Jlc3VsdDpbYmEsdHJ1ZSxm
YWxzZSxudWxsLCJcMFxiXG5cZlxyXHQiXX0pPT1sJiZrLnN0cmluZ2lmeShudWxs
LGJhKT09PSIxIiYmay5zdHJpbmdpZnkoWzEsMl0sbnVsbCwxKT09IltcbiAxLFxu
IDJcbl0iJiZrLnN0cmluZ2lmeShuZXcgRGF0ZSgtOC42NGUrMTUpKT09JyItMjcx
ODIxLTA0LTIwVDAwOjAwOjAwLjAwMFoiJyYmay5zdHJpbmdpZnkobmV3IERhdGUo
OC42NGUrMTUpKT09JyIrMjc1NzYwLTA5LTEzVDAwOjAwOjAwLjAwMFoiJyYmay5z
dHJpbmdpZnkobmV3IERhdGUoLTYyMTk4NzU1MjAwMDAwKSk9PSciLTAwMDAwMS0w
MS0wMVQwMDowMDowMC4wMDBaIicmJmsuc3RyaW5naWZ5KG5ldyBEYXRlKC0xKSk9
PSciMTk2OS0xMi0zMVQyMzo1OTo1OS45OTlaIic7fWNhdGNoKGZhKXttPWZhbHNl
O319aWYodHlwZW9mIGsucGFyc2U9PSJmdW5jdGlvbiIpdHJ5e2lmKGsucGFyc2Uo
IjAiKT09PTAmJiFrLnBhcnNlKGZhbHNlKSl7YmE9ay5wYXJzZShsKTtpZigocj1i
YS5BLmxlbmd0aD09NSYmYmEuQVswXT09MSkpe3RyeXtyPSFrLnBhcnNlKCciXHQi
Jyk7fWNhdGNoKGZhKXt9aWYocil0cnl7cj1rLnBhcnNlKCIwMSIpIT0xO31jYXRj
aChmYSl7fX19fWNhdGNoKGZhKXtyPWZhbHNlO31iYT1sPW51bGw7aWYoIW18fCFy
KXtpZighKGg9e30uaGFzT3duUHJvcGVydHkpKWg9ZnVuY3Rpb24oZ2Epe3ZhciBo
YT17fSxpYTtpZigoaGEuX19wcm90b19fPW51bGwsaGEuX19wcm90b19fPXt0b1N0
cmluZzoxfSxoYSkudG9TdHJpbmchPWcpe2g9ZnVuY3Rpb24oamEpe3ZhciBrYT10
aGlzLl9fcHJvdG9fXyxsYT1qYSBpbiAodGhpcy5fX3Byb3RvX189bnVsbCx0aGlz
KTt0aGlzLl9fcHJvdG9fXz1rYTtyZXR1cm4gbGE7fTt9ZWxzZXtpYT1oYS5jb25z
dHJ1Y3RvcjtoPWZ1bmN0aW9uKGphKXt2YXIga2E9KHRoaXMuY29uc3RydWN0b3J8
fGlhKS5wcm90b3R5cGU7cmV0dXJuIGphIGluIHRoaXMmJiEoamEgaW4ga2EmJnRo
aXNbamFdPT09a2FbamFdKTt9O31oYT1udWxsO3JldHVybiBoLmNhbGwodGhpcyxn
YSk7fTtpPWZ1bmN0aW9uKGdhLGhhKXt2YXIgaWE9MCxqYSxrYSxsYSxtYTsoamE9
ZnVuY3Rpb24oKXt0aGlzLnZhbHVlT2Y9MDt9KS5wcm90b3R5cGUudmFsdWVPZj0w
O2thPW5ldyBqYSgpO2ZvcihsYSBpbiBrYSlpZihoLmNhbGwoa2EsbGEpKWlhKys7
amE9a2E9bnVsbDtpZighaWEpe2thPVsidmFsdWVPZiIsInRvU3RyaW5nIiwidG9M
b2NhbGVTdHJpbmciLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsImlzUHJvdG90eXBl
T2YiLCJoYXNPd25Qcm9wZXJ0eSIsImNvbnN0cnVjdG9yIl07bWE9ZnVuY3Rpb24o
bmEsb2Epe3ZhciBwYT1nLmNhbGwobmEpPT0iW29iamVjdCBGdW5jdGlvbl0iLHFh
LHJhO2ZvcihxYSBpbiBuYSlpZighKHBhJiZxYT09InByb3RvdHlwZSIpJiZoLmNh
bGwobmEscWEpKW9hKHFhKTtmb3IocmE9a2EubGVuZ3RoO3FhPWthWy0tcmFdO2gu
Y2FsbChuYSxxYSkmJm9hKHFhKSk7fTt9ZWxzZSBpZihpYT09Mil7bWE9ZnVuY3Rp
b24obmEsb2Epe3ZhciBwYT17fSxxYT1nLmNhbGwobmEpPT0iW29iamVjdCBGdW5j
dGlvbl0iLHJhO2ZvcihyYSBpbiBuYSlpZighKHFhJiZyYT09InByb3RvdHlwZSIp
JiYhaC5jYWxsKHBhLHJhKSYmKHBhW3JhXT0xKSYmaC5jYWxsKG5hLHJhKSlvYShy
YSk7fTt9ZWxzZSBtYT1mdW5jdGlvbihuYSxvYSl7dmFyIHBhPWcuY2FsbChuYSk9
PSJbb2JqZWN0IEZ1bmN0aW9uXSIscWEscmE7Zm9yKHFhIGluIG5hKWlmKCEocGEm
JnFhPT0icHJvdG90eXBlIikmJmguY2FsbChuYSxxYSkmJiEocmE9cWE9PT0iY29u
c3RydWN0b3IiKSlvYShxYSk7aWYocmF8fGguY2FsbChuYSwocWE9ImNvbnN0cnVj
dG9yIikpKW9hKHFhKTt9O3JldHVybiBtYShnYSxoYSk7fTtpZighbSl7bj17Ilxc
IjoiXFxcXCIsJyInOidcXCInLCJcYiI6IlxcYiIsIlxmIjoiXFxmIiwiXG4iOiJc
XG4iLCJcciI6IlxcciIsIlx0IjoiXFx0In07bz1mdW5jdGlvbihnYSxoYSl7cmV0
dXJuICgiMDAwMDAwIisoaGF8fDApKS5zbGljZSgtZ2EpO307cD1mdW5jdGlvbihn
YSl7dmFyIGhhPSciJyxpYT0wLGphO2Zvcig7amE9Z2EuY2hhckF0KGlhKTtpYSsr
KWhhKz0nXFwiXGJcZlxuXHJcdCcuaW5kZXhPZihqYSk+LTE/bltqYV06amE8IiAi
PyJcXHUwMCIrbygyLGphLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpKTpqYTty
ZXR1cm4gaGErJyInO307cT1mdW5jdGlvbihnYSxoYSxpYSxqYSxrYSxsYSxtYSl7
dmFyIG5hPWhhW2dhXSxvYSxwYSxxYSxyYSxzYSx0YSx1YSx2YSx3YSx4YSx5YSx6
YSxhYixiYixjYjtpZih0eXBlb2YgbmE9PSJvYmplY3QiJiZuYSl7b2E9Zy5jYWxs
KG5hKTtpZihvYT09IltvYmplY3QgRGF0ZV0iJiYhaC5jYWxsKG5hLCJ0b0pTT04i
KSl7aWYobmE+LTEvMCYmbmE8MS8wKXtpZihlYSl7cmE9Y2EobmEvODY0MDAwMDAp
O2ZvcihwYT1jYShyYS8zNjUuMjQyNSkrMTk3MC0xO2VhKHBhKzEsMCk8PXJhO3Bh
KyspO2ZvcihxYT1jYSgocmEtZWEocGEsMCkpLzMwLjQyKTtlYShwYSxxYSsxKTw9
cmE7cWErKyk7cmE9MStyYS1lYShwYSxxYSk7c2E9KG5hJTg2NDAwMDAwKzg2NDAw
MDAwKSU4NjQwMDAwMDt0YT1jYShzYS8zNjAwMDAwKSUyNDt1YT1jYShzYS82MDAw
MCklNjA7dmE9Y2Eoc2EvMTAwMCklNjA7d2E9c2ElMTAwMDt9ZWxzZXtwYT1uYS5n
ZXRVVENGdWxsWWVhcigpO3FhPW5hLmdldFVUQ01vbnRoKCk7cmE9bmEuZ2V0VVRD
RGF0ZSgpO3RhPW5hLmdldFVUQ0hvdXJzKCk7dWE9bmEuZ2V0VVRDTWludXRlcygp
O3ZhPW5hLmdldFVUQ1NlY29uZHMoKTt3YT1uYS5nZXRVVENNaWxsaXNlY29uZHMo
KTt9bmE9KHBhPD0wfHxwYT49MTAwMDA/KHBhPDA/Ii0iOiIrIikrbyg2LHBhPDA/
LXBhOnBhKTpvKDQscGEpKSsiLSIrbygyLHFhKzEpKyItIitvKDIscmEpKyJUIitv
KDIsdGEpKyI6IitvKDIsdWEpKyI6IitvKDIsdmEpKyIuIitvKDMsd2EpKyJaIjt9
ZWxzZSBuYT1udWxsO31lbHNlIGlmKHR5cGVvZiBuYS50b0pTT049PSJmdW5jdGlv
biImJigob2EhPSJbb2JqZWN0IE51bWJlcl0iJiZvYSE9IltvYmplY3QgU3RyaW5n
XSImJm9hIT0iW29iamVjdCBBcnJheV0iKXx8aC5jYWxsKG5hLCJ0b0pTT04iKSkp
bmE9bmEudG9KU09OKGdhKTt9aWYoaWEpbmE9aWEuY2FsbChoYSxnYSxuYSk7aWYo
bmE9PT1udWxsKXJldHVybiAibnVsbCI7b2E9Zy5jYWxsKG5hKTtpZihvYT09Iltv
YmplY3QgQm9vbGVhbl0iKXtyZXR1cm4gIiIrbmE7fWVsc2UgaWYob2E9PSJbb2Jq
ZWN0IE51bWJlcl0iKXtyZXR1cm4gbmE+LTEvMCYmbmE8MS8wPyIiK25hOiJudWxs
Ijt9ZWxzZSBpZihvYT09IltvYmplY3QgU3RyaW5nXSIpcmV0dXJuIHAobmEpO2lm
KHR5cGVvZiBuYT09Im9iamVjdCIpe2ZvcihhYj1tYS5sZW5ndGg7YWItLTspaWYo
bWFbYWJdPT09bmEpdGhyb3cgVHlwZUVycm9yKCk7bWEucHVzaChuYSk7eGE9W107
YmI9bGE7bGErPWthO2lmKG9hPT0iW29iamVjdCBBcnJheV0iKXtmb3IoemE9MCxh
Yj1uYS5sZW5ndGg7emE8YWI7Y2J8fChjYj10cnVlKSx6YSsrKXt5YT1xKHphLG5h
LGlhLGphLGthLGxhLG1hKTt4YS5wdXNoKHlhPT09aj8ibnVsbCI6eWEpO31yZXR1
cm4gY2I/KGthPyJbXG4iK2xhK3hhLmpvaW4oIixcbiIrbGEpKyJcbiIrYmIrIl0i
OigiWyIreGEuam9pbigiLCIpKyJdIikpOiJbXSI7fWVsc2V7aShqYXx8bmEsZnVu
Y3Rpb24oZGIpe3ZhciBlYj1xKGRiLG5hLGlhLGphLGthLGxhLG1hKTtpZihlYiE9
PWopeGEucHVzaChwKGRiKSsiOiIrKGthPyIgIjoiIikrZWIpO2NifHwoY2I9dHJ1
ZSk7fSk7cmV0dXJuIGNiPyhrYT8ie1xuIitsYSt4YS5qb2luKCIsXG4iK2xhKSsi
XG4iK2JiKyJ9IjooInsiK3hhLmpvaW4oIiwiKSsifSIpKToie30iO31tYS5wb3Ao
KTt9fTtrLnN0cmluZ2lmeT1mdW5jdGlvbihnYSxoYSxpYSl7dmFyIGphLGthLGxh
LG1hLG5hLG9hO2lmKHR5cGVvZiBoYT09ImZ1bmN0aW9uInx8dHlwZW9mIGhhPT0i
b2JqZWN0IiYmaGEpaWYoZy5jYWxsKGhhKT09IltvYmplY3QgRnVuY3Rpb25dIil7
a2E9aGE7fWVsc2UgaWYoZy5jYWxsKGhhKT09IltvYmplY3QgQXJyYXldIil7bGE9
e307Zm9yKG1hPTAsbmE9aGEubGVuZ3RoO21hPG5hO29hPWhhW21hKytdLCgoZy5j
YWxsKG9hKT09IltvYmplY3QgU3RyaW5nXSJ8fGcuY2FsbChvYSk9PSJbb2JqZWN0
IE51bWJlcl0iKSYmKGxhW29hXT0xKSkpO31pZihpYSlpZihnLmNhbGwoaWEpPT0i
W29iamVjdCBOdW1iZXJdIil7aWYoKGlhLT1pYSUxKT4wKWZvcihqYT0iIixpYT4x
MCYmKGlhPTEwKTtqYS5sZW5ndGg8aWE7amErPSIgIik7fWVsc2UgaWYoZy5jYWxs
KGlhKT09IltvYmplY3QgU3RyaW5nXSIpamE9aWEubGVuZ3RoPD0xMD9pYTppYS5z
bGljZSgwLDEwKTtyZXR1cm4gcSgiIiwob2E9e30sb2FbIiJdPWdhLG9hKSxrYSxs
YSxqYSwiIixbXSk7fTt9aWYoIXIpe3M9U3RyaW5nLmZyb21DaGFyQ29kZTt0PXsi
XFwiOiJcXCIsJyInOiciJywiLyI6Ii8iLGI6IlxiIix0OiJcdCIsbjoiXG4iLGY6
IlxmIixyOiJcciJ9O3U9ZnVuY3Rpb24oKXt6PWFhPW51bGw7dGhyb3cgU3ludGF4
RXJyb3IoKTt9O3Y9ZnVuY3Rpb24oKXt2YXIgZ2E9YWEsaGE9Z2EubGVuZ3RoLGlh
LGphLGthLGxhLG1hO3doaWxlKHo8aGEpe2lhPWdhLmNoYXJBdCh6KTtpZigiXHRc
clxuICIuaW5kZXhPZihpYSk+LTEpe3orKzt9ZWxzZSBpZigie31bXTosIi5pbmRl
eE9mKGlhKT4tMSl7eisrO3JldHVybiBpYTt9ZWxzZSBpZihpYT09JyInKXtmb3Io
amE9IkAiLHorKzt6PGhhOyl7aWE9Z2EuY2hhckF0KHopO2lmKGlhPCIgIil7dSgp
O31lbHNlIGlmKGlhPT0iXFwiKXtpYT1nYS5jaGFyQXQoKyt6KTtpZignXFwiL2J0
bmZyJy5pbmRleE9mKGlhKT4tMSl7amErPXRbaWFdO3orKzt9ZWxzZSBpZihpYT09
InUiKXtrYT0rK3o7Zm9yKGxhPXorNDt6PGxhO3orKyl7aWE9Z2EuY2hhckF0KHop
O2lmKCEoaWE+PSIwIiYmaWE8PSI5Inx8aWE+PSJhIiYmaWE8PSJmInx8aWE+PSJB
IiYmaWE8PSJGIikpdSgpO31qYSs9cygiMHgiK2dhLnNsaWNlKGthLHopKTt9ZWxz
ZSB1KCk7fWVsc2V7aWYoaWE9PSciJylicmVhaztqYSs9aWE7eisrO319aWYoZ2Eu
Y2hhckF0KHopPT0nIicpe3orKztyZXR1cm4gamE7fXUoKTt9ZWxzZXtrYT16O2lm
KGlhPT0iLSIpe21hPXRydWU7aWE9Z2EuY2hhckF0KCsreik7fWlmKGlhPj0iMCIm
JmlhPD0iOSIpe2lmKGlhPT0iMCImJihpYT1nYS5jaGFyQXQoeisxKSxpYT49IjAi
JiZpYTw9IjkiKSl1KCk7bWE9ZmFsc2U7Zm9yKDt6PGhhJiYoaWE9Z2EuY2hhckF0
KHopLGlhPj0iMCImJmlhPD0iOSIpO3orKyk7aWYoZ2EuY2hhckF0KHopPT0iLiIp
e2xhPSsrejtmb3IoO2xhPGhhJiYoaWE9Z2EuY2hhckF0KGxhKSxpYT49IjAiJiZp
YTw9IjkiKTtsYSsrKTtpZihsYT09eil1KCk7ej1sYTt9aWE9Z2EuY2hhckF0KHop
O2lmKGlhPT0iZSJ8fGlhPT0iRSIpe2lhPWdhLmNoYXJBdCgrK3opO2lmKGlhPT0i
KyJ8fGlhPT0iLSIpeisrO2ZvcihsYT16O2xhPGhhJiYoaWE9Z2EuY2hhckF0KGxh
KSxpYT49IjAiJiZpYTw9IjkiKTtsYSsrKTtpZihsYT09eil1KCk7ej1sYTt9cmV0
dXJuICtnYS5zbGljZShrYSx6KTt9aWYobWEpdSgpO2lmKGdhLnNsaWNlKHoseis0
KT09InRydWUiKXt6Kz00O3JldHVybiB0cnVlO31lbHNlIGlmKGdhLnNsaWNlKHos
eis1KT09ImZhbHNlIil7eis9NTtyZXR1cm4gZmFsc2U7fWVsc2UgaWYoZ2Euc2xp
Y2Uoeix6KzQpPT0ibnVsbCIpe3orPTQ7cmV0dXJuIG51bGw7fXUoKTt9fXJldHVy
biAiJCI7fTt3PWZ1bmN0aW9uKGdhKXt2YXIgaGEsaWEsamE7aWYoZ2E9PSIkIil1
KCk7aWYodHlwZW9mIGdhPT0ic3RyaW5nIil7aWYoZ2EuY2hhckF0KDApPT0iQCIp
cmV0dXJuIGdhLnNsaWNlKDEpO2lmKGdhPT0iWyIpe2hhPVtdO2Zvcig7O2lhfHwo
aWE9dHJ1ZSkpe2dhPXYoKTtpZihnYT09Il0iKWJyZWFrO2lmKGlhKWlmKGdhPT0i
LCIpe2dhPXYoKTtpZihnYT09Il0iKXUoKTt9ZWxzZSB1KCk7aWYoZ2E9PSIsIil1
KCk7aGEucHVzaCh3KGdhKSk7fXJldHVybiBoYTt9ZWxzZSBpZihnYT09InsiKXto
YT17fTtmb3IoOztpYXx8KGlhPXRydWUpKXtnYT12KCk7aWYoZ2E9PSJ9IilicmVh
aztpZihpYSlpZihnYT09IiwiKXtnYT12KCk7aWYoZ2E9PSJ9Iil1KCk7fWVsc2Ug
dSgpO2lmKGdhPT0iLCJ8fHR5cGVvZiBnYSE9InN0cmluZyJ8fGdhLmNoYXJBdCgw
KSE9IkAifHx2KCkhPSI6Iil1KCk7aGFbZ2Euc2xpY2UoMSldPXcodigpKTt9cmV0
dXJuIGhhO311KCk7fXJldHVybiBnYTt9O3k9ZnVuY3Rpb24oZ2EsaGEsaWEpe3Zh
ciBqYT14KGdhLGhhLGlhKTtpZihqYT09PWope2RlbGV0ZSBnYVtoYV07fWVsc2Ug
Z2FbaGFdPWphO307eD1mdW5jdGlvbihnYSxoYSxpYSl7dmFyIGphPWdhW2hhXSxr
YTtpZih0eXBlb2YgamE9PSJvYmplY3QiJiZqYSlpZihnLmNhbGwoamEpPT0iW29i
amVjdCBBcnJheV0iKXtmb3Ioa2E9amEubGVuZ3RoO2thLS07KXkoamEsa2EsaWEp
O31lbHNlIGkoamEsZnVuY3Rpb24obGEpe3koamEsbGEsaWEpO30pO3JldHVybiBp
YS5jYWxsKGdhLGhhLGphKTt9O2sucGFyc2U9ZnVuY3Rpb24oZ2EsaGEpe3o9MDth
YT1nYTt2YXIgaWE9dyh2KCkpO2lmKHYoKSE9IiQiKXUoKTt6PWFhPW51bGw7cmV0
dXJuIGhhJiZnLmNhbGwoaGEpPT0iW29iamVjdCBGdW5jdGlvbl0iP3goKGJhPXt9
LGJhWyIiXT1pYSxiYSksIiIsaGEpOmlhO307fX19KS5jYWxsKHRoaXMpO30pOwpf
X2QoIkVTNSIsWyJFUzVBcnJheVByb3RvdHlwZSIsIkVTNUZ1bmN0aW9uUHJvdG90
eXBlIiwiRVM1U3RyaW5nUHJvdG90eXBlIiwiRVM1QXJyYXkiLCJFUzVPYmplY3Qi
LCJFUzVEYXRlIiwiSlNPTjMiXSxmdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9
YignRVM1QXJyYXlQcm90b3R5cGUnKSxoPWIoJ0VTNUZ1bmN0aW9uUHJvdG90eXBl
JyksaT1iKCdFUzVTdHJpbmdQcm90b3R5cGUnKSxqPWIoJ0VTNUFycmF5Jyksaz1i
KCdFUzVPYmplY3QnKSxsPWIoJ0VTNURhdGUnKSxtPWIoJ0pTT04zJyksbj1BcnJh
eS5wcm90b3R5cGUuc2xpY2Usbz1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLHA9
eydKU09OLnN0cmluZ2lmeSc6bS5zdHJpbmdpZnksJ0pTT04ucGFyc2UnOm0ucGFy
c2V9LHE9e2FycmF5OmcsJ2Z1bmN0aW9uJzpoLHN0cmluZzppLE9iamVjdDprLEFy
cmF5OmosRGF0ZTpsfTtmb3IodmFyIHIgaW4gcSl7aWYoIXEuaGFzT3duUHJvcGVy
dHkocikpY29udGludWU7dmFyIHM9cVtyXSx0PXI9PT1yLnRvTG93ZXJDYXNlKCk/
d2luZG93W3IucmVwbGFjZSgvXlx3LyxmdW5jdGlvbih4KXtyZXR1cm4geC50b1Vw
cGVyQ2FzZSgpO30pXS5wcm90b3R5cGU6d2luZG93W3JdO2Zvcih2YXIgdSBpbiBz
KXtpZighcy5oYXNPd25Qcm9wZXJ0eSh1KSljb250aW51ZTt2YXIgdj10W3VdO3Bb
cisnLicrdV09diYmL1x7XHMrXFtuYXRpdmUgY29kZVxdXHNcfS8udGVzdCh2KT92
OnNbdV07fX1mdW5jdGlvbiB3KHgseSx6KXt2YXIgYWE9bi5jYWxsKGFyZ3VtZW50
cywzKSxiYT16Py9ccyguKilcXS8uZXhlYyhvLmNhbGwoeCkudG9Mb3dlckNhc2Uo
KSlbMV06eCxjYT1wW2JhKycuJyt5XXx8eFt5XTtpZih0eXBlb2YgY2E9PT0nZnVu
Y3Rpb24nKXJldHVybiBjYS5hcHBseSh4LGFhKTt9ZS5leHBvcnRzPXc7fSk7RVM1
ID0gcmVxdWlyZSgnRVM1Jyk7CnJldHVybiBFUzUuYXBwbHkobnVsbCwgYXJndW1l
bnRzKTsKfTsKCl9fZCgic2RrLlJ1bnRpbWVDb25maWciLFtdLHsibG9jYWxlIjoi
ZW5fVVMiLCJydGwiOmZhbHNlfSk7X19kKCJVcmxNYXBDb25maWciLFtdLHsid3d3
Ijoid3d3LmZhY2Vib29rLmNvbSIsIm0iOiJtLmZhY2Vib29rLmNvbSIsImNvbm5l
Y3QiOiJjb25uZWN0LmZhY2Vib29rLm5ldCIsImFwaV9odHRwcyI6ImFwaS5mYWNl
Ym9vay5jb20iLCJhcGlfcmVhZF9odHRwcyI6ImFwaS1yZWFkLmZhY2Vib29rLmNv
bSIsImdyYXBoX2h0dHBzIjoiZ3JhcGguZmFjZWJvb2suY29tIiwiZmJjZG5faHR0
cCI6InN0YXRpYy5hay5mYmNkbi5uZXQiLCJmYmNkbl9odHRwcyI6ImZic3RhdGlj
LWEuYWthbWFpaGQubmV0IiwiY2RuX2h0dHAiOiJzdGF0aWMuYWsuZmFjZWJvb2su
Y29tIiwiY2RuX2h0dHBzIjoicy1zdGF0aWMuYWsuZmFjZWJvb2suY29tIn0pO19f
ZCgiWERDb25maWciLFtdLHsiWGRVcmwiOiJjb25uZWN0XC94ZF9hcmJpdGVyLnBo
cD92ZXJzaW9uPTIwIiwiRmxhc2giOnsicGF0aCI6Imh0dHBzOlwvXC9jb25uZWN0
LmZhY2Vib29rLm5ldFwvcnNyYy5waHBcL3YxXC95MlwvclwvNFNxTFdIMERRdE4u
c3dmIn0sInVzZUNkbiI6dHJ1ZX0pO19fZCgiU0RLQ29uZmlnIixbXSx7ImJ1c3RD
YWNoZSI6dHJ1ZSwidGFnQ291bnRMb2dSYXRlIjowLjAxLCJlcnJvckhhbmRsaW5n
Ijp7InJhdGUiOjR9LCJ1c2VQbHVnaW5QaXBlIjp0cnVlLCJhcGkiOnsibW9kZSI6
Indhcm4iLCJ3aGl0ZWxpc3QiOlsiQ2FudmFzIiwiQ2FudmFzLlByZWZldGNoZXIi
LCJDYW52YXMuUHJlZmV0Y2hlci5hZGRTdGF0aWNSZXNvdXJjZSIsIkNhbnZhcy5Q
cmVmZXRjaGVyLnNldENvbGxlY3Rpb25Nb2RlIiwiQ2FudmFzLmdldFBhZ2VJbmZv
IiwiQ2FudmFzLmhpZGVGbGFzaEVsZW1lbnQiLCJDYW52YXMuc2Nyb2xsVG8iLCJD
YW52YXMuc2V0QXV0b0dyb3ciLCJDYW52YXMuc2V0RG9uZUxvYWRpbmciLCJDYW52
YXMuc2V0U2l6ZSIsIkNhbnZhcy5zZXRVcmxIYW5kbGVyIiwiQ2FudmFzLnNob3dG
bGFzaEVsZW1lbnQiLCJDYW52YXMuc3RhcnRUaW1lciIsIkNhbnZhcy5zdG9wVGlt
ZXIiLCJEYXRhIiwiRGF0YS5wcm9jZXNzIiwiRGF0YS5xdWVyeSIsIkRhdGEucXVl
cnk6d2FpdCIsIkRhdGEud2FpdE9uIiwiRGF0YS53YWl0T246d2FpdCIsIkV2ZW50
IiwiRXZlbnQuc3Vic2NyaWJlIiwiRXZlbnQudW5zdWJzY3JpYmUiLCJNdXNpYy5m
bGFzaENhbGxiYWNrIiwiTXVzaWMuaW5pdCIsIk11c2ljLnNlbmQiLCJQYXltZW50
IiwiUGF5bWVudC5pbml0IiwiUGF5bWVudC5zZXRTaXplIiwiVGhpcmRQYXJ0eVBy
b3ZpZGVyIiwiVGhpcmRQYXJ0eVByb3ZpZGVyLmluaXQiLCJUaGlyZFBhcnR5UHJv
dmlkZXIuc2VuZERhdGEiLCJVQSIsIlVBLm5hdGl2ZUFwcCIsIlhGQk1MIiwiWEZC
TUwuUmVjb21tZW5kYXRpb25zQmFyIiwiWEZCTUwuUmVjb21tZW5kYXRpb25zQmFy
Lm1hcmtSZWFkIiwiWEZCTUwucGFyc2UiLCJhZGRGcmllbmQiLCJhcGkiLCJnZXRB
Y2Nlc3NUb2tlbiIsImdldEF1dGhSZXNwb25zZSIsImdldExvZ2luU3RhdHVzIiwi
Z2V0VXNlcklEIiwiaW5pdCIsImxvZ2luIiwibG9nb3V0IiwicHVibGlzaCIsInNo
YXJlIiwidWkiLCJ1aTpzdWJzY3JpYmUiXX0sImluaXRTaXRldmFycyI6eyJlbmFi
bGVNb2JpbGVDb21tZW50cyI6MSwiaWZyYW1lUGVybWlzc2lvbnMiOnsicmVhZF9z
dHJlYW0iOmZhbHNlLCJtYW5hZ2VfbWFpbGJveCI6ZmFsc2UsIm1hbmFnZV9mcmll
bmRsaXN0cyI6ZmFsc2UsInJlYWRfbWFpbGJveCI6ZmFsc2UsInB1Ymxpc2hfY2hl
Y2tpbnMiOnRydWUsInN0YXR1c191cGRhdGUiOnRydWUsInBob3RvX3VwbG9hZCI6
dHJ1ZSwidmlkZW9fdXBsb2FkIjp0cnVlLCJzbXMiOmZhbHNlLCJjcmVhdGVfZXZl
bnQiOnRydWUsInJzdnBfZXZlbnQiOnRydWUsIm9mZmxpbmVfYWNjZXNzIjp0cnVl
LCJlbWFpbCI6dHJ1ZSwieG1wcF9sb2dpbiI6ZmFsc2UsImNyZWF0ZV9ub3RlIjp0
cnVlLCJzaGFyZV9pdGVtIjp0cnVlLCJleHBvcnRfc3RyZWFtIjpmYWxzZSwicHVi
bGlzaF9zdHJlYW0iOnRydWUsInB1Ymxpc2hfbGlrZXMiOnRydWUsImFkc19tYW5h
Z2VtZW50IjpmYWxzZSwiY29udGFjdF9lbWFpbCI6dHJ1ZSwiYWNjZXNzX3ByaXZh
dGVfZGF0YSI6ZmFsc2UsInJlYWRfaW5zaWdodHMiOmZhbHNlLCJyZWFkX3JlcXVl
c3RzIjpmYWxzZSwicmVhZF9mcmllbmRsaXN0cyI6dHJ1ZSwibWFuYWdlX3BhZ2Vz
IjpmYWxzZSwicGh5c2ljYWxfbG9naW4iOmZhbHNlLCJtYW5hZ2VfZ3JvdXBzIjpm
YWxzZSwicmVhZF9kZWFscyI6ZmFsc2V9fX0pO19fZCgiQ3NzQ29uZmlnIixbXSx7
InJ1bGVzIjoiLmZiX2hpZGRlbntwb3NpdGlvbjphYnNvbHV0ZTt0b3A6LTEwMDAw
cHg7ei1pbmRleDoxMDAwMX1cbi5mYl9pbnZpc2libGV7ZGlzcGxheTpub25lfVxu
LmZiX3Jlc2V0e2JhY2tncm91bmQ6bm9uZTtib3JkZXItc3BhY2luZzowO2JvcmRl
cjowO2NvbG9yOiMwMDA7Y3Vyc29yOmF1dG87ZGlyZWN0aW9uOmx0cjtmb250LWZh
bWlseTpcImx1Y2lkYSBncmFuZGVcIiwgdGFob21hLCB2ZXJkYW5hLCBhcmlhbCwg
c2Fucy1zZXJpZjtmb250LXNpemU6MTFweDtmb250LXN0eWxlOm5vcm1hbDtmb250
LXZhcmlhbnQ6bm9ybWFsO2ZvbnQtd2VpZ2h0Om5vcm1hbDtsZXR0ZXItc3BhY2lu
Zzpub3JtYWw7bGluZS1oZWlnaHQ6MTttYXJnaW46MDtvdmVyZmxvdzp2aXNpYmxl
O3BhZGRpbmc6MDt0ZXh0LWFsaWduOmxlZnQ7dGV4dC1kZWNvcmF0aW9uOm5vbmU7
dGV4dC1pbmRlbnQ6MDt0ZXh0LXNoYWRvdzpub25lO3RleHQtdHJhbnNmb3JtOm5v
bmU7dmlzaWJpbGl0eTp2aXNpYmxlO3doaXRlLXNwYWNlOm5vcm1hbDt3b3JkLXNw
YWNpbmc6bm9ybWFsfVxuLmZiX2xpbmsgaW1ne2JvcmRlcjpub25lfVxuLmZiX2Rp
YWxvZ3tiYWNrZ3JvdW5kOnJnYmEoODIsIDgyLCA4MiwgLjcpO3Bvc2l0aW9uOmFi
c29sdXRlO3RvcDotMTAwMDBweDt6LWluZGV4OjEwMDAxfVxuLmZiX2RpYWxvZ19h
ZHZhbmNlZHtwYWRkaW5nOjEwcHg7LW1vei1ib3JkZXItcmFkaXVzOjhweDstd2Vi
a2l0LWJvcmRlci1yYWRpdXM6OHB4O2JvcmRlci1yYWRpdXM6OHB4fVxuLmZiX2Rp
YWxvZ19jb250ZW50e2JhY2tncm91bmQ6I2ZmZjtjb2xvcjojMzMzfVxuLmZiX2Rp
YWxvZ19jbG9zZV9pY29ue2JhY2tncm91bmQ6dXJsKGh0dHA6XC9cL3N0YXRpYy5h
ay5mYmNkbi5uZXRcL3JzcmMucGhwXC92MlwveXFcL3JcL0lFOUpJSTZaMVlzLnBu
Zykgbm8tcmVwZWF0IHNjcm9sbCAwIDAgdHJhbnNwYXJlbnQ7X2JhY2tncm91bmQt
aW1hZ2U6dXJsKGh0dHA6XC9cL3N0YXRpYy5hay5mYmNkbi5uZXRcL3JzcmMucGhw
XC92MlwveUxcL3JcL3M4MTZlV0MtMnNsLmdpZik7Y3Vyc29yOnBvaW50ZXI7ZGlz
cGxheTpibG9jaztoZWlnaHQ6MTVweDtwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDox
OHB4O3RvcDoxN3B4O3dpZHRoOjE1cHg7dG9wOjhweFxcOTtyaWdodDo3cHhcXDl9
XG4uZmJfZGlhbG9nX21vYmlsZSAuZmJfZGlhbG9nX2Nsb3NlX2ljb257dG9wOjVw
eDtsZWZ0OjVweDtyaWdodDphdXRvfVxuLmZiX2RpYWxvZ19wYWRkaW5ne2JhY2tn
cm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6
MXB4O3otaW5kZXg6LTF9XG4uZmJfZGlhbG9nX2Nsb3NlX2ljb246aG92ZXJ7YmFj
a2dyb3VuZDp1cmwoaHR0cDpcL1wvc3RhdGljLmFrLmZiY2RuLm5ldFwvcnNyYy5w
aHBcL3YyXC95cVwvclwvSUU5SklJNloxWXMucG5nKSBuby1yZXBlYXQgc2Nyb2xs
IDAgLTE1cHggdHJhbnNwYXJlbnQ7X2JhY2tncm91bmQtaW1hZ2U6dXJsKGh0dHA6
XC9cL3N0YXRpYy5hay5mYmNkbi5uZXRcL3JzcmMucGhwXC92MlwveUxcL3JcL3M4
MTZlV0MtMnNsLmdpZil9XG4uZmJfZGlhbG9nX2Nsb3NlX2ljb246YWN0aXZle2Jh
Y2tncm91bmQ6dXJsKGh0dHA6XC9cL3N0YXRpYy5hay5mYmNkbi5uZXRcL3JzcmMu
cGhwXC92MlwveXFcL3JcL0lFOUpJSTZaMVlzLnBuZykgbm8tcmVwZWF0IHNjcm9s
bCAwIC0zMHB4IHRyYW5zcGFyZW50O19iYWNrZ3JvdW5kLWltYWdlOnVybChodHRw
OlwvXC9zdGF0aWMuYWsuZmJjZG4ubmV0XC9yc3JjLnBocFwvdjJcL3lMXC9yXC9z
ODE2ZVdDLTJzbC5naWYpfVxuLmZiX2RpYWxvZ19sb2FkZXJ7YmFja2dyb3VuZC1j
b2xvcjojZjJmMmYyO2JvcmRlcjoxcHggc29saWQgIzYwNjA2MDtmb250LXNpemU6
MjRweDtwYWRkaW5nOjIwcHh9XG4uZmJfZGlhbG9nX3RvcF9sZWZ0LFxuLmZiX2Rp
YWxvZ190b3BfcmlnaHQsXG4uZmJfZGlhbG9nX2JvdHRvbV9sZWZ0LFxuLmZiX2Rp
YWxvZ19ib3R0b21fcmlnaHR7aGVpZ2h0OjEwcHg7d2lkdGg6MTBweDtvdmVyZmxv
dzpoaWRkZW47cG9zaXRpb246YWJzb2x1dGV9XG5cLyogXHUwMDQwbm9mbGlwICpc
L1xuLmZiX2RpYWxvZ190b3BfbGVmdHtiYWNrZ3JvdW5kOnVybChodHRwOlwvXC9z
dGF0aWMuYWsuZmJjZG4ubmV0XC9yc3JjLnBocFwvdjJcL3llXC9yXC84WWVUTkls
VFpqbS5wbmcpIG5vLXJlcGVhdCAwIDA7bGVmdDotMTBweDt0b3A6LTEwcHh9XG5c
LyogXHUwMDQwbm9mbGlwICpcL1xuLmZiX2RpYWxvZ190b3BfcmlnaHR7YmFja2dy
b3VuZDp1cmwoaHR0cDpcL1wvc3RhdGljLmFrLmZiY2RuLm5ldFwvcnNyYy5waHBc
L3YyXC95ZVwvclwvOFllVE5JbFRaam0ucG5nKSBuby1yZXBlYXQgMCAtMTBweDty
aWdodDotMTBweDt0b3A6LTEwcHh9XG5cLyogXHUwMDQwbm9mbGlwICpcL1xuLmZi
X2RpYWxvZ19ib3R0b21fbGVmdHtiYWNrZ3JvdW5kOnVybChodHRwOlwvXC9zdGF0
aWMuYWsuZmJjZG4ubmV0XC9yc3JjLnBocFwvdjJcL3llXC9yXC84WWVUTklsVFpq
bS5wbmcpIG5vLXJlcGVhdCAwIC0yMHB4O2JvdHRvbTotMTBweDtsZWZ0Oi0xMHB4
fVxuXC8qIFx1MDA0MG5vZmxpcCAqXC9cbi5mYl9kaWFsb2dfYm90dG9tX3JpZ2h0
e2JhY2tncm91bmQ6dXJsKGh0dHA6XC9cL3N0YXRpYy5hay5mYmNkbi5uZXRcL3Jz
cmMucGhwXC92MlwveWVcL3JcLzhZZVROSWxUWmptLnBuZykgbm8tcmVwZWF0IDAg
LTMwcHg7cmlnaHQ6LTEwcHg7Ym90dG9tOi0xMHB4fVxuLmZiX2RpYWxvZ192ZXJ0
X2xlZnQsXG4uZmJfZGlhbG9nX3ZlcnRfcmlnaHQsXG4uZmJfZGlhbG9nX2hvcml6
X3RvcCxcbi5mYl9kaWFsb2dfaG9yaXpfYm90dG9te3Bvc2l0aW9uOmFic29sdXRl
O2JhY2tncm91bmQ6IzUyNTI1MjtmaWx0ZXI6YWxwaGEob3BhY2l0eT03MCk7b3Bh
Y2l0eTouN31cbi5mYl9kaWFsb2dfdmVydF9sZWZ0LFxuLmZiX2RpYWxvZ192ZXJ0
X3JpZ2h0e3dpZHRoOjEwcHg7aGVpZ2h0OjEwMFx1MDAyNX1cbi5mYl9kaWFsb2df
dmVydF9sZWZ0e21hcmdpbi1sZWZ0Oi0xMHB4fVxuLmZiX2RpYWxvZ192ZXJ0X3Jp
Z2h0e3JpZ2h0OjA7bWFyZ2luLXJpZ2h0Oi0xMHB4fVxuLmZiX2RpYWxvZ19ob3Jp
el90b3AsXG4uZmJfZGlhbG9nX2hvcml6X2JvdHRvbXt3aWR0aDoxMDBcdTAwMjU7
aGVpZ2h0OjEwcHh9XG4uZmJfZGlhbG9nX2hvcml6X3RvcHttYXJnaW4tdG9wOi0x
MHB4fVxuLmZiX2RpYWxvZ19ob3Jpel9ib3R0b217Ym90dG9tOjA7bWFyZ2luLWJv
dHRvbTotMTBweH1cbi5mYl9kaWFsb2dfaWZyYW1le2xpbmUtaGVpZ2h0OjB9XG4u
ZmJfZGlhbG9nX2NvbnRlbnQgLmRpYWxvZ190aXRsZXtiYWNrZ3JvdW5kOiM2ZDg0
YjQ7Ym9yZGVyOjFweCBzb2xpZCAjM2I1OTk4O2NvbG9yOiNmZmY7Zm9udC1zaXpl
OjE0cHg7Zm9udC13ZWlnaHQ6Ym9sZDttYXJnaW46MH1cbi5mYl9kaWFsb2dfY29u
dGVudCAuZGlhbG9nX3RpdGxlID4gc3BhbntiYWNrZ3JvdW5kOnVybChodHRwOlwv
XC9zdGF0aWMuYWsuZmJjZG4ubmV0XC9yc3JjLnBocFwvdjJcL3lkXC9yXC9Db3U3
bi1ucUs1Mi5naWYpXG5uby1yZXBlYXQgNXB4IDUwXHUwMDI1O2Zsb2F0OmxlZnQ7
cGFkZGluZzo1cHggMCA3cHggMjZweH1cbmJvZHkuZmJfaGlkZGVuey13ZWJraXQt
dHJhbnNmb3JtOm5vbmU7aGVpZ2h0OjEwMFx1MDAyNTttYXJnaW46MDtsZWZ0Oi0x
MDAwMHB4O292ZXJmbG93OnZpc2libGU7cG9zaXRpb246YWJzb2x1dGU7dG9wOi0x
MDAwMHB4O3dpZHRoOjEwMFx1MDAyNVxufVxuLmZiX2RpYWxvZy5mYl9kaWFsb2df
bW9iaWxlLmxvYWRpbmd7YmFja2dyb3VuZDp1cmwoaHR0cDpcL1wvc3RhdGljLmFr
LmZiY2RuLm5ldFwvcnNyYy5waHBcL3YyXC95YVwvclwvM3JoU3Y1VjhqM28uZ2lm
KVxud2hpdGUgbm8tcmVwZWF0IDUwXHUwMDI1IDUwXHUwMDI1O21pbi1oZWlnaHQ6
MTAwXHUwMDI1O21pbi13aWR0aDoxMDBcdTAwMjU7b3ZlcmZsb3c6aGlkZGVuO3Bv
c2l0aW9uOmFic29sdXRlO3RvcDowO3otaW5kZXg6MTAwMDF9XG4uZmJfZGlhbG9n
LmZiX2RpYWxvZ19tb2JpbGUubG9hZGluZy5jZW50ZXJlZHttYXgtaGVpZ2h0OjU5
MHB4O21pbi1oZWlnaHQ6NTkwcHg7bWF4LXdpZHRoOjUwMHB4O21pbi13aWR0aDo1
MDBweH1cbiNmYi1yb290ICNmYl9kaWFsb2dfaXBhZF9vdmVybGF5e2JhY2tncm91
bmQ6cmdiYSgwLCAwLCAwLCAuNDUpO3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MDt0
b3A6MDt3aWR0aDoxMDBcdTAwMjU7bWluLWhlaWdodDoxMDBcdTAwMjU7ei1pbmRl
eDoxMDAwMH1cbiNmYi1yb290ICNmYl9kaWFsb2dfaXBhZF9vdmVybGF5LmhpZGRl
bntkaXNwbGF5Om5vbmV9XG4uZmJfZGlhbG9nLmZiX2RpYWxvZ19tb2JpbGUubG9h
ZGluZyBpZnJhbWV7dmlzaWJpbGl0eTpoaWRkZW59XG4uZmJfZGlhbG9nX2NvbnRl
bnQgLmRpYWxvZ19oZWFkZXJ7LXdlYmtpdC1ib3gtc2hhZG93OndoaXRlIDAgMXB4
IDFweCAtMXB4IGluc2V0O2JhY2tncm91bmQ6LXdlYmtpdC1ncmFkaWVudChsaW5l
YXIsIDAgMCwgMCAxMDBcdTAwMjUsIGZyb20oIzczOEFCQSksIHRvKCMyQzQ5ODcp
KTtib3JkZXItYm90dG9tOjFweCBzb2xpZDtib3JkZXItY29sb3I6IzFkNDA4ODtj
b2xvcjojZmZmO2ZvbnQ6MTRweCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7Zm9udC13
ZWlnaHQ6Ym9sZDt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzO3RleHQtc2hhZG93OnJn
YmEoMCwgMzAsIDg0LCAuMjk2ODc1KSAwIC0xcHggMDt2ZXJ0aWNhbC1hbGlnbjpt
aWRkbGU7d2hpdGUtc3BhY2U6bm93cmFwfVxuLmZiX2RpYWxvZ19jb250ZW50IC5k
aWFsb2dfaGVhZGVyIHRhYmxley13ZWJraXQtZm9udC1zbW9vdGhpbmc6c3VicGl4
ZWwtYW50aWFsaWFzZWQ7aGVpZ2h0OjQzcHg7d2lkdGg6MTAwXHUwMDI1XG59XG4u
ZmJfZGlhbG9nX2NvbnRlbnQgLmRpYWxvZ19oZWFkZXIgdGQuaGVhZGVyX2xlZnR7
Zm9udC1zaXplOjEycHg7cGFkZGluZy1sZWZ0OjVweDt2ZXJ0aWNhbC1hbGlnbjpt
aWRkbGU7d2lkdGg6NjBweFxufVxuLmZiX2RpYWxvZ19jb250ZW50IC5kaWFsb2df
aGVhZGVyIHRkLmhlYWRlcl9yaWdodHtmb250LXNpemU6MTJweDtwYWRkaW5nLXJp
Z2h0OjVweDt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7d2lkdGg6NjBweFxufVxuLmZi
X2RpYWxvZ19jb250ZW50IC50b3VjaGFibGVfYnV0dG9ue2JhY2tncm91bmQ6LXdl
YmtpdC1ncmFkaWVudChsaW5lYXIsIDAgMCwgMCAxMDBcdTAwMjUsIGZyb20oIzQ5
NjZBNiksXG5jb2xvci1zdG9wKDAuNSwgIzM1NTQ5MiksIHRvKCMyQTQ4ODcpKTti
b3JkZXI6MXB4IHNvbGlkICMyOTQ0N2U7LXdlYmtpdC1iYWNrZ3JvdW5kLWNsaXA6
cGFkZGluZy1ib3g7LXdlYmtpdC1ib3JkZXItcmFkaXVzOjNweDstd2Via2l0LWJv
eC1zaGFkb3c6cmdiYSgwLCAwLCAwLCAuMTE3MTg4KSAwIDFweCAxcHggaW5zZXQs
XG5yZ2JhKDI1NSwgMjU1LCAyNTUsIC4xNjc5NjkpIDAgMXB4IDA7ZGlzcGxheTpp
bmxpbmUtYmxvY2s7bWFyZ2luLXRvcDozcHg7bWF4LXdpZHRoOjg1cHg7bGluZS1o
ZWlnaHQ6MThweDtwYWRkaW5nOjRweCAxMnB4O3Bvc2l0aW9uOnJlbGF0aXZlfVxu
LmZiX2RpYWxvZ19jb250ZW50IC5kaWFsb2dfaGVhZGVyIC50b3VjaGFibGVfYnV0
dG9uIGlucHV0e2JvcmRlcjpub25lO2JhY2tncm91bmQ6bm9uZTtjb2xvcjojZmZm
O2ZvbnQ6MTJweCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7Zm9udC13ZWlnaHQ6Ym9s
ZDttYXJnaW46MnB4IC0xMnB4O3BhZGRpbmc6MnB4IDZweCAzcHggNnB4O3RleHQt
c2hhZG93OnJnYmEoMCwgMzAsIDg0LCAuMjk2ODc1KSAwIC0xcHggMH1cbi5mYl9k
aWFsb2dfY29udGVudCAuZGlhbG9nX2hlYWRlciAuaGVhZGVyX2NlbnRlcntjb2xv
cjojZmZmO2ZvbnQtc2l6ZToxNnB4O2ZvbnQtd2VpZ2h0OmJvbGQ7bGluZS1oZWln
aHQ6MThweDt0ZXh0LWFsaWduOmNlbnRlcjt2ZXJ0aWNhbC1hbGlnbjptaWRkbGV9
XG4uZmJfZGlhbG9nX2NvbnRlbnQgLmRpYWxvZ19jb250ZW50e2JhY2tncm91bmQ6
dXJsKGh0dHA6XC9cL3N0YXRpYy5hay5mYmNkbi5uZXRcL3JzcmMucGhwXC92Mlwv
eTlcL3JcL2pLRWNWUFpGay0yLmdpZikgbm8tcmVwZWF0IDUwXHUwMDI1IDUwXHUw
MDI1O2JvcmRlcjoxcHggc29saWQgIzU1NTtib3JkZXItYm90dG9tOjA7Ym9yZGVy
LXRvcDowO2hlaWdodDoxNTBweH1cbi5mYl9kaWFsb2dfY29udGVudCAuZGlhbG9n
X2Zvb3RlcntiYWNrZ3JvdW5kOiNmMmYyZjI7Ym9yZGVyOjFweCBzb2xpZCAjNTU1
O2JvcmRlci10b3AtY29sb3I6I2NjYztoZWlnaHQ6NDBweH1cbiNmYl9kaWFsb2df
bG9hZGVyX2Nsb3Nle2Zsb2F0OmxlZnR9XG4uZmJfZGlhbG9nLmZiX2RpYWxvZ19t
b2JpbGUgLmZiX2RpYWxvZ19jbG9zZV9idXR0b257dGV4dC1zaGFkb3c6cmdiYSgw
LCAzMCwgODQsIC4yOTY4NzUpIDAgLTFweCAwfVxuLmZiX2RpYWxvZy5mYl9kaWFs
b2dfbW9iaWxlIC5mYl9kaWFsb2dfY2xvc2VfaWNvbnt2aXNpYmlsaXR5OmhpZGRl
bn1cbi5mYl9pZnJhbWVfd2lkZ2V0e3Bvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6
LW1vei1pbmxpbmUtYmxvY2s7ZGlzcGxheTppbmxpbmUtYmxvY2t9XG4uZmJfaWZy
YW1lX3dpZGdldCBpZnJhbWV7cG9zaXRpb246YWJzb2x1dGV9XG4uZmJfaWZyYW1l
X3dpZGdldF9saWZ0e3otaW5kZXg6MX1cbi5mYl9pZnJhbWVfd2lkZ2V0IHNwYW57
ZGlzcGxheTppbmxpbmUtYmxvY2s7cG9zaXRpb246cmVsYXRpdmU7dGV4dC1hbGln
bjpqdXN0aWZ5O3ZlcnRpY2FsLWFsaWduOnRleHQtYm90dG9tfVxuLmZiX2hpZGVf
aWZyYW1lcyBpZnJhbWV7cG9zaXRpb246cmVsYXRpdmU7bGVmdDotMTAwMDBweH1c
bi5mYl9pZnJhbWVfd2lkZ2V0X2xvYWRlcntwb3NpdGlvbjpyZWxhdGl2ZTtkaXNw
bGF5OmlubGluZS1ibG9ja31cbi5mYl9pZnJhbWVfd2lkZ2V0X2ZsdWlke2Rpc3Bs
YXk6aW5saW5lfVxuLmZiX2lmcmFtZV93aWRnZXRfZmx1aWQgc3Bhbnt3aWR0aDox
MDBcdTAwMjV9XG4uZmJfaWZyYW1lX3dpZGdldF9sb2FkZXIgaWZyYW1le21pbi1o
ZWlnaHQ6MzJweDt6LWluZGV4OjI7em9vbToxfVxuLmZiX2lmcmFtZV93aWRnZXRf
bG9hZGVyIC5GQl9Mb2FkZXJ7YmFja2dyb3VuZDp1cmwoaHR0cDpcL1wvc3RhdGlj
LmFrLmZiY2RuLm5ldFwvcnNyYy5waHBcL3YyXC95OVwvclwvaktFY1ZQWkZrLTIu
Z2lmKSBuby1yZXBlYXQ7aGVpZ2h0OjMycHg7d2lkdGg6MzJweDttYXJnaW4tbGVm
dDotMTZweDtwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjUwXHUwMDI1O3otaW5kZXg6
NH1cbi5mYl9idXR0b25fc2ltcGxlLFxuLmZiX2J1dHRvbl9zaW1wbGVfcnRse2Jh
Y2tncm91bmQtaW1hZ2U6dXJsKGh0dHA6XC9cL3N0YXRpYy5hay5mYmNkbi5uZXRc
L3JzcmMucGhwXC92MlwveUhcL3JcL2VJcGJuVktJOWxSLnBuZyk7YmFja2dyb3Vu
ZC1yZXBlYXQ6bm8tcmVwZWF0O2N1cnNvcjpwb2ludGVyO291dGxpbmU6bm9uZTt0
ZXh0LWRlY29yYXRpb246bm9uZX1cbi5mYl9idXR0b25fc2ltcGxlX3J0bHtiYWNr
Z3JvdW5kLXBvc2l0aW9uOnJpZ2h0IDB9XG4uZmJfYnV0dG9uX3NpbXBsZSAuZmJf
YnV0dG9uX3RleHR7bWFyZ2luOjAgMCAwIDIwcHg7cGFkZGluZy1ib3R0b206MXB4
fVxuLmZiX2J1dHRvbl9zaW1wbGVfcnRsIC5mYl9idXR0b25fdGV4dHttYXJnaW46
MCAxMHB4IDAgMH1cbmEuZmJfYnV0dG9uX3NpbXBsZTpob3ZlciAuZmJfYnV0dG9u
X3RleHQsXG5hLmZiX2J1dHRvbl9zaW1wbGVfcnRsOmhvdmVyIC5mYl9idXR0b25f
dGV4dCxcbi5mYl9idXR0b25fc2ltcGxlOmhvdmVyIC5mYl9idXR0b25fdGV4dCxc
bi5mYl9idXR0b25fc2ltcGxlX3J0bDpob3ZlciAuZmJfYnV0dG9uX3RleHR7dGV4
dC1kZWNvcmF0aW9uOnVuZGVybGluZX1cbi5mYl9idXR0b24sXG4uZmJfYnV0dG9u
X3J0bHtiYWNrZ3JvdW5kOiMyOTQ0N2UgdXJsKGh0dHA6XC9cL3N0YXRpYy5hay5m
YmNkbi5uZXRcL3JzcmMucGhwXC92MlwveUxcL3JcL0ZHRmJjODBkVUtqLnBuZyk7
YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2N1cnNvcjpwb2ludGVyO2Rpc3Bs
YXk6aW5saW5lLWJsb2NrO3BhZGRpbmc6MCAwIDAgMXB4O3RleHQtZGVjb3JhdGlv
bjpub25lO291dGxpbmU6bm9uZX1cbi5mYl9idXR0b24gLmZiX2J1dHRvbl90ZXh0
LFxuLmZiX2J1dHRvbl9ydGwgLmZiX2J1dHRvbl90ZXh0e2JhY2tncm91bmQ6IzVm
NzhhYiB1cmwoaHR0cDpcL1wvc3RhdGljLmFrLmZiY2RuLm5ldFwvcnNyYy5waHBc
L3YyXC95TFwvclwvRkdGYmM4MGRVS2oucG5nKTtib3JkZXItdG9wOnNvbGlkIDFw
eCAjODc5YWMwO2JvcmRlci1ib3R0b206c29saWQgMXB4ICMxYTM1NmU7Y29sb3I6
I2ZmZjtkaXNwbGF5OmJsb2NrO2ZvbnQtZmFtaWx5OlwibHVjaWRhIGdyYW5kZVwi
LHRhaG9tYSx2ZXJkYW5hLGFyaWFsLHNhbnMtc2VyaWY7Zm9udC13ZWlnaHQ6Ym9s
ZDtwYWRkaW5nOjJweCA2cHggM3B4IDZweDttYXJnaW46MXB4IDFweCAwIDIxcHg7
dGV4dC1zaGFkb3c6bm9uZX1cbmEuZmJfYnV0dG9uLFxuYS5mYl9idXR0b25fcnRs
LFxuLmZiX2J1dHRvbixcbi5mYl9idXR0b25fcnRse3RleHQtZGVjb3JhdGlvbjpu
b25lfVxuYS5mYl9idXR0b246YWN0aXZlIC5mYl9idXR0b25fdGV4dCxcbmEuZmJf
YnV0dG9uX3J0bDphY3RpdmUgLmZiX2J1dHRvbl90ZXh0LFxuLmZiX2J1dHRvbjph
Y3RpdmUgLmZiX2J1dHRvbl90ZXh0LFxuLmZiX2J1dHRvbl9ydGw6YWN0aXZlIC5m
Yl9idXR0b25fdGV4dHtib3JkZXItYm90dG9tOnNvbGlkIDFweCAjMjk0NDdlO2Jv
cmRlci10b3A6c29saWQgMXB4ICM0NTYxOWQ7YmFja2dyb3VuZDojNGY2YWEzO3Rl
eHQtc2hhZG93Om5vbmV9XG4uZmJfYnV0dG9uX3hsYXJnZSxcbi5mYl9idXR0b25f
eGxhcmdlX3J0bHtiYWNrZ3JvdW5kLXBvc2l0aW9uOmxlZnQgLTYwcHg7Zm9udC1z
aXplOjI0cHg7bGluZS1oZWlnaHQ6MzBweH1cbi5mYl9idXR0b25feGxhcmdlIC5m
Yl9idXR0b25fdGV4dHtwYWRkaW5nOjNweCA4cHggM3B4IDEycHg7bWFyZ2luLWxl
ZnQ6MzhweH1cbmEuZmJfYnV0dG9uX3hsYXJnZTphY3RpdmV7YmFja2dyb3VuZC1w
b3NpdGlvbjpsZWZ0IC05OXB4fVxuLmZiX2J1dHRvbl94bGFyZ2VfcnRse2JhY2tn
cm91bmQtcG9zaXRpb246cmlnaHQgLTI2OHB4fVxuLmZiX2J1dHRvbl94bGFyZ2Vf
cnRsIC5mYl9idXR0b25fdGV4dHtwYWRkaW5nOjNweCA4cHggM3B4IDEycHg7bWFy
Z2luLXJpZ2h0OjM5cHh9XG5hLmZiX2J1dHRvbl94bGFyZ2VfcnRsOmFjdGl2ZXti
YWNrZ3JvdW5kLXBvc2l0aW9uOnJpZ2h0IC0zMDdweH1cbi5mYl9idXR0b25fbGFy
Z2UsXG4uZmJfYnV0dG9uX2xhcmdlX3J0bHtiYWNrZ3JvdW5kLXBvc2l0aW9uOmxl
ZnQgLTEzOHB4O2ZvbnQtc2l6ZToxM3B4O2xpbmUtaGVpZ2h0OjE2cHh9XG4uZmJf
YnV0dG9uX2xhcmdlIC5mYl9idXR0b25fdGV4dHttYXJnaW4tbGVmdDoyNHB4O3Bh
ZGRpbmc6MnB4IDZweCA0cHggNnB4fVxuYS5mYl9idXR0b25fbGFyZ2U6YWN0aXZl
e2JhY2tncm91bmQtcG9zaXRpb246bGVmdCAtMTYzcHh9XG4uZmJfYnV0dG9uX2xh
cmdlX3J0bHtiYWNrZ3JvdW5kLXBvc2l0aW9uOnJpZ2h0IC0zNDZweH1cbi5mYl9i
dXR0b25fbGFyZ2VfcnRsIC5mYl9idXR0b25fdGV4dHttYXJnaW4tcmlnaHQ6MjVw
eH1cbmEuZmJfYnV0dG9uX2xhcmdlX3J0bDphY3RpdmV7YmFja2dyb3VuZC1wb3Np
dGlvbjpyaWdodCAtMzcxcHh9XG4uZmJfYnV0dG9uX21lZGl1bSxcbi5mYl9idXR0
b25fbWVkaXVtX3J0bHtiYWNrZ3JvdW5kLXBvc2l0aW9uOmxlZnQgLTE4OHB4O2Zv
bnQtc2l6ZToxMXB4O2xpbmUtaGVpZ2h0OjE0cHh9XG5hLmZiX2J1dHRvbl9tZWRp
dW06YWN0aXZle2JhY2tncm91bmQtcG9zaXRpb246bGVmdCAtMjEwcHh9XG4uZmJf
YnV0dG9uX21lZGl1bV9ydGx7YmFja2dyb3VuZC1wb3NpdGlvbjpyaWdodCAtMzk2
cHh9XG4uZmJfYnV0dG9uX3RleHRfcnRsLFxuLmZiX2J1dHRvbl9tZWRpdW1fcnRs
IC5mYl9idXR0b25fdGV4dHtwYWRkaW5nOjJweCA2cHggM3B4IDZweDttYXJnaW4t
cmlnaHQ6MjJweH1cbmEuZmJfYnV0dG9uX21lZGl1bV9ydGw6YWN0aXZle2JhY2tn
cm91bmQtcG9zaXRpb246cmlnaHQgLTQxOHB4fVxuLmZiX2J1dHRvbl9zbWFsbCxc
bi5mYl9idXR0b25fc21hbGxfcnRse2JhY2tncm91bmQtcG9zaXRpb246bGVmdCAt
MjMycHg7Zm9udC1zaXplOjEwcHg7bGluZS1oZWlnaHQ6MTBweH1cbi5mYl9idXR0
b25fc21hbGwgLmZiX2J1dHRvbl90ZXh0e3BhZGRpbmc6MnB4IDZweCAzcHg7bWFy
Z2luLWxlZnQ6MTdweH1cbmEuZmJfYnV0dG9uX3NtYWxsOmFjdGl2ZSxcbi5mYl9i
dXR0b25fc21hbGw6YWN0aXZle2JhY2tncm91bmQtcG9zaXRpb246bGVmdCAtMjUw
cHh9XG4uZmJfYnV0dG9uX3NtYWxsX3J0bHtiYWNrZ3JvdW5kLXBvc2l0aW9uOnJp
Z2h0IC00NDBweH1cbi5mYl9idXR0b25fc21hbGxfcnRsIC5mYl9idXR0b25fdGV4
dHtwYWRkaW5nOjJweCA2cHg7bWFyZ2luLXJpZ2h0OjE4cHh9XG5hLmZiX2J1dHRv
bl9zbWFsbF9ydGw6YWN0aXZle2JhY2tncm91bmQtcG9zaXRpb246cmlnaHQgLTQ1
OHB4fVxuLmZiX3NoYXJlX2NvdW50X3dyYXBwZXJ7cG9zaXRpb246cmVsYXRpdmU7
ZmxvYXQ6bGVmdH1cbi5mYl9zaGFyZV9jb3VudHtiYWNrZ3JvdW5kOiNiMGI5ZWMg
bm9uZSByZXBlYXQgc2Nyb2xsIDAgMDtjb2xvcjojMzMzO2ZvbnQtZmFtaWx5Olwi
bHVjaWRhIGdyYW5kZVwiLCB0YWhvbWEsIHZlcmRhbmEsIGFyaWFsLCBzYW5zLXNl
cmlmO3RleHQtYWxpZ246Y2VudGVyfVxuLmZiX3NoYXJlX2NvdW50X2lubmVye2Jh
Y2tncm91bmQ6I2U4ZWJmMjtkaXNwbGF5OmJsb2NrfVxuLmZiX3NoYXJlX2NvdW50
X3JpZ2h0e21hcmdpbi1sZWZ0Oi0xcHg7ZGlzcGxheTppbmxpbmUtYmxvY2t9XG4u
ZmJfc2hhcmVfY291bnRfcmlnaHQgLmZiX3NoYXJlX2NvdW50X2lubmVye2JvcmRl
ci10b3A6c29saWQgMXB4ICNlOGViZjI7Ym9yZGVyLWJvdHRvbTpzb2xpZCAxcHgg
I2IwYjllYzttYXJnaW46MXB4IDFweCAwIDFweDtmb250LXNpemU6MTBweDtsaW5l
LWhlaWdodDoxMHB4O3BhZGRpbmc6MnB4IDZweCAzcHg7Zm9udC13ZWlnaHQ6Ym9s
ZH1cbi5mYl9zaGFyZV9jb3VudF90b3B7ZGlzcGxheTpibG9jaztsZXR0ZXItc3Bh
Y2luZzotMXB4O2xpbmUtaGVpZ2h0OjM0cHg7bWFyZ2luLWJvdHRvbTo3cHg7Zm9u
dC1zaXplOjIycHg7Ym9yZGVyOnNvbGlkIDFweCAjYjBiOWVjfVxuLmZiX3NoYXJl
X2NvdW50X251Yl90b3B7Ym9yZGVyOm5vbmU7ZGlzcGxheTpibG9jaztwb3NpdGlv
bjphYnNvbHV0ZTtsZWZ0OjdweDt0b3A6MzVweDttYXJnaW46MDtwYWRkaW5nOjA7
d2lkdGg6NnB4O2hlaWdodDo3cHg7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0
O2JhY2tncm91bmQtaW1hZ2U6dXJsKGh0dHA6XC9cL3N0YXRpYy5hay5mYmNkbi5u
ZXRcL3JzcmMucGhwXC92MlwveVVcL3JcL2JTT0h0S2JDR1lJLnBuZyl9XG4uZmJf
c2hhcmVfY291bnRfbnViX3JpZ2h0e2JvcmRlcjpub25lO2Rpc3BsYXk6aW5saW5l
LWJsb2NrO3BhZGRpbmc6MDt3aWR0aDo1cHg7aGVpZ2h0OjEwcHg7YmFja2dyb3Vu
ZC1yZXBlYXQ6bm8tcmVwZWF0O2JhY2tncm91bmQtaW1hZ2U6dXJsKGh0dHA6XC9c
L3N0YXRpYy5hay5mYmNkbi5uZXRcL3JzcmMucGhwXC92MlwveVhcL3JcL2lfb0lW
VEtNWXNMLnBuZyk7dmVydGljYWwtYWxpZ246dG9wO2JhY2tncm91bmQtcG9zaXRp
b246cmlnaHQgNXB4O3otaW5kZXg6MTA7bGVmdDoycHg7bWFyZ2luOjAgMnB4IDAg
MDtwb3NpdGlvbjpyZWxhdGl2ZX1cbi5mYl9zaGFyZV9ub19jb3VudHtkaXNwbGF5
Om5vbmV9XG4uZmJfc2hhcmVfc2l6ZV9TbWFsbCAuZmJfc2hhcmVfY291bnRfcmln
aHQgLmZiX3NoYXJlX2NvdW50X2lubmVye2ZvbnQtc2l6ZToxMHB4fVxuLmZiX3No
YXJlX3NpemVfTWVkaXVtIC5mYl9zaGFyZV9jb3VudF9yaWdodCAuZmJfc2hhcmVf
Y291bnRfaW5uZXJ7Zm9udC1zaXplOjExcHg7cGFkZGluZzoycHggNnB4IDNweDts
ZXR0ZXItc3BhY2luZzotMXB4O2xpbmUtaGVpZ2h0OjE0cHh9XG4uZmJfc2hhcmVf
c2l6ZV9MYXJnZSAuZmJfc2hhcmVfY291bnRfcmlnaHQgLmZiX3NoYXJlX2NvdW50
X2lubmVye2ZvbnQtc2l6ZToxM3B4O2xpbmUtaGVpZ2h0OjE2cHg7cGFkZGluZzoy
cHggNnB4IDRweDtmb250LXdlaWdodDpub3JtYWw7bGV0dGVyLXNwYWNpbmc6LTFw
eH1cbi5mYl9zaGFyZV9jb3VudF9oaWRkZW4gLmZiX3NoYXJlX2NvdW50X251Yl90
b3AsXG4uZmJfc2hhcmVfY291bnRfaGlkZGVuIC5mYl9zaGFyZV9jb3VudF90b3As
XG4uZmJfc2hhcmVfY291bnRfaGlkZGVuIC5mYl9zaGFyZV9jb3VudF9udWJfcmln
aHQsXG4uZmJfc2hhcmVfY291bnRfaGlkZGVuIC5mYl9zaGFyZV9jb3VudF9yaWdo
dHt2aXNpYmlsaXR5OmhpZGRlbn1cbi5mYl9jb25uZWN0X2Jhcl9jb250YWluZXIg
ZGl2LFxuLmZiX2Nvbm5lY3RfYmFyX2NvbnRhaW5lciBzcGFuLFxuLmZiX2Nvbm5l
Y3RfYmFyX2NvbnRhaW5lciBhLFxuLmZiX2Nvbm5lY3RfYmFyX2NvbnRhaW5lciBp
bWcsXG4uZmJfY29ubmVjdF9iYXJfY29udGFpbmVyIHN0cm9uZ3tiYWNrZ3JvdW5k
Om5vbmU7Ym9yZGVyLXNwYWNpbmc6MDtib3JkZXI6MDtkaXJlY3Rpb246bHRyO2Zv
bnQtc3R5bGU6bm9ybWFsO2ZvbnQtdmFyaWFudDpub3JtYWw7bGV0dGVyLXNwYWNp
bmc6bm9ybWFsO2xpbmUtaGVpZ2h0OjE7bWFyZ2luOjA7b3ZlcmZsb3c6dmlzaWJs
ZTtwYWRkaW5nOjA7dGV4dC1hbGlnbjpsZWZ0O3RleHQtZGVjb3JhdGlvbjpub25l
O3RleHQtaW5kZW50OjA7dGV4dC1zaGFkb3c6bm9uZTt0ZXh0LXRyYW5zZm9ybTpu
b25lO3Zpc2liaWxpdHk6dmlzaWJsZTt3aGl0ZS1zcGFjZTpub3JtYWw7d29yZC1z
cGFjaW5nOm5vcm1hbDt2ZXJ0aWNhbC1hbGlnbjpiYXNlbGluZX1cbi5mYl9jb25u
ZWN0X2Jhcl9jb250YWluZXJ7cG9zaXRpb246Zml4ZWQ7bGVmdDowICFpbXBvcnRh
bnQ7cmlnaHQ6MCAhaW1wb3J0YW50O2hlaWdodDo0MnB4ICFpbXBvcnRhbnQ7cGFk
ZGluZzowIDI1cHggIWltcG9ydGFudDttYXJnaW46MCAhaW1wb3J0YW50O3ZlcnRp
Y2FsLWFsaWduOm1pZGRsZSAhaW1wb3J0YW50O2JvcmRlci1ib3R0b206MXB4IHNv
bGlkICMzMzMgIWltcG9ydGFudDtiYWNrZ3JvdW5kOiMzYjU5OTggIWltcG9ydGFu
dDt6LWluZGV4Ojk5OTk5OTk5ICFpbXBvcnRhbnQ7b3ZlcmZsb3c6aGlkZGVuICFp
bXBvcnRhbnR9XG4uZmJfY29ubmVjdF9iYXJfY29udGFpbmVyX2llNntwb3NpdGlv
bjphYnNvbHV0ZTt0b3A6ZXhwcmVzc2lvbihkb2N1bWVudC5jb21wYXRNb2RlPT1c
IkNTUzFDb21wYXRcIj8gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRv
cCtcInB4XCI6Ym9keS5zY3JvbGxUb3ArXCJweFwiKX1cbi5mYl9jb25uZWN0X2Jh
cntwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW46YXV0bztoZWlnaHQ6MTAwXHUwMDI1
O3dpZHRoOjEwMFx1MDAyNTtwYWRkaW5nOjZweCAwIDAgMCAhaW1wb3J0YW50O2Jh
Y2tncm91bmQ6bm9uZTtjb2xvcjojZmZmICFpbXBvcnRhbnQ7Zm9udC1mYW1pbHk6
XCJsdWNpZGEgZ3JhbmRlXCIsIHRhaG9tYSwgdmVyZGFuYSwgYXJpYWwsIHNhbnMt
c2VyaWYgIWltcG9ydGFudDtmb250LXNpemU6MTNweCAhaW1wb3J0YW50O2ZvbnQt
c3R5bGU6bm9ybWFsICFpbXBvcnRhbnQ7Zm9udC12YXJpYW50Om5vcm1hbCAhaW1w
b3J0YW50O2ZvbnQtd2VpZ2h0Om5vcm1hbCAhaW1wb3J0YW50O2xldHRlci1zcGFj
aW5nOm5vcm1hbCAhaW1wb3J0YW50O2xpbmUtaGVpZ2h0OjEgIWltcG9ydGFudDt0
ZXh0LWRlY29yYXRpb246bm9uZSAhaW1wb3J0YW50O3RleHQtaW5kZW50OjAgIWlt
cG9ydGFudDt0ZXh0LXNoYWRvdzpub25lICFpbXBvcnRhbnQ7dGV4dC10cmFuc2Zv
cm06bm9uZSAhaW1wb3J0YW50O3doaXRlLXNwYWNlOm5vcm1hbCAhaW1wb3J0YW50
O3dvcmQtc3BhY2luZzpub3JtYWwgIWltcG9ydGFudH1cbi5mYl9jb25uZWN0X2Jh
ciBhOmhvdmVye2NvbG9yOiNmZmZ9XG4uZmJfY29ubmVjdF9iYXIgLmZiX3Byb2Zp
bGUgaW1ne2hlaWdodDozMHB4O3dpZHRoOjMwcHg7dmVydGljYWwtYWxpZ246bWlk
ZGxlO21hcmdpbjowIDZweCA1cHggMH1cbi5mYl9jb25uZWN0X2JhciBkaXYgYSxc
bi5mYl9jb25uZWN0X2JhciBzcGFuLFxuLmZiX2Nvbm5lY3RfYmFyIHNwYW4gYXtj
b2xvcjojYmFjNmRhO2ZvbnQtc2l6ZToxMXB4O3RleHQtZGVjb3JhdGlvbjpub25l
fVxuLmZiX2Nvbm5lY3RfYmFyIC5mYl9idXR0b25ze2Zsb2F0OnJpZ2h0O21hcmdp
bi10b3A6N3B4fVxuLmZiX2VkZ2Vfd2lkZ2V0X3dpdGhfY29tbWVudHtwb3NpdGlv
bjpyZWxhdGl2ZTsqei1pbmRleDoxMDAwfVxuLmZiX2VkZ2Vfd2lkZ2V0X3dpdGhf
Y29tbWVudCBzcGFuLmZiX2VkZ2VfY29tbWVudF93aWRnZXR7cG9zaXRpb246YWJz
b2x1dGV9XG4uZmJfZWRnZV93aWRnZXRfd2l0aF9jb21tZW50IHNwYW4uZmJfc2Vu
ZF9idXR0b25fZm9ybV93aWRnZXR7ei1pbmRleDoxfVxuLmZiX2VkZ2Vfd2lkZ2V0
X3dpdGhfY29tbWVudCBzcGFuLmZiX3NlbmRfYnV0dG9uX2Zvcm1fd2lkZ2V0IC5G
Ql9Mb2FkZXJ7bGVmdDowO3RvcDoxcHg7bWFyZ2luLXRvcDo2cHg7bWFyZ2luLWxl
ZnQ6MDtiYWNrZ3JvdW5kLXBvc2l0aW9uOjUwXHUwMDI1IDUwXHUwMDI1O2JhY2tn
cm91bmQtY29sb3I6I2ZmZjtoZWlnaHQ6MTUwcHg7d2lkdGg6Mzk0cHg7Ym9yZGVy
OjFweCAjNjY2IHNvbGlkO2JvcmRlci1ib3R0b206MnB4IHNvbGlkICMyODNlNmM7
ei1pbmRleDoxfVxuLmZiX2VkZ2Vfd2lkZ2V0X3dpdGhfY29tbWVudCBzcGFuLmZi
X3NlbmRfYnV0dG9uX2Zvcm1fd2lkZ2V0LmRhcmsgLkZCX0xvYWRlcntiYWNrZ3Jv
dW5kLWNvbG9yOiMwMDA7Ym9yZGVyLWJvdHRvbToycHggc29saWQgI2NjY31cbi5m
Yl9lZGdlX3dpZGdldF93aXRoX2NvbW1lbnQgc3Bhbi5mYl9zZW5kX2J1dHRvbl9m
b3JtX3dpZGdldC5zaWRlcmVuZGVyXG4uRkJfTG9hZGVye21hcmdpbi10b3A6MH1c
bi5mYnBsdWdpbnJlY29tbWVuZGF0aW9uc2JhcmxlZnQsXG4uZmJwbHVnaW5yZWNv
bW1lbmRhdGlvbnNiYXJyaWdodHtwb3NpdGlvbjpmaXhlZCAhaW1wb3J0YW50O2Jv
dHRvbTowO3otaW5kZXg6OTk5fVxuXC8qIFx1MDA0MG5vZmxpcCAqXC9cbi5mYnBs
dWdpbnJlY29tbWVuZGF0aW9uc2JhcmxlZnR7bGVmdDoxMHB4fVxuXC8qIFx1MDA0
MG5vZmxpcCAqXC9cbi5mYnBsdWdpbnJlY29tbWVuZGF0aW9uc2JhcnJpZ2h0e3Jp
Z2h0OjEwcHh9IiwiY29tcG9uZW50cyI6WyJmYi5jc3MuYmFzZSIsImZiLmNzcy5k
aWFsb2ciLCJmYi5jc3MuaWZyYW1ld2lkZ2V0IiwiZmIuY3NzLmJ1dHRvbiIsImZi
LmNzcy5zaGFyZWJ1dHRvbiIsImZiLmNzcy5jb25uZWN0YmFyd2lkZ2V0IiwiZmIu
Y3NzLmVkZ2Vjb21tZW50d2lkZ2V0IiwiZmIuY3NzLnNlbmRidXR0b25mb3Jtd2lk
Z2V0IiwiZmIuY3NzLnBsdWdpbi5yZWNvbW1lbmRhdGlvbnNiYXIiXX0pO19fZCgi
Q2FudmFzUHJlZmV0Y2hlckNvbmZpZyIsW10seyJibGFja2xpc3QiOlsxNDQ5NTk2
MTU1NzY0NjZdLCJzYW1wbGVSYXRlIjo1MDB9KTtfX2QoIlBsdWdpblBpcGVDb25m
aWciLFtdLHsidGhyZXNob2xkIjowLCJlbmFibGVkQXBwcyI6eyIyMDk3NTM4MjU4
MTA2NjMiOjEsIjE4NzI4ODY5NDY0MzcxOCI6MX19KTtfX2QoIkNvbm5lY3RCYXJD
b25maWciLFtdLHsiaW1ncyI6eyJidXR0b25VcmwiOiJyc3JjLnBocFwvdjJcL3lZ
XC9yXC9oX1k2dTF3clpQVy5wbmciLCJtaXNzaW5nUHJvZmlsZVVybCI6InJzcmMu
cGhwXC92MlwveW9cL3JcL1VsSXFtSEpuLVNLLmdpZiJ9fSk7X19kKCJQcm9maWxl
UGljQ29uZmlnIixbXSx7ImRlZlBpY01hcCI6eyJwaWMiOiJyc3JjLnBocFwvdjFc
L3loXC9yXC9DNXl0N0NxZjN6VS5qcGciLCJwaWNfYmlnIjoicnNyYy5waHBcL3Yy
XC95TFwvclwvSHNUWlNEdzRhdnguZ2lmIiwicGljX2JpZ193aXRoX2xvZ28iOiJy
c3JjLnBocFwvdjJcL3k1XC9yXC9TUkRDYWVDTDdoTS5naWYiLCJwaWNfc21hbGwi
OiJyc3JjLnBocFwvdjFcL3lpXC9yXC9vZEE5c05MckU4Ni5qcGciLCJwaWNfc21h
bGxfd2l0aF9sb2dvIjoicnNyYy5waHBcL3YyXC95RFwvclwvazF4aVJYS25sR2Qu
Z2lmIiwicGljX3NxdWFyZSI6InJzcmMucGhwXC92MlwveW9cL3JcL1VsSXFtSEpu
LVNLLmdpZiIsInBpY19zcXVhcmVfd2l0aF9sb2dvIjoicnNyYy5waHBcL3YyXC95
WFwvclwvOWRZSkJQREhYd1ouZ2lmIiwicGljX3dpdGhfbG9nbyI6InJzcmMucGhw
XC92MlwveXVcL3JcL2ZQUFI5ZjJGSjN0LmdpZiJ9fSk7X19kKCJBcGlDbGllbnRD
b25maWciLFtdLHsiRmxhc2hSZXF1ZXN0Ijp7InN3ZlVybCI6Imh0dHBzOlwvXC9j
b25uZWN0LmZhY2Vib29rLm5ldFwvcnNyYy5waHBcL3YxXC95clwvclwvU2E4R0hK
cWRxSm4uc3dmIn19KTsKX19kKCJRdWVyeVN0cmluZyIsW10sZnVuY3Rpb24oYSxi
LGMsZCxlLGYpe2Z1bmN0aW9uIGcoayl7dmFyIGw9W107RVM1KEVTNSgnT2JqZWN0
Jywna2V5cycsZmFsc2UsayksJ2ZvckVhY2gnLHRydWUsZnVuY3Rpb24obSl7dmFy
IG49a1ttXTtpZih0eXBlb2Ygbj09PSd1bmRlZmluZWQnKXJldHVybjtpZihuPT09
bnVsbCl7bC5wdXNoKG0pO3JldHVybjt9bC5wdXNoKGVuY29kZVVSSUNvbXBvbmVu
dChtKSsnPScrZW5jb2RlVVJJQ29tcG9uZW50KG4pKTt9KTtyZXR1cm4gbC5qb2lu
KCcmJyk7fWZ1bmN0aW9uIGgoayxsKXt2YXIgbT17fTtpZihrPT09JycpcmV0dXJu
IG07dmFyIG49ay5zcGxpdCgnJicpO2Zvcih2YXIgbz0wO288bi5sZW5ndGg7bysr
KXt2YXIgcD1uW29dLnNwbGl0KCc9JywyKSxxPWRlY29kZVVSSUNvbXBvbmVudChw
WzBdKTtpZihsJiZtLmhhc093blByb3BlcnR5KHEpKXRocm93IG5ldyBVUklFcnJv
cignRHVwbGljYXRlIGtleTogJytxKTttW3FdPXAubGVuZ3RoPT09Mj9kZWNvZGVV
UklDb21wb25lbnQocFsxXSk6bnVsbDt9cmV0dXJuIG07fWZ1bmN0aW9uIGkoayxs
KXtyZXR1cm4gaysofkVTNShrLCdpbmRleE9mJyx0cnVlLCc/Jyk/JyYnOic/Jykr
KHR5cGVvZiBsPT09J3N0cmluZyc/bDpqLmVuY29kZShsKSk7fXZhciBqPXtlbmNv
ZGU6ZyxkZWNvZGU6aCxhcHBlbmRUb1VybDppfTtlLmV4cG9ydHM9ajt9KTsKX19k
KCJjb3B5UHJvcGVydGllcyIsW10sZnVuY3Rpb24oYSxiLGMsZCxlLGYpe2Z1bmN0
aW9uIGcoaCxpLGosayxsLG0sbil7aD1ofHx7fTt2YXIgbz1baSxqLGssbCxtXSxw
PTAscTt3aGlsZShvW3BdKXtxPW9bcCsrXTtmb3IodmFyIHIgaW4gcSloW3JdPXFb
cl07aWYocS5oYXNPd25Qcm9wZXJ0eSYmcS5oYXNPd25Qcm9wZXJ0eSgndG9TdHJp
bmcnKSYmKHR5cGVvZiBxLnRvU3RyaW5nIT0ndW5kZWZpbmVkJykmJihoLnRvU3Ry
aW5nIT09cS50b1N0cmluZykpaC50b1N0cmluZz1xLnRvU3RyaW5nO31yZXR1cm4g
aDt9ZS5leHBvcnRzPWc7fSk7Cl9fZCgiTWFuYWdlZEVycm9yIixbXSxmdW5jdGlv
bihhLGIsYyxkLGUsZil7ZnVuY3Rpb24gZyhoLGkpe0Vycm9yLnByb3RvdHlwZS5j
b25zdHJ1Y3Rvci5jYWxsKHRoaXMsaCk7dGhpcy5tZXNzYWdlPWg7dGhpcy5pbm5l
ckVycm9yPWk7fWcucHJvdG90eXBlPW5ldyBFcnJvcigpO2cucHJvdG90eXBlLmNv
bnN0cnVjdG9yPWc7ZS5leHBvcnRzPWc7fSk7Cl9fZCgiQXNzZXJ0aW9uRXJyb3Ii
LFsiTWFuYWdlZEVycm9yIl0sZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnPWIo
J01hbmFnZWRFcnJvcicpO2Z1bmN0aW9uIGgoaSl7Zy5wcm90b3R5cGUuY29uc3Ry
dWN0b3IuYXBwbHkodGhpcyxhcmd1bWVudHMpO31oLnByb3RvdHlwZT1uZXcgZygp
O2gucHJvdG90eXBlLmNvbnN0cnVjdG9yPWg7ZS5leHBvcnRzPWg7fSk7Cl9fZCgi
c3ByaW50ZiIsW10sZnVuY3Rpb24oYSxiLGMsZCxlLGYpe2Z1bmN0aW9uIGcoaCxp
KXtpPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKTt2YXIg
aj0wO3JldHVybiBoLnJlcGxhY2UoLyVzL2csZnVuY3Rpb24oayl7cmV0dXJuIGlb
aisrXTt9KTt9ZS5leHBvcnRzPWc7fSk7Cl9fZCgiQXNzZXJ0IixbIkFzc2VydGlv
bkVycm9yIiwic3ByaW50ZiJdLGZ1bmN0aW9uKGEsYixjLGQsZSxmKXt2YXIgZz1i
KCdBc3NlcnRpb25FcnJvcicpLGg9Yignc3ByaW50ZicpO2Z1bmN0aW9uIGkobixv
KXtpZighbil0aHJvdyBuZXcgZyhvKTtyZXR1cm4gbjt9ZnVuY3Rpb24gaihuLG8s
cCl7dmFyIHE7aWYobz09PXVuZGVmaW5lZCl7cT0ndW5kZWZpbmVkJzt9ZWxzZSBp
ZihvPT09bnVsbCl7cT0nbnVsbCc7fWVsc2V7dmFyIHI9T2JqZWN0LnByb3RvdHlw
ZS50b1N0cmluZy5jYWxsKG8pO3E9L1xzKFx3KikvLmV4ZWMocilbMV0udG9Mb3dl
ckNhc2UoKTt9aShFUzUobiwnaW5kZXhPZicsdHJ1ZSxxKSE9PS0xLHB8fGgoJ0V4
cHJlc3Npb24gaXMgb2YgdHlwZSAlcywgbm90ICVzJyxxLG4pKTtyZXR1cm4gbzt9
ZnVuY3Rpb24gayhuLG8scCl7aShvIGluc3RhbmNlb2YgbixwfHwnRXhwcmVzc2lv
biBub3QgaW5zdGFuY2Ugb2YgdHlwZScpO3JldHVybiBvO31mdW5jdGlvbiBsKG4s
byl7bVsnaXMnK25dPW87bVsnbWF5YmUnK25dPWZ1bmN0aW9uKHAscSl7aWYocCE9
bnVsbClvKHAscSk7fTt9dmFyIG09e2lzSW5zdGFuY2VPZjprLGlzVHJ1ZTppLGlz
VHJ1dGh5OmZ1bmN0aW9uKG4sbyl7cmV0dXJuIGkoISFuLG8pO30sdHlwZTpqLGRl
ZmluZTpmdW5jdGlvbihuLG8pe249bi5zdWJzdHJpbmcoMCwxKS50b1VwcGVyQ2Fz
ZSgpK24uc3Vic3RyaW5nKDEpLnRvTG93ZXJDYXNlKCk7bChuLGZ1bmN0aW9uKHAs
cSl7aShvKHApLHEpO30pO319O0VTNShbJ0FycmF5JywnQm9vbGVhbicsJ0RhdGUn
LCdGdW5jdGlvbicsJ051bGwnLCdOdW1iZXInLCdPYmplY3QnLCdSZWdleHAnLCdT
dHJpbmcnLCdVbmRlZmluZWQnXSwnZm9yRWFjaCcsdHJ1ZSxmdW5jdGlvbihuKXts
KG4sRVM1KGosJ2JpbmQnLHRydWUsbnVsbCxuLnRvTG93ZXJDYXNlKCkpKTt9KTtl
LmV4cG9ydHM9bTt9KTsKX19kKCJUeXBlIixbImNvcHlQcm9wZXJ0aWVzIiwiQXNz
ZXJ0Il0sZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnPWIoJ2NvcHlQcm9wZXJ0
aWVzJyksaD1iKCdBc3NlcnQnKTtmdW5jdGlvbiBpKCl7dmFyIG09dGhpcy5fX21p
eGlucztpZihtKWZvcih2YXIgbj0wO248bS5sZW5ndGg7bisrKW1bbl0uYXBwbHko
dGhpcyxhcmd1bWVudHMpO31mdW5jdGlvbiBqKG0sbil7aWYobiBpbnN0YW5jZW9m
IG0pcmV0dXJuIHRydWU7aWYobiBpbnN0YW5jZW9mIGkpZm9yKHZhciBvPTA7bzxu
Ll9fbWl4aW5zLmxlbmd0aDtvKyspaWYobi5fX21peGluc1tvXT09bSlyZXR1cm4g
dHJ1ZTtyZXR1cm4gZmFsc2U7fWZ1bmN0aW9uIGsobSxuKXt2YXIgbz1tLnByb3Rv
dHlwZTtpZighRVM1KCdBcnJheScsJ2lzQXJyYXknLGZhbHNlLG4pKW49W25dO2Zv
cih2YXIgcD0wO3A8bi5sZW5ndGg7cCsrKXt2YXIgcT1uW3BdO2lmKHR5cGVvZiBx
PT0nZnVuY3Rpb24nKXtvLl9fbWl4aW5zLnB1c2gocSk7cT1xLnByb3RvdHlwZTt9
RVM1KEVTNSgnT2JqZWN0Jywna2V5cycsZmFsc2UscSksJ2ZvckVhY2gnLHRydWUs
ZnVuY3Rpb24ocil7b1tyXT1xW3JdO30pO319ZnVuY3Rpb24gbChtLG4sbyl7dmFy
IHA9biYmbi5oYXNPd25Qcm9wZXJ0eSgnY29uc3RydWN0b3InKT9uLmNvbnN0cnVj
dG9yOmZ1bmN0aW9uKCl7dGhpcy5wYXJlbnQuYXBwbHkodGhpcyxhcmd1bWVudHMp
O307aC5pc0Z1bmN0aW9uKHApO2lmKG0mJm0ucHJvdG90eXBlIGluc3RhbmNlb2Yg
aT09PWZhbHNlKXRocm93IG5ldyBFcnJvcigncGFyZW50IHR5cGUgZG9lcyBub3Qg
aW5oZXJpdCBmcm9tIFR5cGUnKTttPW18fGk7dmFyIHE9bmV3IEZ1bmN0aW9uKCk7
cS5wcm90b3R5cGU9bS5wcm90b3R5cGU7cC5wcm90b3R5cGU9bmV3IHEoKTtnKHAu
cHJvdG90eXBlLG4pO3AucHJvdG90eXBlLl9fbWl4aW5zPW0ucHJvdG90eXBlLl9f
bWl4aW5zP0FycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKG0ucHJvdG90eXBlLl9f
bWl4aW5zKTpbXTtpZihvKWsocCxvKTtwLnByb3RvdHlwZS5wYXJlbnQ9ZnVuY3Rp
b24oKXt0aGlzLnBhcmVudD1tLnByb3RvdHlwZS5wYXJlbnQ7bS5hcHBseSh0aGlz
LGFyZ3VtZW50cyk7fTtwLnByb3RvdHlwZS5wYXJlbnRDYWxsPWZ1bmN0aW9uKHIp
e3JldHVybiBtLnByb3RvdHlwZVtyXS5hcHBseSh0aGlzLEFycmF5LnByb3RvdHlw
ZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKSk7fTtwLmV4dGVuZD1mdW5jdGlvbihy
LHMpe3JldHVybiBsKHRoaXMscixzKTt9O3JldHVybiBwO31nKGkucHJvdG90eXBl
LHtpbnN0YW5jZU9mOmZ1bmN0aW9uKG0pe3JldHVybiBqKG0sdGhpcyk7fX0pO2co
aSx7ZXh0ZW5kOmZ1bmN0aW9uKG0sbil7cmV0dXJuIHR5cGVvZiBtPT09J2Z1bmN0
aW9uJz9sLmFwcGx5KG51bGwsYXJndW1lbnRzKTpsKG51bGwsbSxuKTt9LGluc3Rh
bmNlT2Y6an0pO2UuZXhwb3J0cz1pO30pOwpfX2QoIk9ic2VydmFibGVNaXhpbiIs
W10sZnVuY3Rpb24oYSxiLGMsZCxlLGYpe2Z1bmN0aW9uIGcoKXt0aGlzLl9fb2Jz
ZXJ2YWJsZUV2ZW50cz17fTt9Zy5wcm90b3R5cGU9e2luZm9ybTpmdW5jdGlvbiho
KXt2YXIgaT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMSks
aj1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCh0aGlzLmdldFN1YnNjcmliZXJz
KGgpKTtmb3IodmFyIGs9MDtrPGoubGVuZ3RoO2srKyl7aWYoaltrXT09PW51bGwp
Y29udGludWU7dHJ5e2pba10uYXBwbHkodGhpcyxpKTt9Y2F0Y2gobCl7c2V0VGlt
ZW91dChmdW5jdGlvbigpe3Rocm93IGw7fSwwKTt9fXJldHVybiB0aGlzO30sZ2V0
U3Vic2NyaWJlcnM6ZnVuY3Rpb24oaCl7cmV0dXJuIHRoaXMuX19vYnNlcnZhYmxl
RXZlbnRzW2hdfHwodGhpcy5fX29ic2VydmFibGVFdmVudHNbaF09W10pO30sY2xl
YXJTdWJzY3JpYmVyczpmdW5jdGlvbihoKXtpZihoKXRoaXMuX19vYnNlcnZhYmxl
RXZlbnRzW2hdPVtdO3JldHVybiB0aGlzO30sY2xlYXJBbGxTdWJzY3JpYmVyczpm
dW5jdGlvbigpe3RoaXMuX19vYnNlcnZhYmxlRXZlbnRzPXt9O3JldHVybiB0aGlz
O30sc3Vic2NyaWJlOmZ1bmN0aW9uKGgsaSl7dmFyIGo9dGhpcy5nZXRTdWJzY3Jp
YmVycyhoKTtqLnB1c2goaSk7cmV0dXJuIHRoaXM7fSx1bnN1YnNjcmliZTpmdW5j
dGlvbihoLGkpe3ZhciBqPXRoaXMuZ2V0U3Vic2NyaWJlcnMoaCk7Zm9yKHZhciBr
PTA7azxqLmxlbmd0aDtrKyspaWYoaltrXT09PWkpe2ouc3BsaWNlKGssMSk7YnJl
YWs7fXJldHVybiB0aGlzO30sbW9uaXRvcjpmdW5jdGlvbihoLGkpe2lmKCFpKCkp
e3ZhciBqPUVTNShmdW5jdGlvbihrKXtpZihpLmFwcGx5KGksYXJndW1lbnRzKSl0
aGlzLnVuc3Vic2NyaWJlKGgsaik7fSwnYmluZCcsdHJ1ZSx0aGlzKTt0aGlzLnN1
YnNjcmliZShoLGopO31yZXR1cm4gdGhpczt9fTtlLmV4cG9ydHM9Zzt9KTsKX19k
KCJzZGsuTW9kZWwiLFsiVHlwZSIsIk9ic2VydmFibGVNaXhpbiJdLGZ1bmN0aW9u
KGEsYixjLGQsZSxmKXt2YXIgZz1iKCdUeXBlJyksaD1iKCdPYnNlcnZhYmxlTWl4
aW4nKSxpPWcuZXh0ZW5kKHtjb25zdHJ1Y3RvcjpmdW5jdGlvbihqKXt0aGlzLnBh
cmVudCgpO3ZhciBrPXt9LGw9dGhpcztFUzUoRVM1KCdPYmplY3QnLCdrZXlzJyxm
YWxzZSxqKSwnZm9yRWFjaCcsdHJ1ZSxmdW5jdGlvbihtKXtrW21dPWpbbV07bFsn
c2V0JyttXT1mdW5jdGlvbihuKXtpZihuPT09a1ttXSlyZXR1cm4gdGhpcztrW21d
PW47bC5pbmZvcm0obSsnLmNoYW5nZScsbik7cmV0dXJuIGw7fTtsWydnZXQnK21d
PWZ1bmN0aW9uKCl7cmV0dXJuIGtbbV07fTt9KTt9fSxoKTtlLmV4cG9ydHM9aTt9
KTsKX19kKCJzZGsuUnVudGltZSIsWyJzZGsuTW9kZWwiLCJjb3B5UHJvcGVydGll
cyIsInNkay5SdW50aW1lQ29uZmlnIl0sZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3Zh
ciBnPWIoJ3Nkay5Nb2RlbCcpLGg9Yygnc2RrLlJ1bnRpbWVDb25maWcnKSxpPWIo
J2NvcHlQcm9wZXJ0aWVzJyksaj17VU5LTk9XTjowLFBBR0VUQUI6MSxDQU5WQVM6
MixQTEFURk9STTo0fSxrPW5ldyBnKHtBY2Nlc3NUb2tlbjonJyxDbGllbnRJRDon
JyxFbnZpcm9ubWVudDpqLlVOS05PV04sSW5pdGlhbGl6ZWQ6ZmFsc2UsTG9jYWxl
OmgubG9jYWxlLExvZ2luU3RhdHVzOnVuZGVmaW5lZCxSdGw6aC5ydGwsU2NvcGU6
dW5kZWZpbmVkLFNlY3VyZTp1bmRlZmluZWQsVXNlQ29va2llOmZhbHNlLFVzZXJJ
RDonJyxDb29raWVVc2VySUQ6Jyd9KTtpKGsse0VOVklST05NRU5UUzpqLGlzRW52
aXJvbm1lbnQ6ZnVuY3Rpb24obCl7dmFyIG09dGhpcy5nZXRFbnZpcm9ubWVudCgp
O3JldHVybiAobHxtKT09PW07fX0pOyhmdW5jdGlvbigpe3ZhciBsPS9hcHBfcnVu
bmVyLy50ZXN0KHdpbmRvdy5uYW1lKT9qLlBBR0VUQUI6L2lmcmFtZV9jYW52YXMv
LnRlc3Qod2luZG93Lm5hbWUpP2ouQ0FOVkFTOmouVU5LTk9XTjtpZigobHxqLlBB
R0VUQUIpPT09bClsPWx8ai5DQU5WQVM7ay5zZXRFbnZpcm9ubWVudChsKTt9KSgp
O2UuZXhwb3J0cz1rO30pOwpfX2QoInNkay5Db29raWUiLFsiUXVlcnlTdHJpbmci
LCJzZGsuUnVudGltZSJdLGZ1bmN0aW9uKGEsYixjLGQsZSxmKXt2YXIgZz1iKCdR
dWVyeVN0cmluZycpLGg9Yignc2RrLlJ1bnRpbWUnKSxpPW51bGw7ZnVuY3Rpb24g
aihtLG4sbyl7bT1tK2guZ2V0Q2xpZW50SUQoKTt2YXIgcD1pJiZpIT09Jy4nO2lm
KHApe2RvY3VtZW50LmNvb2tpZT1tKyc9OyBleHBpcmVzPVdlZCwgMDQgRmViIDIw
MDQgMDg6MDA6MDAgR01UOyc7ZG9jdW1lbnQuY29va2llPW0rJz07IGV4cGlyZXM9
V2VkLCAwNCBGZWIgMjAwNCAwODowMDowMCBHTVQ7JysnZG9tYWluPScrbG9jYXRp
b24uaG9zdG5hbWUrJzsnO312YXIgcT1uZXcgRGF0ZShvKS50b0dNVFN0cmluZygp
O2RvY3VtZW50LmNvb2tpZT1tKyc9JytuKyhuJiZvPT09MD8nJzonOyBleHBpcmVz
PScrcSkrJzsgcGF0aD0vJysocD8nOyBkb21haW49JytpOicnKTt9ZnVuY3Rpb24g
ayhtKXttPW0raC5nZXRDbGllbnRJRCgpO3ZhciBuPW5ldyBSZWdFeHAoJ1xcYicr
bSsnPShbXjtdKilcXGInKTtyZXR1cm4gbi50ZXN0KGRvY3VtZW50LmNvb2tpZSk/
UmVnRXhwLiQxOm51bGw7fXZhciBsPXtzZXREb21haW46ZnVuY3Rpb24obSl7aT1t
O3ZhciBuPWcuZW5jb2RlKHtiYXNlX2RvbWFpbjppJiZpIT09Jy4nP2k6Jyd9KSxv
PW5ldyBEYXRlKCk7by5zZXRGdWxsWWVhcihvLmdldEZ1bGxZZWFyKCkrMSk7aign
ZmJtXycsbixvLmdldFRpbWUoKSk7fSxnZXREb21haW46ZnVuY3Rpb24oKXtyZXR1
cm4gaTt9LGxvYWRNZXRhOmZ1bmN0aW9uKCl7dmFyIG09aygnZmJtXycpO2lmKG0p
e3ZhciBuPWcuZGVjb2RlKG0pO2lmKCFpKWk9bi5iYXNlX2RvbWFpbjtyZXR1cm4g
bjt9fSxsb2FkU2lnbmVkUmVxdWVzdDpmdW5jdGlvbigpe3JldHVybiBrKCdmYnNy
XycpO30sc2V0U2lnbmVkUmVxdWVzdENvb2tpZTpmdW5jdGlvbihtLG4pe2lmKCFt
KXRocm93IG5ldyBFcnJvcignVmFsdWUgcGFzc2VkIHRvIENvb2tpZS5zZXRTaWdu
ZWRSZXF1ZXN0Q29va2llICcrJ3dhcyBlbXB0eS4nKTtqKCdmYnNyXycsbSxuKTt9
LGNsZWFyU2lnbmVkUmVxdWVzdENvb2tpZTpmdW5jdGlvbigpe2ooJ2Zic3JfJywn
JywwKTt9LHNldFJhdzpqfTtlLmV4cG9ydHM9bDt9KTsKX19kKCJndWlkIixbXSxm
dW5jdGlvbihhLGIsYyxkLGUsZil7ZnVuY3Rpb24gZygpe3JldHVybiAnZicrKE1h
dGgucmFuZG9tKCkqKDE8PDMwKSkudG9TdHJpbmcoMTYpLnJlcGxhY2UoJy4nLCcn
KTt9ZS5leHBvcnRzPWc7fSk7Cl9fZCgiaGFzTmFtZVByb3BlcnR5QnVnIixbImd1
aWQiXSxmdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9YignZ3VpZCcpLGg7ZnVu
Y3Rpb24gaSgpe3ZhciBrPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImZvcm0iKSxs
PWsuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW5wdXQiKSk7
bC5uYW1lPWcoKTtoPWwhPT1rLmVsZW1lbnRzW2wubmFtZV07az1sPW51bGw7cmV0
dXJuIGg7fWZ1bmN0aW9uIGooKXtyZXR1cm4gdHlwZW9mIGg9PT0ndW5kZWZpbmVk
Jz9pKCk6aDt9ZS5leHBvcnRzPWo7fSk7Cl9fZCgid3JhcEZ1bmN0aW9uIixbXSxm
dW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9e307ZnVuY3Rpb24gaChpLGosayl7
aj1qfHwnZGVmYXVsdCc7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGw9aiBpbiBnP2db
al0oaSxrKTppO3JldHVybiBsLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9O31oLnNl
dFdyYXBwZXI9ZnVuY3Rpb24oaSxqKXtqPWp8fCdkZWZhdWx0JztnW2pdPWk7fTtl
LmV4cG9ydHM9aDt9KTsKX19kKCJET01FdmVudExpc3RlbmVyIixbIndyYXBGdW5j
dGlvbiJdLGZ1bmN0aW9uKGEsYixjLGQsZSxmKXt2YXIgZz1iKCd3cmFwRnVuY3Rp
b24nKSxoLGk7aWYod2luZG93LmFkZEV2ZW50TGlzdGVuZXIpe2g9ZnVuY3Rpb24o
ayxsLG0pe20ud3JhcHBlcj1nKG0sJ2VudHJ5JyxrKyc6JytsKTtrLmFkZEV2ZW50
TGlzdGVuZXIobCxtLndyYXBwZXIsZmFsc2UpO307aT1mdW5jdGlvbihrLGwsbSl7
ay5yZW1vdmVFdmVudExpc3RlbmVyKGwsbS53cmFwcGVyLGZhbHNlKTt9O31lbHNl
IGlmKHdpbmRvdy5hdHRhY2hFdmVudCl7aD1mdW5jdGlvbihrLGwsbSl7bS53cmFw
cGVyPWcobSwnZW50cnknLGsrJzonK2wpO2suYXR0YWNoRXZlbnQoJ29uJytsLG0u
d3JhcHBlcik7fTtpPWZ1bmN0aW9uKGssbCxtKXtrLmRldGFjaEV2ZW50KCdvbicr
bCxtLndyYXBwZXIpO307fXZhciBqPXthZGQ6ZnVuY3Rpb24oayxsLG0pe2goayxs
LG0pO3JldHVybiB7cmVtb3ZlOmZ1bmN0aW9uKCl7aShrLGwsbSk7az1udWxsO319
O30scmVtb3ZlOml9O2UuZXhwb3J0cz1qO30pOwpfX2QoInNkay5jcmVhdGVJZnJh
bWUiLFsiY29weVByb3BlcnRpZXMiLCJndWlkIiwiaGFzTmFtZVByb3BlcnR5QnVn
IiwiRE9NRXZlbnRMaXN0ZW5lciJdLGZ1bmN0aW9uKGEsYixjLGQsZSxmKXt2YXIg
Zz1iKCdjb3B5UHJvcGVydGllcycpLGg9YignZ3VpZCcpLGk9YignaGFzTmFtZVBy
b3BlcnR5QnVnJyksaj1iKCdET01FdmVudExpc3RlbmVyJyk7ZnVuY3Rpb24gayhs
KXtsPWcoe30sbCk7dmFyIG0sbj1sLm5hbWV8fGgoKSxvPWwucm9vdCxwPWwuc3R5
bGV8fHtib3JkZXI6J25vbmUnfSxxPWwudXJsLHI9bC5vbmxvYWQ7aWYoaSgpKXtt
PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJzxpZnJhbWUgbmFtZT0iJytuKyciLz4n
KTt9ZWxzZXttPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImlmcmFtZSIpO20ubmFt
ZT1uO31kZWxldGUgbC5zdHlsZTtkZWxldGUgbC5uYW1lO2RlbGV0ZSBsLnVybDtk
ZWxldGUgbC5yb290O2RlbGV0ZSBsLm9ubG9hZDt2YXIgcz1nKHtmcmFtZUJvcmRl
cjowLGFsbG93VHJhbnNwYXJlbmN5OnRydWUsc2Nyb2xsaW5nOidubyd9LGwpO2lm
KHMud2lkdGgpbS53aWR0aD1zLndpZHRoKydweCc7aWYocy5oZWlnaHQpbS5oZWln
aHQ9cy5oZWlnaHQrJ3B4JztkZWxldGUgcy5oZWlnaHQ7ZGVsZXRlIHMud2lkdGg7
Zm9yKHZhciB0IGluIHMpaWYocy5oYXNPd25Qcm9wZXJ0eSh0KSltLnNldEF0dHJp
YnV0ZSh0LHNbdF0pO2cobS5zdHlsZSxwKTttLnNyYz0iamF2YXNjcmlwdDpmYWxz
ZSI7by5hcHBlbmRDaGlsZChtKTtpZihyKXZhciB1PWouYWRkKG0sJ2xvYWQnLGZ1
bmN0aW9uKCl7dS5yZW1vdmUoKTtyKCk7fSk7bS5zcmM9cTtyZXR1cm4gbTt9ZS5l
eHBvcnRzPWs7fSk7Cl9fZCgiRE9NV3JhcHBlciIsW10sZnVuY3Rpb24oYSxiLGMs
ZCxlLGYpe3ZhciBnLGgsaT17c2V0Um9vdDpmdW5jdGlvbihqKXtnPWo7fSxnZXRS
b290OmZ1bmN0aW9uKCl7cmV0dXJuIGd8fGRvY3VtZW50LmJvZHk7fSxzZXRXaW5k
b3c6ZnVuY3Rpb24oail7aD1qO30sZ2V0V2luZG93OmZ1bmN0aW9uKCl7cmV0dXJu
IGh8fHNlbGY7fX07ZS5leHBvcnRzPWk7fSk7Cl9fZCgiVXNlckFnZW50IixbXSxm
dW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9ZmFsc2UsaCxpLGosayxsLG0sbixv
LHAscSxyLHMsdCx1O2Z1bmN0aW9uIHYoKXtpZihnKXJldHVybjtnPXRydWU7dmFy
IHg9bmF2aWdhdG9yLnVzZXJBZ2VudCx5PS8oPzpNU0lFLihcZCtcLlxkKykpfCg/
Oig/OkZpcmVmb3h8R3JhblBhcmFkaXNvfEljZXdlYXNlbCkuKFxkK1wuXGQrKSl8
KD86T3BlcmEoPzouK1ZlcnNpb24ufC4pKFxkK1wuXGQrKSl8KD86QXBwbGVXZWJL
aXQuKFxkKyg/OlwuXGQrKT8pKS8uZXhlYyh4KSx6PS8oTWFjIE9TIFgpfChXaW5k
b3dzKXwoTGludXgpLy5leGVjKHgpO3I9L1xiKGlQaG9uZXxpUFthb11kKS8uZXhl
Yyh4KTtzPS9cYihpUFthb11kKS8uZXhlYyh4KTtwPS9BbmRyb2lkL2kuZXhlYyh4
KTt0PS9GQkFOXC9cdys7L2kuZXhlYyh4KTt1PS9Nb2JpbGUvaS5leGVjKHgpO3E9
ISEoL1dpbjY0Ly5leGVjKHgpKTtpZih5KXtoPXlbMV0/cGFyc2VGbG9hdCh5WzFd
KTpOYU47aWYoaCYmZG9jdW1lbnQuZG9jdW1lbnRNb2RlKWg9ZG9jdW1lbnQuZG9j
dW1lbnRNb2RlO2k9eVsyXT9wYXJzZUZsb2F0KHlbMl0pOk5hTjtqPXlbM10/cGFy
c2VGbG9hdCh5WzNdKTpOYU47az15WzRdP3BhcnNlRmxvYXQoeVs0XSk6TmFOO2lm
KGspe3k9Lyg/OkNocm9tZVwvKFxkK1wuXGQrKSkvLmV4ZWMoeCk7bD15JiZ5WzFd
P3BhcnNlRmxvYXQoeVsxXSk6TmFOO31lbHNlIGw9TmFOO31lbHNlIGg9aT1qPWw9
az1OYU47aWYoeil7aWYoelsxXSl7dmFyIGFhPS8oPzpNYWMgT1MgWCAoXGQrKD86
Wy5fXVxkKyk/KSkvLmV4ZWMoeCk7bT1hYT9wYXJzZUZsb2F0KGFhWzFdLnJlcGxh
Y2UoJ18nLCcuJykpOnRydWU7fWVsc2UgbT1mYWxzZTtuPSEhelsyXTtvPSEhelsz
XTt9ZWxzZSBtPW49bz1mYWxzZTt9dmFyIHc9e2llOmZ1bmN0aW9uKCl7cmV0dXJu
IHYoKXx8aDt9LGllNjQ6ZnVuY3Rpb24oKXtyZXR1cm4gdy5pZSgpJiZxO30sZmly
ZWZveDpmdW5jdGlvbigpe3JldHVybiB2KCl8fGk7fSxvcGVyYTpmdW5jdGlvbigp
e3JldHVybiB2KCl8fGo7fSx3ZWJraXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdigpfHxr
O30sc2FmYXJpOmZ1bmN0aW9uKCl7cmV0dXJuIHcud2Via2l0KCk7fSxjaHJvbWU6
ZnVuY3Rpb24oKXtyZXR1cm4gdigpfHxsO30sd2luZG93czpmdW5jdGlvbigpe3Jl
dHVybiB2KCl8fG47fSxvc3g6ZnVuY3Rpb24oKXtyZXR1cm4gdigpfHxtO30sbGlu
dXg6ZnVuY3Rpb24oKXtyZXR1cm4gdigpfHxvO30saXBob25lOmZ1bmN0aW9uKCl7
cmV0dXJuIHYoKXx8cjt9LG1vYmlsZTpmdW5jdGlvbigpe3JldHVybiB2KCl8fChy
fHxzfHxwfHx1KTt9LG5hdGl2ZUFwcDpmdW5jdGlvbigpe3JldHVybiB2KCl8fHQ7
fSxhbmRyb2lkOmZ1bmN0aW9uKCl7cmV0dXJuIHYoKXx8cDt9LGlwYWQ6ZnVuY3Rp
b24oKXtyZXR1cm4gdigpfHxzO319O2UuZXhwb3J0cz13O30pOwpfX2QoInNkay5n
ZXRDb250ZXh0VHlwZSIsWyJVc2VyQWdlbnQiLCJzZGsuUnVudGltZSJdLGZ1bmN0
aW9uKGEsYixjLGQsZSxmKXt2YXIgZz1iKCdVc2VyQWdlbnQnKSxoPWIoJ3Nkay5S
dW50aW1lJyk7ZnVuY3Rpb24gaSgpe2lmKGcubmF0aXZlQXBwKCkpcmV0dXJuIDM7
aWYoZy5tb2JpbGUoKSlyZXR1cm4gMjtpZihoLmlzRW52aXJvbm1lbnQoaC5FTlZJ
Uk9OTUVOVFMuQ0FOVkFTKSlyZXR1cm4gNTtyZXR1cm4gMTt9ZS5leHBvcnRzPWk7
fSk7Cl9fZCgiTG9nIixbInNwcmludGYiXSxmdW5jdGlvbihhLGIsYyxkLGUsZil7
dmFyIGc9Yignc3ByaW50ZicpLGg9e0RFQlVHOjMsSU5GTzoyLFdBUk5JTkc6MSxF
UlJPUjowfTtmdW5jdGlvbiBpKGssbCl7dmFyIG09QXJyYXkucHJvdG90eXBlLnNs
aWNlLmNhbGwoYXJndW1lbnRzLDIpLG49Zy5hcHBseShudWxsLG0pLG89d2luZG93
LmNvbnNvbGU7aWYobyYmai5sZXZlbD49aylvW2wgaW4gbz9sOidsb2cnXShuKTt9
dmFyIGo9e2xldmVsOi0xLExldmVsOmgsZGVidWc6RVM1KGksJ2JpbmQnLHRydWUs
bnVsbCxoLkRFQlVHLCdkZWJ1ZycpLGluZm86RVM1KGksJ2JpbmQnLHRydWUsbnVs
bCxoLklORk8sJ2RlYnVnJyksd2FybjpFUzUoaSwnYmluZCcsdHJ1ZSxudWxsLGgu
V0FSTklORywnZGVidWcnKSxlcnJvcjpFUzUoaSwnYmluZCcsdHJ1ZSxudWxsLGgu
RVJST1IsJ2RlYnVnJyl9O2UuZXhwb3J0cz1qO30pOwpfX2QoIkJhc2U2NCIsW10s
ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnPSdBQkNERUZHSElKS0xNTk9QUVJT
VFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvJztm
dW5jdGlvbiBoKGwpe2w9KGwuY2hhckNvZGVBdCgwKTw8MTYpfChsLmNoYXJDb2Rl
QXQoMSk8PDgpfGwuY2hhckNvZGVBdCgyKTtyZXR1cm4gU3RyaW5nLmZyb21DaGFy
Q29kZShnLmNoYXJDb2RlQXQobD4+PjE4KSxnLmNoYXJDb2RlQXQoKGw+Pj4xMikm
NjMpLGcuY2hhckNvZGVBdCgobD4+PjYpJjYzKSxnLmNoYXJDb2RlQXQobCY2Mykp
O312YXIgaT0nPl9fXz80NTY3ODk6Ozw9X19fX19fXycrJ1wwXDFcMlwzXDRcNVw2
XDdcYlx0XG5cMTNcZlxyXDE2XDE3XDIwXDIxXDIyXDIzXDI0XDI1XDI2XDI3XDMw
XDMxJysnX19fX19fXDMyXDMzXDM0XDM1XDM2XDM3ICEiIyQlJlwnKCkqKywtLi8w
MTIzJztmdW5jdGlvbiBqKGwpe2w9KGkuY2hhckNvZGVBdChsLmNoYXJDb2RlQXQo
MCktNDMpPDwxOCl8KGkuY2hhckNvZGVBdChsLmNoYXJDb2RlQXQoMSktNDMpPDwx
Mil8KGkuY2hhckNvZGVBdChsLmNoYXJDb2RlQXQoMiktNDMpPDw2KXxpLmNoYXJD
b2RlQXQobC5jaGFyQ29kZUF0KDMpLTQzKTtyZXR1cm4gU3RyaW5nLmZyb21DaGFy
Q29kZShsPj4+MTYsKGw+Pj44KSYyNTUsbCYyNTUpO312YXIgaz17ZW5jb2RlOmZ1
bmN0aW9uKGwpe2w9dW5lc2NhcGUoZW5jb2RlVVJJKGwpKTt2YXIgbT0obC5sZW5n
dGgrMiklMztsPShsKydcMFwwJy5zbGljZShtKSkucmVwbGFjZSgvW1xzXFNdezN9
L2csaCk7cmV0dXJuIGwuc2xpY2UoMCxsLmxlbmd0aCttLTIpKyc9PScuc2xpY2Uo
bSk7fSxkZWNvZGU6ZnVuY3Rpb24obCl7bD1sLnJlcGxhY2UoL1teQS1aYS16MC05
K1wvXS9nLCcnKTt2YXIgbT0obC5sZW5ndGgrMykmMztsPShsKydBQUEnLnNsaWNl
KG0pKS5yZXBsYWNlKC8uLi4uL2csaik7bD1sLnNsaWNlKDAsbC5sZW5ndGgrbS0z
KTt0cnl7cmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChlc2NhcGUobCkpO31jYXRj
aChuKXt0aHJvdyBuZXcgRXJyb3IoJ05vdCB2YWxpZCBVVEYtOCcpO319LGVuY29k
ZU9iamVjdDpmdW5jdGlvbihsKXtyZXR1cm4gay5lbmNvZGUoRVM1KCdKU09OJywn
c3RyaW5naWZ5JyxmYWxzZSxsKSk7fSxkZWNvZGVPYmplY3Q6ZnVuY3Rpb24obCl7
cmV0dXJuIEVTNSgnSlNPTicsJ3BhcnNlJyxmYWxzZSxrLmRlY29kZShsKSk7fSxl
bmNvZGVOdW1zOmZ1bmN0aW9uKGwpe3JldHVybiBTdHJpbmcuZnJvbUNoYXJDb2Rl
LmFwcGx5KFN0cmluZyxFUzUobCwnbWFwJyx0cnVlLGZ1bmN0aW9uKG0pe3JldHVy
biBnLmNoYXJDb2RlQXQoKG18LShtPjYzKSkmLShtPjApJjYzKTt9KSk7fX07ZS5l
eHBvcnRzPWs7fSk7Cl9fZCgic2RrLlNpZ25lZFJlcXVlc3QiLFsiQmFzZTY0Il0s
ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnPWIoJ0Jhc2U2NCcpO2Z1bmN0aW9u
IGgoail7aWYoIWopcmV0dXJuIG51bGw7dmFyIGs9ai5zcGxpdCgnLicsMilbMV0u
cmVwbGFjZSgvXC0vZywnKycpLnJlcGxhY2UoL1xfL2csJy8nKTtyZXR1cm4gZy5k
ZWNvZGVPYmplY3Qoayk7fXZhciBpPXtwYXJzZTpofTtlLmV4cG9ydHM9aTt9KTsK
X19kKCJVcmxNYXAiLFsiVXJsTWFwQ29uZmlnIl0sZnVuY3Rpb24oYSxiLGMsZCxl
LGYpe3ZhciBnPWIoJ1VybE1hcENvbmZpZycpLGg9e3Jlc29sdmU6ZnVuY3Rpb24o
aSxqKXt2YXIgaz10eXBlb2Ygaj09J3VuZGVmaW5lZCc/bG9jYXRpb24ucHJvdG9j
b2wucmVwbGFjZSgnOicsJycpOmo/J2h0dHBzJzonaHR0cCc7aWYoaSBpbiBnKXJl
dHVybiBrKyc6Ly8nK2dbaV07aWYodHlwZW9mIGo9PSd1bmRlZmluZWQnJiZpKydf
JytrIGluIGcpcmV0dXJuIGsrJzovLycrZ1tpKydfJytrXTtpZihqIT09dHJ1ZSYm
aSsnX2h0dHAnIGluIGcpcmV0dXJuICdodHRwOi8vJytnW2krJ19odHRwJ107aWYo
aiE9PWZhbHNlJiZpKydfaHR0cHMnIGluIGcpcmV0dXJuICdodHRwczovLycrZ1tp
KydfaHR0cHMnXTt9fTtlLmV4cG9ydHM9aDt9KTsKX19kKCJVUkwiLFsiQXNzZXJ0
IiwiY29weVByb3BlcnRpZXMiLCJRdWVyeVN0cmluZyIsIkxvZyJdLGZ1bmN0aW9u
KGEsYixjLGQsZSxmKXt2YXIgZz1iKCdBc3NlcnQnKSxoPWIoJ2NvcHlQcm9wZXJ0
aWVzJyksaT1iKCdRdWVyeVN0cmluZycpLGo9YignTG9nJyksaz1uZXcgUmVnRXhw
KCcoJysnKCgoXFx3Kyk6KT8vLyknKycoLio/QCk/JysnKFtefi8/IzpdKyknKyco
OihcXGQrKSk/JysnKT8nKycoW15cXD8kI10rKT8nKycoXFw/KFteJCNdKykpPycr
JygjKFteJF0rKSk/JyksbD0vW1wwXFxdLyxtPS9bXlx3XC1cLiw7XC8/OkA9JiUj
JH4rISonXFtcXSgpXSsvZyxuPS9eW2EtejAtOS5dW2EtejAtOVwtXC5dK1thLXow
LTkuXSQvLG89L1wuZmFjZWJvb2tcLmNvbSQvO2Z1bmN0aW9uIHAocSl7Zy5pc1N0
cmluZyhxLCdUaGUgcGFzc2VkIGFyZ3VtZW50IHdhcyBvZiBpbnZhbGlkIHR5cGUu
Jyk7aWYobC50ZXN0KHEpKXRocm93IG5ldyBVUklFcnJvcignVGhlIHBhc3NlZCBh
cmd1bWVudCBjb3VsZCBub3QgYmUgcGFyc2VkIGFzIGEgdXJsLicpO2lmKHRoaXMg
aW5zdGFuY2VvZiBwPT09ZmFsc2UpcmV0dXJuIG5ldyBwKHEpO3ZhciByPXEucmVw
bGFjZShtLGZ1bmN0aW9uKHQpe2oud2FybignRXNjYXBpbmcgdW5lc2NhcGVkIGNo
YXJhY3RlciBcXHglcyBmcm9tICIlcyInLHQuY2hhckNvZGVBdCgwKS50b1N0cmlu
ZygxNikscSk7cmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudCh0KTt9KS5tYXRjaChr
KTtpZighcXx8IXIpdGhyb3cgbmV3IFVSSUVycm9yKCdUaGUgcGFzc2VkIGFyZ3Vt
ZW50IGNvdWxkIG5vdCBiZSBwYXJzZWQgYXMgYSB1cmwuJyk7dmFyIHM9ISFsb2Nh
dGlvbi5ob3N0bmFtZTt0aGlzLnNldFByb3RvY29sKHJbNF18fChzP2xvY2F0aW9u
LnByb3RvY29sLnJlcGxhY2UoLzovLCcnKTonJykpO3RoaXMuc2V0RG9tYWluKHJb
Nl18fGxvY2F0aW9uLmhvc3RuYW1lKTt0aGlzLnNldFBvcnQocls4XXx8KHMmJiFy
WzZdP2xvY2F0aW9uLnBvcnQ6JycpKTt0aGlzLnNldFBhdGgocls5XXx8JycpO3Ro
aXMuc2V0U2VhcmNoKHJbMTFdfHwnJyk7dGhpcy5zZXRGcmFnbWVudChyWzEzXXx8
JycpO2lmKHRoaXMuX3BhdGguc3Vic3RyaW5nKDAsMSkhPScvJyl0aGlzLl9wYXRo
PScvJyt0aGlzLl9wYXRoO2lmKHRoaXMuX2RvbWFpbiYmIW4udGVzdChkZWNvZGVV
UklDb21wb25lbnQodGhpcy5fZG9tYWluLnRvTG93ZXJDYXNlKCkpKSl7ai5lcnJv
cignSW52YWxpZCBjaGFyYWN0ZXJzIGZvdW5kIGluIGRvbWFpbiBuYW1lOiAlcycs
dGhpcy5fZG9tYWluKTt0aHJvdyBuZXcgVVJJRXJyb3IoJ0RvbWFpbiBjb250YWlu
ZWQgaW52YWxpZCBjaGFyYWN0ZXJzLicpO319aChwLnByb3RvdHlwZSx7Y29uc3Ry
dWN0b3I6cCxnZXRQcm90b2NvbDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9wcm90
b2NvbDt9LHNldFByb3RvY29sOmZ1bmN0aW9uKHEpe3RoaXMuX3Byb3RvY29sPXE7
cmV0dXJuIHRoaXM7fSxnZXREb21haW46ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5f
ZG9tYWluO30sc2V0RG9tYWluOmZ1bmN0aW9uKHEpe3RoaXMuX2RvbWFpbj1xO3Jl
dHVybiB0aGlzO30sZ2V0UG9ydDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9wb3J0
O30sc2V0UG9ydDpmdW5jdGlvbihxKXt0aGlzLl9wb3J0PXE7cmV0dXJuIHRoaXM7
fSxnZXRQYXRoOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3BhdGg7fSxzZXRQYXRo
OmZ1bmN0aW9uKHEpe3RoaXMuX3BhdGg9cTtyZXR1cm4gdGhpczt9LGdldFNlYXJj
aDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zZWFyY2g7fSxzZXRTZWFyY2g6ZnVu
Y3Rpb24ocSl7dGhpcy5fc2VhcmNoPXE7cmV0dXJuIHRoaXM7fSxnZXRGcmFnbWVu
dDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9mcmFnbWVudDt9LHNldEZyYWdtZW50
OmZ1bmN0aW9uKHEpe3RoaXMuX2ZyYWdtZW50PXE7cmV0dXJuIHRoaXM7fSxnZXRQ
YXJzZWRTZWFyY2g6ZnVuY3Rpb24oKXtyZXR1cm4gaS5kZWNvZGUodGhpcy5fc2Vh
cmNoKTt9LGdldFBhcnNlZEZyYWdtZW50OmZ1bmN0aW9uKCl7cmV0dXJuIGkuZGVj
b2RlKHRoaXMuX2ZyYWdtZW50KTt9LGlzRmFjZWJvb2tVUkw6ZnVuY3Rpb24oKXty
ZXR1cm4gby50ZXN0KHRoaXMuX2RvbWFpbik7fSx0b1N0cmluZzpmdW5jdGlvbigp
e3JldHVybiAodGhpcy5fcHJvdG9jb2w/dGhpcy5fcHJvdG9jb2wrJzonOicnKSso
dGhpcy5fZG9tYWluPycvLycrdGhpcy5fZG9tYWluOicnKSsodGhpcy5fcG9ydD8n
OicrdGhpcy5fcG9ydDonJykrdGhpcy5fcGF0aCsodGhpcy5fc2VhcmNoPyc/Jyt0
aGlzLl9zZWFyY2g6JycpKyh0aGlzLl9mcmFnbWVudD8nIycrdGhpcy5fZnJhZ21l
bnQ6JycpO30sdmFsdWVPZjpmdW5jdGlvbigpe3JldHVybiB0aGlzLnRvU3RyaW5n
KCk7fX0pO2gocCx7Z2V0Q3VycmVudDpmdW5jdGlvbigpe3JldHVybiBuZXcgcChs
b2NhdGlvbi5ocmVmKTt9LGdldFJlZmVycmVyOmZ1bmN0aW9uKCl7cmV0dXJuIGRv
Y3VtZW50LnJlZmVycmVyP25ldyBwKGRvY3VtZW50LnJlZmVycmVyKTpudWxsO319
KTtlLmV4cG9ydHM9cDt9KTsKX19kKCJzZGsuZG9tUmVhZHkiLFtdLGZ1bmN0aW9u
KGEsYixjLGQsZSxmKXt2YXIgZyxoPSJyZWFkeVN0YXRlIiBpbiBkb2N1bWVudD8v
bG9hZGVkfGNvbXBsZXRlLy50ZXN0KGRvY3VtZW50LnJlYWR5U3RhdGUpOiEhZG9j
dW1lbnQuYm9keTtmdW5jdGlvbiBpKCl7aWYoIWcpcmV0dXJuO3ZhciBsO3doaWxl
KGw9Zy5zaGlmdCgpKWwoKTtnPW51bGw7fWZ1bmN0aW9uIGoobCl7aWYoZyl7Zy5w
dXNoKGwpO3JldHVybjt9ZWxzZSBsKCk7fWlmKCFoKXtnPVtdO2lmKGRvY3VtZW50
LmFkZEV2ZW50TGlzdGVuZXIpe2RvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RP
TUNvbnRlbnRMb2FkZWQnLGksZmFsc2UpO3dpbmRvdy5hZGRFdmVudExpc3RlbmVy
KCdsb2FkJyxpLGZhbHNlKTt9ZWxzZSBpZihkb2N1bWVudC5hdHRhY2hFdmVudCl7
ZG9jdW1lbnQuYXR0YWNoRXZlbnQoJ29ucmVhZHlzdGF0ZWNoYW5nZScsaSk7d2lu
ZG93LmF0dGFjaEV2ZW50KCdvbmxvYWQnLGkpO31pZihkb2N1bWVudC5kb2N1bWVu
dEVsZW1lbnQuZG9TY3JvbGwmJndpbmRvdz09d2luZG93LnRvcCl7dmFyIGs9ZnVu
Y3Rpb24oKXt0cnl7ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmRvU2Nyb2xsKCds
ZWZ0Jyk7fWNhdGNoKGwpe3NldFRpbWVvdXQoaywwKTtyZXR1cm47fWkoKTt9O2so
KTt9fWUuZXhwb3J0cz1qO30sMyk7Cl9fZCgic2RrLkNvbnRlbnQiLFsic2RrLmRv
bVJlYWR5IiwiTG9nIiwiVXNlckFnZW50Il0sZnVuY3Rpb24oYSxiLGMsZCxlLGYp
e3ZhciBnPWIoJ3Nkay5kb21SZWFkeScpLGg9YignTG9nJyksaT1iKCdVc2VyQWdl
bnQnKSxqLGssbD17YXBwZW5kOmZ1bmN0aW9uKG0sbil7aWYoIW4paWYoIWope2o9
bj1kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZmItcm9vdCcpO2lmKCFuKXtoLndh
cm4oJ1RoZSAiZmItcm9vdCIgZGl2IGhhcyBub3QgYmVlbiBjcmVhdGVkLCBhdXRv
LWNyZWF0aW5nJyk7aj1uPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO24u
aWQ9J2ZiLXJvb3QnO2lmKGkuaWUoKXx8IWRvY3VtZW50LmJvZHkpe2coZnVuY3Rp
b24oKXtkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG4pO30pO31lbHNlIGRvY3Vt
ZW50LmJvZHkuYXBwZW5kQ2hpbGQobik7fW4uY2xhc3NOYW1lKz0nIGZiX3Jlc2V0
Jzt9ZWxzZSBuPWo7aWYodHlwZW9mIG09PSdzdHJpbmcnKXt2YXIgbz1kb2N1bWVu
dC5jcmVhdGVFbGVtZW50KCdkaXYnKTtuLmFwcGVuZENoaWxkKG8pLmlubmVySFRN
TD1tO3JldHVybiBvO31lbHNlIHJldHVybiBuLmFwcGVuZENoaWxkKG0pO30sYXBw
ZW5kSGlkZGVuOmZ1bmN0aW9uKG0pe2lmKCFuKXt2YXIgbj1kb2N1bWVudC5jcmVh
dGVFbGVtZW50KCdkaXYnKSxvPW4uc3R5bGU7by5wb3NpdGlvbj0nYWJzb2x1dGUn
O28udG9wPSctMTAwMDBweCc7by53aWR0aD1vLmhlaWdodD0wO249bC5hcHBlbmQo
bik7fXJldHVybiBsLmFwcGVuZChtLG4pO30sc3VibWl0VG9UYXJnZXQ6ZnVuY3Rp
b24obSxuKXt2YXIgbz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb3JtJyk7by5h
Y3Rpb249bS51cmw7by50YXJnZXQ9bS50YXJnZXQ7by5tZXRob2Q9KG4pPydHRVQn
OidQT1NUJztsLmFwcGVuZEhpZGRlbihvKTtmb3IodmFyIHAgaW4gbS5wYXJhbXMp
aWYobS5wYXJhbXMuaGFzT3duUHJvcGVydHkocCkpe3ZhciBxPW0ucGFyYW1zW3Bd
O2lmKHEhPT1udWxsJiZxIT09dW5kZWZpbmVkKXt2YXIgcj1kb2N1bWVudC5jcmVh
dGVFbGVtZW50KCdpbnB1dCcpO3IubmFtZT1wO3IudmFsdWU9cTtvLmFwcGVuZENo
aWxkKHIpO319by5zdWJtaXQoKTtvLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobyk7
fX07ZS5leHBvcnRzPWw7fSk7Cl9fZCgic2RrLkV2ZW50IixbXSxmdW5jdGlvbihh
LGIsYyxkLGUsZil7dmFyIGc9e3N1YnNjcmliZXJzOmZ1bmN0aW9uKCl7aWYoIXRo
aXMuX3N1YnNjcmliZXJzTWFwKXRoaXMuX3N1YnNjcmliZXJzTWFwPXt9O3JldHVy
biB0aGlzLl9zdWJzY3JpYmVyc01hcDt9LHN1YnNjcmliZTpmdW5jdGlvbihoLGkp
e3ZhciBqPXRoaXMuc3Vic2NyaWJlcnMoKTtpZighaltoXSl7altoXT1baV07fWVs
c2UgaltoXS5wdXNoKGkpO30sdW5zdWJzY3JpYmU6ZnVuY3Rpb24oaCxpKXt2YXIg
aj10aGlzLnN1YnNjcmliZXJzKClbaF07aWYoailFUzUoaiwnZm9yRWFjaCcsdHJ1
ZSxmdW5jdGlvbihrLGwpe2lmKGs9PWkpaltsXT1udWxsO30pO30sbW9uaXRvcjpm
dW5jdGlvbihoLGkpe2lmKCFpKCkpe3ZhciBqPXRoaXMsaz1mdW5jdGlvbigpe2lm
KGkuYXBwbHkoaSxhcmd1bWVudHMpKWoudW5zdWJzY3JpYmUoaCxrKTt9O3RoaXMu
c3Vic2NyaWJlKGgsayk7fX0sY2xlYXI6ZnVuY3Rpb24oaCl7ZGVsZXRlIHRoaXMu
c3Vic2NyaWJlcnMoKVtoXTt9LGZpcmU6ZnVuY3Rpb24oKXt2YXIgaD1BcnJheS5w
cm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpLGk9aC5zaGlmdCgpLGo9dGhp
cy5zdWJzY3JpYmVycygpW2ldO2lmKGopRVM1KGosJ2ZvckVhY2gnLHRydWUsZnVu
Y3Rpb24oayl7aWYoaylrLmFwcGx5KHRoaXMsaCk7fSk7fX07ZS5leHBvcnRzPWc7
fSk7Cl9fZCgiUXVldWUiLFsiY29weVByb3BlcnRpZXMiXSxmdW5jdGlvbihhLGIs
YyxkLGUsZil7dmFyIGc9YignY29weVByb3BlcnRpZXMnKSxoPXt9O2Z1bmN0aW9u
IGkoail7dGhpcy5fb3B0cz1nKHtpbnRlcnZhbDowLHByb2Nlc3NvcjpudWxsfSxq
KTt0aGlzLl9xdWV1ZT1bXTt0aGlzLl9zdG9wcGVkPXRydWU7fWcoaS5wcm90b3R5
cGUse19kaXNwYXRjaDpmdW5jdGlvbihqKXtpZih0aGlzLl9zdG9wcGVkfHx0aGlz
Ll9xdWV1ZS5sZW5ndGg9PT0wKXJldHVybjtpZighdGhpcy5fb3B0cy5wcm9jZXNz
b3Ipe3RoaXMuX3N0b3BwZWQ9dHJ1ZTt0aHJvdyBuZXcgRXJyb3IoJ05vIHByb2Nl
c3NvciBhdmFpbGFibGUnKTt9aWYodGhpcy5fb3B0cy5pbnRlcnZhbCl7dGhpcy5f
b3B0cy5wcm9jZXNzb3IuY2FsbCh0aGlzLHRoaXMuX3F1ZXVlLnNoaWZ0KCkpO3Ro
aXMuX3RpbWVvdXQ9c2V0VGltZW91dChFUzUodGhpcy5fZGlzcGF0Y2gsJ2JpbmQn
LHRydWUsdGhpcyksdGhpcy5fb3B0cy5pbnRlcnZhbCk7fWVsc2Ugd2hpbGUodGhp
cy5fcXVldWUubGVuZ3RoKXRoaXMuX29wdHMucHJvY2Vzc29yLmNhbGwodGhpcyx0
aGlzLl9xdWV1ZS5zaGlmdCgpKTt9LGVucXVldWU6ZnVuY3Rpb24oail7aWYodGhp
cy5fb3B0cy5wcm9jZXNzb3ImJiF0aGlzLl9zdG9wcGVkKXt0aGlzLl9vcHRzLnBy
b2Nlc3Nvci5jYWxsKHRoaXMsaik7fWVsc2UgdGhpcy5fcXVldWUucHVzaChqKTty
ZXR1cm4gdGhpczt9LHN0YXJ0OmZ1bmN0aW9uKGope2lmKGopdGhpcy5fb3B0cy5w
cm9jZXNzb3I9ajt0aGlzLl9zdG9wcGVkPWZhbHNlO3RoaXMuX2Rpc3BhdGNoKCk7
cmV0dXJuIHRoaXM7fSxkaXNwYXRjaDpmdW5jdGlvbigpe3RoaXMuX2Rpc3BhdGNo
KHRydWUpO30sc3RvcDpmdW5jdGlvbihqKXt0aGlzLl9zdG9wcGVkPXRydWU7aWYo
ailjbGVhclRpbWVvdXQodGhpcy5fdGltZW91dCk7cmV0dXJuIHRoaXM7fSxtZXJn
ZTpmdW5jdGlvbihqLGspe3RoaXMuX3F1ZXVlW2s/J3Vuc2hpZnQnOidwdXNoJ10u
YXBwbHkodGhpcy5fcXVldWUsai5fcXVldWUpO2ouX3F1ZXVlPVtdO3RoaXMuX2Rp
c3BhdGNoKCk7cmV0dXJuIHRoaXM7fSxnZXRMZW5ndGg6ZnVuY3Rpb24oKXtyZXR1
cm4gdGhpcy5fcXVldWUubGVuZ3RoO319KTtnKGkse2dldDpmdW5jdGlvbihqLGsp
e3ZhciBsO2lmKGogaW4gaCl7bD1oW2pdO31lbHNlIGw9aFtqXT1uZXcgaShrKTty
ZXR1cm4gbDt9LGV4aXN0czpmdW5jdGlvbihqKXtyZXR1cm4gaiBpbiBoO30scmVt
b3ZlOmZ1bmN0aW9uKGope3JldHVybiBkZWxldGUgaFtqXTt9fSk7ZS5leHBvcnRz
PWk7fSk7Cl9fZCgicmVzb2x2ZVVSSSIsW10sZnVuY3Rpb24oYSxiLGMsZCxlLGYp
e2Z1bmN0aW9uIGcoaCl7aWYoIWgpcmV0dXJuIHdpbmRvdy5sb2NhdGlvbi5ocmVm
O2g9aC5yZXBsYWNlKC8mL2csJyZhbXA7JykucmVwbGFjZSgvIi9nLCcmcXVvdDsn
KTt2YXIgaT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtpLmlubmVySFRN
TD0nPGEgaHJlZj0iJytoKyciPjwvYT4nO3JldHVybiBpLmZpcnN0Q2hpbGQuaHJl
Zjt9ZS5leHBvcnRzPWc7fSk7Cl9fZCgicmVzb2x2ZVdpbmRvdyIsW10sZnVuY3Rp
b24oYSxiLGMsZCxlLGYpe2Z1bmN0aW9uIGcoaCl7dmFyIGk9d2luZG93LGo9aC5z
cGxpdCgnLicpO3RyeXtmb3IodmFyIGw9MDtsPGoubGVuZ3RoO2wrKyl7dmFyIG09
altsXSxuPS9eZnJhbWVzXFtbJyJdPyhbYS16QS1aMC05XC1fXSspWyciXT9cXSQv
LmV4ZWMobSk7aWYobil7aT1pLmZyYW1lc1tuWzFdXTt9ZWxzZSBpZihtPT09J29w
ZW5lcid8fG09PT0ncGFyZW50J3x8bT09PSd0b3AnKXtpPWlbbV07fWVsc2UgcmV0
dXJuIG51bGw7fX1jYXRjaChrKXtyZXR1cm4gbnVsbDt9cmV0dXJuIGk7fWUuZXhw
b3J0cz1nO30pOwpfX2QoIkpTT05SUEMiLFsiY29weVByb3BlcnRpZXMiLCJMb2ci
XSxmdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9YignY29weVByb3BlcnRpZXMn
KSxoPWIoJ0xvZycpO2Z1bmN0aW9uIGkoail7dGhpcy5fY291bnRlcj0wO3RoaXMu
X2NhbGxiYWNrcz17fTt0aGlzLnJlbW90ZT17fTt0aGlzLmxvY2FsPXt9O3RoaXMu
X3dyaXRlPWo7fWcoaS5wcm90b3R5cGUse3N0dWI6ZnVuY3Rpb24oail7dGhpcy5y
ZW1vdGVbal09RVM1KGZ1bmN0aW9uKCl7dmFyIGs9QXJyYXkucHJvdG90eXBlLnNs
aWNlLmNhbGwoYXJndW1lbnRzKSxsPXtqc29ucnBjOicyLjAnLG1ldGhvZDpqfTtp
Zih0eXBlb2Yga1trLmxlbmd0aC0xXT09J2Z1bmN0aW9uJyl7bC5pZD0rK3RoaXMu
X2NvdW50ZXI7dGhpcy5fY2FsbGJhY2tzW2wuaWRdPWsucG9wKCk7fWwucGFyYW1z
PWs7dGhpcy5fd3JpdGUoRVM1KCdKU09OJywnc3RyaW5naWZ5JyxmYWxzZSxsKSx7
bWV0aG9kOmp9KTt9LCdiaW5kJyx0cnVlLHRoaXMpO30scmVhZDpmdW5jdGlvbihq
LGspe3ZhciBsPUVTNSgnSlNPTicsJ3BhcnNlJyxmYWxzZSxqKSxtPWwuaWQ7aWYo
IWwubWV0aG9kKXtpZighdGhpcy5fY2FsbGJhY2tzW21dKXtoLndhcm4oJ0NvdWxk
IG5vdCBmaW5kIGNhbGxiYWNrICVzJyxtKTtyZXR1cm47fXZhciBuPXRoaXMuX2Nh
bGxiYWNrc1ttXTtkZWxldGUgdGhpcy5fY2FsbGJhY2tzW21dO2RlbGV0ZSBsLmlk
O2RlbGV0ZSBsLmpzb25ycGM7bihsKTtyZXR1cm47fXZhciBvPXRoaXMscD10aGlz
LmxvY2FsW2wubWV0aG9kXSxxO2lmKG0pe3E9ZnVuY3Rpb24odCx1KXt2YXIgdj17
anNvbnJwYzonMi4wJyxpZDptfTt2W3RdPXU7c2V0VGltZW91dChmdW5jdGlvbigp
e28uX3dyaXRlKEVTNSgnSlNPTicsJ3N0cmluZ2lmeScsZmFsc2Usdiksayk7fSww
KTt9O31lbHNlIHE9ZnVuY3Rpb24oKXt9O2lmKCFwKXtoLmVycm9yKCdNZXRob2Qg
IiVzIiBoYXMgbm90IGJlZW4gZGVmaW5lZCcsbC5tZXRob2QpO3EoJ2Vycm9yJyx7
Y29kZTotMzI2MDEsbWVzc2FnZTonTWV0aG9kIG5vdCBmb3VuZCcsZGF0YTpsLm1l
dGhvZH0pO3JldHVybjt9bC5wYXJhbXMucHVzaChFUzUocSwnYmluZCcsdHJ1ZSxu
dWxsLCdyZXN1bHQnKSk7bC5wYXJhbXMucHVzaChFUzUocSwnYmluZCcsdHJ1ZSxu
dWxsLCdlcnJvcicpKTt0cnl7dmFyIHM9cC5hcHBseShrfHxudWxsLGwucGFyYW1z
KTtpZih0eXBlb2YgcyE9PSd1bmRlZmluZWQnKXEoJ3Jlc3VsdCcscyk7fWNhdGNo
KHIpe2guZXJyb3IoJ0ludm9rYXRpb24gb2YgUlBDIG1ldGhvZCAlcyByZXN1bHRl
ZCBpbiB0aGUgZXJyb3I6ICVzJyxsLm1ldGhvZCxyLm1lc3NhZ2UpO3EoJ2Vycm9y
Jyx7Y29kZTotMzI2MDMsbWVzc2FnZTonSW50ZXJuYWwgZXJyb3InLGRhdGE6ci5t
ZXNzYWdlfSk7fX19KTtlLmV4cG9ydHM9aTt9KTsKX19kKCJzZGsuUlBDIixbIkFz
c2VydCIsIkpTT05SUEMiLCJRdWV1ZSJdLGZ1bmN0aW9uKGEsYixjLGQsZSxmKXt2
YXIgZz1iKCdBc3NlcnQnKSxoPWIoJ0pTT05SUEMnKSxpPWIoJ1F1ZXVlJyksaj1u
ZXcgaSgpLGs9bmV3IGgoZnVuY3Rpb24obSl7ai5lbnF1ZXVlKG0pO30pLGw9e2xv
Y2FsOmsubG9jYWwscmVtb3RlOmsucmVtb3RlLHN0dWI6RVM1KGsuc3R1YiwnYmlu
ZCcsdHJ1ZSxrKSxzZXRJblF1ZXVlOmZ1bmN0aW9uKG0pe2cuaXNJbnN0YW5jZU9m
KGksbSk7bS5zdGFydChmdW5jdGlvbihuKXtrLnJlYWQobik7fSk7fSxnZXRPdXRR
dWV1ZTpmdW5jdGlvbigpe3JldHVybiBqO319O2UuZXhwb3J0cz1sO30pOwpfX2Qo
ImVtcHR5RnVuY3Rpb24iLFsiY29weVByb3BlcnRpZXMiXSxmdW5jdGlvbihhLGIs
YyxkLGUsZil7dmFyIGc9YignY29weVByb3BlcnRpZXMnKTtmdW5jdGlvbiBoKGop
e3JldHVybiBmdW5jdGlvbigpe3JldHVybiBqO307fWZ1bmN0aW9uIGkoKXt9Zyhp
LHt0aGF0UmV0dXJuczpoLHRoYXRSZXR1cm5zRmFsc2U6aChmYWxzZSksdGhhdFJl
dHVybnNUcnVlOmgodHJ1ZSksdGhhdFJldHVybnNOdWxsOmgobnVsbCksdGhhdFJl
dHVybnNUaGlzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXM7fSx0aGF0UmV0dXJuc0Fy
Z3VtZW50OmZ1bmN0aW9uKGope3JldHVybiBqO319KTtlLmV4cG9ydHM9aTt9KTsK
X19kKCJGbGFzaCIsWyJET01XcmFwcGVyIiwiUXVlcnlTdHJpbmciLCJVc2VyQWdl
bnQiLCJjb3B5UHJvcGVydGllcyIsImd1aWQiXSxmdW5jdGlvbihhLGIsYyxkLGUs
Zil7dmFyIGc9YignRE9NV3JhcHBlcicpLGg9YignUXVlcnlTdHJpbmcnKSxpPWIo
J1VzZXJBZ2VudCcpLGo9YignY29weVByb3BlcnRpZXMnKSxrPWIoJ2d1aWQnKSxs
PXt9LG0sbj1nLmdldFdpbmRvdygpLmRvY3VtZW50O2Z1bmN0aW9uIG8odCl7dmFy
IHU9bi5nZXRFbGVtZW50QnlJZCh0KTtpZih1KXUucGFyZW50Tm9kZS5yZW1vdmVD
aGlsZCh1KTtkZWxldGUgbFt0XTt9ZnVuY3Rpb24gcCgpe2Zvcih2YXIgdCBpbiBs
KWlmKGwuaGFzT3duUHJvcGVydHkodCkpbyh0KTt9ZnVuY3Rpb24gcSh0KXtyZXR1
cm4gdC5yZXBsYWNlKC9cZCsvZyxmdW5jdGlvbih1KXtyZXR1cm4gJzAwMCcuc3Vi
c3RyaW5nKHUubGVuZ3RoKSt1O30pO31mdW5jdGlvbiByKHQpe2lmKCFtKXtpZihp
LmllKCk+PTkpd2luZG93LmF0dGFjaEV2ZW50KCdvbnVubG9hZCcscCk7bT10cnVl
O31sW3RdPXQ7fXZhciBzPXtlbWJlZDpmdW5jdGlvbih0LHUsdix3KXt2YXIgeD1r
KCk7dD1lbmNvZGVVUkkodCk7dj1qKHthbGxvd3NjcmlwdGFjY2VzczonYWx3YXlz
JyxmbGFzaHZhcnM6dyxtb3ZpZTp0fSx2fHx7fSk7aWYodHlwZW9mIHYuZmxhc2h2
YXJzPT0nb2JqZWN0Jyl2LmZsYXNodmFycz1oLmVuY29kZSh2LmZsYXNodmFycyk7
dmFyIHk9W107Zm9yKHZhciB6IGluIHYpaWYodi5oYXNPd25Qcm9wZXJ0eSh6KSYm
dlt6XSl5LnB1c2goJzxwYXJhbSBuYW1lPSInK2VuY29kZVVSSSh6KSsnIiB2YWx1
ZT0iJytlbmNvZGVVUkkodlt6XSkrJyI+Jyk7dmFyIGFhPW4uY3JlYXRlRWxlbWVu
dCgnZGl2JyksYmE9JzxvYmplY3QgJysoaS5pZSgpPydjbGFzc2lkPSJjbHNpZDpk
MjdjZGI2ZS1hZTZkLTExY2YtOTZiOC00NDQ1NTM1NDAwMDAiICc6J3R5cGU9ImFw
cGxpY2F0aW9uL3gtc2hvY2t3YXZlLWZsYXNoIicpKydkYXRhPSInK3QrJyIgJysn
aWQ9IicreCsnIj4nK3kuam9pbignJykrJzwvb2JqZWN0Pic7YWEuaW5uZXJIVE1M
PWJhO3ZhciBjYT11LmFwcGVuZENoaWxkKGFhLmZpcnN0Q2hpbGQpO3IoeCk7cmV0
dXJuIGNhO30scmVtb3ZlOm8sZ2V0VmVyc2lvbjpmdW5jdGlvbigpe3ZhciB0PSdT
aG9ja3dhdmUgRmxhc2gnLHU9J2FwcGxpY2F0aW9uL3gtc2hvY2t3YXZlLWZsYXNo
Jyx2PSdTaG9ja3dhdmVGbGFzaC5TaG9ja3dhdmVGbGFzaCcsdztpZihuYXZpZ2F0
b3IucGx1Z2lucyYmdHlwZW9mIG5hdmlnYXRvci5wbHVnaW5zW3RdPT0nb2JqZWN0
Jyl7dmFyIHg9bmF2aWdhdG9yLnBsdWdpbnNbdF0uZGVzY3JpcHRpb247aWYoeCYm
bmF2aWdhdG9yLm1pbWVUeXBlcyYmbmF2aWdhdG9yLm1pbWVUeXBlc1t1XSYmbmF2
aWdhdG9yLm1pbWVUeXBlc1t1XS5lbmFibGVkUGx1Z2luKXc9eC5tYXRjaCgvXGQr
L2cpO31pZighdyl0cnl7dz0obmV3IEFjdGl2ZVhPYmplY3QodikpLkdldFZhcmlh
YmxlKCckdmVyc2lvbicpLm1hdGNoKC8oXGQrKSwoXGQrKSwoXGQrKSwoXGQrKS8p
O3c9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwodywxKTt9Y2F0Y2goeSl7fXJl
dHVybiB3O30sY2hlY2tNaW5WZXJzaW9uOmZ1bmN0aW9uKHQpe3ZhciB1PXMuZ2V0
VmVyc2lvbigpO2lmKCF1KXJldHVybiBmYWxzZTtyZXR1cm4gcSh1LmpvaW4oJy4n
KSk+PXEodCk7fSxpc0F2YWlsYWJsZTpmdW5jdGlvbigpe3JldHVybiAhIXMuZ2V0
VmVyc2lvbigpO319O2UuZXhwb3J0cz1zO30pOwpfX2QoImRvdEFjY2VzcyIsW10s
ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe2Z1bmN0aW9uIGcoaCxpLGope3ZhciBrPWku
c3BsaXQoJy4nKTtkb3t2YXIgbD1rLnNoaWZ0KCk7aD1oW2xdfHxqJiYoaFtsXT17
fSk7fXdoaWxlKGsubGVuZ3RoJiZoKTtyZXR1cm4gaDt9ZS5leHBvcnRzPWc7fSk7
Cl9fZCgiR2xvYmFsQ2FsbGJhY2siLFsiRE9NV3JhcHBlciIsImRvdEFjY2VzcyIs
Imd1aWQiLCJ3cmFwRnVuY3Rpb24iXSxmdW5jdGlvbihhLGIsYyxkLGUsZil7dmFy
IGc9YignRE9NV3JhcHBlcicpLGg9YignZG90QWNjZXNzJyksaT1iKCdndWlkJyks
aj1iKCd3cmFwRnVuY3Rpb24nKSxrLGwsbT17c2V0UHJlZml4OmZ1bmN0aW9uKG4p
e2s9aChnLmdldFdpbmRvdygpLG4sdHJ1ZSk7bD1uO30sY3JlYXRlOmZ1bmN0aW9u
KG4sbyl7aWYoIWspdGhpcy5zZXRQcmVmaXgoJ19fZ2xvYmFsQ2FsbGJhY2tzJyk7
dmFyIHA9aSgpO2tbcF09aihuLCdlbnRyeScsb3x8J0dsb2JhbENhbGxiYWNrJyk7
cmV0dXJuIGwrJy4nK3A7fSxyZW1vdmU6ZnVuY3Rpb24obil7dmFyIG89bi5zdWJz
dHJpbmcobC5sZW5ndGgrMSk7ZGVsZXRlIGtbb107fX07ZS5leHBvcnRzPW07fSk7
Cl9fZCgiWERNIixbIkRPTUV2ZW50TGlzdGVuZXIiLCJET01XcmFwcGVyIiwiZW1w
dHlGdW5jdGlvbiIsIkZsYXNoIiwiR2xvYmFsQ2FsbGJhY2siLCJndWlkIiwiTG9n
IiwiVXNlckFnZW50Iiwid3JhcEZ1bmN0aW9uIl0sZnVuY3Rpb24oYSxiLGMsZCxl
LGYpe3ZhciBnPWIoJ0RPTUV2ZW50TGlzdGVuZXInKSxoPWIoJ0RPTVdyYXBwZXIn
KSxpPWIoJ2VtcHR5RnVuY3Rpb24nKSxqPWIoJ0ZsYXNoJyksaz1iKCdHbG9iYWxD
YWxsYmFjaycpLGw9YignZ3VpZCcpLG09YignTG9nJyksbj1iKCdVc2VyQWdlbnQn
KSxvPWIoJ3dyYXBGdW5jdGlvbicpLHA9e30scT17dHJhbnNwb3J0czpbXX0scj1o
LmdldFdpbmRvdygpO2Z1bmN0aW9uIHModSl7dmFyIHY9e30sdz11Lmxlbmd0aCx4
PXEudHJhbnNwb3J0czt3aGlsZSh3LS0pdlt1W3ddXT0xO3c9eC5sZW5ndGg7d2hp
bGUody0tKXt2YXIgeT14W3ddLHo9cFt5XTtpZighdlt5XSYmei5pc0F2YWlsYWJs
ZSgpKXJldHVybiB5O319dmFyIHQ9e3JlZ2lzdGVyOmZ1bmN0aW9uKHUsdil7bS5k
ZWJ1ZygnUmVnaXN0ZXJpbmcgJXMgYXMgWERNIHByb3ZpZGVyJyx1KTtxLnRyYW5z
cG9ydHMucHVzaCh1KTtwW3VdPXY7fSxjcmVhdGU6ZnVuY3Rpb24odSl7aWYoIXUu
d2hlblJlYWR5JiYhdS5vbk1lc3NhZ2Upe20uZXJyb3IoJ0FuIGluc3RhbmNlIHdp
dGhvdXQgd2hlblJlYWR5IG9yIG9uTWVzc2FnZSBtYWtlcyBubyBzZW5zZScpO3Ro
cm93IG5ldyBFcnJvcignQW4gaW5zdGFuY2Ugd2l0aG91dCB3aGVuUmVhZHkgb3Ig
Jysnb25NZXNzYWdlIG1ha2VzIG5vIHNlbnNlJyk7fWlmKCF1LmNoYW5uZWwpe20u
d2FybignTWlzc2luZyBjaGFubmVsIG5hbWUsIHNlbGVjdGluZyBhdCByYW5kb20n
KTt1LmNoYW5uZWw9bCgpO31pZighdS53aGVuUmVhZHkpdS53aGVuUmVhZHk9aTtp
ZighdS5vbk1lc3NhZ2UpdS5vbk1lc3NhZ2U9aTt2YXIgdj11LnRyYW5zcG9ydHx8
cyh1LmJsYWNrbGlzdHx8W10pLHc9cFt2XTtpZih3JiZ3LmlzQXZhaWxhYmxlKCkp
e20uZGVidWcoJyVzIGlzIGF2YWlsYWJsZScsdik7dy5pbml0KHUpO3JldHVybiB2
O319fTt0LnJlZ2lzdGVyKCdmcmFnbWVudCcsKGZ1bmN0aW9uKCl7dmFyIHU9ZmFs
c2Usdix3PWxvY2F0aW9uLnByb3RvY29sKycvLycrbG9jYXRpb24uaG9zdDtmdW5j
dGlvbiB4KHkpe3ZhciB6PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lmcmFtZScp
O3ouc3JjPSdqYXZhc2NyaXB0OmZhbHNlJzt2YXIgYWE9Zy5hZGQoeiwnbG9hZCcs
ZnVuY3Rpb24oKXthYS5yZW1vdmUoKTtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ei5w
YXJlbnROb2RlLnJlbW92ZUNoaWxkKHopO30sNTAwMCk7fSk7di5hcHBlbmRDaGls
ZCh6KTt6LnNyYz15O31yZXR1cm4ge2lzQXZhaWxhYmxlOmZ1bmN0aW9uKCl7cmV0
dXJuIHRydWU7fSxpbml0OmZ1bmN0aW9uKHkpe20uZGVidWcoJ2luaXQgZnJhZ21l
bnQnKTt2YXIgej17c2VuZDpmdW5jdGlvbihhYSxiYSxjYSxkYSl7bS5kZWJ1Zygn
c2VuZGluZyB0bzogJXMgKCVzKScsYmEreS5jaGFubmVsUGF0aCxkYSk7eChiYSt5
LmNoYW5uZWxQYXRoK2FhKycmeGRfcmVsPXBhcmVudC5wYXJlbnQmcmVsYXRpb249
cGFyZW50LnBhcmVudCZ4ZF9vcmlnaW49JytlbmNvZGVVUklDb21wb25lbnQodykp
O319O2lmKHUpe3kud2hlblJlYWR5KHopO3JldHVybjt9dj15LnJvb3Q7dT10cnVl
O3kud2hlblJlYWR5KHopO319O30pKCkpO3QucmVnaXN0ZXIoJ2ZsYXNoJywoZnVu
Y3Rpb24oKXt2YXIgdT1mYWxzZSx2LHc9ZmFsc2UseD0xNTAwMCx5O3JldHVybiB7
aXNBdmFpbGFibGU6ZnVuY3Rpb24oKXtyZXR1cm4gai5jaGVja01pblZlcnNpb24o
JzguMC4yNCcpO30saW5pdDpmdW5jdGlvbih6KXttLmRlYnVnKCdpbml0IGZsYXNo
OiAnK3ouY2hhbm5lbCk7dmFyIGFhPXtzZW5kOmZ1bmN0aW9uKGRhLGVhLGZhLGdh
KXttLmRlYnVnKCdzZW5kaW5nIHRvOiAlcyAoJXMpJyxlYSxnYSk7di5wb3N0TWVz
c2FnZShkYSxlYSxnYSk7fX07aWYodSl7ei53aGVuUmVhZHkoYWEpO3JldHVybjt9
dmFyIGJhPXoucm9vdC5hcHBlbmRDaGlsZChyLmRvY3VtZW50LmNyZWF0ZUVsZW1l
bnQoJ2RpdicpKSxjYT1rLmNyZWF0ZShmdW5jdGlvbigpe2sucmVtb3ZlKGNhKTtj
bGVhclRpbWVvdXQoeSk7bS5pbmZvKCd4ZG0uc3dmIGNhbGxlZCB0aGUgY2FsbGJh
Y2snKTt2YXIgZGE9ay5jcmVhdGUoZnVuY3Rpb24oZWEsZmEpe2VhPWRlY29kZVVS
SUNvbXBvbmVudChlYSk7bS5kZWJ1ZygncmVjZWl2ZWQgbWVzc2FnZSAlcyBmcm9t
ICVzJyxlYSxmYSk7ei5vbk1lc3NhZ2UoZWEsZmEpO30sJ3hkbS5zd2Y6b25NZXNz
YWdlJyk7di5pbml0KHouY2hhbm5lbCxkYSk7ei53aGVuUmVhZHkoYWEpO30sJ3hk
bS5zd2Y6bG9hZCcpO3Y9ai5lbWJlZCh6LmZsYXNoVXJsLGJhLG51bGwse3Byb3Rv
Y29sOmxvY2F0aW9uLnByb3RvY29sLnJlcGxhY2UoJzonLCcnKSxob3N0OmxvY2F0
aW9uLmhvc3QsY2FsbGJhY2s6Y2EsbG9nOnd9KTt5PXNldFRpbWVvdXQoZnVuY3Rp
b24oKXttLndhcm4oJ1RoZSBGbGFzaCBjb21wb25lbnQgZGlkIG5vdCBsb2FkIHdp
dGhpbiAlcyBtcyAtICcrJ3ZlcmlmeSB0aGF0IHRoZSBjb250YWluZXIgaXMgbm90
IHNldCB0byBoaWRkZW4gb3IgaW52aXNpYmxlICcrJ3VzaW5nIENTUyBhcyB0aGlz
IHdpbGwgY2F1c2Ugc29tZSBicm93c2VycyB0byBub3QgbG9hZCAnKyd0aGUgY29t
cG9uZW50cycseCk7fSx4KTt1PXRydWU7fX07fSkoKSk7dC5yZWdpc3RlcigncG9z
dG1lc3NhZ2UnLChmdW5jdGlvbigpe3ZhciB1PWZhbHNlO3JldHVybiB7aXNBdmFp
bGFibGU6ZnVuY3Rpb24oKXtyZXR1cm4gISFyLnBvc3RNZXNzYWdlO30saW5pdDpm
dW5jdGlvbih2KXttLmRlYnVnKCdpbml0IHBvc3RNZXNzYWdlOiAnK3YuY2hhbm5l
bCk7dmFyIHc9J19GQl8nK3YuY2hhbm5lbCx4PXtzZW5kOmZ1bmN0aW9uKHkseixh
YSxiYSl7aWYocj09PWFhKXttLmVycm9yKCdJbnZhbGlkIHdpbmRvd3JlZiwgZXF1
YWwgdG8gd2luZG93IChzZWxmKScpO3Rocm93IG5ldyBFcnJvcigpO31tLmRlYnVn
KCdzZW5kaW5nIHRvOiAlcyAoJXMpJyx6LGJhKTt2YXIgY2E9ZnVuY3Rpb24oKXth
YS5wb3N0TWVzc2FnZSgnX0ZCXycrYmEreSx6KTt9O2lmKG4uaWUoKT09OCl7c2V0
VGltZW91dChjYSwwKTt9ZWxzZSBjYSgpO319O2lmKHUpe3Yud2hlblJlYWR5KHgp
O3JldHVybjt9Zy5hZGQociwnbWVzc2FnZScsbyhmdW5jdGlvbihldmVudCl7dmFy
IHk9ZXZlbnQuZGF0YSx6PWV2ZW50Lm9yaWdpbnx8J25hdGl2ZSc7aWYodHlwZW9m
IHkhPSdzdHJpbmcnKXttLndhcm4oJ1JlY2VpdmVkIG1lc3NhZ2Ugb2YgdHlwZSAl
cyBmcm9tICVzLCBleHBlY3RlZCBhIHN0cmluZycsdHlwZW9mIHkseik7cmV0dXJu
O31tLmRlYnVnKCdyZWNlaXZlZCBtZXNzYWdlICVzIGZyb20gJXMnLHkseik7aWYo
eS5zdWJzdHJpbmcoMCx3Lmxlbmd0aCk9PXcpeT15LnN1YnN0cmluZyh3Lmxlbmd0
aCk7di5vbk1lc3NhZ2UoeSx6KTt9LCdlbnRyeScsJ29uTWVzc2FnZScpKTt2Lndo
ZW5SZWFkeSh4KTt1PXRydWU7fX07fSkoKSk7ZS5leHBvcnRzPXQ7fSk7Cl9fZCgi
c2RrLlhEIixbInNkay5Db250ZW50Iiwic2RrLmNyZWF0ZUlmcmFtZSIsInNkay5F
dmVudCIsImd1aWQiLCJMb2ciLCJRdWVyeVN0cmluZyIsIlF1ZXVlIiwicmVzb2x2
ZVVSSSIsInJlc29sdmVXaW5kb3ciLCJzZGsuUlBDIiwic2RrLlJ1bnRpbWUiLCJV
cmxNYXAiLCJVUkwiLCJ3cmFwRnVuY3Rpb24iLCJYRE0iLCJYRENvbmZpZyJdLGZ1
bmN0aW9uKGEsYixjLGQsZSxmKXt2YXIgZz1iKCdzZGsuQ29udGVudCcpLGg9Yign
c2RrLmNyZWF0ZUlmcmFtZScpLGk9Yignc2RrLkV2ZW50Jyksaj1iKCdndWlkJyks
az1iKCdMb2cnKSxsPWIoJ1F1ZXJ5U3RyaW5nJyksbT1iKCdRdWV1ZScpLG49Yign
cmVzb2x2ZVVSSScpLG89YigncmVzb2x2ZVdpbmRvdycpLHA9Yignc2RrLlJQQycp
LHE9Yignc2RrLlJ1bnRpbWUnKSxyPWIoJ1VybE1hcCcpLHM9YignVVJMJyksdD1i
KCd3cmFwRnVuY3Rpb24nKSx1PWMoJ1hEQ29uZmlnJyksdj1iKCdYRE0nKSx3PW5l
dyBtKCkseD1uZXcgbSgpLHk9bmV3IG0oKSx6LGFhLGJhPWooKSxjYT1qKCksZGE9
bG9jYXRpb24ucHJvdG9jb2wrJy8vJytsb2NhdGlvbi5ob3N0LGVhLGZhPWZhbHNl
LGdhPSdGYWNlYm9vayBDcm9zcyBEb21haW4gQ29tbXVuaWNhdGlvbiBGcmFtZScs
aGE9e30saWE9bmV3IG0oKTtwLnNldEluUXVldWUoaWEpO2Z1bmN0aW9uIGphKHBh
KXtrLmluZm8oJ1JlbW90ZSBYRCBjYW4gdGFsayB0byBmYWNlYm9vay5jb20gKCVz
KScscGEpO3Euc2V0RW52aXJvbm1lbnQocGE9PT0nY2FudmFzJz9xLkVOVklST05N
RU5UUy5DQU5WQVM6cS5FTlZJUk9OTUVOVFMuUEFHRVRBQik7fWZ1bmN0aW9uIGth
KHBhLHFhKXtpZighcWEpe2suZXJyb3IoJ05vIHNlbmRlck9yaWdpbicpO3Rocm93
IG5ldyBFcnJvcigpO312YXIgcmE9L15odHRwcz8vLmV4ZWMocWEpWzBdO3N3aXRj
aChwYS54ZF9hY3Rpb24pe2Nhc2UgJ3Byb3h5X3JlYWR5Jzp2YXIgc2EsdGE7aWYo
cmE9PSdodHRwcycpe3NhPXk7dGE9YWE7fWVsc2V7c2E9eDt0YT16O31pZihwYS5y
ZWdpc3RlcmVkKXtqYShwYS5yZWdpc3RlcmVkKTt3PXNhLm1lcmdlKHcpO31rLmlu
Zm8oJ1Byb3h5IHJlYWR5LCBzdGFydGluZyBxdWV1ZSAlcyBjb250YWluaW5nICVz
IG1lc3NhZ2VzJyxyYSsnUHJveHlRdWV1ZScsc2EuZ2V0TGVuZ3RoKCkpO3NhLnN0
YXJ0KGZ1bmN0aW9uKHZhKXtlYS5zZW5kKHR5cGVvZiB2YT09PSdzdHJpbmcnP3Zh
OmwuZW5jb2RlKHZhKSxxYSx0YS5jb250ZW50V2luZG93LGNhKydfJytyYSk7fSk7
YnJlYWs7Y2FzZSAncGx1Z2luX3JlYWR5JzprLmluZm8oJ1BsdWdpbiAlcyByZWFk
eSwgcHJvdG9jb2w6ICVzJyxwYS5uYW1lLHJhKTtoYVtwYS5uYW1lXT17cHJvdG9j
b2w6cmF9O2lmKG0uZXhpc3RzKHBhLm5hbWUpKXt2YXIgdWE9bS5nZXQocGEubmFt
ZSk7ay5kZWJ1ZygnRW5xdWV1aW5nICVzIG1lc3NhZ2VzIGZvciAlcyBpbiAlcycs
dWEuZ2V0TGVuZ3RoKCkscGEubmFtZSxyYSsnUHJveHlRdWV1ZScpOyhyYT09J2h0
dHBzJz95OngpLm1lcmdlKHVhKTt9YnJlYWs7fWlmKHBhLmRhdGEpbGEocGEuZGF0
YSxxYSk7fWZ1bmN0aW9uIGxhKHBhLHFhKXtpZihxYSYmcWEhPT0nbmF0aXZlJyYm
IXMocWEpLmlzRmFjZWJvb2tVUkwoKSlyZXR1cm47aWYodHlwZW9mIHBhPT0nc3Ry
aW5nJyl7aWYoL15GQl9SUEM6Ly50ZXN0KHBhKSl7aWEuZW5xdWV1ZShwYS5zdWJz
dHJpbmcoNykpO3JldHVybjt9aWYocGEuc3Vic3RyaW5nKDAsMSk9PSd7Jyl7dHJ5
e3BhPUVTNSgnSlNPTicsJ3BhcnNlJyxmYWxzZSxwYSk7fWNhdGNoKHJhKXtrLndh
cm4oJ0ZhaWxlZCB0byBkZWNvZGUgJXMgYXMgSlNPTicscGEpO3JldHVybjt9fWVs
c2UgcGE9bC5kZWNvZGUocGEpO31pZighcWEpaWYocGEueGRfc2lnPT1iYSlxYT1w
YS54ZF9vcmlnaW47aWYocGEueGRfYWN0aW9uKXtrYShwYSxxYSk7cmV0dXJuO31p
ZihwYS5hY2Nlc3NfdG9rZW4pcS5zZXRTZWN1cmUoL15odHRwcy8udGVzdChkYSkp
O2lmKHBhLmNiKXt2YXIgc2E9b2EuX2NhbGxiYWNrc1twYS5jYl07aWYoIW9hLl9m
b3JldmVyW3BhLmNiXSlkZWxldGUgb2EuX2NhbGxiYWNrc1twYS5jYl07aWYoc2Ep
c2EocGEpO319ZnVuY3Rpb24gbWEocGEscWEpe2lmKHBhPT0nZmFjZWJvb2snKXtx
YS5yZWxhdGlvbj0ncGFyZW50LnBhcmVudCc7dy5lbnF1ZXVlKHFhKTt9ZWxzZXtx
YS5yZWxhdGlvbj0ncGFyZW50LmZyYW1lc1siJytwYSsnIl0nO3ZhciByYT1oYVtw
YV07aWYocmEpe2suZGVidWcoJ0VucXVldWluZyBtZXNzYWdlIGZvciBwbHVnaW4g
JXMgaW4gJXMnLHBhLHJhLnByb3RvY29sKydQcm94eVF1ZXVlJyk7KHJhLnByb3Rv
Y29sPT0naHR0cHMnP3k6eCkuZW5xdWV1ZShxYSk7fWVsc2V7ay5kZWJ1ZygnQnVm
ZmVyaW5nIG1lc3NhZ2UgZm9yIHBsdWdpbiAlcycscGEpO20uZ2V0KHBhKS5lbnF1
ZXVlKHFhKTt9fX1wLmdldE91dFF1ZXVlKCkuc3RhcnQoZnVuY3Rpb24ocGEpe21h
KCdmYWNlYm9vaycsJ0ZCX1JQQzonK3BhKTt9KTtmdW5jdGlvbiBuYShwYSxxYSl7
aWYoZmEpcmV0dXJuO3ZhciByYT1wYT8vXC9cLy4qPyhcL1teI10qKS8uZXhlYyhw
YSlbMV06bG9jYXRpb24ucGF0aG5hbWUrbG9jYXRpb24uc2VhcmNoO3JhKz0ofkVT
NShyYSwnaW5kZXhPZicsdHJ1ZSwnPycpPycmJzonPycpKydmYl94ZF9mcmFnbWVu
dCN4ZF9zaWc9JytiYSsnJic7dmFyIHNhPWcuYXBwZW5kSGlkZGVuKGRvY3VtZW50
LmNyZWF0ZUVsZW1lbnQoJ2RpdicpKSx0YT12LmNyZWF0ZSh7cm9vdDpzYSxjaGFu
bmVsOmNhLGNoYW5uZWxQYXRoOicvJyt1LlhkVXJsKycjJyxmbGFzaFVybDp1LkZs
YXNoLnBhdGgsd2hlblJlYWR5OmZ1bmN0aW9uKHVhKXtlYT11YTt2YXIgdmE9e2No
YW5uZWw6Y2Esb3JpZ2luOmxvY2F0aW9uLnByb3RvY29sKycvLycrbG9jYXRpb24u
aG9zdCxjaGFubmVsX3BhdGg6cmEsdHJhbnNwb3J0OnRhLHhkX25hbWU6cWF9LHdh
PScvJyt1LlhkVXJsKycjJytsLmVuY29kZSh2YSkseGE9dS51c2VDZG4/ci5yZXNv
bHZlKCdjZG4nLGZhbHNlKTonaHR0cDovL3d3dy5mYWNlYm9vay5jb20nLHlhPXUu
dXNlQ2RuP3IucmVzb2x2ZSgnY2RuJyx0cnVlKTonaHR0cHM6Ly93d3cuZmFjZWJv
b2suY29tJztpZihxLmdldFNlY3VyZSgpIT09dHJ1ZSl6PWgoe3VybDp4YSt3YSxu
YW1lOidmYl94ZG1fZnJhbWVfaHR0cCcsaWQ6J2ZiX3hkbV9mcmFtZV9odHRwJyxy
b290OnNhLCdhcmlhLWhpZGRlbic6dHJ1ZSx0aXRsZTpnYSwndGFiLWluZGV4Jzot
MX0pO2FhPWgoe3VybDp5YSt3YSxuYW1lOidmYl94ZG1fZnJhbWVfaHR0cHMnLGlk
OidmYl94ZG1fZnJhbWVfaHR0cHMnLHJvb3Q6c2EsJ2FyaWEtaGlkZGVuJzp0cnVl
LHRpdGxlOmdhLCd0YWItaW5kZXgnOi0xfSk7fSxvbk1lc3NhZ2U6bGF9KTtpZih0
YT09PSdmcmFnbWVudCcpd2luZG93LkZCX1hEX29uTWVzc2FnZT10KGxhLCdlbnRy
eScsJ1hEOmZyYWdtZW50Jyk7ZmE9dHJ1ZTt9dmFyIG9hPXtycGM6cCxfY2FsbGJh
Y2tzOnt9LF9mb3JldmVyOnt9LF9jaGFubmVsOmNhLF9vcmlnaW46ZGEsb25NZXNz
YWdlOmxhLHJlY3Y6bGEsaW5pdDpuYSxzZW5kVG9GYWNlYm9vazptYSxpbmZvcm06
ZnVuY3Rpb24ocGEscWEscmEsc2Epe21hKCdmYWNlYm9vaycse21ldGhvZDpwYSxw
YXJhbXM6RVM1KCdKU09OJywnc3RyaW5naWZ5JyxmYWxzZSxxYXx8e30pLGJlaGF2
aW9yOnNhfHwncCcscmVsYXRpb246cmF9KTt9LGhhbmRsZXI6ZnVuY3Rpb24ocGEs
cWEscmEsc2Epe3ZhciB0YT11LnVzZUNkbj9yLnJlc29sdmUoJ2NkbicsbG9jYXRp
b24ucHJvdG9jb2w9PSdodHRwczonKTpsb2NhdGlvbi5wcm90b2NvbCsnLy93d3cu
ZmFjZWJvb2suY29tJztyZXR1cm4gdGErJy8nK3UuWGRVcmwrJyMnK2wuZW5jb2Rl
KHtjYjp0aGlzLnJlZ2lzdGVyQ2FsbGJhY2socGEscmEsc2EpLG9yaWdpbjpkYSsn
LycrY2EsZG9tYWluOmxvY2F0aW9uLmhvc3RuYW1lLHJlbGF0aW9uOnFhfHwnb3Bl
bmVyJ30pO30scmVnaXN0ZXJDYWxsYmFjazpmdW5jdGlvbihwYSxxYSxyYSl7cmE9
cmF8fGooKTtpZihxYSlvYS5fZm9yZXZlcltyYV09dHJ1ZTtvYS5fY2FsbGJhY2tz
W3JhXT1wYTtyZXR1cm4gcmE7fX07KGZ1bmN0aW9uKCl7dmFyIHBhPWxvY2F0aW9u
LmhyZWYubWF0Y2goL1s/Jl1mYl94ZF9mcmFnbWVudCMoLiopJC8pO2lmKHBhKXtk
b2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUuZGlzcGxheT0nbm9uZSc7dmFy
IHFhPWwuZGVjb2RlKHBhWzFdKSxyYT1vKHFhLnhkX3JlbCk7ay5kZWJ1ZygnUGFz
c2luZyBmcmFnbWVudCBiYXNlZCBtZXNzYWdlOiAlcycscGFbMV0pO3JhLkZCX1hE
X29uTWVzc2FnZShxYSk7ZG9jdW1lbnQub3BlbigpO2RvY3VtZW50LmNsb3NlKCk7
fX0pKCk7aS5zdWJzY3JpYmUoJ2luaXQ6cG9zdCcsZnVuY3Rpb24ocGEpe25hKHBh
LmNoYW5uZWxVcmw/bihwYS5jaGFubmVsVXJsKTpudWxsLHBhLnhkUHJveHlOYW1l
KTt9KTtlLmV4cG9ydHM9b2E7fSk7Cl9fZCgic2RrLkF1dGgiLFsic2RrLkNvb2tp
ZSIsImNvcHlQcm9wZXJ0aWVzIiwic2RrLmNyZWF0ZUlmcmFtZSIsIkRPTVdyYXBw
ZXIiLCJzZGsuZ2V0Q29udGV4dFR5cGUiLCJndWlkIiwiTG9nIiwiT2JzZXJ2YWJs
ZU1peGluIiwiUXVlcnlTdHJpbmciLCJzZGsuUnVudGltZSIsInNkay5TaWduZWRS
ZXF1ZXN0IiwiVXJsTWFwIiwiVVJMIiwic2RrLlhEIl0sZnVuY3Rpb24oYSxiLGMs
ZCxlLGYpe3ZhciBnPWIoJ3Nkay5Db29raWUnKSxoPWIoJ2NvcHlQcm9wZXJ0aWVz
JyksaT1iKCdzZGsuY3JlYXRlSWZyYW1lJyksaj1iKCdET01XcmFwcGVyJyksaz1i
KCdzZGsuZ2V0Q29udGV4dFR5cGUnKSxsPWIoJ2d1aWQnKSxtPWIoJ0xvZycpLG49
YignT2JzZXJ2YWJsZU1peGluJyksbz1iKCdRdWVyeVN0cmluZycpLHA9Yignc2Rr
LlJ1bnRpbWUnKSxxPWIoJ3Nkay5TaWduZWRSZXF1ZXN0Jykscj1iKCdVcmxNYXAn
KSxzPWIoJ1VSTCcpLHQ9Yignc2RrLlhEJyksdSx2LHc9bmV3IG4oKTtmdW5jdGlv
biB4KGRhLGVhKXt2YXIgZmE9cC5nZXRVc2VySUQoKSxnYT0nJztpZihkYSlpZihk
YS51c2VySUQpe2dhPWRhLnVzZXJJRDt9ZWxzZSBpZihkYS5zaWduZWRSZXF1ZXN0
KXt2YXIgaGE9cS5wYXJzZShkYS5zaWduZWRSZXF1ZXN0KTtpZihoYSYmaGEudXNl
cl9pZClnYT1oYS51c2VyX2lkO312YXIgaWE9cC5nZXRMb2dpblN0YXR1cygpLGph
PShpYT09PSd1bmtub3duJyYmZGEpfHwocC5nZXRVc2VDb29raWUoKSYmcC5nZXRD
b29raWVVc2VySUQoKSE9PWdhKSxrYT1mYSYmIWRhLGxhPWRhJiZmYSYmZmEhPWdh
LG1hPWRhIT11LG5hPWVhIT0oaWF8fCd1bmtub3duJyk7cC5zZXRMb2dpblN0YXR1
cyhlYSk7cC5zZXRBY2Nlc3NUb2tlbihkYSYmZGEuYWNjZXNzVG9rZW58fG51bGwp
O3Auc2V0VXNlcklEKGdhKTt1PWRhO3ZhciBvYT17YXV0aFJlc3BvbnNlOmRhLHN0
YXR1czplYX07aWYoa2F8fGxhKXcuaW5mb3JtKCdsb2dvdXQnLG9hKTtpZihqYXx8
bGEpdy5pbmZvcm0oJ2xvZ2luJyxvYSk7aWYobWEpdy5pbmZvcm0oJ2F1dGhyZXNw
b25zZS5jaGFuZ2UnLG9hKTtpZihuYSl3LmluZm9ybSgnc3RhdHVzLmNoYW5nZScs
b2EpO3JldHVybiBvYTt9ZnVuY3Rpb24geSgpe3JldHVybiB1O31mdW5jdGlvbiB6
KGRhLGVhLGZhKXtyZXR1cm4gZnVuY3Rpb24oZ2Epe3ZhciBoYTtpZihnYSYmZ2Eu
YWNjZXNzX3Rva2VuKXt2YXIgaWE9cS5wYXJzZShnYS5zaWduZWRfcmVxdWVzdCk7
ZWE9e2FjY2Vzc1Rva2VuOmdhLmFjY2Vzc190b2tlbix1c2VySUQ6aWEudXNlcl9p
ZCxleHBpcmVzSW46cGFyc2VJbnQoZ2EuZXhwaXJlc19pbiwxMCksc2lnbmVkUmVx
dWVzdDpnYS5zaWduZWRfcmVxdWVzdH07aWYocC5nZXRVc2VDb29raWUoKSl7dmFy
IGphPWVhLmV4cGlyZXNJbj09PTA/MDpFUzUoJ0RhdGUnLCdub3cnLGZhbHNlKStl
YS5leHBpcmVzSW4qMTAwMCxrYT1nLmdldERvbWFpbigpO2lmKCFrYSYmZ2EuYmFz
ZV9kb21haW4pZy5zZXREb21haW4oJy4nK2dhLmJhc2VfZG9tYWluKTtnLnNldFNp
Z25lZFJlcXVlc3RDb29raWUoZ2Euc2lnbmVkX3JlcXVlc3QsamEpO31oYT0nY29u
bmVjdGVkJzt4KGVhLGhhKTt9ZWxzZSBpZihmYT09PSdsb2dvdXQnfHxmYT09PSds
b2dpbl9zdGF0dXMnKXtpZihnYS5lcnJvciYmZ2EuZXJyb3I9PT0nbm90X2F1dGhv
cml6ZWQnKXtoYT0nbm90X2F1dGhvcml6ZWQnO31lbHNlIGhhPSd1bmtub3duJzt4
KG51bGwsaGEpO2lmKHAuZ2V0VXNlQ29va2llKCkpZy5jbGVhclNpZ25lZFJlcXVl
c3RDb29raWUoKTt9aWYoZ2EmJmdhLmh0dHBzPT0xKXAuc2V0U2VjdXJlKHRydWUp
O2lmKGRhKWRhKHthdXRoUmVzcG9uc2U6ZWEsc3RhdHVzOnAuZ2V0TG9naW5TdGF0
dXMoKX0pO3JldHVybiBlYTt9O31mdW5jdGlvbiBhYShkYSl7dmFyIGVhO2lmKHYp
e2NsZWFyVGltZW91dCh2KTt2PW51bGw7fXZhciBmYT16KGRhLHUsJ2xvZ2luX3N0
YXR1cycpLGdhPXMoci5yZXNvbHZlKCd3d3cnLHRydWUpKycvZGlhbG9nL29hdXRo
Jykuc2V0U2VhcmNoKG8uZW5jb2RlKHtjbGllbnRfaWQ6cC5nZXRDbGllbnRJRCgp
LHJlc3BvbnNlX3R5cGU6J3Rva2VuLHNpZ25lZF9yZXF1ZXN0LGNvZGUnLGRpc3Bs
YXk6J25vbmUnLGRvbWFpbjpsb2NhdGlvbi5ob3N0bmFtZSxvcmlnaW46aygpLHJl
ZGlyZWN0X3VyaTp0LmhhbmRsZXIoZnVuY3Rpb24oaGEpe2VhLnBhcmVudE5vZGUu
cmVtb3ZlQ2hpbGQoZWEpO2lmKGZhKGhhKSl2PXNldFRpbWVvdXQoZnVuY3Rpb24o
KXthYShmdW5jdGlvbigpe30pO30sMTIwMDAwMCk7fSwncGFyZW50Jyksc2RrOidq
b2V5J30pKTtlYT1pKHtyb290OmouZ2V0Um9vdCgpLG5hbWU6bCgpLHVybDpnYS50
b1N0cmluZygpLHN0eWxlOntkaXNwbGF5Oidub25lJ319KTt9dmFyIGJhO2Z1bmN0
aW9uIGNhKGRhLGVhKXtpZighcC5nZXRDbGllbnRJRCgpKXttLndhcm4oJ0ZCLmdl
dExvZ2luU3RhdHVzKCkgY2FsbGVkIGJlZm9yZSBjYWxsaW5nIEZCLmluaXQoKS4n
KTtyZXR1cm47fWlmKGRhKWlmKCFlYSYmYmE9PSdsb2FkZWQnKXtkYSh7c3RhdHVz
OnAuZ2V0TG9naW5TdGF0dXMoKSxhdXRoUmVzcG9uc2U6eSgpfSk7cmV0dXJuO31l
bHNlIHcuc3Vic2NyaWJlKCdGQi5sb2dpblN0YXR1cycsZGEpO2lmKCFlYSYmYmE9
PSdsb2FkaW5nJylyZXR1cm47YmE9J2xvYWRpbmcnO3ZhciBmYT1mdW5jdGlvbihn
YSl7YmE9J2xvYWRlZCc7dy5pbmZvcm0oJ0ZCLmxvZ2luU3RhdHVzJyxnYSk7dy5j
bGVhclN1YnNjcmliZXJzKCdGQi5sb2dpblN0YXR1cycpO307YWEoZmEpO31oKHcs
e2dldExvZ2luU3RhdHVzOmNhLGZldGNoTG9naW5TdGF0dXM6YWEsc2V0QXV0aFJl
c3BvbnNlOngsZ2V0QXV0aFJlc3BvbnNlOnkscGFyc2VTaWduZWRSZXF1ZXN0OnEu
cGFyc2UseGRSZXNwb25zZVdyYXBwZXI6en0pO2UuZXhwb3J0cz13O30pOwpfX2Qo
Imhhc0FycmF5TmF0dXJlIixbXSxmdW5jdGlvbihhLGIsYyxkLGUsZil7ZnVuY3Rp
b24gZyhoKXtyZXR1cm4gKCEhaCYmKHR5cGVvZiBoPT0nb2JqZWN0J3x8dHlwZW9m
IGg9PSdmdW5jdGlvbicpJiYoJ2xlbmd0aCcgaW4gaCkmJiEoJ3NldEludGVydmFs
JyBpbiBoKSYmKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChoKT09PSJb
b2JqZWN0IEFycmF5XSJ8fCgnY2FsbGVlJyBpbiBoKXx8KCdpdGVtJyBpbiBoKSkp
O31lLmV4cG9ydHM9Zzt9KTsKX19kKCJjcmVhdGVBcnJheUZyb20iLFsiaGFzQXJy
YXlOYXR1cmUiXSxmdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9YignaGFzQXJy
YXlOYXR1cmUnKTtmdW5jdGlvbiBoKGkpe2lmKCFnKGkpKXJldHVybiBbaV07aWYo
aS5pdGVtKXt2YXIgaj1pLmxlbmd0aCxrPW5ldyBBcnJheShqKTt3aGlsZShqLS0p
a1tqXT1pW2pdO3JldHVybiBrO31yZXR1cm4gQXJyYXkucHJvdG90eXBlLnNsaWNl
LmNhbGwoaSk7fWUuZXhwb3J0cz1oO30pOwpfX2QoInNkay5ET00iLFsiQXNzZXJ0
IiwiY3JlYXRlQXJyYXlGcm9tIiwic2RrLmRvbVJlYWR5IiwiVXNlckFnZW50Il0s
ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnPWIoJ0Fzc2VydCcpLGg9YignY3Jl
YXRlQXJyYXlGcm9tJyksaT1iKCdzZGsuZG9tUmVhZHknKSxqPWIoJ1VzZXJBZ2Vu
dCcpLGs9e307ZnVuY3Rpb24gbCh6LGFhKXt2YXIgYmE9KHouZ2V0QXR0cmlidXRl
KGFhKXx8ei5nZXRBdHRyaWJ1dGUoYWEucmVwbGFjZSgvXy9nLCctJykpfHx6Lmdl
dEF0dHJpYnV0ZShhYS5yZXBsYWNlKC8tL2csJ18nKSl8fHouZ2V0QXR0cmlidXRl
KGFhLnJlcGxhY2UoLy0vZywnJykpfHx6LmdldEF0dHJpYnV0ZShhYS5yZXBsYWNl
KC9fL2csJycpKXx8ei5nZXRBdHRyaWJ1dGUoJ2RhdGEtJythYSl8fHouZ2V0QXR0
cmlidXRlKCdkYXRhLScrYWEucmVwbGFjZSgvXy9nLCctJykpfHx6LmdldEF0dHJp
YnV0ZSgnZGF0YS0nK2FhLnJlcGxhY2UoLy0vZywnXycpKXx8ei5nZXRBdHRyaWJ1
dGUoJ2RhdGEtJythYS5yZXBsYWNlKC8tL2csJycpKXx8ei5nZXRBdHRyaWJ1dGUo
J2RhdGEtJythYS5yZXBsYWNlKC9fL2csJycpKSk7cmV0dXJuIGJhP1N0cmluZyhi
YSk6bnVsbDt9ZnVuY3Rpb24gbSh6LGFhKXt2YXIgYmE9bCh6LGFhKTtyZXR1cm4g
YmE/L14odHJ1ZXwxfHllc3xvbikkLy50ZXN0KGJhKTpudWxsO31mdW5jdGlvbiBu
KHosYWEpe2cuaXNUcnV0aHkoeiwnZWxlbWVudCBub3Qgc3BlY2lmaWVkJyk7Zy5p
c1N0cmluZyhhYSk7dHJ5e3JldHVybiBTdHJpbmcoelthYV0pO31jYXRjaChiYSl7
dGhyb3cgbmV3IEVycm9yKCdDb3VsZCBub3QgcmVhZCBwcm9wZXJ0eSAnK2FhKycg
OiAnK2JhLm1lc3NhZ2UpO319ZnVuY3Rpb24gbyh6LGFhKXtnLmlzVHJ1dGh5KHos
J2VsZW1lbnQgbm90IHNwZWNpZmllZCcpO2cuaXNTdHJpbmcoYWEpO3RyeXt6Lmlu
bmVySFRNTD1hYTt9Y2F0Y2goYmEpe3Rocm93IG5ldyBFcnJvcignQ291bGQgbm90
IHNldCBpbm5lckhUTUwgOiAnK2JhLm1lc3NhZ2UpO319ZnVuY3Rpb24gcCh6LGFh
KXtnLmlzVHJ1dGh5KHosJ2VsZW1lbnQgbm90IHNwZWNpZmllZCcpO2cuaXNTdHJp
bmcoYWEpO3ZhciBiYT0nICcrbih6LCdjbGFzc05hbWUnKSsnICc7cmV0dXJuIEVT
NShiYSwnaW5kZXhPZicsdHJ1ZSwnICcrYWErJyAnKT49MDt9ZnVuY3Rpb24gcSh6
LGFhKXtnLmlzVHJ1dGh5KHosJ2VsZW1lbnQgbm90IHNwZWNpZmllZCcpO2cuaXNT
dHJpbmcoYWEpO2lmKCFwKHosYWEpKXouY2xhc3NOYW1lPW4oeiwnY2xhc3NOYW1l
JykrJyAnK2FhO31mdW5jdGlvbiByKHosYWEpe2cuaXNUcnV0aHkoeiwnZWxlbWVu
dCBub3Qgc3BlY2lmaWVkJyk7Zy5pc1N0cmluZyhhYSk7dmFyIGJhPW5ldyBSZWdF
eHAoJ1xccyonK2FhLCdnJyk7ei5jbGFzc05hbWU9RVM1KG4oeiwnY2xhc3NOYW1l
JykucmVwbGFjZShiYSwnJyksJ3RyaW0nLHRydWUpO31mdW5jdGlvbiBzKHosYWEs
YmEpe2cuaXNTdHJpbmcoeik7YWE9YWF8fGRvY3VtZW50LmJvZHk7YmE9YmF8fCcq
JztpZihhYS5xdWVyeVNlbGVjdG9yQWxsKXJldHVybiBoKGFhLnF1ZXJ5U2VsZWN0
b3JBbGwoYmErJy4nK3opKTt2YXIgY2E9YWEuZ2V0RWxlbWVudHNCeVRhZ05hbWUo
YmEpLGRhPVtdO2Zvcih2YXIgZWE9MCxmYT1jYS5sZW5ndGg7ZWE8ZmE7ZWErKylp
ZihwKGNhW2VhXSx6KSlkYVtkYS5sZW5ndGhdPWNhW2VhXTtyZXR1cm4gZGE7fWZ1
bmN0aW9uIHQoeixhYSl7Zy5pc1RydXRoeSh6LCdlbGVtZW50IG5vdCBzcGVjaWZp
ZWQnKTtnLmlzU3RyaW5nKGFhKTthYT1hYS5yZXBsYWNlKC8tKFx3KS9nLGZ1bmN0
aW9uKGRhLGVhKXtyZXR1cm4gZWEudG9VcHBlckNhc2UoKTt9KTt2YXIgYmE9ei5j
dXJyZW50U3R5bGV8fGRvY3VtZW50LmRlZmF1bHRWaWV3LmdldENvbXB1dGVkU3R5
bGUoeixudWxsKSxjYT1iYVthYV07aWYoL2JhY2tncm91bmRQb3NpdGlvbj8vLnRl
c3QoYWEpJiYvdG9wfGxlZnQvLnRlc3QoY2EpKWNhPScwJSc7cmV0dXJuIGNhO31m
dW5jdGlvbiB1KHosYWEsYmEpe2cuaXNUcnV0aHkoeiwnZWxlbWVudCBub3Qgc3Bl
Y2lmaWVkJyk7Zy5pc1N0cmluZyhhYSk7YWE9YWEucmVwbGFjZSgvLShcdykvZyxm
dW5jdGlvbihjYSxkYSl7cmV0dXJuIGRhLnRvVXBwZXJDYXNlKCk7fSk7ei5zdHls
ZVthYV09YmE7fWZ1bmN0aW9uIHYoeixhYSl7dmFyIGJhPXRydWU7Zm9yKHZhciBj
YT0wLGRhO2RhPWFhW2NhKytdOylpZighKGRhIGluIGspKXtiYT1mYWxzZTtrW2Rh
XT10cnVlO31pZihiYSlyZXR1cm47aWYoIWouaWUoKSl7dmFyIGVhPWRvY3VtZW50
LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7ZWEudHlwZT0ndGV4dC9jc3MnO2VhLnRl
eHRDb250ZW50PXo7ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQn
KVswXS5hcHBlbmRDaGlsZChlYSk7fWVsc2UgdHJ5e2RvY3VtZW50LmNyZWF0ZVN0
eWxlU2hlZXQoKS5jc3NUZXh0PXo7fWNhdGNoKGZhKXtpZihkb2N1bWVudC5zdHls
ZVNoZWV0c1swXSlkb2N1bWVudC5zdHlsZVNoZWV0c1swXS5jc3NUZXh0Kz16O319
ZnVuY3Rpb24gdygpe3ZhciB6PShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQmJmRv
Y3VtZW50LmNvbXBhdE1vZGU9PSdDU1MxQ29tcGF0Jyk/ZG9jdW1lbnQuZG9jdW1l
bnRFbGVtZW50OmRvY3VtZW50LmJvZHk7cmV0dXJuIHtzY3JvbGxUb3A6ei5zY3Jv
bGxUb3B8fGRvY3VtZW50LmJvZHkuc2Nyb2xsVG9wLHNjcm9sbExlZnQ6ei5zY3Jv
bGxMZWZ0fHxkb2N1bWVudC5ib2R5LnNjcm9sbExlZnQsd2lkdGg6d2luZG93Lmlu
bmVyV2lkdGg/d2luZG93LmlubmVyV2lkdGg6ei5jbGllbnRXaWR0aCxoZWlnaHQ6
d2luZG93LmlubmVySGVpZ2h0P3dpbmRvdy5pbm5lckhlaWdodDp6LmNsaWVudEhl
aWdodH07fWZ1bmN0aW9uIHgoeil7Zy5pc1RydXRoeSh6LCdlbGVtZW50IG5vdCBz
cGVjaWZpZWQnKTt2YXIgYWE9MCxiYT0wO2Rve2FhKz16Lm9mZnNldExlZnQ7YmEr
PXoub2Zmc2V0VG9wO313aGlsZSh6PXoub2Zmc2V0UGFyZW50KTtyZXR1cm4ge3g6
YWEseTpiYX07fXZhciB5PXtjb250YWluc0NzczpwLGFkZENzczpxLHJlbW92ZUNz
czpyLGdldEJ5Q2xhc3M6cyxnZXRTdHlsZTp0LHNldFN0eWxlOnUsZ2V0QXR0cjps
LGdldEJvb2xBdHRyOm0sZ2V0UHJvcDpuLGh0bWw6byxhZGRDc3NSdWxlczp2LGdl
dFZpZXdwb3J0SW5mbzp3LGdldFBvc2l0aW9uOngscmVhZHk6aX07ZS5leHBvcnRz
PXk7fSk7Cl9fZCgic2RrLlNjcmliZSIsWyJVcmxNYXAiLCJRdWVyeVN0cmluZyJd
LGZ1bmN0aW9uKGEsYixjLGQsZSxmKXt2YXIgZz1iKCdVcmxNYXAnKSxoPWIoJ1F1
ZXJ5U3RyaW5nJyk7ZnVuY3Rpb24gaShrLGwpeyhuZXcgSW1hZ2UoKSkuc3JjPWgu
YXBwZW5kVG9VcmwoZy5yZXNvbHZlKCd3d3cnLHRydWUpKycvY29tbW9uL3Njcmli
ZV9lbmRwb2ludC5waHAnLHtjOmssbTpFUzUoJ0pTT04nLCdzdHJpbmdpZnknLGZh
bHNlLGwpfSk7fXZhciBqPXtsb2c6aX07ZS5leHBvcnRzPWo7fSk7Cl9fZCgic2Rr
LkVycm9ySGFuZGxpbmciLFsiVXNlckFnZW50Iiwic2RrLlNjcmliZSIsInNkay5S
dW50aW1lIiwid3JhcEZ1bmN0aW9uIiwiTWFuYWdlZEVycm9yIiwiU0RLQ29uZmln
Il0sZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnPWIoJ1VzZXJBZ2VudCcpLGg9
Yignc2RrLlNjcmliZScpLGk9YygnU0RLQ29uZmlnJyksaj1iKCdzZGsuUnVudGlt
ZScpLGs9Yignd3JhcEZ1bmN0aW9uJyksbD1iKCdNYW5hZ2VkRXJyb3InKSxtPWZh
bHNlLG49Jyc7ZnVuY3Rpb24gbyh2KXt2YXIgdz12Ll9vcmlnaW5hbEVycm9yO2Rl
bGV0ZSB2Ll9vcmlnaW5hbEVycm9yO2gubG9nKCdqc3Nka19lcnJvcicse2FwcElk
OmouZ2V0Q2xpZW50SUQoKSxlcnJvcjp2Lm5hbWV8fHYubWVzc2FnZSxleHRyYTp2
fSk7dGhyb3cgdzt9ZnVuY3Rpb24gcCh2KXt2YXIgdz17bGluZTp2LmxpbmVOdW1i
ZXJ8fHYubGluZSxtZXNzYWdlOnYubWVzc2FnZSxuYW1lOnYubmFtZSxzY3JpcHQ6
di5maWxlTmFtZXx8di5zb3VyY2VVUkx8fHYuc2NyaXB0LHN0YWNrOnYuc3RhY2tU
cmFjZXx8di5zdGFja307dy5fb3JpZ2luYWxFcnJvcj12O2lmKGcuY2hyb21lKCkm
Ji8oW1x3OlwuXC9dK1wuanMpOihcZCspLy50ZXN0KHYuc3RhY2spKXt3LnNjcmlw
dD1SZWdFeHAuJDE7dy5saW5lPXBhcnNlSW50KFJlZ0V4cC4kMiwxMCk7fWZvcih2
YXIgeCBpbiB3KSh3W3hdPT1udWxsJiZkZWxldGUgd1t4XSk7cmV0dXJuIHc7fWZ1
bmN0aW9uIHEodix3KXtyZXR1cm4gZnVuY3Rpb24oKXtpZighbSlyZXR1cm4gdi5h
cHBseSh0aGlzLGFyZ3VtZW50cyk7dHJ5e249dztyZXR1cm4gdi5hcHBseSh0aGlz
LGFyZ3VtZW50cyk7fWNhdGNoKHgpe2lmKHggaW5zdGFuY2VvZiBsKXRocm93IHg7
dmFyIHk9cCh4KTt5LmVudHJ5PXc7dmFyIHo9RVM1KEFycmF5LnByb3RvdHlwZS5z
bGljZS5jYWxsKGFyZ3VtZW50cyksJ21hcCcsdHJ1ZSxmdW5jdGlvbihhYSl7dmFy
IGJhPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhYSk7cmV0dXJuICgv
Xlxbb2JqZWN0IChTdHJpbmd8TnVtYmVyfEJvb2xlYW58T2JqZWN0fERhdGUpXF0k
LykudGVzdChiYSk/YWE6YWEudG9TdHJpbmcoKTt9KTt5LmFyZ3M9RVM1KCdKU09O
Jywnc3RyaW5naWZ5JyxmYWxzZSx6KS5zdWJzdHJpbmcoMCwyMDApO28oeSk7fWZp
bmFsbHl7bj0nJzt9fTt9ZnVuY3Rpb24gcih2KXtpZighdi5fX3dyYXBwZXIpdi5f
X3dyYXBwZXI9ZnVuY3Rpb24oKXt0cnl7cmV0dXJuIHYuYXBwbHkodGhpcyxhcmd1
bWVudHMpO31jYXRjaCh3KXt3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbigpe3Ro
cm93IHc7fSwwKTtyZXR1cm4gZmFsc2U7fX07cmV0dXJuIHYuX193cmFwcGVyO31m
dW5jdGlvbiBzKHYsdyl7cmV0dXJuIGZ1bmN0aW9uKHgseSl7dmFyIHo9dysnOicr
KG58fCdbZ2xvYmFsXScpKyc6JysoeC5uYW1lfHwnW2Fub255bW91c10nKyhhcmd1
bWVudHMuY2FsbGVlLmNhbGxlci5uYW1lPycoJythcmd1bWVudHMuY2FsbGVlLmNh
bGxlci5uYW1lKycpJzonJykpO3JldHVybiB2KGsoeCwnZW50cnknLHopLHkpO307
fXZhciB0PWkuZXJyb3JIYW5kbGluZy5yYXRlO2lmKHQmJk1hdGguZmxvb3IoTWF0
aC5yYW5kb20oKSoxMDApKzE8PXQpbT10cnVlO2lmKG0pe3NldFRpbWVvdXQ9cyhz
ZXRUaW1lb3V0LCdzZXRUaW1lb3V0Jyk7c2V0SW50ZXJ2YWw9cyhzZXRJbnRlcnZh
bCwnc2V0SW50ZXJ2YWwnKTtrLnNldFdyYXBwZXIocSwnZW50cnknKTt9dmFyIHU9
e2d1YXJkOnEsdW5ndWFyZDpyfTtlLmV4cG9ydHM9dTt9KTsKX19kKCJzZGsuSW1w
cmVzc2lvbnMiLFsiZ3VpZCIsIlF1ZXJ5U3RyaW5nIiwic2RrLlJ1bnRpbWUiLCJV
cmxNYXAiXSxmdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9YignZ3VpZCcpLGg9
YignUXVlcnlTdHJpbmcnKSxpPWIoJ3Nkay5SdW50aW1lJyksaj1iKCdVcmxNYXAn
KTtmdW5jdGlvbiBrKG0pe3ZhciBuPWkuZ2V0Q2xpZW50SUQoKTtpZighbS5hcGlf
a2V5JiZuKW0uYXBpX2tleT1uO3ZhciBvPW5ldyBJbWFnZSgpO28uc3JjPWguYXBw
ZW5kVG9Vcmwoai5yZXNvbHZlKCd3d3cnLHRydWUpKycvaW1wcmVzc2lvbi5waHAv
JytnKCkrJy8nLG0pO312YXIgbD17bG9nOmZ1bmN0aW9uKG0sbil7aWYoIW4uc291
cmNlKW4uc291cmNlPSdqc3Nkayc7ayh7bGlkOm0scGF5bG9hZDpFUzUoJ0pTT04n
LCdzdHJpbmdpZnknLGZhbHNlLG4pfSk7fSxpbXByZXNzaW9uOmt9O2UuZXhwb3J0
cz1sO30pOwpfX2QoInNkay5JbnNpZ2h0cyIsWyJzZGsuSW1wcmVzc2lvbnMiXSxm
dW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9Yignc2RrLkltcHJlc3Npb25zJyks
aD17VFlQRTp7Tk9USUNFOidub3RpY2UnLFdBUk5JTkc6J3dhcm4nLEVSUk9SOidl
cnJvcid9LENBVEVHT1JZOntERVBSRUNBVEVEOidkZXByZWNhdGVkJyxBUElFUlJP
UjonYXBpZXJyb3InfSxsb2c6ZnVuY3Rpb24oaSxqLGspe3ZhciBsPXtzb3VyY2U6
J2pzc2RrJyx0eXBlOmksY2F0ZWdvcnk6aixwYXlsb2FkOmt9O2cubG9nKDExMyxs
KTt9LGltcHJlc3Npb246Zy5pbXByZXNzaW9ufTtlLmV4cG9ydHM9aDt9KTsKX19k
KCJGQiIsWyJzZGsuQXV0aCIsImNvcHlQcm9wZXJ0aWVzIiwiZG90QWNjZXNzIiwi
c2RrLmRvbVJlYWR5Iiwic2RrLkRPTSIsInNkay5FcnJvckhhbmRsaW5nIiwic2Rr
LkNvbnRlbnQiLCJET01XcmFwcGVyIiwiR2xvYmFsQ2FsbGJhY2siLCJzZGsuSW5z
aWdodHMiLCJMb2ciLCJzZGsuUnVudGltZSIsInNkay5TY3JpYmUiLCJDc3NDb25m
aWciLCJTREtDb25maWciXSxmdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9Yign
c2RrLkF1dGgnKSxoPWIoJ2NvcHlQcm9wZXJ0aWVzJyksaT1jKCdDc3NDb25maWcn
KSxqPWIoJ2RvdEFjY2VzcycpLGs9Yignc2RrLmRvbVJlYWR5JyksbD1iKCdzZGsu
RE9NJyksbT1iKCdzZGsuRXJyb3JIYW5kbGluZycpLG49Yignc2RrLkNvbnRlbnQn
KSxvPWIoJ0RPTVdyYXBwZXInKSxwPWIoJ0dsb2JhbENhbGxiYWNrJykscT1iKCdz
ZGsuSW5zaWdodHMnKSxyPWIoJ0xvZycpLHM9Yignc2RrLlJ1bnRpbWUnKSx0PWIo
J3Nkay5TY3JpYmUnKSx1PWMoJ1NES0NvbmZpZycpLHYsdyx4PWoodSwnYXBpLm1v
ZGUnKSx5PXt9O3Y9d2luZG93LkZCPXt9O3ZhciB6PXt9O3IubGV2ZWw9MTtwLnNl
dFByZWZpeCgnRkIuX19nbG9iYWxDYWxsYmFja3MnKTt2YXIgYWE9ZG9jdW1lbnQu
Y3JlYXRlRWxlbWVudCgnZGl2Jyk7by5zZXRSb290KGFhKTtrKGZ1bmN0aW9uKCl7
ci5pbmZvKCdkb21SZWFkeScpO24uYXBwZW5kSGlkZGVuKGFhKTtpZihpLnJ1bGVz
KWwuYWRkQ3NzUnVsZXMoaS5ydWxlcyxpLmNvbXBvbmVudHMpO30pO3Muc3Vic2Ny
aWJlKCdBY2Nlc3NUb2tlbi5jaGFuZ2UnLGZ1bmN0aW9uKGRhKXtpZighZGEmJnMu
Z2V0TG9naW5TdGF0dXMoKT09PSdjb25uZWN0ZWQnKWcuZ2V0TG9naW5TdGF0dXMo
bnVsbCx0cnVlKTt9KTtpZihqKHUsJ2FwaS53aGl0ZWxpc3QubGVuZ3RoJykpe3c9
e307RVM1KHUuYXBpLndoaXRlbGlzdCwnZm9yRWFjaCcsdHJ1ZSxmdW5jdGlvbihk
YSl7d1tkYV09MTt9KTt9ZnVuY3Rpb24gYmEoZGEsZWEsZmEsZ2Epe3ZhciBoYTtp
ZigvXl8vLnRlc3QoZmEpKXtoYT0naGlkZSc7fWVsc2UgaWYodyYmIXdbZWFdKWhh
PXg7c3dpdGNoKGhhKXtjYXNlICdoaWRlJzpyZXR1cm47Y2FzZSAnc3R1Yic6cmV0
dXJuIGZ1bmN0aW9uKCl7ci53YXJuKCdUaGUgbWV0aG9kIEZCLiVzIGhhcyBiZWVu
IHJlbW92ZWQgZnJvbSB0aGUgSlMgU0RLLicsZWEpO307YnJlYWs7ZGVmYXVsdDpy
ZXR1cm4gbS5ndWFyZChmdW5jdGlvbigpe2lmKGhhPT09J3dhcm4nKXtyLndhcm4o
J1RoZSBtZXRob2QgRkIuJXMgaXMgbm90IG9mZmljaWFsbHkgc3VwcG9ydGVkIGJ5
ICcrJ0ZhY2Vib29rIGFuZCBhY2Nlc3MgdG8gaXQgd2lsbCBzb29uIGJlIHJlbW92
ZWQuJyxlYSk7aWYoIXkuaGFzT3duUHJvcGVydHkoZWEpKXtxLmxvZyhxLlRZUEUu
V0FSTklORyxxLkNBVEVHT1JZLkRFUFJFQ0FURUQsJ0ZCLicrZWEpO3QubG9nKCdq
c3Nka19lcnJvcicse2FwcElkOnMuZ2V0Q2xpZW50SUQoKSxlcnJvcjonUHJpdmF0
ZSBtZXRob2QgdXNlZCcsZXh0cmE6e2FyZ3M6ZWF9fSk7eVtlYV09dHJ1ZTt9fWZ1
bmN0aW9uIGlhKHFhKXtpZihFUzUoJ0FycmF5JywnaXNBcnJheScsZmFsc2UscWEp
KXJldHVybiBFUzUocWEsJ21hcCcsdHJ1ZSxpYSk7aWYocWEmJnR5cGVvZiBxYT09
PSdvYmplY3QnJiZxYS5fX3dyYXBwZWQpcmV0dXJuIHFhLl9fd3JhcHBlZDtyZXR1
cm4gdHlwZW9mIHFhPT09J2Z1bmN0aW9uJyYmL15mdW5jdGlvbi8udGVzdChxYS50
b1N0cmluZygpKT9tLnVuZ3VhcmQocWEpOnFhO312YXIgamE9RVM1KEFycmF5LnBy
b3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyksJ21hcCcsdHJ1ZSxpYSksa2E9
ZGEuYXBwbHkoZ2EsamEpLGxhLG1hPXRydWU7aWYoa2EmJnR5cGVvZiBrYT09PSdv
YmplY3QnKXt2YXIgbmE9RnVuY3Rpb24oKTtuYS5wcm90b3R5cGU9a2E7bGE9bmV3
IG5hKCk7bGEuX193cmFwcGVkPWthO2Zvcih2YXIgb2EgaW4ga2Epe3ZhciBwYT1r
YVtvYV07aWYodHlwZW9mIHBhIT09J2Z1bmN0aW9uJ3x8b2E9PT0nY29uc3RydWN0
b3InKWNvbnRpbnVlO21hPWZhbHNlO2xhW29hXT1iYShwYSxlYSsnOicrb2Esb2Es
a2EpO319aWYoIW1hKXJldHVybiBsYTtyZXR1cm4gbWE/a2E6bGE7fSxlYSk7fX1m
dW5jdGlvbiBjYShkYSxlYSl7dmFyIGZhPWRhP2oodixkYSx0cnVlKTp2O0VTNShF
UzUoJ09iamVjdCcsJ2tleXMnLGZhbHNlLGVhKSwnZm9yRWFjaCcsdHJ1ZSxmdW5j
dGlvbihnYSl7dmFyIGhhPWVhW2dhXTtpZih0eXBlb2YgaGE9PT0nZnVuY3Rpb24n
KXt2YXIgaWE9KGRhP2RhKycuJzonJykrZ2EsamE9YmEoaGEsaWEsZ2EsZWEpO2lm
KGphKWZhW2dhXT1qYTt9fSk7fXMuc2V0U2VjdXJlKChmdW5jdGlvbigpe3ZhciBk
YT0vaWZyYW1lX2NhbnZhc3xhcHBfcnVubmVyLy50ZXN0KHdpbmRvdy5uYW1lKSxl
YT0vZGlhbG9nLy50ZXN0KHdpbmRvdy5uYW1lKTtpZihsb2NhdGlvbi5wcm90b2Nv
bD09J2h0dHBzOicmJih3aW5kb3c9PXRvcHx8IShkYXx8ZWEpKSlyZXR1cm4gdHJ1
ZTtpZigvX2ZiX2h0dHBzPy8udGVzdCh3aW5kb3cubmFtZSkpcmV0dXJuIEVTNSh3
aW5kb3cubmFtZSwnaW5kZXhPZicsdHJ1ZSwnX2ZiX2h0dHBzJykhPS0xO30pKCkp
O2goeix7cHJvdmlkZTpjYX0pO2UuZXhwb3J0cz16O30pOwpfX2QoImZsYXR0ZW5P
YmplY3QiLFtdLGZ1bmN0aW9uKGEsYixjLGQsZSxmKXtmdW5jdGlvbiBnKGgpe3Zh
ciBpPXt9O2Zvcih2YXIgaiBpbiBoKWlmKGguaGFzT3duUHJvcGVydHkoaikpe3Zh
ciBrPWhbal07aWYobnVsbD09PWt8fHVuZGVmaW5lZD09PWspe2NvbnRpbnVlO31l
bHNlIGlmKHR5cGVvZiBrPT0nc3RyaW5nJyl7aVtqXT1rO31lbHNlIGlbal09RVM1
KCdKU09OJywnc3RyaW5naWZ5JyxmYWxzZSxrKTt9cmV0dXJuIGk7fWUuZXhwb3J0
cz1nO30pOwpfX2QoIkNPUlNSZXF1ZXN0IixbIndyYXBGdW5jdGlvbiIsIlF1ZXJ5
U3RyaW5nIl0sZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnPWIoJ3dyYXBGdW5j
dGlvbicpLGg9YignUXVlcnlTdHJpbmcnKTtmdW5jdGlvbiBpKGwsbSl7aWYoIXNl
bGYuWE1MSHR0cFJlcXVlc3QpcmV0dXJuIG51bGw7dmFyIG49bmV3IFhNTEh0dHBS
ZXF1ZXN0KCksbz1mdW5jdGlvbigpe307aWYoJ3dpdGhDcmVkZW50aWFscycgaW4g
bil7bi5vcGVuKGwsbSx0cnVlKTtuLnNldFJlcXVlc3RIZWFkZXIoJ0NvbnRlbnQt
dHlwZScsJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcpO31lbHNl
IGlmKHNlbGYuWERvbWFpblJlcXVlc3Qpe249bmV3IFhEb21haW5SZXF1ZXN0KCk7
dHJ5e24ub3BlbihsLG0pO24ub25wcm9ncmVzcz1uLm9udGltZW91dD1vO31jYXRj
aChwKXtyZXR1cm4gbnVsbDt9fWVsc2UgcmV0dXJuIG51bGw7dmFyIHE9e3NlbmQ6
ZnVuY3Rpb24odCl7bi5zZW5kKHQpO319LHI9ZyhmdW5jdGlvbigpe3I9bztpZign
b25sb2FkJyBpbiBxKXEub25sb2FkKG4pO30sJ2VudHJ5JywnWE1MSHR0cFJlcXVl
c3Q6bG9hZCcpLHM9ZyhmdW5jdGlvbigpe3M9bztpZignb25lcnJvcicgaW4gcSlx
Lm9uZXJyb3Iobik7fSwnZW50cnknLCdYTUxIdHRwUmVxdWVzdDplcnJvcicpO24u
b25sb2FkPWZ1bmN0aW9uKCl7cigpO307bi5vbmVycm9yPWZ1bmN0aW9uKCl7cygp
O307bi5vbnJlYWR5c3RhdGVjaGFuZ2U9ZnVuY3Rpb24oKXtpZihuLnJlYWR5U3Rh
dGU9PTQpaWYobi5zdGF0dXM9PTIwMCl7cigpO31lbHNlIHMoKTt9O3JldHVybiBx
O31mdW5jdGlvbiBqKGwsbSxuLG8pe24uc3VwcHJlc3NfaHR0cF9jb2RlPTE7dmFy
IHA9aC5lbmNvZGUobik7aWYobSE9J3Bvc3QnKXtsPWguYXBwZW5kVG9VcmwobCxw
KTtwPScnO312YXIgcT1pKG0sbCk7aWYoIXEpcmV0dXJuIGZhbHNlO3Eub25sb2Fk
PWZ1bmN0aW9uKHIpe28oRVM1KCdKU09OJywncGFyc2UnLGZhbHNlLHIucmVzcG9u
c2VUZXh0KSk7fTtxLm9uZXJyb3I9ZnVuY3Rpb24ocil7aWYoci5yZXNwb25zZVRl
eHQpe28oRVM1KCdKU09OJywncGFyc2UnLGZhbHNlLHIucmVzcG9uc2VUZXh0KSk7
fWVsc2Ugbyh7ZXJyb3I6e3R5cGU6J2h0dHAnLG1lc3NhZ2U6J3Vua25vd24gZXJy
b3InLHN0YXR1czpyLnN0YXR1c319KTt9O3Euc2VuZChwKTtyZXR1cm4gdHJ1ZTt9
dmFyIGs9e2V4ZWN1dGU6an07ZS5leHBvcnRzPWs7fSk7Cl9fZCgiRmxhc2hSZXF1
ZXN0IixbIkRPTVdyYXBwZXIiLCJGbGFzaCIsIkdsb2JhbENhbGxiYWNrIiwiUXVl
cnlTdHJpbmciLCJRdWV1ZSJdLGZ1bmN0aW9uKGEsYixjLGQsZSxmKXt2YXIgZz1i
KCdET01XcmFwcGVyJyksaD1iKCdGbGFzaCcpLGk9YignR2xvYmFsQ2FsbGJhY2sn
KSxqPWIoJ1F1ZXJ5U3RyaW5nJyksaz1iKCdRdWV1ZScpLGwsbT17fSxuLG87ZnVu
Y3Rpb24gcCgpe2lmKCFuKXRocm93IG5ldyBFcnJvcignc3dmVXJsIGhhcyBub3Qg
YmVlbiBzZXQnKTt2YXIgcz1pLmNyZWF0ZShmdW5jdGlvbigpe2wuc3RhcnQoZnVu
Y3Rpb24odSl7dmFyIHY9by5leGVjdXRlKHUubWV0aG9kLHUudXJsLHUuYm9keSk7
aWYoIXYpdGhyb3cgbmV3IEVycm9yKCdDb3VsZCBjcmVhdGUgcmVxdWVzdCcpO21b
dl09dS5jYWxsYmFjazt9KTt9KSx0PWkuY3JlYXRlKGZ1bmN0aW9uKHUsdix3KXt2
YXIgeDt0cnl7eD1FUzUoJ0pTT04nLCdwYXJzZScsZmFsc2UsZGVjb2RlVVJJQ29t
cG9uZW50KHcpKTt9Y2F0Y2goeSl7eD17ZXJyb3I6e3R5cGU6J1N5bnRheEVycm9y
JyxtZXNzYWdlOnkubWVzc2FnZSxzdGF0dXM6dixyYXc6d319O31tW3VdKHgpO2Rl
bGV0ZSBtW3VdO30pO289aC5lbWJlZChuLGcuZ2V0Um9vdCgpLG51bGwse2xvZzpm
YWxzZSxpbml0Q2FsbGJhY2s6cyxyZXF1ZXN0Q2FsbGJhY2s6dH0pO31mdW5jdGlv
biBxKHMsdCx1LHYpe3Uuc3VwcHJlc3NfaHR0cF9jb2RlPTE7aWYoIXUubWV0aG9k
KXUubWV0aG9kPXQ7dmFyIHc9ai5lbmNvZGUodSk7aWYodD09PSdnZXQnJiZzLmxl
bmd0aCt3Lmxlbmd0aDwyMDAwKXtzPWouYXBwZW5kVG9Vcmwocyx3KTt3PScnO31l
bHNlIHQ9J3Bvc3QnO2lmKCFsKXtpZighaC5pc0F2YWlsYWJsZSgpKXJldHVybiBm
YWxzZTtsPW5ldyBrKCk7cCgpO31sLmVucXVldWUoe21ldGhvZDp0LHVybDpzLGJv
ZHk6dyxjYWxsYmFjazp2fSk7cmV0dXJuIHRydWU7fXZhciByPXtzZXRTd2ZVcmw6
ZnVuY3Rpb24ocyl7bj1zO30sZXhlY3V0ZTpxfTtlLmV4cG9ydHM9cjt9KTsKX19k
KCJKU09OUFJlcXVlc3QiLFsiRE9NV3JhcHBlciIsIkdsb2JhbENhbGxiYWNrIiwi
UXVlcnlTdHJpbmciXSxmdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9YignRE9N
V3JhcHBlcicpLGg9YignR2xvYmFsQ2FsbGJhY2snKSxpPWIoJ1F1ZXJ5U3RyaW5n
Jyk7ZnVuY3Rpb24gaihsLG0sbixvKXt2YXIgcD1kb2N1bWVudC5jcmVhdGVFbGVt
ZW50KCdzY3JpcHQnKSxxPWZ1bmN0aW9uKHMpe3E9ZnVuY3Rpb24oKXt9O2gucmVt
b3ZlKG4uY2FsbGJhY2spO28ocyk7cC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHAp
O307bi5jYWxsYmFjaz1oLmNyZWF0ZShxKTtpZighbi5tZXRob2Qpbi5tZXRob2Q9
bTtsPWkuYXBwZW5kVG9VcmwobCxuKTtpZihsLmxlbmd0aD4yMDAwKXtoLnJlbW92
ZShuLmNhbGxiYWNrKTtyZXR1cm4gZmFsc2U7fXAub25lcnJvcj1mdW5jdGlvbigp
e3Eoe2Vycm9yOnt0eXBlOidodHRwJyxtZXNzYWdlOid1bmtub3duIGVycm9yJ319
KTt9O3ZhciByPWZ1bmN0aW9uKCl7c2V0VGltZW91dChmdW5jdGlvbigpe3Eoe2Vy
cm9yOnt0eXBlOidodHRwJyxtZXNzYWdlOid1bmtub3duIGVycm9yJ319KTt9LDAp
O307aWYocC5hZGRFdmVudExpc3RlbmVyKXtwLmFkZEV2ZW50TGlzdGVuZXIoJ2xv
YWQnLHIsZmFsc2UpO31lbHNlIHAub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9u
KCl7aWYoL2xvYWRlZHxjb21wbGV0ZS8udGVzdCh0aGlzLnJlYWR5U3RhdGUpKXIo
KTt9O3Auc3JjPWw7Zy5nZXRSb290KCkuYXBwZW5kQ2hpbGQocCk7cmV0dXJuIHRy
dWU7fXZhciBrPXtleGVjdXRlOmp9O2UuZXhwb3J0cz1rO30pOwpfX2QoIkFyZ3Vt
ZW50RXJyb3IiLFsiTWFuYWdlZEVycm9yIl0sZnVuY3Rpb24oYSxiLGMsZCxlLGYp
e3ZhciBnPWIoJ01hbmFnZWRFcnJvcicpO2Z1bmN0aW9uIGgoaSxqKXtnLnByb3Rv
dHlwZS5jb25zdHJ1Y3Rvci5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fWgucHJvdG90
eXBlPW5ldyBnKCk7aC5wcm90b3R5cGUuY29uc3RydWN0b3I9aDtlLmV4cG9ydHM9
aDt9KTsKX19kKCJBcGlDbGllbnQiLFsiY29weVByb3BlcnRpZXMiLCJmbGF0dGVu
T2JqZWN0Iiwic3ByaW50ZiIsIkNPUlNSZXF1ZXN0IiwiRmxhc2hSZXF1ZXN0Iiwi
SlNPTlBSZXF1ZXN0IiwiTG9nIiwiVXJsTWFwIiwiVVJMIiwiQXJndW1lbnRFcnJv
ciIsIkFzc2VydCIsIkFwaUNsaWVudENvbmZpZyJdLGZ1bmN0aW9uKGEsYixjLGQs
ZSxmKXt2YXIgZz1iKCdjb3B5UHJvcGVydGllcycpLGg9YignZmxhdHRlbk9iamVj
dCcpLGk9Yignc3ByaW50ZicpLGo9YignQ09SU1JlcXVlc3QnKSxrPWIoJ0ZsYXNo
UmVxdWVzdCcpLGw9YignSlNPTlBSZXF1ZXN0JyksbT1iKCdMb2cnKSxuPWIoJ1Vy
bE1hcCcpLG89YignVVJMJykscD1iKCdBcmd1bWVudEVycm9yJykscT1iKCdBc3Nl
cnQnKSxyPWIoJ0FwaUNsaWVudENvbmZpZycpLHMsdCx1LHYsdz17Z2V0OnRydWUs
cG9zdDp0cnVlLCdkZWxldGUnOnRydWUscHV0OnRydWV9LHg9e2ZxbF9xdWVyeTp0
cnVlLGZxbF9tdWx0aXF1ZXJ5OnRydWUsZnJpZW5kc19nZXQ6dHJ1ZSxub3RpZmlj
YXRpb25zX2dldDp0cnVlLHN0cmVhbV9nZXQ6dHJ1ZSx1c2Vyc19nZXRpbmZvOnRy
dWV9O2Z1bmN0aW9uIHkoY2EsZGEsZWEsZmEpe2lmKCFlYS5hY2Nlc3NfdG9rZW4p
ZWEuYWNjZXNzX3Rva2VuPXM7ZWEucHJldHR5PTA7aWYodilnKGVhLHYpO2VhPWgo
ZWEpO2lmKCFmYSl7bS53YXJuKCdObyBjYWxsYmFjayBwYXNzZWQgdG8gdGhlIEFw
aUNsaWVudCBmb3IgJXMnLGNhKTtmYT1mdW5jdGlvbigpe307fXZhciBnYT17anNv
bnA6bCxjb3JzOmosZmxhc2g6a30saGE7aWYoZWEudHJhbnNwb3J0KXtoYT1bZWEu
dHJhbnNwb3J0XTtkZWxldGUgZWEudHJhbnNwb3J0O31lbHNlIGhhPVsnanNvbnAn
LCdjb3JzJywnZmxhc2gnXTt2YXIgaWE9ZnVuY3Rpb24obWEpe3ZhciBuYT1mYWxz
ZTtpZih0JiZtYSYmdHlwZW9mIG1hPT0nb2JqZWN0Jyl7aWYobWEuZXJyb3Ipe2lm
KG1hLmVycm9yPT0naW52YWxpZF90b2tlbid8fChtYS5lcnJvci50eXBlPT0nT0F1
dGhFeGNlcHRpb24nJiZtYS5lcnJvci5jb2RlPT0xOTApKW5hPXRydWU7fWVsc2Ug
aWYobWEuZXJyb3JfY29kZSlpZihtYS5lcnJvcl9jb2RlPT0nMTkwJyluYT10cnVl
O2lmKG5hKXQoKTt9ZmEobWEpO307Zm9yKHZhciBqYT0wO2phPGhhLmxlbmd0aDtq
YSsrKXt2YXIga2E9Z2FbaGFbamFdXSxsYT1nKHt9LGVhKTtpZihrYS5leGVjdXRl
KGNhLGRhLGxhLGlhKSlyZXR1cm47fWZhKHtlcnJvcjp7dHlwZTonbm8tdHJhbnNw
b3J0JyxtZXNzYWdlOidDb3VsZCBub3QgZmluZCBhIHVzYWJsZSB0cmFuc3BvcnQg
Zm9yIHJlcXVlc3QnfX0pO31mdW5jdGlvbiB6KGNhKXtxLmlzU3RyaW5nKGNhLCdJ
bnZhbGlkIHBhdGgnKTt2YXIgZGEsZWE9e307dHJ5e2RhPW5ldyBvKGNhKTt9Y2F0
Y2goZmEpe3Rocm93IG5ldyBwKGZhLm1lc3NhZ2UsZmEpO31FUzUoQXJyYXkucHJv
dG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpLCdmb3JFYWNoJyx0cnVlLGZ1
bmN0aW9uKGphKXtlYVt0eXBlb2YgamFdPWphO30pO3ZhciBnYT0oZWEuc3RyaW5n
fHwnZ2V0JykudG9Mb3dlckNhc2UoKSxoYT1nKGVhLm9iamVjdHx8e30sZGEuZ2V0
UGFyc2VkU2VhcmNoKCkpLGlhPWVhWydmdW5jdGlvbiddO3EuaXNUcnVlKGdhIGlu
IHcsaSgnSW52YWxpZCBtZXRob2QgcGFzc2VkIHRvIEFwaUNsaWVudDogJXMnLGdh
KSk7aGEubWV0aG9kPWdhO2RhPW4ucmVzb2x2ZSgnZ3JhcGgnKStkYS5nZXRQYXRo
KCk7eShkYSxnYT09J2dldCc/J2dldCc6J3Bvc3QnLGhhLGlhKTt9ZnVuY3Rpb24g
YWEoY2EsZGEpe3EuaXNPYmplY3QoY2EpO3EuaXNTdHJpbmcoY2EubWV0aG9kLCdt
ZXRob2QgbWlzc2luZycpO3ZhciBlYT1jYS5tZXRob2QudG9Mb3dlckNhc2UoKS5y
ZXBsYWNlKCcuJywnXycpO2NhLmZvcm1hdD0nanNvbi1zdHJpbmdzJztjYS5hcGlf
a2V5PXU7dmFyIGZhPWVhIGluIHg/J2FwaV9yZWFkJzonYXBpJyxnYT1uLnJlc29s
dmUoZmEpKycvcmVzdHNlcnZlci5waHAnO3koZ2EsJ2dldCcsY2EsZGEpO312YXIg
YmE9e3NldEFjY2Vzc1Rva2VuOmZ1bmN0aW9uKGNhKXtzPWNhO30sc2V0SW52YWxp
ZEFjY2Vzc1Rva2VuSGFuZGxlcjpmdW5jdGlvbihjYSl7dD1jYTt9LHNldENsaWVu
dElEOmZ1bmN0aW9uKGNhKXt1PWNhO30sc2V0RGVmYXVsdFBhcmFtczpmdW5jdGlv
bihjYSl7dj1jYTt9LHJlc3Q6YWEsZ3JhcGg6en07ay5zZXRTd2ZVcmwoci5GbGFz
aFJlcXVlc3Quc3dmVXJsKTtlLmV4cG9ydHM9YmE7fSk7Cl9fZCgic2RrLmFwaSIs
WyJBcGlDbGllbnQiLCJzZGsuUnVudGltZSJdLGZ1bmN0aW9uKGEsYixjLGQsZSxm
KXt2YXIgZz1iKCdBcGlDbGllbnQnKSxoPWIoJ3Nkay5SdW50aW1lJyksaTtoLnN1
YnNjcmliZSgnQ2xpZW50SUQuY2hhbmdlJyxmdW5jdGlvbihrKXtnLnNldENsaWVu
dElEKGspO30pO2guc3Vic2NyaWJlKCdBY2Nlc3NUb2tlbi5jaGFuZ2UnLGZ1bmN0
aW9uKGspe2k9aztnLnNldEFjY2Vzc1Rva2VuKGspO30pO2cuc2V0RGVmYXVsdFBh
cmFtcyh7c2RrOidqb2V5J30pO2cuc2V0SW52YWxpZEFjY2Vzc1Rva2VuSGFuZGxl
cihmdW5jdGlvbigpe2lmKGk9PT1oLmdldEFjY2Vzc1Rva2VuKCkpaC5zZXRBY2Nl
c3NUb2tlbihudWxsKTt9KTtmdW5jdGlvbiBqKCl7aWYodHlwZW9mIGFyZ3VtZW50
c1swXT09PSdzdHJpbmcnKXtnLmdyYXBoLmFwcGx5KGcsYXJndW1lbnRzKTt9ZWxz
ZSBnLnJlc3QuYXBwbHkoZyxhcmd1bWVudHMpO31lLmV4cG9ydHM9ajt9KTsKX19k
KCJsZWdhY3k6ZmIuYXBpIixbIkZCIiwic2RrLmFwaSJdLGZ1bmN0aW9uKGEsYixj
LGQpe3ZhciBlPWIoJ0ZCJyksZj1iKCdzZGsuYXBpJyk7ZS5wcm92aWRlKCcnLHth
cGk6Zn0pO30sMyk7Cl9fZCgic2RrLkNhbnZhcy5FbnZpcm9ubWVudCIsWyJzZGsu
UlBDIl0sZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnPWIoJ3Nkay5SUEMnKTtm
dW5jdGlvbiBoKGspe2cucmVtb3RlLmdldFBhZ2VJbmZvKGZ1bmN0aW9uKGwpe2so
bC5yZXN1bHQpO30pO31mdW5jdGlvbiBpKGssbCl7Zy5yZW1vdGUuc2Nyb2xsVG8o
e3g6a3x8MCx5Omx8fDB9KTt9Zy5zdHViKCdnZXRQYWdlSW5mbycpO2cuc3R1Yign
c2Nyb2xsVG8nKTt2YXIgaj17Z2V0UGFnZUluZm86aCxzY3JvbGxUbzppfTtlLmV4
cG9ydHM9ajt9KTsKX19kKCJzZGsuSW50bCIsWyJMb2ciXSxmdW5jdGlvbihhLGIs
YyxkLGUsZil7dmFyIGc9YignTG9nJyksaD0oJ1snKycuIT8nKydcdTMwMDInKydc
dUZGMDEnKydcdUZGMUYnKydcdTA5NjQnKydcdTIwMjYnKydcdTBFQUYnKydcdTE4
MDEnKydcdTBFMkYnKydcdUZGMEUnKyddJyk7ZnVuY3Rpb24gaShsKXtpZih0eXBl
b2YgbCE9J3N0cmluZycpcmV0dXJuIGZhbHNlO3JldHVybiAhIWwubWF0Y2gobmV3
IFJlZ0V4cChoKydbJysnKSInKyInIisnXHUwMEJCJysnXHUwRjNCJysnXHUwRjNE
JysnXHUyMDE5JysnXHUyMDFEJysnXHUyMDNBJysnXHUzMDA5JysnXHUzMDBCJysn
XHUzMDBEJysnXHUzMDBGJysnXHUzMDExJysnXHUzMDE1JysnXHUzMDE3JysnXHUz
MDE5JysnXHUzMDFCJysnXHUzMDFFJysnXHUzMDFGJysnXHVGRDNGJysnXHVGRjA3
JysnXHVGRjA5JysnXHVGRjNEJysnXFxzJysnXSokJykpO31mdW5jdGlvbiBqKGws
bSl7aWYobSE9PXVuZGVmaW5lZClpZih0eXBlb2YgbSE9J29iamVjdCcpe2cuZXJy
b3IoJ1RoZSBzZWNvbmQgYXJnIHRvIEZCLkludGwudHgoKSBtdXN0IGJlIGFuIE9i
amVjdCBmb3IgJysnRkIuSW50bC50eCgnK2wrJywgLi4uKScpO31lbHNle3ZhciBu
O2Zvcih2YXIgbyBpbiBtKWlmKG0uaGFzT3duUHJvcGVydHkobykpe2lmKGkobVtv
XSkpe249bmV3IFJlZ0V4cCgnXFx7JytvKydcXH0nK2grJyonLCdnJyk7fWVsc2Ug
bj1uZXcgUmVnRXhwKCdcXHsnK28rJ1xcfScsJ2cnKTtsPWwucmVwbGFjZShuLG1b
b10pO319cmV0dXJuIGw7fWZ1bmN0aW9uIGsoKXt0aHJvdyBuZXcgRXJyb3IoJ1Bs
YWNlaG9sZGVyIGZ1bmN0aW9uJyk7fWsuXz1qO2UuZXhwb3J0cz17dHg6a307fSk7
Cl9fZCgic2RrLkRpYWxvZyIsWyJzZGsuQ2FudmFzLkVudmlyb25tZW50Iiwic2Rr
LkNvbnRlbnQiLCJzZGsuRE9NIiwiRE9NRXZlbnRMaXN0ZW5lciIsInNkay5JbnRs
IiwiT2JzZXJ2YWJsZU1peGluIiwic2RrLlJ1bnRpbWUiLCJUeXBlIiwiVXNlckFn
ZW50Il0sZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnPWIoJ3Nkay5DYW52YXMu
RW52aXJvbm1lbnQnKSxoPWIoJ3Nkay5Db250ZW50JyksaT1iKCdzZGsuRE9NJyks
aj1iKCdET01FdmVudExpc3RlbmVyJyksaz1iKCdzZGsuSW50bCcpLGw9YignT2Jz
ZXJ2YWJsZU1peGluJyksbT1iKCdzZGsuUnVudGltZScpLG49YignVHlwZScpLG89
YignVXNlckFnZW50JykscD1uLmV4dGVuZCh7Y29uc3RydWN0b3I6ZnVuY3Rpb24o
cixzKXt0aGlzLnBhcmVudCgpO3RoaXMuaWQ9cjt0aGlzLmRpc3BsYXk9cztpZigh
cS5fZGlhbG9ncyl7cS5fZGlhbG9ncz17fTtxLl9hZGRPcmllbnRhdGlvbkhhbmRs
ZXIoKTt9cS5fZGlhbG9nc1tyXT10aGlzO319LGwpLHE9e25ld0luc3RhbmNlOmZ1
bmN0aW9uKHIscyl7cmV0dXJuIG5ldyBwKHIscyk7fSxfZGlhbG9nczpudWxsLF9s
YXN0WU9mZnNldDowLF9sb2FkZXJFbDpudWxsLF9vdmVybGF5RWw6bnVsbCxfc3Rh
Y2s6W10sX2FjdGl2ZTpudWxsLGdldDpmdW5jdGlvbihyKXtyZXR1cm4gcS5fZGlh
bG9nc1tyXTt9LF9maW5kUm9vdDpmdW5jdGlvbihyKXt3aGlsZShyKXtpZihpLmNv
bnRhaW5zQ3NzKHIsJ2ZiX2RpYWxvZycpKXJldHVybiByO3I9ci5wYXJlbnROb2Rl
O319LF9jcmVhdGVXV1dMb2FkZXI6ZnVuY3Rpb24ocil7cj1yP3I6NDYwO3JldHVy
biBxLmNyZWF0ZSh7Y29udGVudDooJzxkaXYgY2xhc3M9ImRpYWxvZ190aXRsZSI+
JysnICA8YSBpZD0iZmJfZGlhbG9nX2xvYWRlcl9jbG9zZSI+JysnICAgIDxkaXYg
Y2xhc3M9ImZiX2RpYWxvZ19jbG9zZV9pY29uIj48L2Rpdj4nKycgIDwvYT4nKycg
IDxzcGFuPkZhY2Vib29rPC9zcGFuPicrJyAgPGRpdiBzdHlsZT0iY2xlYXI6Ym90
aDsiPjwvZGl2PicrJzwvZGl2PicrJzxkaXYgY2xhc3M9ImRpYWxvZ19jb250ZW50
Ij48L2Rpdj4nKyc8ZGl2IGNsYXNzPSJkaWFsb2dfZm9vdGVyIj48L2Rpdj4nKSx3
aWR0aDpyfSk7fSxfY3JlYXRlTW9iaWxlTG9hZGVyOmZ1bmN0aW9uKCl7dmFyIHI9
by5uYXRpdmVBcHAoKT8nJzooJzx0YWJsZT4nKycgIDx0Ym9keT4nKycgICAgPHRy
PicrJyAgICAgIDx0ZCBjbGFzcz0iaGVhZGVyX2xlZnQiPicrJyAgICAgICAgPGxh
YmVsIGNsYXNzPSJ0b3VjaGFibGVfYnV0dG9uIj4nKycgICAgICAgICAgPGlucHV0
IHR5cGU9InN1Ym1pdCIgdmFsdWU9Iicray50eC5fKCJDYW5jZWwiKSsnIicrJyAg
ICAgICAgICAgIGlkPSJmYl9kaWFsb2dfbG9hZGVyX2Nsb3NlIi8+JysnICAgICAg
ICA8L2xhYmVsPicrJyAgICAgIDwvdGQ+JysnICAgICAgPHRkIGNsYXNzPSJoZWFk
ZXJfY2VudGVyIj4nKycgICAgICAgIDxkaXY+JytrLnR4Ll8oIkxvYWRpbmcuLi4i
KSsnPC9kaXY+JysnICAgICAgPC90ZD4nKycgICAgICA8dGQgY2xhc3M9ImhlYWRl
cl9yaWdodCI+JysnICAgICAgPC90ZD4nKycgICAgPC90cj4nKycgIDwvdGJvZHk+
JysnPC90YWJsZT4nKTtyZXR1cm4gcS5jcmVhdGUoe2NsYXNzZXM6J2xvYWRpbmcn
KyhvLmlwYWQoKT8nIGNlbnRlcmVkJzonJyksY29udGVudDooJzxkaXYgY2xhc3M9
ImRpYWxvZ19oZWFkZXIiPicrcisnPC9kaXY+Jyl9KTt9LF9yZXN0b3JlQm9keVBv
c2l0aW9uOmZ1bmN0aW9uKCl7aWYoIW8uaXBhZCgpKXt2YXIgcj1kb2N1bWVudC5n
ZXRFbGVtZW50c0J5VGFnTmFtZSgnYm9keScpWzBdO2kucmVtb3ZlQ3NzKHIsJ2Zi
X2hpZGRlbicpO319LF9zaG93SVBhZE92ZXJsYXk6ZnVuY3Rpb24oKXtpZighby5p
cGFkKCkpcmV0dXJuO2lmKCFxLl9vdmVybGF5RWwpe3EuX292ZXJsYXlFbD1kb2N1
bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtxLl9vdmVybGF5RWwuc2V0QXR0cmli
dXRlKCdpZCcsJ2ZiX2RpYWxvZ19pcGFkX292ZXJsYXknKTtoLmFwcGVuZChxLl9v
dmVybGF5RWwsbnVsbCk7fXEuX292ZXJsYXlFbC5jbGFzc05hbWU9Jyc7fSxfaGlk
ZUlQYWRPdmVybGF5OmZ1bmN0aW9uKCl7aWYoby5pcGFkKCkpcS5fb3ZlcmxheUVs
LmNsYXNzTmFtZT0naGlkZGVuJzt9LHNob3dMb2FkZXI6ZnVuY3Rpb24ocixzKXtx
Ll9zaG93SVBhZE92ZXJsYXkoKTtpZighcS5fbG9hZGVyRWwpcS5fbG9hZGVyRWw9
cS5fZmluZFJvb3Qoby5tb2JpbGUoKT9xLl9jcmVhdGVNb2JpbGVMb2FkZXIoKTpx
Ll9jcmVhdGVXV1dMb2FkZXIocykpO2lmKCFyKXI9ZnVuY3Rpb24oKXt9O3ZhciB0
PWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmYl9kaWFsb2dfbG9hZGVyX2Nsb3Nl
Jyk7aS5yZW1vdmVDc3ModCwnZmJfaGlkZGVuJyk7dC5vbmNsaWNrPWZ1bmN0aW9u
KCl7cS5faGlkZUxvYWRlcigpO3EuX3Jlc3RvcmVCb2R5UG9zaXRpb24oKTtxLl9o
aWRlSVBhZE92ZXJsYXkoKTtyKCk7fTt2YXIgdT1kb2N1bWVudC5nZXRFbGVtZW50
QnlJZCgnZmJfZGlhbG9nX2lwYWRfb3ZlcmxheScpO2lmKHUpdS5vbnRvdWNoc3Rh
cnQ9dC5vbmNsaWNrO3EuX21ha2VBY3RpdmUocS5fbG9hZGVyRWwpO30sX2hpZGVM
b2FkZXI6ZnVuY3Rpb24oKXtpZihxLl9sb2FkZXJFbCYmcS5fbG9hZGVyRWw9PXEu
X2FjdGl2ZSlxLl9sb2FkZXJFbC5zdHlsZS50b3A9Jy0xMDAwMHB4Jzt9LF9tYWtl
QWN0aXZlOmZ1bmN0aW9uKHIpe3EuX3NldERpYWxvZ1NpemVzKCk7cS5fbG93ZXJB
Y3RpdmUoKTtxLl9hY3RpdmU9cjtpZihtLmlzRW52aXJvbm1lbnQobS5FTlZJUk9O
TUVOVFMuQ0FOVkFTKSlnLmdldFBhZ2VJbmZvKGZ1bmN0aW9uKHMpe3EuX2NlbnRl
ckFjdGl2ZShzKTt9KTtxLl9jZW50ZXJBY3RpdmUoKTt9LF9sb3dlckFjdGl2ZTpm
dW5jdGlvbigpe2lmKCFxLl9hY3RpdmUpcmV0dXJuO3EuX2FjdGl2ZS5zdHlsZS50
b3A9Jy0xMDAwMHB4JztxLl9hY3RpdmU9bnVsbDt9LF9yZW1vdmVTdGFja2VkOmZ1
bmN0aW9uKHIpe3EuX3N0YWNrPUVTNShxLl9zdGFjaywnZmlsdGVyJyx0cnVlLGZ1
bmN0aW9uKHMpe3JldHVybiBzIT1yO30pO30sX2NlbnRlckFjdGl2ZTpmdW5jdGlv
bihyKXt2YXIgcz1xLl9hY3RpdmU7aWYoIXMpcmV0dXJuO3ZhciB0PWkuZ2V0Vmll
d3BvcnRJbmZvKCksdT1wYXJzZUludChzLm9mZnNldFdpZHRoLDEwKSx2PXBhcnNl
SW50KHMub2Zmc2V0SGVpZ2h0LDEwKSx3PXQuc2Nyb2xsTGVmdCsodC53aWR0aC11
KS8yLHg9KHQuaGVpZ2h0LXYpLzIuNTtpZih3PHgpeD13O3ZhciB5PXQuaGVpZ2h0
LXYteCx6PSh0LmhlaWdodC12KS8yO2lmKHIpej1yLnNjcm9sbFRvcC1yLm9mZnNl
dFRvcCsoci5jbGllbnRIZWlnaHQtdikvMjtpZih6PHgpe3o9eDt9ZWxzZSBpZih6
Pnkpej15O3orPXQuc2Nyb2xsVG9wO2lmKG8ubW9iaWxlKCkpe3ZhciBhYT0xMDA7
aWYoby5pcGFkKCkpe2FhKz0odC5oZWlnaHQtdikvMjt9ZWxzZXt2YXIgYmE9ZG9j
dW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2JvZHknKVswXTtpLmFkZENzcyhi
YSwnZmJfaGlkZGVuJyk7dz0xMDAwMDt6PTEwMDAwO312YXIgY2E9aS5nZXRCeUNs
YXNzKCdmYl9kaWFsb2dfcGFkZGluZycscyk7aWYoY2EubGVuZ3RoKWNhWzBdLnN0
eWxlLmhlaWdodD1hYSsncHgnO31zLnN0eWxlLmxlZnQ9KHc+MD93OjApKydweCc7
cy5zdHlsZS50b3A9KHo+MD96OjApKydweCc7fSxfc2V0RGlhbG9nU2l6ZXM6ZnVu
Y3Rpb24oKXtpZighby5tb2JpbGUoKXx8by5pcGFkKCkpcmV0dXJuO2Zvcih2YXIg
ciBpbiBxLl9kaWFsb2dzKWlmKHEuX2RpYWxvZ3MuaGFzT3duUHJvcGVydHkocikp
e3ZhciBzPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHIpO2lmKHMpe3Muc3R5bGUu
d2lkdGg9cS5nZXREZWZhdWx0U2l6ZSgpLndpZHRoKydweCc7cy5zdHlsZS5oZWln
aHQ9cS5nZXREZWZhdWx0U2l6ZSgpLmhlaWdodCsncHgnO319fSxnZXREZWZhdWx0
U2l6ZTpmdW5jdGlvbigpe2lmKG8ubW9iaWxlKCkpaWYoby5pcGFkKCkpe3JldHVy
biB7d2lkdGg6NTAwLGhlaWdodDo1OTB9O31lbHNlIGlmKG8uYW5kcm9pZCgpKXty
ZXR1cm4ge3dpZHRoOnNjcmVlbi5hdmFpbFdpZHRoLGhlaWdodDpzY3JlZW4uYXZh
aWxIZWlnaHR9O31lbHNle3ZhciByPXdpbmRvdy5pbm5lcldpZHRoLHM9d2luZG93
LmlubmVySGVpZ2h0LHQ9ci9zPjEuMjtyZXR1cm4ge3dpZHRoOnIsaGVpZ2h0Ok1h
dGgubWF4KHMsKHQ/c2NyZWVuLndpZHRoOnNjcmVlbi5oZWlnaHQpKX07fXJldHVy
biB7d2lkdGg6NTc1LGhlaWdodDoyNDB9O30sX2hhbmRsZU9yaWVudGF0aW9uQ2hh
bmdlOmZ1bmN0aW9uKHIpe2lmKG8uYW5kcm9pZCgpJiZzY3JlZW4uYXZhaWxXaWR0
aD09cS5fYXZhaWxTY3JlZW5XaWR0aCl7c2V0VGltZW91dChxLl9oYW5kbGVPcmll
bnRhdGlvbkNoYW5nZSw1MCk7cmV0dXJuO31xLl9hdmFpbFNjcmVlbldpZHRoPXNj
cmVlbi5hdmFpbFdpZHRoO2lmKG8uaXBhZCgpKXtxLl9jZW50ZXJBY3RpdmUoKTt9
ZWxzZXt2YXIgcz1xLmdldERlZmF1bHRTaXplKCkud2lkdGg7Zm9yKHZhciB0IGlu
IHEuX2RpYWxvZ3MpaWYocS5fZGlhbG9ncy5oYXNPd25Qcm9wZXJ0eSh0KSl7dmFy
IHU9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodCk7aWYodSl1LnN0eWxlLndpZHRo
PXMrJ3B4Jzt9fX0sX2FkZE9yaWVudGF0aW9uSGFuZGxlcjpmdW5jdGlvbigpe2lm
KCFvLm1vYmlsZSgpKXJldHVybjt2YXIgcj0ib25vcmllbnRhdGlvbmNoYW5nZSIg
aW4gd2luZG93PydvcmllbnRhdGlvbmNoYW5nZSc6J3Jlc2l6ZSc7cS5fYXZhaWxT
Y3JlZW5XaWR0aD1zY3JlZW4uYXZhaWxXaWR0aDtqLmFkZCh3aW5kb3cscixxLl9o
YW5kbGVPcmllbnRhdGlvbkNoYW5nZSk7fSxjcmVhdGU6ZnVuY3Rpb24ocil7cj1y
fHx7fTt2YXIgcz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKSx0PWRvY3Vt
ZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpLHU9J2ZiX2RpYWxvZyc7aWYoci5jbG9z
ZUljb24mJnIub25DbG9zZSl7dmFyIHY9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgn
YScpO3YuY2xhc3NOYW1lPSdmYl9kaWFsb2dfY2xvc2VfaWNvbic7di5vbmNsaWNr
PXIub25DbG9zZTtzLmFwcGVuZENoaWxkKHYpO311Kz0nICcrKHIuY2xhc3Nlc3x8
JycpO2lmKG8uaWUoKSl7dSs9JyBmYl9kaWFsb2dfbGVnYWN5JztFUzUoWyd2ZXJ0
X2xlZnQnLCd2ZXJ0X3JpZ2h0JywnaG9yaXpfdG9wJywnaG9yaXpfYm90dG9tJywn
dG9wX2xlZnQnLCd0b3BfcmlnaHQnLCdib3R0b21fbGVmdCcsJ2JvdHRvbV9yaWdo
dCddLCdmb3JFYWNoJyx0cnVlLGZ1bmN0aW9uKHkpe3ZhciB6PWRvY3VtZW50LmNy
ZWF0ZUVsZW1lbnQoJ3NwYW4nKTt6LmNsYXNzTmFtZT0nZmJfZGlhbG9nXycreTtz
LmFwcGVuZENoaWxkKHopO30pO31lbHNlIHUrPW8ubW9iaWxlKCk/JyBmYl9kaWFs
b2dfbW9iaWxlJzonIGZiX2RpYWxvZ19hZHZhbmNlZCc7aWYoci5jb250ZW50KWgu
YXBwZW5kKHIuY29udGVudCx0KTtzLmNsYXNzTmFtZT11O3ZhciB3PXBhcnNlSW50
KHIud2lkdGgsMTApO2lmKCFpc05hTih3KSlzLnN0eWxlLndpZHRoPXcrJ3B4Jzt0
LmNsYXNzTmFtZT0nZmJfZGlhbG9nX2NvbnRlbnQnO3MuYXBwZW5kQ2hpbGQodCk7
aWYoby5tb2JpbGUoKSl7dmFyIHg9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2
Jyk7eC5jbGFzc05hbWU9J2ZiX2RpYWxvZ19wYWRkaW5nJztzLmFwcGVuZENoaWxk
KHgpO31oLmFwcGVuZChzKTtpZihyLnZpc2libGUpcS5zaG93KHMpO3JldHVybiB0
O30sc2hvdzpmdW5jdGlvbihyKXt2YXIgcz1xLl9maW5kUm9vdChyKTtpZihzKXtx
Ll9yZW1vdmVTdGFja2VkKHMpO3EuX2hpZGVMb2FkZXIoKTtxLl9tYWtlQWN0aXZl
KHMpO3EuX3N0YWNrLnB1c2gocyk7aWYoJ2ZiQ2FsbElEJyBpbiByKXEuZ2V0KHIu
ZmJDYWxsSUQpLmluZm9ybSgnaWZyYW1lX3Nob3cnKTt9fSxoaWRlOmZ1bmN0aW9u
KHIpe3ZhciBzPXEuX2ZpbmRSb290KHIpO3EuX2hpZGVMb2FkZXIoKTtpZihzPT1x
Ll9hY3RpdmUpe3EuX2xvd2VyQWN0aXZlKCk7cS5fcmVzdG9yZUJvZHlQb3NpdGlv
bigpO3EuX2hpZGVJUGFkT3ZlcmxheSgpO2lmKCdmYkNhbGxJRCcgaW4gcilxLmdl
dChyLmZiQ2FsbElEKS5pbmZvcm0oJ2lmcmFtZV9oaWRlJyk7fX0scmVtb3ZlOmZ1
bmN0aW9uKHIpe3I9cS5fZmluZFJvb3Qocik7aWYocil7dmFyIHM9cS5fYWN0aXZl
PT1yO3EuX3JlbW92ZVN0YWNrZWQocik7aWYocyl7cS5faGlkZUxvYWRlcigpO2lm
KHEuX3N0YWNrLmxlbmd0aD4wKXtxLnNob3cocS5fc3RhY2sucG9wKCkpO31lbHNl
e3EuX2xvd2VyQWN0aXZlKCk7cS5fcmVzdG9yZUJvZHlQb3NpdGlvbigpO3EuX2hp
ZGVJUGFkT3ZlcmxheSgpO319ZWxzZSBpZihxLl9hY3RpdmU9PT1udWxsJiZxLl9z
dGFjay5sZW5ndGg+MClxLnNob3cocS5fc3RhY2sucG9wKCkpO3NldFRpbWVvdXQo
ZnVuY3Rpb24oKXtyLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQocik7fSwzMDAwKTt9
fSxpc0FjdGl2ZTpmdW5jdGlvbihyKXt2YXIgcz1xLl9maW5kUm9vdChyKTtyZXR1
cm4gcyYmcz09PXEuX2FjdGl2ZTt9fTtlLmV4cG9ydHM9cTt9KTsKX19kKCJzZGsu
RnJpY3Rpb25sZXNzIixbInNkay5BdXRoIiwic2RrLmFwaSIsInNkay5FdmVudCIs
InNkay5EaWFsb2ciXSxmdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9Yignc2Rr
LkF1dGgnKSxoPWIoJ3Nkay5hcGknKSxpPWIoJ3Nkay5FdmVudCcpLGo9Yignc2Rr
LkRpYWxvZycpLGs9e19hbGxvd2VkUmVjaXBpZW50czp7fSxfdXNlRnJpY3Rpb25s
ZXNzOmZhbHNlLF91cGRhdGVSZWNpcGllbnRzOmZ1bmN0aW9uKCl7ay5fYWxsb3dl
ZFJlY2lwaWVudHM9e307aCgnL21lL2FwcHJlcXVlc3Rmb3JtZXJyZWNpcGllbnRz
JyxmdW5jdGlvbihsKXtpZighbHx8bC5lcnJvcilyZXR1cm47RVM1KGwuZGF0YSwn
Zm9yRWFjaCcsdHJ1ZSxmdW5jdGlvbihtKXtrLl9hbGxvd2VkUmVjaXBpZW50c1tt
LnJlY2lwaWVudF9pZF09dHJ1ZTt9KTt9KTt9LGluaXQ6ZnVuY3Rpb24oKXtrLl91
c2VGcmljdGlvbmxlc3M9dHJ1ZTtnLmdldExvZ2luU3RhdHVzKGZ1bmN0aW9uKGwp
e2lmKGwuc3RhdHVzPT0nY29ubmVjdGVkJylrLl91cGRhdGVSZWNpcGllbnRzKCk7
fSk7aS5zdWJzY3JpYmUoJ2F1dGgubG9naW4nLGZ1bmN0aW9uKGwpe2lmKGwuYXV0
aFJlc3BvbnNlKWsuX3VwZGF0ZVJlY2lwaWVudHMoKTt9KTt9LF9wcm9jZXNzUmVx
dWVzdFJlc3BvbnNlOmZ1bmN0aW9uKGwsbSl7cmV0dXJuIGZ1bmN0aW9uKG4pe3Zh
ciBvPW4mJm4udXBkYXRlZF9mcmljdGlvbmxlc3M7aWYoay5fdXNlRnJpY3Rpb25s
ZXNzJiZvKWsuX3VwZGF0ZVJlY2lwaWVudHMoKTtpZihuKXtpZighbSYmbi5mcmlj
dGlvbmxlc3Mpe2ouX2hpZGVMb2FkZXIoKTtqLl9yZXN0b3JlQm9keVBvc2l0aW9u
KCk7ai5faGlkZUlQYWRPdmVybGF5KCk7fWRlbGV0ZSBuLmZyaWN0aW9ubGVzcztk
ZWxldGUgbi51cGRhdGVkX2ZyaWN0aW9ubGVzczt9bCYmbChuKTt9O30saXNBbGxv
d2VkOmZ1bmN0aW9uKGwpe2lmKCFsKXJldHVybiBmYWxzZTtpZih0eXBlb2YgbD09
PSdudW1iZXInKXJldHVybiBsIGluIGsuX2FsbG93ZWRSZWNpcGllbnRzO2lmKHR5
cGVvZiBsPT09J3N0cmluZycpbD1sLnNwbGl0KCcsJyk7bD1FUzUobCwnbWFwJyx0
cnVlLGZ1bmN0aW9uKG8pe3JldHVybiBFUzUoU3RyaW5nKG8pLCd0cmltJyx0cnVl
KTt9KTt2YXIgbT10cnVlLG49ZmFsc2U7RVM1KGwsJ2ZvckVhY2gnLHRydWUsZnVu
Y3Rpb24obyl7bT1tJiZvIGluIGsuX2FsbG93ZWRSZWNpcGllbnRzO249dHJ1ZTt9
KTtyZXR1cm4gbSYmbjt9fTtpLnN1YnNjcmliZSgnaW5pdDpwb3N0JyxmdW5jdGlv
bihsKXtpZihsLmZyaWN0aW9ubGVzc1JlcXVlc3RzKWsuaW5pdCgpO30pO2UuZXhw
b3J0cz1rO30pOwpfX2QoImluc2VydElmcmFtZSIsWyJndWlkIiwiR2xvYmFsQ2Fs
bGJhY2siXSxmdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9YignZ3VpZCcpLGg9
YignR2xvYmFsQ2FsbGJhY2snKTtmdW5jdGlvbiBpKGope2ouaWQ9ai5pZHx8Zygp
O2oubmFtZT1qLm5hbWV8fGcoKTt2YXIgaz1mYWxzZSxsPWZhbHNlLG09ZnVuY3Rp
b24oKXtpZihrJiYhbCl7bD10cnVlO2oub25sb2FkJiZqLm9ubG9hZChqLnJvb3Qu
Zmlyc3RDaGlsZCk7fX0sbj1oLmNyZWF0ZShtKTtpZihkb2N1bWVudC5hdHRhY2hF
dmVudCl7dmFyIG89KCc8aWZyYW1lJysnIGlkPSInK2ouaWQrJyInKycgbmFtZT0i
JytqLm5hbWUrJyInKyhqLnRpdGxlPycgdGl0bGU9Iicrai50aXRsZSsnIic6Jycp
KyhqLmNsYXNzTmFtZT8nIGNsYXNzPSInK2ouY2xhc3NOYW1lKyciJzonJykrJyBz
dHlsZT0iYm9yZGVyOm5vbmU7Jysoai53aWR0aD8nd2lkdGg6JytqLndpZHRoKydw
eDsnOicnKSsoai5oZWlnaHQ/J2hlaWdodDonK2ouaGVpZ2h0KydweDsnOicnKSsn
IicrJyBzcmM9ImphdmFzY3JpcHQ6ZmFsc2U7IicrJyBmcmFtZWJvcmRlcj0iMCIn
Kycgc2Nyb2xsaW5nPSJubyInKycgYWxsb3d0cmFuc3BhcmVuY3k9InRydWUiJysn
IG9ubG9hZD0iJytuKycoKSInKyc+PC9pZnJhbWU+Jyk7ai5yb290LmlubmVySFRN
TD0oJzxpZnJhbWUgc3JjPSJqYXZhc2NyaXB0OmZhbHNlIicrJyBmcmFtZWJvcmRl
cj0iMCInKycgc2Nyb2xsaW5nPSJubyInKycgc3R5bGU9ImhlaWdodDoxcHgiPjwv
aWZyYW1lPicpO2s9dHJ1ZTtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ai5yb290Lmlu
bmVySFRNTD1vO2oucm9vdC5maXJzdENoaWxkLnNyYz1qLnVybDtqLm9uSW5zZXJ0
JiZqLm9uSW5zZXJ0KGoucm9vdC5maXJzdENoaWxkKTt9LDApO31lbHNle3ZhciBw
PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lmcmFtZScpO3AuaWQ9ai5pZDtwLm5h
bWU9ai5uYW1lO3Aub25sb2FkPW07cC5zY3JvbGxpbmc9J25vJztwLnN0eWxlLmJv
cmRlcj0nbm9uZSc7cC5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJztpZihqLnRpdGxl
KXAudGl0bGU9ai50aXRsZTtpZihqLmNsYXNzTmFtZSlwLmNsYXNzTmFtZT1qLmNs
YXNzTmFtZTtpZihqLmhlaWdodCE9PXVuZGVmaW5lZClwLnN0eWxlLmhlaWdodD1q
LmhlaWdodCsncHgnO2lmKGoud2lkdGghPT11bmRlZmluZWQpaWYoai53aWR0aD09
JzEwMCUnKXtwLnN0eWxlLndpZHRoPWoud2lkdGg7fWVsc2UgcC5zdHlsZS53aWR0
aD1qLndpZHRoKydweCc7ai5yb290LmFwcGVuZENoaWxkKHApO2s9dHJ1ZTtwLnNy
Yz1qLnVybDtqLm9uSW5zZXJ0JiZqLm9uSW5zZXJ0KHApO319ZS5leHBvcnRzPWk7
fSk7Cl9fZCgic2RrLk5hdGl2ZSIsWyJjb3B5UHJvcGVydGllcyIsIkxvZyIsIlVz
ZXJBZ2VudCJdLGZ1bmN0aW9uKGEsYixjLGQsZSxmKXt2YXIgZz1iKCdjb3B5UHJv
cGVydGllcycpLGg9YignTG9nJyksaT1iKCdVc2VyQWdlbnQnKSxqPSdmYk5hdGl2
ZVJlYWR5JyxrPXtvbnJlYWR5OmZ1bmN0aW9uKGwpe2lmKCFpLm5hdGl2ZUFwcCgp
KXtoLmVycm9yKCdGQi5OYXRpdmUub25yZWFkeSBvbmx5IHdvcmtzIHdoZW4gdGhl
IHBhZ2UgaXMgcmVuZGVyZWQgJysnaW4gYSBXZWJWaWV3IG9mIHRoZSBuYXRpdmUg
RmFjZWJvb2sgYXBwLiBUZXN0IGlmIHRoaXMgaXMgdGhlICcrJ2Nhc2UgY2FsbGlu
ZyBGQi5VQS5uYXRpdmVBcHAoKScpO3JldHVybjt9aWYod2luZG93Ll9fZmJOYXRp
dmUmJiF0aGlzLm5hdGl2ZVJlYWR5KWcodGhpcyx3aW5kb3cuX19mYk5hdGl2ZSk7
aWYodGhpcy5uYXRpdmVSZWFkeSl7bCgpO31lbHNle3ZhciBtPWZ1bmN0aW9uKG4p
e3dpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKGosbSk7dGhpcy5vbnJlYWR5KGwp
O307d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoaixtLGZhbHNlKTt9fX07ZS5leHBv
cnRzPWs7fSk7Cl9fZCgic2RrLlVJU2VydmVyIixbInNkay5BdXRoIiwic2RrLkNv
bnRlbnQiLCJjb3B5UHJvcGVydGllcyIsInNkay5EaWFsb2ciLCJzZGsuRE9NIiwi
c2RrLkV2ZW50IiwiZmxhdHRlbk9iamVjdCIsInNkay5GcmljdGlvbmxlc3MiLCJz
ZGsuZ2V0Q29udGV4dFR5cGUiLCJndWlkIiwiaW5zZXJ0SWZyYW1lIiwiTG9nIiwi
c2RrLk5hdGl2ZSIsIlF1ZXJ5U3RyaW5nIiwicmVzb2x2ZVVSSSIsInNkay5SUEMi
LCJzZGsuUnVudGltZSIsIlVybE1hcCIsIlVzZXJBZ2VudCIsInNkay5YRCJdLGZ1
bmN0aW9uKGEsYixjLGQsZSxmKXt2YXIgZz1iKCdzZGsuQXV0aCcpLGg9Yignc2Rr
LkNvbnRlbnQnKSxpPWIoJ2NvcHlQcm9wZXJ0aWVzJyksaj1iKCdzZGsuRGlhbG9n
Jyksaz1iKCdzZGsuRE9NJyksbD1iKCdzZGsuRXZlbnQnKSxtPWIoJ2ZsYXR0ZW5P
YmplY3QnKSxuPWIoJ3Nkay5GcmljdGlvbmxlc3MnKSxvPWIoJ3Nkay5nZXRDb250
ZXh0VHlwZScpLHA9YignZ3VpZCcpLHE9YignaW5zZXJ0SWZyYW1lJykscj1iKCdM
b2cnKSxzPWIoJ3Nkay5OYXRpdmUnKSx0PWIoJ1F1ZXJ5U3RyaW5nJyksdT1iKCdy
ZXNvbHZlVVJJJyksdj1iKCdzZGsuUlBDJyksdz1iKCdzZGsuUnVudGltZScpLHg9
YignVXJsTWFwJykseT1iKCdVc2VyQWdlbnQnKSx6PWIoJ3Nkay5YRCcpLGFhPXt0
cmFuc2Zvcm06ZnVuY3Rpb24oZGEpe2lmKGRhLnBhcmFtcy5kaXNwbGF5PT09J3Rv
dWNoJyYmZGEucGFyYW1zLmFjY2Vzc190b2tlbiYmd2luZG93LnBvc3RNZXNzYWdl
KXtkYS5wYXJhbXMuY2hhbm5lbD1jYS5feGRDaGFubmVsSGFuZGxlcihkYS5pZCwn
cGFyZW50Jyk7aWYoIXkubmF0aXZlQXBwKCkpZGEucGFyYW1zLmluX2lmcmFtZT0x
O3JldHVybiBkYTt9ZWxzZSByZXR1cm4gY2EuZ2VuZXJpY1RyYW5zZm9ybShkYSk7
fSxnZXRYZFJlbGF0aW9uOmZ1bmN0aW9uKGRhKXt2YXIgZWE9ZGEuZGlzcGxheTtp
ZihlYT09PSd0b3VjaCcmJndpbmRvdy5wb3N0TWVzc2FnZSYmZGEuaW5faWZyYW1l
KXJldHVybiAncGFyZW50JztyZXR1cm4gY2EuZ2V0WGRSZWxhdGlvbihkYSk7fX0s
YmE9eydzdHJlYW0uc2hhcmUnOntzaXplOnt3aWR0aDo2NzAsaGVpZ2h0OjM0MH0s
dXJsOidzaGFyZXIucGhwJyx0cmFuc2Zvcm06ZnVuY3Rpb24oZGEpe2lmKCFkYS5w
YXJhbXMudSlkYS5wYXJhbXMudT13aW5kb3cubG9jYXRpb24udG9TdHJpbmcoKTtk
YS5wYXJhbXMuZGlzcGxheT0ncG9wdXAnO3JldHVybiBkYTt9fSxhcHByZXF1ZXN0
czp7dHJhbnNmb3JtOmZ1bmN0aW9uKGRhKXtkYT1hYS50cmFuc2Zvcm0oZGEpO2Rh
LnBhcmFtcy5mcmljdGlvbmxlc3M9biYmbi5fdXNlRnJpY3Rpb25sZXNzO2lmKGRh
LnBhcmFtcy5mcmljdGlvbmxlc3Mpe2lmKG4uaXNBbGxvd2VkKGRhLnBhcmFtcy50
bykpe2RhLnBhcmFtcy5kaXNwbGF5PSdpZnJhbWUnO2RhLnBhcmFtcy5pbl9pZnJh
bWU9dHJ1ZTtkYS5oaWRlTG9hZGVyPXRydWU7fWRhLmNiPW4uX3Byb2Nlc3NSZXF1
ZXN0UmVzcG9uc2UoZGEuY2IsZGEuaGlkZUxvYWRlcik7fXJldHVybiBkYTt9LGdl
dFhkUmVsYXRpb246YWEuZ2V0WGRSZWxhdGlvbn0sZmVlZDphYSwncGVybWlzc2lv
bnMub2F1dGgnOnt1cmw6J2RpYWxvZy9vYXV0aCcsc2l6ZTp7d2lkdGg6KHkubW9i
aWxlKCk/bnVsbDo0NDApLGhlaWdodDooeS5tb2JpbGUoKT9udWxsOjE4Myl9LHRy
YW5zZm9ybTpmdW5jdGlvbihkYSl7aWYoIXcuZ2V0Q2xpZW50SUQoKSl7ci5lcnJv
cignRkIubG9naW4oKSBjYWxsZWQgYmVmb3JlIEZCLmluaXQoKS4nKTtyZXR1cm47
fWlmKGcuZ2V0QXV0aFJlc3BvbnNlKCkmJiFkYS5wYXJhbXMuc2NvcGUpe3IuZXJy
b3IoJ0ZCLmxvZ2luKCkgY2FsbGVkIHdoZW4gdXNlciBpcyBhbHJlYWR5IGNvbm5l
Y3RlZC4nKTtkYS5jYiYmZGEuY2Ioe3N0YXR1czp3LmdldExvZ2luU3RhdHVzKCks
YXV0aFJlc3BvbnNlOmcuZ2V0QXV0aFJlc3BvbnNlKCl9KTtyZXR1cm47fXZhciBl
YT1kYS5jYixmYT1kYS5pZDtkZWxldGUgZGEuY2I7aWYoZGEucGFyYW1zLmRpc3Bs
YXk9PT0nYXN5bmMnKXtpKGRhLnBhcmFtcyx7Y2xpZW50X2lkOncuZ2V0Q2xpZW50
SUQoKSxvcmlnaW46bygpLHJlc3BvbnNlX3R5cGU6J3Rva2VuLHNpZ25lZF9yZXF1
ZXN0Jyxkb21haW46bG9jYXRpb24uaG9zdG5hbWV9KTtkYS5jYj1nLnhkUmVzcG9u
c2VXcmFwcGVyKGVhLGcuZ2V0QXV0aFJlc3BvbnNlKCksJ3Blcm1pc3Npb25zLm9h
dXRoJyk7fWVsc2UgaShkYS5wYXJhbXMse2NsaWVudF9pZDp3LmdldENsaWVudElE
KCkscmVkaXJlY3RfdXJpOnUoY2EueGRIYW5kbGVyKGVhLGZhLCdvcGVuZXInLGcu
Z2V0QXV0aFJlc3BvbnNlKCksJ3Blcm1pc3Npb25zLm9hdXRoJykpLG9yaWdpbjpv
KCkscmVzcG9uc2VfdHlwZTondG9rZW4sc2lnbmVkX3JlcXVlc3QnLGRvbWFpbjps
b2NhdGlvbi5ob3N0bmFtZX0pO3JldHVybiBkYTt9fSwnYXV0aC5sb2dvdXQnOnt1
cmw6J2xvZ291dC5waHAnLHRyYW5zZm9ybTpmdW5jdGlvbihkYSl7aWYoIXcuZ2V0
Q2xpZW50SUQoKSl7ci5lcnJvcignRkIubG9nb3V0KCkgY2FsbGVkIGJlZm9yZSBj
YWxsaW5nIEZCLmluaXQoKS4nKTt9ZWxzZSBpZighZy5nZXRBdXRoUmVzcG9uc2Uo
KSl7ci5lcnJvcignRkIubG9nb3V0KCkgY2FsbGVkIHdpdGhvdXQgYW4gYWNjZXNz
IHRva2VuLicpO31lbHNle2RhLnBhcmFtcy5uZXh0PWNhLnhkSGFuZGxlcihkYS5j
YixkYS5pZCwncGFyZW50JyxnLmdldEF1dGhSZXNwb25zZSgpLCdsb2dvdXQnKTty
ZXR1cm4gZGE7fX19LCdsb2dpbi5zdGF0dXMnOnt1cmw6J2RpYWxvZy9vYXV0aCcs
dHJhbnNmb3JtOmZ1bmN0aW9uKGRhKXt2YXIgZWE9ZGEuY2IsZmE9ZGEuaWQ7ZGVs
ZXRlIGRhLmNiO2koZGEucGFyYW1zLHtjbGllbnRfaWQ6dy5nZXRDbGllbnRJRCgp
LHJlZGlyZWN0X3VyaTpjYS54ZEhhbmRsZXIoZWEsZmEsJ3BhcmVudCcsZy5nZXRB
dXRoUmVzcG9uc2UoKSwnbG9naW5fc3RhdHVzJyksb3JpZ2luOm8oKSxyZXNwb25z
ZV90eXBlOid0b2tlbixzaWduZWRfcmVxdWVzdCxjb2RlJyxkb21haW46bG9jYXRp
b24uaG9zdG5hbWV9KTtyZXR1cm4gZGE7fX19LGNhPXtNZXRob2RzOmJhLF9sb2Fk
ZWROb2Rlczp7fSxfZGVmYXVsdENiOnt9LF9yZXN1bHRUb2tlbjonInh4UkVTVUxU
VE9LRU54eCInLGdlbmVyaWNUcmFuc2Zvcm06ZnVuY3Rpb24oZGEpe2lmKGRhLnBh
cmFtcy5kaXNwbGF5PT0nZGlhbG9nJ3x8ZGEucGFyYW1zLmRpc3BsYXk9PSdpZnJh
bWUnKWkoZGEucGFyYW1zLHtkaXNwbGF5OidpZnJhbWUnLGNoYW5uZWw6Y2EuX3hk
Q2hhbm5lbEhhbmRsZXIoZGEuaWQsJ3BhcmVudC5wYXJlbnQnKX0sdHJ1ZSk7cmV0
dXJuIGRhO30scHJlcGFyZUNhbGw6ZnVuY3Rpb24oZGEsZWEpe3ZhciBmYT1kYS5t
ZXRob2QudG9Mb3dlckNhc2UoKSxnYT1pKHt9LGNhLk1ldGhvZHNbZmFdKSxoYT1w
KCksaWE9dy5nZXRTZWN1cmUoKXx8KGZhIT09J2F1dGguc3RhdHVzJyYmZmEhPSds
b2dpbi5zdGF0dXMnKTtpKGRhLHthcGlfa2V5OncuZ2V0Q2xpZW50SUQoKSxhcHBf
aWQ6dy5nZXRDbGllbnRJRCgpLGxvY2FsZTp3LmdldExvY2FsZSgpLHNkazonam9l
eScsYWNjZXNzX3Rva2VuOmlhJiZ3LmdldEFjY2Vzc1Rva2VuKCl8fHVuZGVmaW5l
ZH0pO2RhLmRpc3BsYXk9Y2EuZ2V0RGlzcGxheU1vZGUoZ2EsZGEpO2lmKCFnYS51
cmwpZ2EudXJsPSdkaWFsb2cvJytmYTt2YXIgamE9e2NiOmVhLGlkOmhhLHNpemU6
Z2Euc2l6ZXx8Y2EuZ2V0RGVmYXVsdFNpemUoKSx1cmw6eC5yZXNvbHZlKGRhLmRp
c3BsYXk9PSd0b3VjaCc/J20nOid3d3cnLGlhKSsnLycrZ2EudXJsLGZvcmNlSFRU
UFM6aWEscGFyYW1zOmRhLG5hbWU6ZmEsZGlhbG9nOmoubmV3SW5zdGFuY2UoaGEs
ZGEuZGlzcGxheSl9LGthPWdhLnRyYW5zZm9ybT9nYS50cmFuc2Zvcm06Y2EuZ2Vu
ZXJpY1RyYW5zZm9ybTtpZihrYSl7amE9a2EoamEpO2lmKCFqYSlyZXR1cm47fXZh
ciBsYT1nYS5nZXRYZFJlbGF0aW9ufHxjYS5nZXRYZFJlbGF0aW9uLG1hPWxhKGph
LnBhcmFtcyk7aWYoIShqYS5pZCBpbiBjYS5fZGVmYXVsdENiKSYmISgnbmV4dCcg
aW4gamEucGFyYW1zKSYmISgncmVkaXJlY3RfdXJpJyBpbiBqYS5wYXJhbXMpKWph
LnBhcmFtcy5uZXh0PWNhLl94ZFJlc3VsdChqYS5jYixqYS5pZCxtYSx0cnVlKTtp
ZihtYT09PSdwYXJlbnQnKWkoamEucGFyYW1zLHtjaGFubmVsX3VybDpjYS5feGRD
aGFubmVsSGFuZGxlcihoYSwncGFyZW50LnBhcmVudCcpfSx0cnVlKTtqYT1jYS5w
cmVwYXJlUGFyYW1zKGphKTtyZXR1cm4gamE7fSxwcmVwYXJlUGFyYW1zOmZ1bmN0
aW9uKGRhKXt2YXIgZWE9ZGEucGFyYW1zLm1ldGhvZDtpZihkYS5wYXJhbXMuZGlz
cGxheSE9PSdhc3luYycpZGVsZXRlIGRhLnBhcmFtcy5tZXRob2Q7ZGEucGFyYW1z
PW0oZGEucGFyYW1zKTt2YXIgZmE9dC5lbmNvZGUoZGEucGFyYW1zKTtpZigheS5u
YXRpdmVBcHAoKSYmY2EudXJsVG9vTG9uZ0ZvcklFKGRhLnVybCsnPycrZmEpKXtk
YS5wb3N0PXRydWU7fWVsc2UgaWYoZmEpZGEudXJsKz0nPycrZmE7cmV0dXJuIGRh
O30sdXJsVG9vTG9uZ0ZvcklFOmZ1bmN0aW9uKGRhKXtyZXR1cm4gZGEubGVuZ3Ro
PjIwMDA7fSxnZXREaXNwbGF5TW9kZTpmdW5jdGlvbihkYSxlYSl7aWYoZWEuZGlz
cGxheT09PSdoaWRkZW4nfHxlYS5kaXNwbGF5PT09J25vbmUnKXJldHVybiBlYS5k
aXNwbGF5O3ZhciBmYT13LmlzRW52aXJvbm1lbnQody5FTlZJUk9OTUVOVFMuQ0FO
VkFTKXx8dy5pc0Vudmlyb25tZW50KHcuRU5WSVJPTk1FTlRTLlBBR0VUQUIpO2lm
KGZhJiYhZWEuZGlzcGxheSlyZXR1cm4gJ2FzeW5jJztpZih5Lm1vYmlsZSgpfHxl
YS5kaXNwbGF5PT09J3RvdWNoJylyZXR1cm4gJ3RvdWNoJztpZighdy5nZXRBY2Nl
c3NUb2tlbigpJiZlYS5kaXNwbGF5PT0nZGlhbG9nJyYmIWRhLmxvZ2dlZE91dElm
cmFtZSl7ci5lcnJvcignImRpYWxvZyIgbW9kZSBjYW4gb25seSBiZSB1c2VkIHdo
ZW4gdGhlIHVzZXIgaXMgY29ubmVjdGVkLicpO3JldHVybiAncG9wdXAnO31pZihk
YS5jb25uZWN0RGlzcGxheSYmIWZhKXJldHVybiBkYS5jb25uZWN0RGlzcGxheTty
ZXR1cm4gZWEuZGlzcGxheXx8KHcuZ2V0QWNjZXNzVG9rZW4oKT8nZGlhbG9nJzon
cG9wdXAnKTt9LGdldFhkUmVsYXRpb246ZnVuY3Rpb24oZGEpe3ZhciBlYT1kYS5k
aXNwbGF5O2lmKGVhPT09J3BvcHVwJ3x8ZWE9PT0ndG91Y2gnKXJldHVybiAnb3Bl
bmVyJztpZihlYT09PSdkaWFsb2cnfHxlYT09PSdpZnJhbWUnfHxlYT09PSdoaWRk
ZW4nfHxlYT09PSdub25lJylyZXR1cm4gJ3BhcmVudCc7aWYoZWE9PT0nYXN5bmMn
KXJldHVybiAncGFyZW50LmZyYW1lc1snK3dpbmRvdy5uYW1lKyddJzt9LHBvcHVw
OmZ1bmN0aW9uKGRhKXt2YXIgZWE9dHlwZW9mIHdpbmRvdy5zY3JlZW5YIT0ndW5k
ZWZpbmVkJz93aW5kb3cuc2NyZWVuWDp3aW5kb3cuc2NyZWVuTGVmdCxmYT10eXBl
b2Ygd2luZG93LnNjcmVlblkhPSd1bmRlZmluZWQnP3dpbmRvdy5zY3JlZW5ZOndp
bmRvdy5zY3JlZW5Ub3AsZ2E9dHlwZW9mIHdpbmRvdy5vdXRlcldpZHRoIT0ndW5k
ZWZpbmVkJz93aW5kb3cub3V0ZXJXaWR0aDpkb2N1bWVudC5kb2N1bWVudEVsZW1l
bnQuY2xpZW50V2lkdGgsaGE9dHlwZW9mIHdpbmRvdy5vdXRlckhlaWdodCE9J3Vu
ZGVmaW5lZCc/d2luZG93Lm91dGVySGVpZ2h0Oihkb2N1bWVudC5kb2N1bWVudEVs
ZW1lbnQuY2xpZW50SGVpZ2h0LTIyKSxpYT15Lm1vYmlsZSgpP251bGw6ZGEuc2l6
ZS53aWR0aCxqYT15Lm1vYmlsZSgpP251bGw6ZGEuc2l6ZS5oZWlnaHQsa2E9KGVh
PDApP3dpbmRvdy5zY3JlZW4ud2lkdGgrZWE6ZWEsbGE9cGFyc2VJbnQoa2ErKChn
YS1pYSkvMiksMTApLG1hPXBhcnNlSW50KGZhKygoaGEtamEpLzIuNSksMTApLG5h
PVtdO2lmKGlhIT09bnVsbCluYS5wdXNoKCd3aWR0aD0nK2lhKTtpZihqYSE9PW51
bGwpbmEucHVzaCgnaGVpZ2h0PScramEpO25hLnB1c2goJ2xlZnQ9JytsYSk7bmEu
cHVzaCgndG9wPScrbWEpO25hLnB1c2goJ3Njcm9sbGJhcnM9MScpO2lmKGRhLm5h
bWU9PSdwZXJtaXNzaW9ucy5yZXF1ZXN0J3x8ZGEubmFtZT09J3Blcm1pc3Npb25z
Lm9hdXRoJyluYS5wdXNoKCdsb2NhdGlvbj0xLHRvb2xiYXI9MCcpO25hPW5hLmpv
aW4oJywnKTt2YXIgb2E7aWYoZGEucG9zdCl7b2E9d2luZG93Lm9wZW4oJ2Fib3V0
OmJsYW5rJyxkYS5pZCxuYSk7aWYob2Epe2NhLnNldExvYWRlZE5vZGUoZGEsb2Es
J3BvcHVwJyk7aC5zdWJtaXRUb1RhcmdldCh7dXJsOmRhLnVybCx0YXJnZXQ6ZGEu
aWQscGFyYW1zOmRhLnBhcmFtc30pO319ZWxzZXtvYT13aW5kb3cub3BlbihkYS51
cmwsZGEuaWQsbmEpO2lmKG9hKWNhLnNldExvYWRlZE5vZGUoZGEsb2EsJ3BvcHVw
Jyk7fWlmKCFvYSlyZXR1cm47aWYoZGEuaWQgaW4gY2EuX2RlZmF1bHRDYiljYS5f
cG9wdXBNb25pdG9yKCk7fSxzZXRMb2FkZWROb2RlOmZ1bmN0aW9uKGRhLGVhLGZh
KXtpZihkYS5wYXJhbXMmJmRhLnBhcmFtcy5kaXNwbGF5IT0ncG9wdXAnKWVhLmZi
Q2FsbElEPWRhLmlkO2VhPXtub2RlOmVhLHR5cGU6ZmEsZmJDYWxsSUQ6ZGEuaWR9
O2NhLl9sb2FkZWROb2Rlc1tkYS5pZF09ZWE7fSxnZXRMb2FkZWROb2RlOmZ1bmN0
aW9uKGRhKXt2YXIgZWE9dHlwZW9mIGRhPT0nb2JqZWN0Jz9kYS5pZDpkYSxmYT1j
YS5fbG9hZGVkTm9kZXNbZWFdO3JldHVybiBmYT9mYS5ub2RlOm51bGw7fSxoaWRk
ZW46ZnVuY3Rpb24oZGEpe2RhLmNsYXNzTmFtZT0nRkJfVUlfSGlkZGVuJztkYS5y
b290PWguYXBwZW5kSGlkZGVuKCcnKTtjYS5faW5zZXJ0SWZyYW1lKGRhKTt9LGlm
cmFtZTpmdW5jdGlvbihkYSl7ZGEuY2xhc3NOYW1lPSdGQl9VSV9EaWFsb2cnO3Zh
ciBlYT1mdW5jdGlvbigpe2NhLl90cmlnZ2VyRGVmYXVsdChkYS5pZCk7fTtkYS5y
b290PWouY3JlYXRlKHtvbkNsb3NlOmVhLGNsb3NlSWNvbjp0cnVlLGNsYXNzZXM6
KHkuaXBhZCgpPydjZW50ZXJlZCc6JycpfSk7aWYoIWRhLmhpZGVMb2FkZXIpai5z
aG93TG9hZGVyKGVhLGRhLnNpemUud2lkdGgpO2suYWRkQ3NzKGRhLnJvb3QsJ2Zi
X2RpYWxvZ19pZnJhbWUnKTtjYS5faW5zZXJ0SWZyYW1lKGRhKTt9LHRvdWNoOmZ1
bmN0aW9uKGRhKXtpZihkYS5wYXJhbXMmJmRhLnBhcmFtcy5pbl9pZnJhbWUpe2lm
KGRhLnVpX2NyZWF0ZWQpe2ouc2hvd0xvYWRlcihmdW5jdGlvbigpe2NhLl90cmln
Z2VyRGVmYXVsdChkYS5pZCk7fSwwKTt9ZWxzZSBjYS5pZnJhbWUoZGEpO31lbHNl
IGlmKHkubmF0aXZlQXBwKCkmJiFkYS51aV9jcmVhdGVkKXtkYS5mcmFtZT1kYS5p
ZDtzLm9ucmVhZHkoZnVuY3Rpb24oKXtjYS5zZXRMb2FkZWROb2RlKGRhLHMub3Bl
bihkYS51cmwrJyNjYj0nK2RhLmZyYW1lTmFtZSksJ25hdGl2ZScpO30pO2NhLl9w
b3B1cE1vbml0b3IoKTt9ZWxzZSBpZighZGEudWlfY3JlYXRlZCljYS5wb3B1cChk
YSk7fSxhc3luYzpmdW5jdGlvbihkYSl7ZGEucGFyYW1zLnJlZGlyZWN0X3VyaT1s
b2NhdGlvbi5wcm90b2NvbCsnLy8nK2xvY2F0aW9uLmhvc3QrbG9jYXRpb24ucGF0
aG5hbWU7di5yZW1vdGUuc2hvd0RpYWxvZyhkYS5wYXJhbXMsZnVuY3Rpb24oZWEp
e2RhLmNiKGVhLnJlc3VsdCk7fSk7fSxnZXREZWZhdWx0U2l6ZTpmdW5jdGlvbigp
e3JldHVybiBqLmdldERlZmF1bHRTaXplKCk7fSxfaW5zZXJ0SWZyYW1lOmZ1bmN0
aW9uKGRhKXtjYS5fbG9hZGVkTm9kZXNbZGEuaWRdPWZhbHNlO3ZhciBlYT1mdW5j
dGlvbihmYSl7aWYoZGEuaWQgaW4gY2EuX2xvYWRlZE5vZGVzKWNhLnNldExvYWRl
ZE5vZGUoZGEsZmEsJ2lmcmFtZScpO307aWYoZGEucG9zdCl7cSh7dXJsOidhYm91
dDpibGFuaycscm9vdDpkYS5yb290LGNsYXNzTmFtZTpkYS5jbGFzc05hbWUsd2lk
dGg6ZGEuc2l6ZS53aWR0aCxoZWlnaHQ6ZGEuc2l6ZS5oZWlnaHQsaWQ6ZGEuaWQs
b25JbnNlcnQ6ZWEsb25sb2FkOmZ1bmN0aW9uKGZhKXtoLnN1Ym1pdFRvVGFyZ2V0
KHt1cmw6ZGEudXJsLHRhcmdldDpmYS5uYW1lLHBhcmFtczpkYS5wYXJhbXN9KTt9
fSk7fWVsc2UgcSh7dXJsOmRhLnVybCxyb290OmRhLnJvb3QsY2xhc3NOYW1lOmRh
LmNsYXNzTmFtZSx3aWR0aDpkYS5zaXplLndpZHRoLGhlaWdodDpkYS5zaXplLmhl
aWdodCxpZDpkYS5pZCxuYW1lOmRhLmZyYW1lTmFtZSxvbkluc2VydDplYX0pO30s
X2hhbmRsZVJlc2l6ZU1lc3NhZ2U6ZnVuY3Rpb24oZGEsZWEpe3ZhciBmYT1jYS5n
ZXRMb2FkZWROb2RlKGRhKTtpZighZmEpcmV0dXJuO2lmKGVhLmhlaWdodClmYS5z
dHlsZS5oZWlnaHQ9ZWEuaGVpZ2h0KydweCc7aWYoZWEud2lkdGgpZmEuc3R5bGUu
d2lkdGg9ZWEud2lkdGgrJ3B4Jzt6LmluZm9ybSgncmVzaXplLmFjaycsZWF8fHt9
LCdwYXJlbnQuZnJhbWVzWycrZmEubmFtZSsnXScpO2lmKCFqLmlzQWN0aXZlKGZh
KSlqLnNob3coZmEpO30sX3RyaWdnZXJEZWZhdWx0OmZ1bmN0aW9uKGRhKXtjYS5f
eGRSZWN2KHtmcmFtZTpkYX0sY2EuX2RlZmF1bHRDYltkYV18fGZ1bmN0aW9uKCl7
fSk7fSxfcG9wdXBNb25pdG9yOmZ1bmN0aW9uKCl7dmFyIGRhO2Zvcih2YXIgZWEg
aW4gY2EuX2xvYWRlZE5vZGVzKWlmKGNhLl9sb2FkZWROb2Rlcy5oYXNPd25Qcm9w
ZXJ0eShlYSkmJmVhIGluIGNhLl9kZWZhdWx0Q2Ipe3ZhciBmYT1jYS5fbG9hZGVk
Tm9kZXNbZWFdO2lmKGZhLnR5cGUhPSdwb3B1cCcmJmZhLnR5cGUhPSduYXRpdmUn
KWNvbnRpbnVlO3ZhciBnYT1mYS5ub2RlO3RyeXtpZihnYS5jbG9zZWQpe2NhLl90
cmlnZ2VyRGVmYXVsdChlYSk7fWVsc2UgZGE9dHJ1ZTt9Y2F0Y2goaGEpe319aWYo
ZGEmJiFjYS5fcG9wdXBJbnRlcnZhbCl7Y2EuX3BvcHVwSW50ZXJ2YWw9c2V0SW50
ZXJ2YWwoY2EuX3BvcHVwTW9uaXRvciwxMDApO31lbHNlIGlmKCFkYSYmY2EuX3Bv
cHVwSW50ZXJ2YWwpe2NsZWFySW50ZXJ2YWwoY2EuX3BvcHVwSW50ZXJ2YWwpO2Nh
Ll9wb3B1cEludGVydmFsPW51bGw7fX0sX3hkQ2hhbm5lbEhhbmRsZXI6ZnVuY3Rp
b24oZGEsZWEpe3JldHVybiB6LmhhbmRsZXIoZnVuY3Rpb24oZmEpe3ZhciBnYT1j
YS5nZXRMb2FkZWROb2RlKGRhKTtpZighZ2EpcmV0dXJuO2lmKGZhLnR5cGU9PSdy
ZXNpemUnKXtjYS5faGFuZGxlUmVzaXplTWVzc2FnZShkYSxmYSk7fWVsc2UgaWYo
ZmEudHlwZT09J2hpZGUnKXtqLmhpZGUoZ2EpO31lbHNlIGlmKGZhLnR5cGU9PSdy
ZW5kZXJlZCcpe3ZhciBoYT1qLl9maW5kUm9vdChnYSk7ai5zaG93KGhhKTt9ZWxz
ZSBpZihmYS50eXBlPT0nZmlyZWV2ZW50JylsLmZpcmUoZmEuZXZlbnQpO30sZWEs
dHJ1ZSxudWxsKTt9LF94ZE5leHRIYW5kbGVyOmZ1bmN0aW9uKGRhLGVhLGZhLGdh
KXtpZihnYSljYS5fZGVmYXVsdENiW2VhXT1kYTtyZXR1cm4gei5oYW5kbGVyKGZ1
bmN0aW9uKGhhKXtjYS5feGRSZWN2KGhhLGRhKTt9LGZhKSsnJmZyYW1lPScrZWE7
fSxfeGRSZWN2OmZ1bmN0aW9uKGRhLGVhKXt2YXIgZmE9Y2EuZ2V0TG9hZGVkTm9k
ZShkYS5mcmFtZSk7aWYoZmEpe3RyeXtpZihrLmNvbnRhaW5zQ3NzKGZhLCdGQl9V
SV9IaWRkZW4nKSl7c2V0VGltZW91dChmdW5jdGlvbigpe2ZhLnBhcmVudE5vZGUu
cGFyZW50Tm9kZS5yZW1vdmVDaGlsZChmYS5wYXJlbnROb2RlKTt9LDMwMDApO31l
bHNlIGlmKGsuY29udGFpbnNDc3MoZmEsJ0ZCX1VJX0RpYWxvZycpKWoucmVtb3Zl
KGZhKTt9Y2F0Y2goZ2Epe310cnl7aWYoZmEuY2xvc2Upe2ZhLmNsb3NlKCk7aWYo
eS5pcGhvbmUoKSl7dmFyIGlhPS9WZXJzaW9uXC8oW1xkXC5dKykvLnRlc3QobmF2
aWdhdG9yLnVzZXJBZ2VudCk/cGFyc2VGbG9hdChSZWdFeHAuJDEsMTApOm51bGw7
aWYoaWE+PTYpd2luZG93LmZvY3VzKCk7fWNhLl9wb3B1cENvdW50LS07fX1jYXRj
aChoYSl7fX1kZWxldGUgY2EuX2xvYWRlZE5vZGVzW2RhLmZyYW1lXTtkZWxldGUg
Y2EuX2RlZmF1bHRDYltkYS5mcmFtZV07ZWEoZGEpO30sX3hkUmVzdWx0OmZ1bmN0
aW9uKGRhLGVhLGZhLGdhKXtyZXR1cm4gKGNhLl94ZE5leHRIYW5kbGVyKGZ1bmN0
aW9uKGhhKXtkYSYmZGEoaGEucmVzdWx0JiZoYS5yZXN1bHQhPWNhLl9yZXN1bHRU
b2tlbiYmRVM1KCdKU09OJywncGFyc2UnLGZhbHNlLGhhLnJlc3VsdCkpO30sZWEs
ZmEsZ2EpKycmcmVzdWx0PScrZW5jb2RlVVJJQ29tcG9uZW50KGNhLl9yZXN1bHRU
b2tlbikpO30seGRIYW5kbGVyOmZ1bmN0aW9uKGRhLGVhLGZhLGdhLGhhKXtyZXR1
cm4gY2EuX3hkTmV4dEhhbmRsZXIoZy54ZFJlc3BvbnNlV3JhcHBlcihkYSxnYSxo
YSksZWEsZmEsdHJ1ZSk7fX07di5zdHViKCdzaG93RGlhbG9nJyk7ZS5leHBvcnRz
PWNhO30pOwpfX2QoInNkay51aSIsWyJBc3NlcnQiLCJjb3B5UHJvcGVydGllcyIs
IkxvZyIsInNkay5SdW50aW1lIiwic2RrLlVJU2VydmVyIiwiU0RLQ29uZmlnIl0s
ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnPWIoJ0Fzc2VydCcpLGg9YignY29w
eVByb3BlcnRpZXMnKSxpPWIoJ0xvZycpLGo9Yignc2RrLlJ1bnRpbWUnKSxrPWMo
J1NES0NvbmZpZycpLGw9Yignc2RrLlVJU2VydmVyJyk7ZnVuY3Rpb24gbShuLG8p
e2cuaXNPYmplY3Qobik7Zy5tYXliZUZ1bmN0aW9uKG8pO249aCh7fSxuKTtpZigh
bi5tZXRob2Qpe2kuZXJyb3IoJyJtZXRob2QiIGlzIGEgcmVxdWlyZWQgcGFyYW1l
dGVyIGZvciBGQi51aSgpLicpO3JldHVybiBudWxsO31pZigobi5tZXRob2Q9PSdw
ZXJtaXNzaW9ucy5yZXF1ZXN0J3x8bi5tZXRob2Q9PSdwZXJtaXNzaW9ucy5vYXV0
aCcpJiYobi5kaXNwbGF5PT0naWZyYW1lJ3x8bi5kaXNwbGF5PT0nZGlhbG9nJykp
e3ZhciBwPSdzY29wZScgaW4gbj9uLnNjb3BlOmouZ2V0U2NvcGUoKTtpZihwKXt2
YXIgcT1wLnNwbGl0KC9cc3wsL2cpO2Zvcih2YXIgcj0wO3I8cS5sZW5ndGg7cisr
KXt2YXIgcz1FUzUocVtyXSwndHJpbScsdHJ1ZSk7aWYocyYmIWsuaW5pdFNpdGV2
YXJzLmlmcmFtZVBlcm1pc3Npb25zW3NdKXtuLmRpc3BsYXk9J3BvcHVwJzticmVh
azt9fX19dmFyIHQ9bC5wcmVwYXJlQ2FsbChuLG98fGZ1bmN0aW9uKCl7fSk7aWYo
IXQpcmV0dXJuIG51bGw7dmFyIHU9dC5wYXJhbXMuZGlzcGxheTtpZih1PT09J2Rp
YWxvZycpe3U9J2lmcmFtZSc7fWVsc2UgaWYodT09PSdub25lJyl1PSdoaWRkZW4n
O3ZhciB2PWxbdV07aWYoIXYpe2kuZXJyb3IoJyJkaXNwbGF5IiBtdXN0IGJlIG9u
ZSBvZiAicG9wdXAiLCAnKyciZGlhbG9nIiwgImlmcmFtZSIsICJ0b3VjaCIsICJh
c3luYyIsICJoaWRkZW4iLCBvciAibm9uZSInKTtyZXR1cm4gbnVsbDt9dih0KTty
ZXR1cm4gdC5kaWFsb2c7fWUuZXhwb3J0cz1tO30pOwpfX2QoImxlZ2FjeTpmYi5h
dXRoIixbInNkay5BdXRoIiwic2RrLkNvb2tpZSIsImNvcHlQcm9wZXJ0aWVzIiwi
c2RrLkV2ZW50IiwiRkIiLCJMb2ciLCJzZGsuUnVudGltZSIsInNkay5TaWduZWRS
ZXF1ZXN0Iiwic2RrLnVpIl0sZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Yignc2Rr
LkF1dGgnKSxmPWIoJ3Nkay5Db29raWUnKSxnPWIoJ2NvcHlQcm9wZXJ0aWVzJyks
aD1iKCdzZGsuRXZlbnQnKSxpPWIoJ0ZCJyksaj1iKCdMb2cnKSxrPWIoJ3Nkay5S
dW50aW1lJyksbD1iKCdzZGsuU2lnbmVkUmVxdWVzdCcpLG09Yignc2RrLnVpJyk7
aS5wcm92aWRlKCcnLHtnZXRMb2dpblN0YXR1czpmdW5jdGlvbigpe3JldHVybiBl
LmdldExvZ2luU3RhdHVzLmFwcGx5KGUsYXJndW1lbnRzKTt9LGdldEF1dGhSZXNw
b25zZTpmdW5jdGlvbigpe3JldHVybiBlLmdldEF1dGhSZXNwb25zZSgpO30sZ2V0
QWNjZXNzVG9rZW46ZnVuY3Rpb24oKXtyZXR1cm4gay5nZXRBY2Nlc3NUb2tlbigp
fHxudWxsO30sZ2V0VXNlcklEOmZ1bmN0aW9uKCl7cmV0dXJuIGsuZ2V0VXNlcklE
KCl8fGsuZ2V0Q29va2llVXNlcklEKCk7fSxsb2dpbjpmdW5jdGlvbihuLG8pe2lm
KG8mJm8ucGVybXMmJiFvLnNjb3BlKXtvLnNjb3BlPW8ucGVybXM7ZGVsZXRlIG8u
cGVybXM7ai53YXJuKCdPQXV0aDIgc3BlY2lmaWNhdGlvbiBzdGF0ZXMgdGhhdCBc
J3Blcm1zXCcgJysnc2hvdWxkIG5vdyBiZSBjYWxsZWQgXCdzY29wZVwnLiAgUGxl
YXNlIHVwZGF0ZS4nKTt9dmFyIHA9ay5pc0Vudmlyb25tZW50KGsuRU5WSVJPTk1F
TlRTLkNBTlZBUyl8fGsuaXNFbnZpcm9ubWVudChrLkVOVklST05NRU5UUy5QQUdF
VEFCKTttKGcoe21ldGhvZDoncGVybWlzc2lvbnMub2F1dGgnLGRpc3BsYXk6cD8n
YXN5bmMnOidwb3B1cCcsZG9tYWluOmxvY2F0aW9uLmhvc3RuYW1lfSxvfHx7fSks
bik7fSxsb2dvdXQ6ZnVuY3Rpb24obil7bSh7bWV0aG9kOidhdXRoLmxvZ291dCcs
ZGlzcGxheTonaGlkZGVuJ30sbik7fX0pO2Uuc3Vic2NyaWJlKCdsb2dvdXQnLEVT
NShoLmZpcmUsJ2JpbmQnLHRydWUsaCwnYXV0aC5sb2dvdXQnKSk7ZS5zdWJzY3Jp
YmUoJ2xvZ2luJyxFUzUoaC5maXJlLCdiaW5kJyx0cnVlLGgsJ2F1dGgubG9naW4n
KSk7ZS5zdWJzY3JpYmUoJ2F1dGhyZXNwb25zZS5jaGFuZ2UnLEVTNShoLmZpcmUs
J2JpbmQnLHRydWUsaCwnYXV0aC5hdXRoUmVzcG9uc2VDaGFuZ2UnKSk7ZS5zdWJz
Y3JpYmUoJ3N0YXR1cy5jaGFuZ2UnLEVTNShoLmZpcmUsJ2JpbmQnLHRydWUsaCwn
YXV0aC5zdGF0dXNDaGFuZ2UnKSk7aC5zdWJzY3JpYmUoJ2luaXQ6cG9zdCcsZnVu
Y3Rpb24obil7aWYobi5zdGF0dXMpZS5nZXRMb2dpblN0YXR1cygpO2lmKGsuZ2V0
Q2xpZW50SUQoKSlpZihuLmF1dGhSZXNwb25zZSl7ZS5zZXRBdXRoUmVzcG9uc2Uo
bi5hdXRoUmVzcG9uc2UsJ2Nvbm5lY3RlZCcpO31lbHNlIGlmKGsuZ2V0VXNlQ29v
a2llKCkpe3ZhciBvPWYubG9hZFNpZ25lZFJlcXVlc3QoKSxwO2lmKG8pe3RyeXtw
PWwucGFyc2Uobyk7fWNhdGNoKHEpe2YuY2xlYXJTaWduZWRSZXF1ZXN0Q29va2ll
KCk7fWlmKHAmJnAudXNlcl9pZClrLnNldENvb2tpZVVzZXJJRChwLnVzZXJfaWQp
O31mLmxvYWRNZXRhKCk7fX0pO30sMyk7Cl9fZCgic2RrLkNhbnZhcy5GbGFzaCIs
WyJzZGsuYXBpIiwic2RrLlJQQyIsIkxvZyIsInNkay5SdW50aW1lIiwiY3JlYXRl
QXJyYXlGcm9tIl0sZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnPWIoJ3Nkay5h
cGknKSxoPWIoJ3Nkay5SUEMnKSxpPWIoJ0xvZycpLGo9Yignc2RrLlJ1bnRpbWUn
KSxrPWIoJ2NyZWF0ZUFycmF5RnJvbScpLGw9J0NMU0lEOkQyN0NEQjZFLUFFNkQt
MTFDRi05NkI4LTQ0NDU1MzU0MDAwMCcsbT1udWxsO2Z1bmN0aW9uIG4ocil7ci5z
dHlsZS52aXNpYmlsaXR5PSdoaWRkZW4nO31mdW5jdGlvbiBvKHIpe3Iuc3R5bGUu
dmlzaWJpbGl0eT0nJzt9ZnVuY3Rpb24gcChyKXtpLmluZm8oJ2hpZGVGbGFzaENh
bGxiYWNrIGNhbGxlZCB3aXRoICVzJyxyLnN0YXRlKTt2YXIgcz13aW5kb3cuZG9j
dW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ29iamVjdCcpO0VTNShrKHMpLCdm
b3JFYWNoJyx0cnVlLGZ1bmN0aW9uKHQpe2lmKHQudHlwZS50b0xvd2VyQ2FzZSgp
IT0iYXBwbGljYXRpb24veC1zaG9ja3dhdmUtZmxhc2giJiYoIXQuY2xhc3NpZHx8
dC5jbGFzc2lkLnRvVXBwZXJDYXNlKCkhPWwpKXJldHVybjtmb3IodmFyIHU9MDt1
PHQuY2hpbGROb2Rlcy5sZW5ndGg7dSsrKXt2YXIgdj10LmNoaWxkTm9kZXNbdV07
aWYoL3BhcmFtL2kudGVzdCh2Lm5vZGVOYW1lKSYmL3dtb2RlL2kudGVzdCh2Lm5h
bWUpJiYvb3BhcXVlfHRyYW5zcGFyZW50L2kudGVzdCh2LnZhbHVlKSlyZXR1cm47
fWlmKG0pe2kuaW5mbygnQ2FsbGluZyBkZXZlbG9wZXIgc3BlY2lmaWVkIGNhbGxi
YWNrJyk7dmFyIHc9e3N0YXRlOnIuc3RhdGUsZWxlbTp0fTttKHcpO3NldFRpbWVv
dXQoZnVuY3Rpb24oKXtpZih3LnN0YXRlPT0nb3BlbmVkJyl7bih0KTt9ZWxzZSBv
KHQpO30sMjAwKTt9ZWxzZSBpZihyLnN0YXRlPT0nb3BlbmVkJyl7dC5fb2xkX3Zp
c2liaWxpdHk9dC5zdHlsZS52aXNpYmlsaXR5O3Quc3R5bGUudmlzaWJpbGl0eT0n
aGlkZGVuJzt9ZWxzZSBpZihyLnN0YXRlPT0nY2xvc2VkJyl7dC5zdHlsZS52aXNp
YmlsaXR5PXQuX29sZF92aXNpYmlsaXR5fHwnJztkZWxldGUgdC5fb2xkX3Zpc2li
aWxpdHk7fWlmKE1hdGgucmFuZG9tKCk8PTEvMTAwMClnKGouZ2V0Q2xpZW50SUQo
KSsnL29jY2x1ZGVzcG9wdXBzJywncG9zdCcse30pO30pO31oLmxvY2FsLmhpZGVG
bGFzaE9iamVjdHM9ZnVuY3Rpb24oKXtwKHtzdGF0ZTonb3BlbmVkJ30pO307aC5s
b2NhbC5zaG93Rmxhc2hPYmplY3RzPWZ1bmN0aW9uKCl7cCh7c3RhdGU6J2Nsb3Nl
ZCd9KTt9O3ZhciBxPXtfc2V0SGlkZUZsYXNoQ2FsbGJhY2s6ZnVuY3Rpb24ocil7
bT1yO30saGlkZUZsYXNoRWxlbWVudDpuLHNob3dGbGFzaEVsZW1lbnQ6b307ZS5l
eHBvcnRzPXE7fSk7Cl9fZCgic2RrLkNhbnZhcy5JZnJhbWVIYW5kbGluZyIsWyJE
T01XcmFwcGVyIiwic2RrLlJQQyJdLGZ1bmN0aW9uKGEsYixjLGQsZSxmKXt2YXIg
Zz1iKCdET01XcmFwcGVyJyksaD1iKCdzZGsuUlBDJyksaT1udWxsLGo7ZnVuY3Rp
b24gaygpe3ZhciBvPWcuZ2V0V2luZG93KCkuZG9jdW1lbnQscD1vLmJvZHkscT1v
LmRvY3VtZW50RWxlbWVudCxyPU1hdGgubWF4KHAub2Zmc2V0VG9wLDApLHM9TWF0
aC5tYXgocS5vZmZzZXRUb3AsMCksdD1wLnNjcm9sbEhlaWdodCtyLHU9cC5vZmZz
ZXRIZWlnaHQrcix2PXEuc2Nyb2xsSGVpZ2h0K3Msdz1xLm9mZnNldEhlaWdodCtz
O3JldHVybiBNYXRoLm1heCh0LHUsdix3KTt9ZnVuY3Rpb24gbChvKXtpZih0eXBl
b2YgbyE9J29iamVjdCcpbz17fTt2YXIgcD0wLHE9MDtpZighby5oZWlnaHQpe28u
aGVpZ2h0PWsoKTtwPTE2O3E9NDt9aWYoIW8uZnJhbWUpby5mcmFtZT13aW5kb3cu
bmFtZXx8J2lmcmFtZV9jYW52YXMnO2lmKGope3ZhciByPWouaGVpZ2h0LHM9by5o
ZWlnaHQtcjtpZihzPD1xJiZzPj0tcClyZXR1cm4gZmFsc2U7fWo9bztoLnJlbW90
ZS5zZXRTaXplKG8pO3JldHVybiB0cnVlO31mdW5jdGlvbiBtKG8scCl7aWYocD09
PXVuZGVmaW5lZCYmdHlwZW9mIG89PT0nbnVtYmVyJyl7cD1vO289dHJ1ZTt9aWYo
b3x8bz09PXVuZGVmaW5lZCl7aWYoaT09PW51bGwpaT1zZXRJbnRlcnZhbChmdW5j
dGlvbigpe2woKTt9LHB8fDEwMCk7bCgpO31lbHNlIGlmKGkhPT1udWxsKXtjbGVh
ckludGVydmFsKGkpO2k9bnVsbDt9fWguc3R1Yignc2V0U2l6ZScpO3ZhciBuPXtz
ZXRTaXplOmwsc2V0QXV0b0dyb3c6bX07ZS5leHBvcnRzPW47fSk7Cl9fZCgic2Rr
LkNhbnZhcy5OYXZpZ2F0aW9uIixbInNkay5SUEMiXSxmdW5jdGlvbihhLGIsYyxk
LGUsZil7dmFyIGc9Yignc2RrLlJQQycpO2Z1bmN0aW9uIGgoail7Zy5sb2NhbC5u
YXZpZ2F0ZT1mdW5jdGlvbihrKXtqKHtwYXRoOmt9KTt9O2cucmVtb3RlLnNldE5h
dmlnYXRpb25FbmFibGVkKHRydWUpO31nLnN0dWIoJ3NldE5hdmlnYXRpb25FbmFi
bGVkJyk7dmFyIGk9e3NldFVybEhhbmRsZXI6aH07ZS5leHBvcnRzPWk7fSk7Cl9f
ZCgic2RrLkNhbnZhcy5UdGkiLFsic2RrLlJQQyIsInNkay5SdW50aW1lIl0sZnVu
Y3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnPWIoJ3Nkay5SUEMnKSxoPWIoJ3Nkay5S
dW50aW1lJyk7ZnVuY3Rpb24gaShuLG8pe3ZhciBwPXthcHBJZDpoLmdldENsaWVu
dElEKCksdGltZTpFUzUoJ0RhdGUnLCdub3cnLGZhbHNlKSxuYW1lOm99LHE9W3Bd
O2lmKG4pcS5wdXNoKGZ1bmN0aW9uKHIpe24oci5yZXN1bHQpO30pO2cucmVtb3Rl
LmxvZ1R0aU1lc3NhZ2UuYXBwbHkobnVsbCxxKTt9ZnVuY3Rpb24gaigpe2kobnVs
bCwnU3RhcnRJZnJhbWVBcHBUdGlUaW1lcicpO31mdW5jdGlvbiBrKG4pe2kobiwn
U3RvcElmcmFtZUFwcFR0aVRpbWVyJyk7fWZ1bmN0aW9uIGwobil7aShuLCdSZWNv
cmRJZnJhbWVBcHBUdGknKTt9Zy5zdHViKCdsb2dUdGlNZXNzYWdlJyk7dmFyIG09
e3NldERvbmVMb2FkaW5nOmwsc3RhcnRUaW1lcjpqLHN0b3BUaW1lcjprfTtlLmV4
cG9ydHM9bTt9KTsKX19kKCJsZWdhY3k6ZmIuY2FudmFzIixbIkFzc2VydCIsInNk
ay5DYW52YXMuRW52aXJvbm1lbnQiLCJzZGsuRXZlbnQiLCJGQiIsInNkay5DYW52
YXMuRmxhc2giLCJzZGsuQ2FudmFzLklmcmFtZUhhbmRsaW5nIiwiTG9nIiwic2Rr
LkNhbnZhcy5OYXZpZ2F0aW9uIiwic2RrLlJ1bnRpbWUiLCJzZGsuQ2FudmFzLlR0
aSJdLGZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWIoJ0Fzc2VydCcpLGY9Yignc2Rr
LkNhbnZhcy5FbnZpcm9ubWVudCcpLGc9Yignc2RrLkV2ZW50JyksaD1iKCdGQicp
LGk9Yignc2RrLkNhbnZhcy5GbGFzaCcpLGo9Yignc2RrLkNhbnZhcy5JZnJhbWVI
YW5kbGluZycpLGs9YignTG9nJyksbD1iKCdzZGsuQ2FudmFzLk5hdmlnYXRpb24n
KSxtPWIoJ3Nkay5SdW50aW1lJyksbj1iKCdzZGsuQ2FudmFzLlR0aScpO2gucHJv
dmlkZSgnQ2FudmFzJyx7c2V0U2l6ZTpmdW5jdGlvbihvKXtlLm1heWJlT2JqZWN0
KG8sJ0ludmFsaWQgYXJndW1lbnQnKTtyZXR1cm4gai5zZXRTaXplLmFwcGx5KG51
bGwsYXJndW1lbnRzKTt9LHNldEF1dG9Hcm93OmZ1bmN0aW9uKCl7cmV0dXJuIGou
c2V0QXV0b0dyb3cuYXBwbHkobnVsbCxhcmd1bWVudHMpO30sZ2V0UGFnZUluZm86
ZnVuY3Rpb24obyl7ZS5pc0Z1bmN0aW9uKG8sJ0ludmFsaWQgYXJndW1lbnQnKTty
ZXR1cm4gZi5nZXRQYWdlSW5mby5hcHBseShudWxsLGFyZ3VtZW50cyk7fSxzY3Jv
bGxUbzpmdW5jdGlvbihvLHApe2UubWF5YmVOdW1iZXIobywnSW52YWxpZCBhcmd1
bWVudCcpO2UubWF5YmVOdW1iZXIocCwnSW52YWxpZCBhcmd1bWVudCcpO3JldHVy
biBmLnNjcm9sbFRvLmFwcGx5KG51bGwsYXJndW1lbnRzKTt9LHNldERvbmVMb2Fk
aW5nOmZ1bmN0aW9uKG8pe2UubWF5YmVGdW5jdGlvbihvLCdJbnZhbGlkIGFyZ3Vt
ZW50Jyk7cmV0dXJuIG4uc2V0RG9uZUxvYWRpbmcuYXBwbHkobnVsbCxhcmd1bWVu
dHMpO30sc3RhcnRUaW1lcjpmdW5jdGlvbigpe3JldHVybiBuLnN0YXJ0VGltZXIu
YXBwbHkobnVsbCxhcmd1bWVudHMpO30sc3RvcFRpbWVyOmZ1bmN0aW9uKG8pe2Uu
bWF5YmVGdW5jdGlvbihvLCdJbnZhbGlkIGFyZ3VtZW50Jyk7cmV0dXJuIG4uc3Rv
cFRpbWVyLmFwcGx5KG51bGwsYXJndW1lbnRzKTt9LGdldEhhc2g6ZnVuY3Rpb24o
byl7ZS5pc0Z1bmN0aW9uKG8sJ0ludmFsaWQgYXJndW1lbnQnKTtyZXR1cm4gbC5n
ZXRIYXNoLmFwcGx5KG51bGwsYXJndW1lbnRzKTt9LHNldEhhc2g6ZnVuY3Rpb24o
byl7ZS5pc1N0cmluZyhvLCdJbnZhbGlkIGFyZ3VtZW50Jyk7cmV0dXJuIGwuc2V0
SGFzaC5hcHBseShudWxsLGFyZ3VtZW50cyk7fSxzZXRVcmxIYW5kbGVyOmZ1bmN0
aW9uKG8pe2UuaXNGdW5jdGlvbihvLCdJbnZhbGlkIGFyZ3VtZW50Jyk7cmV0dXJu
IGwuc2V0VXJsSGFuZGxlci5hcHBseShudWxsLGFyZ3VtZW50cyk7fX0pO2gucHJv
dmlkZSgnQ2FudmFzSW5zaWdodHMnLHtzZXREb25lTG9hZGluZzpmdW5jdGlvbihv
KXtrLndhcm4oJ0RlcHJlY2F0ZWQ6IHVzZSBGQi5DYW52YXMuc2V0RG9uZUxvYWRp
bmcnKTtlLm1heWJlRnVuY3Rpb24obywnSW52YWxpZCBhcmd1bWVudCcpO3JldHVy
biBuLnNldERvbmVMb2FkaW5nLmFwcGx5KG51bGwsYXJndW1lbnRzKTt9fSk7Zy5z
dWJzY3JpYmUoJ2luaXQ6cG9zdCcsZnVuY3Rpb24obyl7aWYobS5pc0Vudmlyb25t
ZW50KG0uRU5WSVJPTk1FTlRTLkNBTlZBUykpaS5fc2V0SGlkZUZsYXNoQ2FsbGJh
Y2soby5oaWRlRmxhc2hDYWxsYmFjayk7fSk7fSwzKTsKX19kKCJzZGsuQ2FudmFz
LlByZWZldGNoZXIiLFsic2RrLmFwaSIsImNyZWF0ZUFycmF5RnJvbSIsInNkay5S
dW50aW1lIiwiQ2FudmFzUHJlZmV0Y2hlckNvbmZpZyJdLGZ1bmN0aW9uKGEsYixj
LGQsZSxmKXt2YXIgZz1iKCdzZGsuYXBpJyksaD1iKCdjcmVhdGVBcnJheUZyb20n
KSxpPWMoJ0NhbnZhc1ByZWZldGNoZXJDb25maWcnKSxqPWIoJ3Nkay5SdW50aW1l
Jyksaz17QVVUT01BVElDOjAsTUFOVUFMOjF9LGw9aS5zYW1wbGVSYXRlLG09aS5i
bGFja2xpc3Qsbj1rLkFVVE9NQVRJQyxvPVtdO2Z1bmN0aW9uIHAoKXt2YXIgdT17
b2JqZWN0OidkYXRhJyxsaW5rOidocmVmJyxzY3JpcHQ6J3NyYyd9O2lmKG49PWsu
QVVUT01BVElDKUVTNShFUzUoJ09iamVjdCcsJ2tleXMnLGZhbHNlLHUpLCdmb3JF
YWNoJyx0cnVlLGZ1bmN0aW9uKHYpe3ZhciB3PXVbdl07RVM1KGgoZG9jdW1lbnQu
Z2V0RWxlbWVudHNCeVRhZ05hbWUodikpLCdmb3JFYWNoJyx0cnVlLGZ1bmN0aW9u
KHgpe2lmKHhbd10pby5wdXNoKHhbd10pO30pO30pO2lmKG8ubGVuZ3RoPT09MCly
ZXR1cm47ZyhqLmdldENsaWVudElEKCkrJy9zdGF0aWNyZXNvdXJjZXMnLCdwb3N0
Jyx7dXJsczpFUzUoJ0pTT04nLCdzdHJpbmdpZnknLGZhbHNlLG8pLGlzX2h0dHBz
OmxvY2F0aW9uLnByb3RvY29sPT09J2h0dHBzOid9KTtvPVtdO31mdW5jdGlvbiBx
KCl7aWYoIWouaXNFbnZpcm9ubWVudChqLkVOVklST05NRU5UUy5DQU5WQVMpfHwh
ai5nZXRDbGllbnRJRCgpfHwhbClyZXR1cm47aWYoTWF0aC5yYW5kb20oKT4xL2x8
fG09PScqJ3x8fkVTNShtLCdpbmRleE9mJyx0cnVlLGouZ2V0Q2xpZW50SUQoKSkp
cmV0dXJuO3NldFRpbWVvdXQocCwzMDAwMCk7fWZ1bmN0aW9uIHIodSl7bj11O31m
dW5jdGlvbiBzKHUpe28ucHVzaCh1KTt9dmFyIHQ9e0NPTExFQ1RfQVVUT01BVElD
OmsuQVVUT01BVElDLENPTExFQ1RfTUFOVUFMOmsuTUFOVUFMLGFkZFN0YXRpY1Jl
c291cmNlOnMsc2V0Q29sbGVjdGlvbk1vZGU6cixfbWF5YmVTYW1wbGU6cX07ZS5l
eHBvcnRzPXQ7fSk7Cl9fZCgibGVnYWN5OmZiLmNhbnZhcy5wcmVmZXRjaGVyIixb
IkZCIiwic2RrLkNhbnZhcy5QcmVmZXRjaGVyIiwic2RrLkV2ZW50Iiwic2RrLlJ1
bnRpbWUiXSxmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1iKCdGQicpLGY9Yignc2Rr
LkNhbnZhcy5QcmVmZXRjaGVyJyksZz1iKCdzZGsuRXZlbnQnKSxoPWIoJ3Nkay5S
dW50aW1lJyk7ZS5wcm92aWRlKCdDYW52YXMuUHJlZmV0Y2hlcicsZik7Zy5zdWJz
Y3JpYmUoJ2luaXQ6cG9zdCcsZnVuY3Rpb24oaSl7aWYoaC5pc0Vudmlyb25tZW50
KGguRU5WSVJPTk1FTlRTLkNBTlZBUykpZi5fbWF5YmVTYW1wbGUoKTt9KTt9LDMp
OwpfX2QoImxlZ2FjeTpmYi5jb21wYXQudWkiLFsiY29weVByb3BlcnRpZXMiLCJG
QiIsIkxvZyIsInNkay51aSIsInNkay5VSVNlcnZlciJdLGZ1bmN0aW9uKGEsYixj
LGQpe3ZhciBlPWIoJ2NvcHlQcm9wZXJ0aWVzJyksZj1iKCdGQicpLGc9YignTG9n
JyksaD1iKCdzZGsudWknKSxpPWIoJ3Nkay5VSVNlcnZlcicpO2YucHJvdmlkZSgn
Jyx7c2hhcmU6ZnVuY3Rpb24oail7Zy5lcnJvcignc2hhcmUoKSBoYXMgYmVlbiBk
ZXByZWNhdGVkLiBQbGVhc2UgdXNlIEZCLnVpKCkgaW5zdGVhZC4nKTtoKHtkaXNw
bGF5Oidwb3B1cCcsbWV0aG9kOidzdHJlYW0uc2hhcmUnLHU6an0pO30scHVibGlz
aDpmdW5jdGlvbihqLGspe2cuZXJyb3IoJ3B1Ymxpc2goKSBoYXMgYmVlbiBkZXBy
ZWNhdGVkLiBQbGVhc2UgdXNlIEZCLnVpKCkgaW5zdGVhZC4nKTtqPWp8fHt9O2go
ZSh7ZGlzcGxheToncG9wdXAnLG1ldGhvZDonc3RyZWFtLnB1Ymxpc2gnLHByZXZp
ZXc6MX0sanx8e30pLGspO30sYWRkRnJpZW5kOmZ1bmN0aW9uKGosayl7Zy5lcnJv
cignYWRkRnJpZW5kKCkgaGFzIGJlZW4gZGVwcmVjYXRlZC4gUGxlYXNlIHVzZSBG
Qi51aSgpIGluc3RlYWQuJyk7aCh7ZGlzcGxheToncG9wdXAnLGlkOmosbWV0aG9k
OidmcmllbmQuYWRkJ30sayk7fX0pO2kuTWV0aG9kc1snYXV0aC5sb2dpbiddPWku
TWV0aG9kc1sncGVybWlzc2lvbnMucmVxdWVzdCddO30sMyk7Cl9fZCgibWVyZ2VB
cnJheXMiLFtdLGZ1bmN0aW9uKGEsYixjLGQsZSxmKXtmdW5jdGlvbiBnKGgsaSl7
Zm9yKHZhciBqPTA7ajxpLmxlbmd0aDtqKyspaWYoRVM1KGgsJ2luZGV4T2YnLHRy
dWUsaVtqXSk8MCloLnB1c2goaVtqXSk7cmV0dXJuIGg7fWUuZXhwb3J0cz1nO30p
OwpfX2QoImZvcm1hdCIsW10sZnVuY3Rpb24oYSxiLGMsZCxlLGYpe2Z1bmN0aW9u
IGcoaCxpKXtpPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywx
KTtyZXR1cm4gaC5yZXBsYWNlKC9ceyhcZCspXH0vZyxmdW5jdGlvbihqLGspe3Zh
ciBsPWlbTnVtYmVyKGspXTtyZXR1cm4gKGw9PT1udWxsfHxsPT09dW5kZWZpbmVk
KT8nJzpsLnRvU3RyaW5nKCk7fSk7fWUuZXhwb3J0cz1nO30pOwpfX2QoInNhZmVF
dmFsIixbXSxmdW5jdGlvbihhLGIsYyxkLGUsZil7ZnVuY3Rpb24gZyhoLGkpe2lm
KGg9PT1udWxsfHx0eXBlb2YgaD09PSd1bmRlZmluZWQnKXJldHVybjtpZih0eXBl
b2YgaCE9PSdzdHJpbmcnKXJldHVybiBoO2lmKC9eXHcrJC8udGVzdChoKSYmdHlw
ZW9mIHdpbmRvd1toXT09PSdmdW5jdGlvbicpcmV0dXJuIHdpbmRvd1toXS5hcHBs
eShudWxsLGl8fFtdKTtyZXR1cm4gRnVuY3Rpb24oJ3JldHVybiBldmFsKCInK2gu
cmVwbGFjZSgvIi9nLCdcXCInKSsnIik7JykuYXBwbHkobnVsbCxpfHxbXSk7fWUu
ZXhwb3J0cz1nO30pOwpfX2QoInNkay5XYWl0YWJsZSIsWyJzZGsuTW9kZWwiXSxm
dW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9Yignc2RrLk1vZGVsJyksaD1nLmV4
dGVuZCh7Y29uc3RydWN0b3I6ZnVuY3Rpb24oKXt0aGlzLnBhcmVudCh7VmFsdWU6
dW5kZWZpbmVkfSk7fSxlcnJvcjpmdW5jdGlvbihpKXt0aGlzLmluZm9ybSgiZXJy
b3IiLGkpO30sd2FpdDpmdW5jdGlvbihpLGope2lmKGopdGhpcy5zdWJzY3JpYmUo
J2Vycm9yJyxqKTt0aGlzLm1vbml0b3IoJ1ZhbHVlLmNoYW5nZScsRVM1KGZ1bmN0
aW9uKCl7dmFyIGs9dGhpcy5nZXRWYWx1ZSgpO2lmKGshPT11bmRlZmluZWQpe3Ro
aXMudmFsdWU9aztpKGspO3JldHVybiB0cnVlO319LCdiaW5kJyx0cnVlLHRoaXMp
KTt9fSk7ZS5leHBvcnRzPWg7fSk7Cl9fZCgic2RrLlF1ZXJ5IixbImZvcm1hdCIs
InNhZmVFdmFsIiwiVHlwZSIsInNkay5XYWl0YWJsZSJdLGZ1bmN0aW9uKGEsYixj
LGQsZSxmKXt2YXIgZz1iKCdmb3JtYXQnKSxoPWIoJ3NhZmVFdmFsJyksaT1iKCdU
eXBlJyksaj1iKCdzZGsuV2FpdGFibGUnKTtmdW5jdGlvbiBrKHApe3JldHVybiBF
UzUocC5zcGxpdCgnLCcpLCdtYXAnLHRydWUsZnVuY3Rpb24ocSl7cmV0dXJuIEVT
NShxLCd0cmltJyx0cnVlKTt9KTt9ZnVuY3Rpb24gbChwKXt2YXIgcT0oL15ccyoo
XHcrKVxzKj1ccyooLiopXHMqJC9pKS5leGVjKHApLHIscyx0PSd1bmtub3duJztp
ZihxKXtzPXFbMl07aWYoL14oWyInXSkoPzpcXD8uKSo/XDEkLy50ZXN0KHMpKXtz
PWgocyk7dD0naW5kZXgnO31lbHNlIGlmKC9eXGQrXC4/XGQqJC8udGVzdChzKSl0
PSdpbmRleCc7fWlmKHQ9PSdpbmRleCcpe3I9e3R5cGU6J2luZGV4JyxrZXk6cVsx
XSx2YWx1ZTpzfTt9ZWxzZSByPXt0eXBlOid1bmtub3duJyx2YWx1ZTpwfTtyZXR1
cm4gcjt9ZnVuY3Rpb24gbShwKXtyZXR1cm4gdHlwZW9mIHA9PT0nc3RyaW5nJz9F
UzUoJ0pTT04nLCdzdHJpbmdpZnknLGZhbHNlLHApOnA7fXZhciBuPTEsbz1qLmV4
dGVuZCh7Y29uc3RydWN0b3I6ZnVuY3Rpb24oKXt0aGlzLnBhcmVudCgpO3RoaXMu
bmFtZT0ndl8nK24rKzt9LGhhc0RlcGVuZGVuY3k6ZnVuY3Rpb24ocCl7aWYoYXJn
dW1lbnRzLmxlbmd0aCl0aGlzLl9oYXNEZXBlbmRlbmN5PXA7cmV0dXJuICEhdGhp
cy5faGFzRGVwZW5kZW5jeTt9LHBhcnNlOmZ1bmN0aW9uKHApe3ZhciBxPWcuYXBw
bHkobnVsbCxwKSxyPSgvXnNlbGVjdCAoLio/KSBmcm9tIChcdyspXHMrd2hlcmUg
KC4qKSQvaSkuZXhlYyhxKTt0aGlzLmZpZWxkcz1rKHJbMV0pO3RoaXMudGFibGU9
clsyXTt0aGlzLndoZXJlPWwoclszXSk7Zm9yKHZhciBzPTE7czxwLmxlbmd0aDtz
KyspaWYoaS5pbnN0YW5jZU9mKG8scFtzXSkpcFtzXS5oYXNEZXBlbmRlbmN5KHRy
dWUpO3JldHVybiB0aGlzO30sdG9GcWw6ZnVuY3Rpb24oKXt2YXIgcD0nc2VsZWN0
ICcrdGhpcy5maWVsZHMuam9pbignLCcpKycgZnJvbSAnK3RoaXMudGFibGUrJyB3
aGVyZSAnO3N3aXRjaCh0aGlzLndoZXJlLnR5cGUpe2Nhc2UgJ3Vua25vd24nOnAr
PXRoaXMud2hlcmUudmFsdWU7YnJlYWs7Y2FzZSAnaW5kZXgnOnArPXRoaXMud2hl
cmUua2V5Kyc9JyttKHRoaXMud2hlcmUudmFsdWUpO2JyZWFrO2Nhc2UgJ2luJzpp
Zih0aGlzLndoZXJlLnZhbHVlLmxlbmd0aD09MSl7cCs9dGhpcy53aGVyZS5rZXkr
Jz0nK20odGhpcy53aGVyZS52YWx1ZVswXSk7fWVsc2UgcCs9dGhpcy53aGVyZS5r
ZXkrJyBpbiAoJytFUzUodGhpcy53aGVyZS52YWx1ZSwnbWFwJyx0cnVlLG0pLmpv
aW4oJywnKSsnKSc7YnJlYWs7fXJldHVybiBwO30sdG9TdHJpbmc6ZnVuY3Rpb24o
KXtyZXR1cm4gJyMnK3RoaXMubmFtZTt9fSk7ZS5leHBvcnRzPW87fSk7Cl9fZCgi
c2RrLkRhdGEiLFsic2RrLmFwaSIsInNkay5FcnJvckhhbmRsaW5nIiwibWVyZ2VB
cnJheXMiLCJzZGsuUXVlcnkiLCJzYWZlRXZhbCIsInNkay5XYWl0YWJsZSJdLGZ1
bmN0aW9uKGEsYixjLGQsZSxmKXt2YXIgZz1iKCdzZGsuYXBpJyksaD1iKCdzZGsu
RXJyb3JIYW5kbGluZycpLGk9YignbWVyZ2VBcnJheXMnKSxqPWIoJ3Nkay5RdWVy
eScpLGs9Yignc2FmZUV2YWwnKSxsPWIoJ3Nkay5XYWl0YWJsZScpLG09e3F1ZXJ5
OmZ1bmN0aW9uKG4sbyl7dmFyIHA9bmV3IGooKS5wYXJzZShBcnJheS5wcm90b3R5
cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpKTttLnF1ZXVlLnB1c2gocCk7bS5fd2Fp
dFRvUHJvY2VzcygpO3JldHVybiBwO30sd2FpdE9uOmZ1bmN0aW9uKG4sbyl7dmFy
IHA9bmV3IGwoKSxxPW4ubGVuZ3RoO2lmKHR5cGVvZihvKT09J3N0cmluZycpe3Zh
ciByPW87bz1oLnVuZ3VhcmQoZnVuY3Rpb24oKXtyZXR1cm4gayhyKTt9KTt9RVM1
KG4sJ2ZvckVhY2gnLHRydWUsZnVuY3Rpb24ocyl7cy5tb25pdG9yKCdWYWx1ZS5j
aGFuZ2UnLGZ1bmN0aW9uKCl7dmFyIHQ9ZmFsc2U7aWYobS5fZ2V0VmFsdWUocykh
PT11bmRlZmluZWQpe3MudmFsdWU9cy5nZXRWYWx1ZSgpO3EtLTt0PXRydWU7fWlm
KHE9PT0wKXt2YXIgdT1vKEVTNShuLCdtYXAnLHRydWUsbS5fZ2V0VmFsdWUpKTtw
LnNldFZhbHVlKHUhPT11bmRlZmluZWQ/dTp0cnVlKTt9cmV0dXJuIHQ7fSk7fSk7
cmV0dXJuIHA7fSxwcm9jZXNzOmZ1bmN0aW9uKG4pe20uX3Byb2Nlc3Mobik7fSxf
Z2V0VmFsdWU6ZnVuY3Rpb24obil7cmV0dXJuIG4gaW5zdGFuY2VvZiBsP24uZ2V0
VmFsdWUoKTpuO30sX3NlbGVjdEJ5SW5kZXg6ZnVuY3Rpb24obixvLHAscSl7dmFy
IHI9bmV3IGooKTtyLmZpZWxkcz1uO3IudGFibGU9bztyLndoZXJlPXt0eXBlOidp
bmRleCcsa2V5OnAsdmFsdWU6cX07bS5xdWV1ZS5wdXNoKHIpO20uX3dhaXRUb1By
b2Nlc3MoKTtyZXR1cm4gcjt9LF93YWl0VG9Qcm9jZXNzOmZ1bmN0aW9uKCl7aWYo
bS50aW1lcjwwKW0udGltZXI9c2V0VGltZW91dChmdW5jdGlvbigpe20uX3Byb2Nl
c3MoKTt9LDEwKTt9LF9wcm9jZXNzOmZ1bmN0aW9uKG4pe20udGltZXI9LTE7dmFy
IG89e30scD1tLnF1ZXVlO2lmKCFwLmxlbmd0aClyZXR1cm47bS5xdWV1ZT1bXTtm
b3IodmFyIHE9MDtxPHAubGVuZ3RoO3ErKyl7dmFyIHI9cFtxXTtpZihyLndoZXJl
LnR5cGU9PSdpbmRleCcmJiFyLmhhc0RlcGVuZGVuY3koKSl7bS5fbWVyZ2VJbmRl
eFF1ZXJ5KHIsbyk7fWVsc2Ugb1tyLm5hbWVdPXI7fXZhciBzPXtxOnt9fTtmb3Io
dmFyIHQgaW4gbylpZihvLmhhc093blByb3BlcnR5KHQpKXMucVt0XT1vW3RdLnRv
RnFsKCk7aWYobilzLmFjY2Vzc190b2tlbj1uO2coJy9mcWwnLCdHRVQnLHMsZnVu
Y3Rpb24odSl7aWYodS5lcnJvcil7RVM1KEVTNSgnT2JqZWN0Jywna2V5cycsZmFs
c2UsbyksJ2ZvckVhY2gnLHRydWUsZnVuY3Rpb24odil7b1t2XS5lcnJvcihuZXcg
RXJyb3IodS5lcnJvci5tZXNzYWdlKSk7fSk7fWVsc2UgRVM1KHUuZGF0YSwnZm9y
RWFjaCcsdHJ1ZSxmdW5jdGlvbih2KXtvW3YubmFtZV0uc2V0VmFsdWUodi5mcWxf
cmVzdWx0X3NldCk7fSk7fSk7fSxfbWVyZ2VJbmRleFF1ZXJ5OmZ1bmN0aW9uKG4s
byl7dmFyIHA9bi53aGVyZS5rZXkscT1uLndoZXJlLnZhbHVlLHI9J2luZGV4Xycr
bi50YWJsZSsnXycrcCxzPW9bcl07aWYoIXMpe3M9b1tyXT1uZXcgaigpO3MuZmll
bGRzPVtwXTtzLnRhYmxlPW4udGFibGU7cy53aGVyZT17dHlwZTonaW4nLGtleTpw
LHZhbHVlOltdfTt9aShzLmZpZWxkcyxuLmZpZWxkcyk7aShzLndoZXJlLnZhbHVl
LFtxXSk7cy53YWl0KGZ1bmN0aW9uKHQpe24uc2V0VmFsdWUoRVM1KHQsJ2ZpbHRl
cicsdHJ1ZSxmdW5jdGlvbih1KXtyZXR1cm4gdVtwXT09cTt9KSk7fSk7fSx0aW1l
cjotMSxxdWV1ZTpbXX07ZS5leHBvcnRzPW07fSk7Cl9fZCgibGVnYWN5OmZiLmRh
dGEiLFsiRkIiLCJzZGsuRGF0YSJdLGZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWIo
J0ZCJyksZj1iKCdzZGsuRGF0YScpO2UucHJvdmlkZSgnRGF0YScsZik7fSwzKTsK
X19kKCJsZWdhY3k6ZmIuZXZlbnQiLFsiRkIiLCJzZGsuRXZlbnQiXSxmdW5jdGlv
bihhLGIsYyxkKXt2YXIgZT1iKCdGQicpLGY9Yignc2RrLkV2ZW50Jyk7ZS5wcm92
aWRlKCdFdmVudCcsZik7ZS5wcm92aWRlKCdFdmVudFByb3ZpZGVyJyxmKTt9LDMp
OwpfX2QoImxlZ2FjeTpmYi5mcmljdGlvbmxlc3MiLFsiRkIiLCJzZGsuRnJpY3Rp
b25sZXNzIl0sZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9YignRkInKSxmPWIoJ3Nk
ay5GcmljdGlvbmxlc3MnKTtlLnByb3ZpZGUoJ0ZyaWN0aW9ubGVzcycsZik7fSwz
KTsKX19kKCJzZGsuaW5pdCIsWyJzZGsuQ29va2llIiwiY29weVByb3BlcnRpZXMi
LCJjcmVhdGVBcnJheUZyb20iLCJzZGsuRXJyb3JIYW5kbGluZyIsInNkay5FdmVu
dCIsIkxvZyIsIlF1ZXJ5U3RyaW5nIiwic2RrLlJ1bnRpbWUiLCJ3cmFwRnVuY3Rp
b24iXSxmdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9Yignc2RrLkNvb2tpZScp
LGg9YignY29weVByb3BlcnRpZXMnKSxpPWIoJ2NyZWF0ZUFycmF5RnJvbScpLGo9
Yignc2RrLkVycm9ySGFuZGxpbmcnKSxrPWIoJ3Nkay5FdmVudCcpLGw9YignTG9n
JyksbT1iKCdRdWVyeVN0cmluZycpLG49Yignc2RrLlJ1bnRpbWUnKSxvPWIoJ3dy
YXBGdW5jdGlvbicpO2Z1bmN0aW9uIHAocSl7aWYobi5nZXRJbml0aWFsaXplZCgp
KWwud2FybignRkIuaW5pdCBoYXMgYWxyZWFkeSBiZWVuIGNhbGxlZCAtIHRoaXMg
Y291bGQgaW5kaWNhdGUgYSBwcm9ibGVtJyk7aWYoL251bWJlcnxzdHJpbmcvLnRl
c3QodHlwZW9mIHEpKXtsLndhcm4oJ0ZCLmluaXQgY2FsbGVkIHdpdGggaW52YWxp
ZCBwYXJhbWV0ZXJzJyk7cT17YXBpS2V5OnF9O31xPWgoe2xvZ2dpbmc6dHJ1ZSxz
dGF0dXM6dHJ1ZX0scXx8e30pO3ZhciByPXEuYXBwSWR8fHEuYXBpS2V5O2lmKC9u
dW1iZXJ8c3RyaW5nLy50ZXN0KHR5cGVvZiByKSluLnNldENsaWVudElEKHIudG9T
dHJpbmcoKSk7aWYoJ3Njb3BlJyBpbiBxKW4uc2V0U2NvcGUocS5zY29wZSk7aWYo
cS5jb29raWUpe24uc2V0VXNlQ29va2llKHRydWUpO2lmKHR5cGVvZiBxLmNvb2tp
ZT09PSdzdHJpbmcnKWcuc2V0RG9tYWluKHEuY29va2llKTt9bi5zZXRJbml0aWFs
aXplZCh0cnVlKTtrLmZpcmUoJ2luaXQ6cG9zdCcscSk7fXNldFRpbWVvdXQoZnVu
Y3Rpb24oKXt2YXIgcT0vKGNvbm5lY3RcLmZhY2Vib29rXC5uZXR8XC5mYWNlYm9v
a1wuY29tXC9hc3NldHMucGhwKS4qPyMoLiopLztFUzUoaShkb2N1bWVudC5nZXRF
bGVtZW50c0J5VGFnTmFtZSgnc2NyaXB0JykpLCdmb3JFYWNoJyx0cnVlLGZ1bmN0
aW9uKHIpe2lmKHIuc3JjKXt2YXIgcz1xLmV4ZWMoci5zcmMpO2lmKHMpe3ZhciB0
PW0uZGVjb2RlKHNbMl0pO2Zvcih2YXIgdSBpbiB0KWlmKHQuaGFzT3duUHJvcGVy
dHkodSkpe3ZhciB2PXRbdV07aWYodj09JzAnKXRbdV09MDt9cCh0KTt9fX0pO2lm
KHdpbmRvdy5mYkFzeW5jSW5pdCYmIXdpbmRvdy5mYkFzeW5jSW5pdC5oYXNSdW4p
e3dpbmRvdy5mYkFzeW5jSW5pdC5oYXNSdW49dHJ1ZTtqLnVuZ3VhcmQod2luZG93
LmZiQXN5bmNJbml0KSgpO319LDApO2UuZXhwb3J0cz1wO30pOwpfX2QoImxlZ2Fj
eTpmYi5pbml0IixbIkZCIiwic2RrLmluaXQiXSxmdW5jdGlvbihhLGIsYyxkKXt2
YXIgZT1iKCdGQicpLGY9Yignc2RrLmluaXQnKTtlLnByb3ZpZGUoJycse2luaXQ6
Zn0pO30sMyk7Cl9fZCgibGVnYWN5OmZiLmpzb24iLFsiRkIiLCJNYW5hZ2VkRXJy
b3IiXSxmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1iKCdGQicpLGY9YignTWFuYWdl
ZEVycm9yJyk7ZS5wcm92aWRlKCdKU09OJyx7c3RyaW5naWZ5OmZ1bmN0aW9uKGcp
e3RyeXtyZXR1cm4gRVM1KCdKU09OJywnc3RyaW5naWZ5JyxmYWxzZSxnKTt9Y2F0
Y2goaCl7dGhyb3cgbmV3IGYoaC5tZXNzYWdlLGgpO319LHBhcnNlOmZ1bmN0aW9u
KGcpe3RyeXtyZXR1cm4gRVM1KCdKU09OJywncGFyc2UnLGZhbHNlLGcpO31jYXRj
aChoKXt0aHJvdyBuZXcgZihoLm1lc3NhZ2UsaCk7fX19KTt9LDMpOwpfX2QoImxl
Z2FjeTpmYi5wYXkiLFsiRkIiLCJjb3B5UHJvcGVydGllcyIsInNkay5SdW50aW1l
Iiwic2RrLlVJU2VydmVyIiwic2RrLlhEIl0sZnVuY3Rpb24oYSxiLGMsZCl7Yign
RkInKTt2YXIgZT1iKCdjb3B5UHJvcGVydGllcycpLGY9Yignc2RrLlJ1bnRpbWUn
KSxnPWIoJ3Nkay5VSVNlcnZlcicpLGg9Yignc2RrLlhEJyksaT17ZXJyb3JfY29k
ZToxMzgzMDAxLGVycm9yX21lc3NhZ2U6J0FuIHVua25vd24gZXJyb3IgY2F1c2Vk
IHRoZSBkaWFsb2cgdG8gYmUgY2xvc2VkJ30saj1mdW5jdGlvbihrKXtyZXR1cm4g
ZnVuY3Rpb24obCl7ayhsJiZsLnJlc3BvbnNlP0VTNSgnSlNPTicsJ3BhcnNlJyxm
YWxzZSxsLnJlc3BvbnNlKTppKTt9O307ZShnLk1ldGhvZHMseydwYXkucHJvbXB0
Jzp7dHJhbnNmb3JtOmZ1bmN0aW9uKGspe3ZhciBsPWguaGFuZGxlcihqKGsuY2Ip
LCdwYXJlbnQuZnJhbWVzWycrKHdpbmRvdy5uYW1lfHwnaWZyYW1lX2NhbnZhcycp
KyddJyk7ay5wYXJhbXMuY2hhbm5lbD1sO2guaW5mb3JtKCdQYXkuUHJvbXB0Jyxr
LnBhcmFtcyk7fX0scGF5OntzaXplOnt3aWR0aDo1NTUsaGVpZ2h0OjEyMH0sY29u
bmVjdERpc3BsYXk6J3BvcHVwJyx0cmFuc2Zvcm06ZnVuY3Rpb24oayl7ay5jYj1q
KGsuY2IpO2lmKCFmLmlzRW52aXJvbm1lbnQoZi5FTlZJUk9OTUVOVFMuQ0FOVkFT
KSl7ay5wYXJhbXMub3JkZXJfaW5mbz1FUzUoJ0pTT04nLCdzdHJpbmdpZnknLGZh
bHNlLGsucGFyYW1zLm9yZGVyX2luZm8pO3JldHVybiBrO312YXIgbD1oLmhhbmRs
ZXIoay5jYiwncGFyZW50LmZyYW1lc1snKyh3aW5kb3cubmFtZXx8J2lmcmFtZV9j
YW52YXMnKSsnXScpO2sucGFyYW1zLmNoYW5uZWw9bDtrLnBhcmFtcy51aXNlcnZl
cj10cnVlO2guaW5mb3JtKCdQYXkuUHJvbXB0JyxrLnBhcmFtcyk7fX19KTt9LDMp
OwpfX2QoImxlZ2FjeTpmYi51YSIsWyJGQiIsIlVzZXJBZ2VudCJdLGZ1bmN0aW9u
KGEsYixjLGQpe3ZhciBlPWIoJ0ZCJyksZj1iKCdVc2VyQWdlbnQnKTtlLnByb3Zp
ZGUoJ1VBJyx7bmF0aXZlQXBwOmYubmF0aXZlQXBwfSk7fSwzKTsKX19kKCJsZWdh
Y3k6ZmIudWkiLFsiRkIiLCJzZGsudWkiXSxmdW5jdGlvbihhLGIsYyxkKXt2YXIg
ZT1iKCdGQicpLGY9Yignc2RrLnVpJyk7ZS5wcm92aWRlKCcnLHt1aTpmfSk7fSwz
KTsKX19kKCJNaW55IixbXSxmdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9J01p
bnkxJyxoPXtlbmNvZGU6W10sZGVjb2RlOnt9fSxpPSd3eHl6QUJDREVGR0hJSktM
TU5PUFFSU1RVVldYWVotXycuc3BsaXQoJycpO2Z1bmN0aW9uIGoobil7Zm9yKHZh
ciBvPWguZW5jb2RlLmxlbmd0aDtvPG47bysrKXt2YXIgcD1vLnRvU3RyaW5nKDMy
KS5zcGxpdCgnJyk7cFtwLmxlbmd0aC0xXT1pW3BhcnNlSW50KHBbcC5sZW5ndGgt
MV0sMzIpXTtwPXAuam9pbignJyk7aC5lbmNvZGVbb109cDtoLmRlY29kZVtwXT1v
O31yZXR1cm4gaDt9ZnVuY3Rpb24gayhuKXt2YXIgbz1uLm1hdGNoKC9cdyt8XFcr
L2cpLHA9e307Zm9yKHZhciBxPTA7cTxvLmxlbmd0aDtxKyspcFtvW3FdXT0ocFtv
W3FdXXx8MCkrMTt2YXIgcj1FUzUoJ09iamVjdCcsJ2tleXMnLGZhbHNlLHApO3Iu
c29ydChmdW5jdGlvbih1LHYpe3JldHVybiBwW3VdPHBbdl0/MToocFt2XTxwW3Vd
Py0xOjApO30pO3ZhciBzPWooci5sZW5ndGgpLmVuY29kZTtmb3IocT0wO3E8ci5s
ZW5ndGg7cSsrKXBbcltxXV09c1txXTt2YXIgdD1bXTtmb3IocT0wO3E8by5sZW5n
dGg7cSsrKXRbcV09cFtvW3FdXTtmb3IocT0wO3E8ci5sZW5ndGg7cSsrKXJbcV09
cltxXS5yZXBsYWNlKC8nficvZywnXFx+Jyk7cmV0dXJuIFtnLHIubGVuZ3RoXS5j
b25jYXQocikuY29uY2F0KHQuam9pbignJykpLmpvaW4oJ34nKTt9ZnVuY3Rpb24g
bChuKXt2YXIgbz1uLnNwbGl0KCd+Jyk7aWYoby5zaGlmdCgpIT1nKXRocm93IG5l
dyBFcnJvcignTm90IGEgTWlueSBzdHJlYW0nKTt2YXIgcD1wYXJzZUludChvLnNo
aWZ0KCksMTApLHE9by5wb3AoKTtxPXEubWF0Y2goL1swLTlhLXZdKltcLXctekEt
Wl9dL2cpO3ZhciByPW8scz1qKHApLmRlY29kZSx0PVtdO2Zvcih2YXIgdT0wO3U8
cS5sZW5ndGg7dSsrKXRbdV09cltzW3FbdV1dXTtyZXR1cm4gdC5qb2luKCcnKTt9
dmFyIG09e2VuY29kZTprLGRlY29kZTpsfTtlLmV4cG9ydHM9bTt9KTsKX19kKCJz
ZGsuZmVhdHVyZSIsWyJTREtDb25maWciXSxmdW5jdGlvbihhLGIsYyxkLGUsZil7
dmFyIGc9YygnU0RLQ29uZmlnJyk7ZnVuY3Rpb24gaChpLGope2lmKGcuZmVhdHVy
ZXMmJmkgaW4gZy5mZWF0dXJlcylyZXR1cm4gZy5mZWF0dXJlc1tpXTtyZXR1cm4g
dHlwZW9mIGohPT0ndW5kZWZpbmVkJz9qOm51bGw7fWUuZXhwb3J0cz1oO30pOwpf
X2QoInJ1bk9uY2UiLFtdLGZ1bmN0aW9uKGEsYixjLGQsZSxmKXtmdW5jdGlvbiBn
KGgpe3ZhciBpLGo7cmV0dXJuIGZ1bmN0aW9uKCl7aWYoIWkpe2k9dHJ1ZTtqPWgo
KTt9cmV0dXJuIGo7fTt9ZS5leHBvcnRzPWc7fSk7Cl9fZCgiWEZCTUwiLFsiQXNz
ZXJ0IiwiY29weVByb3BlcnRpZXMiLCJjcmVhdGVBcnJheUZyb20iLCJzZGsuRE9N
Iiwic2RrLmZlYXR1cmUiLCJzZGsuSW1wcmVzc2lvbnMiLCJMb2ciLCJPYnNlcnZh
YmxlTWl4aW4iLCJydW5PbmNlIiwiVXNlckFnZW50IiwiU0RLQ29uZmlnIl0sZnVu
Y3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnPWIoJ0Fzc2VydCcpLGg9YignY29weVBy
b3BlcnRpZXMnKSxpPWIoJ2NyZWF0ZUFycmF5RnJvbScpLGo9Yignc2RrLkRPTScp
LGs9Yignc2RrLmZlYXR1cmUnKSxsPWIoJ3Nkay5JbXByZXNzaW9ucycpLG09Yign
TG9nJyksbj1iKCdPYnNlcnZhYmxlTWl4aW4nKSxvPWIoJ3J1bk9uY2UnKSxwPWMo
J1NES0NvbmZpZycpLHE9YignVXNlckFnZW50Jykscj17fSxzPXt9LHQ9MCx1PW5l
dyBuKCk7ZnVuY3Rpb24gdihjYSxkYSl7cmV0dXJuIGNhW2RhXSsnJzt9ZnVuY3Rp
b24gdyhjYSl7cmV0dXJuIGNhLnNjb3BlTmFtZT8oY2Euc2NvcGVOYW1lKyc6Jytj
YS5ub2RlTmFtZSk6Jyc7fWZ1bmN0aW9uIHgoY2Epe3JldHVybiByW3YoY2EsJ25v
ZGVOYW1lJykudG9Mb3dlckNhc2UoKV18fHJbdyhjYSkudG9Mb3dlckNhc2UoKV07
fWZ1bmN0aW9uIHkoY2Epe3ZhciBkYT1FUzUoRVM1KHYoY2EsJ2NsYXNzTmFtZScp
LCd0cmltJyx0cnVlKS5zcGxpdCgvXHMrLyksJ2ZpbHRlcicsdHJ1ZSxmdW5jdGlv
bihlYSl7cmV0dXJuIHMuaGFzT3duUHJvcGVydHkoZWEpO30pO2lmKGRhLmxlbmd0
aD09PTApcmV0dXJuIHVuZGVmaW5lZDtpZighY2EuY2hpbGROb2Rlc3x8Y2EuY2hp
bGROb2Rlcy5sZW5ndGg9PT0wfHwoY2EuY2hpbGROb2Rlcy5sZW5ndGg9PTEmJmNh
LmNoaWxkTm9kZXNbMF0ubm9kZVR5cGU9PTMpfHxjYS5nZXRBdHRyaWJ1dGUoJ2Zi
LXhmYm1sLXN0YXRlJykpcmV0dXJuIHNbZGFbMF1dO31mdW5jdGlvbiB6KGNhKXt2
YXIgZGE9e307RVM1KGkoY2EuYXR0cmlidXRlcyksJ2ZvckVhY2gnLHRydWUsZnVu
Y3Rpb24oZWEpe2RhW3YoZWEsJ25hbWUnKV09dihlYSwndmFsdWUnKTt9KTtyZXR1
cm4gZGE7fWZ1bmN0aW9uIGFhKGNhLGRhLGVhKXtnLmlzVHJ1ZShjYSYmY2Eubm9k
ZVR5cGUmJmNhLm5vZGVUeXBlPT09MSYmISFjYS5nZXRFbGVtZW50c0J5VGFnTmFt
ZSwnSW52YWxpZCBET00gbm9kZSBwYXNzZWQgdG8gRkIuWEZCTUwucGFyc2UoKScp
O2cuaXNGdW5jdGlvbihkYSwnSW52YWxpZCBjYWxsYmFjayBwYXNzZWQgdG8gRkIu
WEZCTUwucGFyc2UoKScpO3ZhciBmYT0rK3Q7bS5pbmZvKCdYRkJNTCBQYXJzaW5n
IFN0YXJ0ICVzJyxmYSk7dmFyIGdhPTEsaGE9MCxpYT1mdW5jdGlvbigpe2dhLS07
aWYoZ2E9PT0wKXttLmluZm8oJ1hGQk1MIFBhcnNpbmcgRmluaXNoICVzLCAlcyB0
YWdzIGZvdW5kJyxmYSxoYSk7ZGEoKTt1LmluZm9ybSgncmVuZGVyJyxmYSxoYSk7
fWcuaXNUcnVlKGdhPj0wLCdvbnJlbmRlcigpIGhhcyBiZWVuIGNhbGxlZCB0b28g
bWFueSB0aW1lcycpO307RVM1KGkoY2EuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJyon
KSksJ2ZvckVhY2gnLHRydWUsZnVuY3Rpb24oa2Epe2lmKCFlYSYma2EuZ2V0QXR0
cmlidXRlKCdmYi14ZmJtbC1zdGF0ZScpKXJldHVybjtpZihrYS5ub2RlVHlwZSE9
PTEpcmV0dXJuO3ZhciBsYT15KGthKSxtYT16KGthKTtpZighbGEpe2xhPXgoa2Ep
O2lmKCFsYSlyZXR1cm47aWYoaygnY29udmVydF94ZmJtbCcsdHJ1ZSkmJnEuaWUo
KTw5KXt2YXIgbmE9a2E7a2E9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7
ai5hZGRDc3Moa2EsbGEueG1sbnMrJy0nK2xhLmxvY2FsTmFtZSk7RVM1KGkobmEu
Y2hpbGROb2RlcyksJ2ZvckVhY2gnLHRydWUsZnVuY3Rpb24ocmEpe2thLmFwcGVu
ZENoaWxkKHJhKTt9KTtmb3IodmFyIG9hIGluIG1hKWlmKG1hLmhhc093blByb3Bl
cnR5KG9hKSlrYS5zZXRBdHRyaWJ1dGUob2EsbWFbb2FdKTtuYS5wYXJlbnROb2Rl
LnJlcGxhY2VDaGlsZChrYSxuYSk7fX1nYSsrO2hhKys7dmFyIHBhPW5ldyBsYS5j
dG9yKGthLGxhLnhtbG5zLGxhLmxvY2FsTmFtZSxtYSk7cGEuc3Vic2NyaWJlKCdy
ZW5kZXInLG8oZnVuY3Rpb24oKXtrYS5zZXRBdHRyaWJ1dGUoJ2ZiLXhmYm1sLXN0
YXRlJywncmVuZGVyZWQnKTtpYSgpO30pKTt2YXIgcWE9ZnVuY3Rpb24oKXtpZihr
YS5nZXRBdHRyaWJ1dGUoJ2ZiLXhmYm1sLXN0YXRlJyk9PSdwYXJzZWQnKXt1LnN1
YnNjcmliZSgncmVuZGVyLnF1ZXVlJyxxYSk7fWVsc2V7a2Euc2V0QXR0cmlidXRl
KCdmYi14ZmJtbC1zdGF0ZScsJ3BhcnNlZCcpO3BhLnByb2Nlc3MoKTt9fTtxYSgp
O30pO3UuaW5mb3JtKCdwYXJzZScsZmEsaGEpO3ZhciBqYT0zMDAwMDtzZXRUaW1l
b3V0KGZ1bmN0aW9uKCl7aWYoZ2E+MCltLndhcm4oJyVzIHRhZ3MgZmFpbGVkIHRv
IHJlbmRlciBpbiAlcyBtcycsZ2EsamEpO30samEpO2lhKCk7fXUuc3Vic2NyaWJl
KCdyZW5kZXInLGZ1bmN0aW9uKCl7dmFyIGNhPXUuZ2V0U3Vic2NyaWJlcnMoJ3Jl
bmRlci5xdWV1ZScpO3UuY2xlYXJTdWJzY3JpYmVycygncmVuZGVyLnF1ZXVlJyk7
RVM1KGNhLCdmb3JFYWNoJyx0cnVlLGZ1bmN0aW9uKGRhKXtkYSgpO30pO30pO2go
dSx7cmVnaXN0ZXJUYWc6ZnVuY3Rpb24oY2Epe3ZhciBkYT1jYS54bWxucysnOicr
Y2EubG9jYWxOYW1lO2cuaXNVbmRlZmluZWQocltkYV0sZGErJyBhbHJlYWR5IHJl
Z2lzdGVyZWQnKTtyW2RhXT1jYTtzW2NhLnhtbG5zKyctJytjYS5sb2NhbE5hbWVd
PWNhO30scGFyc2U6ZnVuY3Rpb24oY2EsZGEpe2FhKGNhfHxkb2N1bWVudC5ib2R5
LGRhfHxmdW5jdGlvbigpe30sdHJ1ZSk7fSxwYXJzZU5ldzpmdW5jdGlvbigpe2Fh
KGRvY3VtZW50LmJvZHksZnVuY3Rpb24oKXt9LGZhbHNlKTt9fSk7dmFyIGJhPWZ1
bmN0aW9uKGNhLGRhKXtpZihNYXRoLnJhbmRvbSgpPHAudGFnQ291bnRMb2dSYXRl
KXNldFRpbWVvdXQoRVM1KGwubG9nLCdiaW5kJyx0cnVlLG51bGwsMTAyLHt0YWdf
Y291bnQ6ZGF9KSw1MDAwKTt1LnVuc3Vic2NyaWJlKCdwYXJzZScsYmEpO307dS5z
dWJzY3JpYmUoJ3BhcnNlJyxiYSk7ZS5leHBvcnRzPXU7fSk7Cl9fZCgiUGx1Z2lu
UGlwZSIsWyJzZGsuQ29udGVudCIsImNvcHlQcm9wZXJ0aWVzIiwiZ3VpZCIsImlu
c2VydElmcmFtZSIsIk1pbnkiLCJPYnNlcnZhYmxlTWl4aW4iLCJzZGsuUnVudGlt
ZSIsIlVybE1hcCIsIlVzZXJBZ2VudCIsIlhGQk1MIiwiUGx1Z2luUGlwZUNvbmZp
ZyIsIlNES0NvbmZpZyJdLGZ1bmN0aW9uKGEsYixjLGQsZSxmKXt2YXIgZz1iKCdz
ZGsuQ29udGVudCcpLGg9YignY29weVByb3BlcnRpZXMnKSxpPWIoJ2d1aWQnKSxq
PWIoJ2luc2VydElmcmFtZScpLGs9YignTWlueScpLGw9YignT2JzZXJ2YWJsZU1p
eGluJyksbT1jKCdQbHVnaW5QaXBlQ29uZmlnJyksbj1iKCdzZGsuUnVudGltZScp
LG89YygnU0RLQ29uZmlnJykscD1iKCdVcmxNYXAnKSxxPWIoJ1VzZXJBZ2VudCcp
LHI9YignWEZCTUwnKSxzPW5ldyBsKCksdD1tLnRocmVzaG9sZCx1PVtdO2Z1bmN0
aW9uIHYoKXtyZXR1cm4gISEoby51c2VQbHVnaW5QaXBlJiZuLmdldFNlY3VyZSgp
IT09dW5kZWZpbmVkJiYocS5jaHJvbWUoKXx8cS5maXJlZm94KCkpJiZtLmVuYWJs
ZWRBcHBzW24uZ2V0Q2xpZW50SUQoKV0pO31mdW5jdGlvbiB3KCl7dmFyIHk9dTt1
PVtdO2lmKHkubGVuZ3RoPD10KXtFUzUoeSwnZm9yRWFjaCcsdHJ1ZSxmdW5jdGlv
bihiYSl7aihiYS5jb25maWcpO30pO3JldHVybjt9dmFyIHo9eS5sZW5ndGgrMTtm
dW5jdGlvbiBhYSgpe3otLTtpZih6PT09MCl4KHkpO31FUzUoeSwnZm9yRWFjaCcs
dHJ1ZSxmdW5jdGlvbihiYSl7dmFyIGNhPXt9O2Zvcih2YXIgZGEgaW4gYmEuY29u
ZmlnKWNhW2RhXT1iYS5jb25maWdbZGFdO2NhLnVybD1wLnJlc29sdmUoJ3d3dycs
bi5nZXRTZWN1cmUoKSkrJy9wbHVnaW5zL3BsdWdpbl9waXBlX3NoZWxsLnBocCc7
Y2Eub25sb2FkPWFhO2ooY2EpO30pO2FhKCk7fXIuc3Vic2NyaWJlKCdwYXJzZScs
dyk7ZnVuY3Rpb24geCh5KXt2YXIgej1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdz
cGFuJyk7Zy5hcHBlbmRIaWRkZW4oeik7dmFyIGFhPXt9O0VTNSh5LCdmb3JFYWNo
Jyx0cnVlLGZ1bmN0aW9uKGZhKXthYVtmYS5jb25maWcubmFtZV09e3BsdWdpbjpm
YS50YWcscGFyYW1zOmZhLnBhcmFtc307fSk7dmFyIGJhPUVTNSgnSlNPTicsJ3N0
cmluZ2lmeScsZmFsc2UsYWEpLGNhPWsuZW5jb2RlKGJhKTtFUzUoeSwnZm9yRWFj
aCcsdHJ1ZSxmdW5jdGlvbihmYSl7dmFyIGdhPWRvY3VtZW50LmdldEVsZW1lbnRz
QnlOYW1lKGZhLmNvbmZpZy5uYW1lKVswXTtnYS5vbmxvYWQ9ZmEuY29uZmlnLm9u
bG9hZDt9KTt2YXIgZGE9cC5yZXNvbHZlKCd3d3cnLG4uZ2V0U2VjdXJlKCkpKycv
cGx1Z2lucy9waXBlLnBocCcsZWE9aSgpO2ooe3VybDonYWJvdXQ6YmxhbmsnLHJv
b3Q6eixuYW1lOmVhLGNsYXNzTmFtZTonZmJfaGlkZGVuIGZiX2ludmlzaWJsZScs
b25sb2FkOmZ1bmN0aW9uKCl7Zy5zdWJtaXRUb1RhcmdldCh7dXJsOmRhLHRhcmdl
dDplYSxwYXJhbXM6e3BsdWdpbnM6Y2EubGVuZ3RoPGJhLmxlbmd0aD9jYTpiYX19
KTt9fSk7fWgocyx7YWRkOmZ1bmN0aW9uKHkpe3ZhciB6PXYoKTt6JiZ1LnB1c2go
e2NvbmZpZzp5Ll9jb25maWcsdGFnOnkuX3RhZyxwYXJhbXM6eS5fcGFyYW1zfSk7
cmV0dXJuIHo7fX0pO2UuZXhwb3J0cz1zO30pOwpfX2QoIklmcmFtZVBsdWdpbiIs
WyJzZGsuQXV0aCIsInNkay5jcmVhdGVJZnJhbWUiLCJzZGsuRE9NIiwic2RrLkV2
ZW50IiwiZ3VpZCIsIkxvZyIsIk9ic2VydmFibGVNaXhpbiIsIlBsdWdpblBpcGUi
LCJRdWVyeVN0cmluZyIsInJlc29sdmVVUkkiLCJzZGsuUnVudGltZSIsIlR5cGUi
LCJVcmxNYXAiLCJzZGsuWEQiXSxmdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9
Yignc2RrLkF1dGgnKSxoPWIoJ3Nkay5jcmVhdGVJZnJhbWUnKSxpPWIoJ3Nkay5E
T00nKSxqPWIoJ3Nkay5FdmVudCcpLGs9YignZ3VpZCcpLGw9YignTG9nJyksbT1i
KCdPYnNlcnZhYmxlTWl4aW4nKSxuPWIoJ1BsdWdpblBpcGUnKSxvPWIoJ1F1ZXJ5
U3RyaW5nJykscD1iKCdyZXNvbHZlVVJJJykscT1iKCdzZGsuUnVudGltZScpLHI9
YignVHlwZScpLHM9YignVXJsTWFwJyksdD1iKCdzZGsuWEQnKSx1PXtza2luOidz
dHJpbmcnLGZvbnQ6J3N0cmluZycsd2lkdGg6J3B4JyxoZWlnaHQ6J3B4JyxyZWY6
J3N0cmluZycsY29sb3Jfc2NoZW1lOidzdHJpbmcnfTtmdW5jdGlvbiB2KGNhLGRh
LGVhKXtpZihkYXx8ZGE9PT0wKWNhLnN0eWxlLndpZHRoPWRhKydweCc7aWYoZWF8
fGVhPT09MCljYS5zdHlsZS5oZWlnaHQ9ZWErJ3B4Jzt9ZnVuY3Rpb24gdyhjYSl7
cmV0dXJuIGZ1bmN0aW9uKGRhKXt2YXIgZWE9e3dpZHRoOmRhLndpZHRoLGhlaWdo
dDpkYS5oZWlnaHQscGx1Z2luSUQ6Y2F9O2ouZmlyZSgneGZibWwucmVzaXplJyxl
YSk7fTt9dmFyIHg9e3N0cmluZzpmdW5jdGlvbihjYSl7cmV0dXJuIGNhO30sYm9v
bDpmdW5jdGlvbihjYSl7cmV0dXJuIGNhPygvXig/OnRydWV8MXx5ZXN8b24pJC9p
KS50ZXN0KGNhKTp1bmRlZmluZWQ7fSx1cmw6ZnVuY3Rpb24oY2Epe3JldHVybiBw
KGNhKTt9LHVybF9tYXliZTpmdW5jdGlvbihjYSl7cmV0dXJuIGNhP3AoY2EpOmNh
O30saG9zdG5hbWU6ZnVuY3Rpb24oY2Epe3JldHVybiBjYXx8d2luZG93LmxvY2F0
aW9uLmhvc3RuYW1lO30scHg6ZnVuY3Rpb24oY2Epe3JldHVybiAoL14oXGQrKSg/
OnB4KT8kLykudGVzdChjYSk/cGFyc2VJbnQoUmVnRXhwLiQxLDEwKTp1bmRlZmlu
ZWQ7fSx0ZXh0OmZ1bmN0aW9uKGNhKXtyZXR1cm4gY2E7fX07ZnVuY3Rpb24geShj
YSxkYSl7dmFyIGVhPWNhW2RhXXx8Y2FbZGEucmVwbGFjZSgvXy9nLCctJyldfHxj
YVtkYS5yZXBsYWNlKC9fL2csJycpXXx8Y2FbJ2RhdGEtJytkYV18fGNhWydkYXRh
LScrZGEucmVwbGFjZSgvXy9nLCctJyldfHxjYVsnZGF0YS0nK2RhLnJlcGxhY2Uo
L18vZywnJyldfHx1bmRlZmluZWQ7cmV0dXJuIGVhO31mdW5jdGlvbiB6KGNhLGRh
LGVhLGZhKXtFUzUoRVM1KCdPYmplY3QnLCdrZXlzJyxmYWxzZSxjYSksJ2ZvckVh
Y2gnLHRydWUsZnVuY3Rpb24oZ2Epe2lmKGNhW2dhXT09J3RleHQnJiYhZWFbZ2Fd
KXtlYVtnYV09ZGEudGV4dENvbnRlbnR8fGRhLmlubmVyVGV4dHx8Jyc7ZGEuc2V0
QXR0cmlidXRlKGdhLGVhW2dhXSk7fWZhW2dhXT14W2NhW2dhXV0oeShlYSxnYSkp
O30pO31mdW5jdGlvbiBhYShjYSl7cmV0dXJuIGNhfHxjYT09PScwJ3x8Y2E9PT0w
P3BhcnNlSW50KGNhLDEwKTp1bmRlZmluZWQ7fXZhciBiYT1yLmV4dGVuZCh7Y29u
c3RydWN0b3I6ZnVuY3Rpb24oY2EsZGEsZWEsZmEpe3RoaXMucGFyZW50KCk7ZWE9
ZWEucmVwbGFjZSgvLS9nLCdfJyk7dmFyIGdhPXkoZmEsJ3BsdWdpbl9pZCcpO3Ro
aXMuc3Vic2NyaWJlKCd4ZC5yZXNpemUnLHcoZ2EpKTt0aGlzLnN1YnNjcmliZSgn
eGQucmVzaXplLmZsb3cnLHcoZ2EpKTt0aGlzLnN1YnNjcmliZSgneGQucmVzaXpl
LmZsb3cnLEVTNShmdW5jdGlvbihuYSl7dih0aGlzLl9jb25maWcucm9vdCxhYShu
YS53aWR0aCksYWEobmEuaGVpZ2h0KSk7dGhpcy51cGRhdGVMaWZ0KCk7Y2xlYXJU
aW1lb3V0KHRoaXMuX3RpbWVvdXRJRCk7fSwnYmluZCcsdHJ1ZSx0aGlzKSk7dGhp
cy5zdWJzY3JpYmUoJ3hkLnJlc2l6ZScsRVM1KGZ1bmN0aW9uKG5hKXt2KHRoaXMu
X2NvbmZpZy5yb290LGFhKG5hLndpZHRoKSxhYShuYS5oZWlnaHQpKTt2KHRoaXMu
X2lmcmFtZSxhYShuYS53aWR0aCksYWEobmEuaGVpZ2h0KSk7dGhpcy51cGRhdGVM
aWZ0KCk7Y2xlYXJUaW1lb3V0KHRoaXMuX3RpbWVvdXRJRCk7fSwnYmluZCcsdHJ1
ZSx0aGlzKSk7dGhpcy5zdWJzY3JpYmUoJ3hkLnJlc2l6ZS5pZnJhbWUnLEVTNShm
dW5jdGlvbihuYSl7dih0aGlzLl9pZnJhbWUsYWEobmEud2lkdGgpLGFhKG5hLmhl
aWdodCkpO3RoaXMudXBkYXRlTGlmdCgpO2NsZWFyVGltZW91dCh0aGlzLl90aW1l
b3V0SUQpO30sJ2JpbmQnLHRydWUsdGhpcykpO3ZhciBoYT1xLmdldFNlY3VyZSgp
fHx3aW5kb3cubG9jYXRpb24ucHJvdG9jb2w9PSdodHRwczonLGlhPXMucmVzb2x2
ZSgnd3d3JyxoYSkrJy9wbHVnaW5zLycrZWErJy5waHA/JyxqYT17fTt6KHRoaXMu
Z2V0UGFyYW1zKCksY2EsZmEsamEpO3oodSxjYSxmYSxqYSk7amEuYXBwX2lkPXEu
Z2V0Q2xpZW50SUQoKTtqYS5sb2NhbGU9cS5nZXRMb2NhbGUoKTtqYS5zZGs9J2pv
ZXknO3ZhciBrYT1FUzUoZnVuY3Rpb24obmEpe3RoaXMuaW5mb3JtKCd4ZC4nK25h
LnR5cGUsbmEpO30sJ2JpbmQnLHRydWUsdGhpcyk7amEuY2hhbm5lbD10LmhhbmRs
ZXIoa2EsJ3BhcmVudC5wYXJlbnQnLHRydWUpO2kuYWRkQ3NzKGNhLCdmYl9pZnJh
bWVfd2lkZ2V0Jyk7dmFyIGxhPWsoKTt0aGlzLnN1YnNjcmliZSgneGQudmVyaWZ5
JyxmdW5jdGlvbihuYSl7dC5zZW5kVG9GYWNlYm9vayhsYSx7bWV0aG9kOid4ZC92
ZXJpZnknLHBhcmFtczpFUzUoJ0pTT04nLCdzdHJpbmdpZnknLGZhbHNlLG5hLnRv
a2VuKX0pO30pO3RoaXMuc3Vic2NyaWJlKCd4ZC5yZWZyZXNoTG9naW5TdGF0dXMn
LEVTNShnLmdldExvZ2luU3RhdHVzLCdiaW5kJyx0cnVlLGcsRVM1KHRoaXMuaW5m
b3JtLCdiaW5kJyx0cnVlLHRoaXMsJ2xvZ2luLnN0YXR1cycpLHRydWUpKTt2YXIg
bWE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO21hLnN0eWxlLndpZHRo
PScwcHgnO21hLnN0eWxlLmhlaWdodD0nMHB4Jzt0aGlzLl9lbGVtZW50PWNhO3Ro
aXMuX25zPWRhO3RoaXMuX3RhZz1lYTt0aGlzLl9wYXJhbXM9amE7dGhpcy5fY29u
ZmlnPXtyb290Om1hLHVybDppYStvLmVuY29kZShqYSksbmFtZTpsYSx3aWR0aDpq
YS53aWR0aHx8MTAwMCxoZWlnaHQ6amEuaGVpZ2h0fHwxMDAwLG9ubG9hZDpFUzUo
ZnVuY3Rpb24oKXt0aGlzLmluZm9ybSgncmVuZGVyJyk7fSwnYmluZCcsdHJ1ZSx0
aGlzKX07fSxwcm9jZXNzOmZ1bmN0aW9uKCl7dGhpcy5fZWxlbWVudC5pbm5lckhU
TUw9Jyc7dGhpcy5fZWxlbWVudC5hcHBlbmRDaGlsZCh0aGlzLl9jb25maWcucm9v
dCk7dGhpcy5fdGltZW91dElEPXNldFRpbWVvdXQoRVM1KGZ1bmN0aW9uKCl7dGhp
cy5faWZyYW1lJiZ2KHRoaXMuX2lmcmFtZSwwLDApO2wud2FybignJXM6JXMgZmFp
bGVkIHRvIHJlc2l6ZSBpbiA0NXMnLHRoaXMuX25zLHRoaXMuX3RhZyk7fSwnYmlu
ZCcsdHJ1ZSx0aGlzKSw0NSoxMDAwKTtpZighbi5hZGQodGhpcykpdGhpcy5faWZy
YW1lPWgodGhpcy5fY29uZmlnKTt9LHVwZGF0ZUxpZnQ6ZnVuY3Rpb24oKXt2YXIg
Y2E9dGhpcy5faWZyYW1lLnN0eWxlLndpZHRoPT09dGhpcy5fY29uZmlnLnJvb3Qu
c3R5bGUud2lkdGgmJnRoaXMuX2lmcmFtZS5zdHlsZS5oZWlnaHQ9PT10aGlzLl9j
b25maWcucm9vdC5zdHlsZS5oZWlnaHQ7aVtjYT8ncmVtb3ZlQ3NzJzonYWRkQ3Nz
J10odGhpcy5faWZyYW1lLCdmYl9pZnJhbWVfd2lkZ2V0X2xpZnQnKTt9fSxtKTti
YS5nZXRWYWw9eTtiYS53aXRoUGFyYW1zPWZ1bmN0aW9uKGNhKXtyZXR1cm4gYmEu
ZXh0ZW5kKHtnZXRQYXJhbXM6ZnVuY3Rpb24oKXtyZXR1cm4gY2E7fX0pO307ZS5l
eHBvcnRzPWJhO30pOwpfX2QoIlBsdWdpblRhZ3MiLFtdLGZ1bmN0aW9uKGEsYixj
LGQsZSxmKXt2YXIgZz17YWN0aXZpdHk6e2JvcmRlcl9jb2xvcjonc3RyaW5nJyxm
aWx0ZXI6J3N0cmluZycsYWN0aW9uOidzdHJpbmcnLG1heF9hZ2U6J3N0cmluZycs
bGlua3RhcmdldDonc3RyaW5nJyxoZWFkZXI6J2Jvb2wnLHJlY29tbWVuZGF0aW9u
czonYm9vbCcsc2l0ZTonaG9zdG5hbWUnfSxjcmVhdGVfZXZlbnRfYnV0dG9uOnt9
LGRlZ3JlZXM6e2hyZWY6J3VybCcsbGltaXRfcHJvZmlsZV92aXNpYmlsaXR5Oidi
b29sJ30sZmFjZXBpbGU6e2hyZWY6J3N0cmluZycsYWN0aW9uOidzdHJpbmcnLHNp
emU6J3N0cmluZycsbWF4X3Jvd3M6J3N0cmluZycsc2hvd19jb3VudDonYm9vbCd9
LGZyaWVuZHBpbGU6e2hyZWY6J3N0cmluZycsYWN0aW9uOidzdHJpbmcnLHNpemU6
J3N0cmluZycsbWF4X3Jvd3M6J3N0cmluZyd9LGZvbGxvdzp7aHJlZjondXJsJyxs
YXlvdXQ6J3N0cmluZycsc2hvd19mYWNlczonYm9vbCd9LG9wZW5fZ3JhcGg6e2hy
ZWY6J3VybCcsbGF5b3V0OidzdHJpbmcnLHNob3dfZmFjZXM6J2Jvb2wnLGFjdGlv
bl90eXBlOidzdHJpbmcnLGFjdGlvbl9wcm9wZXJ0aWVzOidzdHJpbmcnfSxvcGVu
X2dyYXBoX3ByZXZpZXc6e2hyZWY6J3VybCcsYWN0aW9uX3R5cGU6J3N0cmluZycs
YWN0aW9uX3Byb3BlcnRpZXM6J3N0cmluZyd9LHBhZ2VfZXZlbnRzOntocmVmOid1
cmwnfSxwcml2YWN5X3NlbGVjdG9yOnt9LHJlY29tbWVuZGF0aW9uczp7Ym9yZGVy
X2NvbG9yOidzdHJpbmcnLGZpbHRlcjonc3RyaW5nJyxhY3Rpb246J3N0cmluZycs
bWF4X2FnZTonc3RyaW5nJyxsaW5rdGFyZ2V0OidzdHJpbmcnLGhlYWRlcjonYm9v
bCcsc2l0ZTonaG9zdG5hbWUnfSxzaGFyZV9idXR0b246e2hyZWY6J3VybCcsdHlw
ZTonc3RyaW5nJ30sc2hhcmVkX2FjdGl2aXR5OntoZWFkZXI6J2Jvb2wnfSxzZW5k
X3RvX21vYmlsZTp7bWF4X3Jvd3M6J3N0cmluZycsc2hvd19mYWNlczonYm9vbCcs
c2l6ZTonc3RyaW5nJ30sc3Vic2NyaWJlOntocmVmOid1cmwnLGxheW91dDonc3Ry
aW5nJyxzaG93X2ZhY2VzOidib29sJ30sd2FudDp7aHJlZjondXJsJyxsYXlvdXQ6
J3N0cmluZycsc2hvd19mYWNlczonYm9vbCd9fTtlLmV4cG9ydHM9Zzt9KTsKX19k
KCJzZGsuQXJiaXRlciIsW10sZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnPXtC
RUhBVklPUl9FVkVOVDonZScsQkVIQVZJT1JfUEVSU0lTVEVOVDoncCcsQkVIQVZJ
T1JfU1RBVEU6J3MnfTtlLmV4cG9ydHM9Zzt9KTsKX19kKCJzZGsuWEZCTUwuRWxl
bWVudCIsWyJzZGsuRE9NIiwiVHlwZSIsIk9ic2VydmFibGVNaXhpbiJdLGZ1bmN0
aW9uKGEsYixjLGQsZSxmKXt2YXIgZz1iKCdzZGsuRE9NJyksaD1iKCdUeXBlJyks
aT1iKCdPYnNlcnZhYmxlTWl4aW4nKSxqPWguZXh0ZW5kKHtjb25zdHJ1Y3Rvcjpm
dW5jdGlvbihrKXt0aGlzLnBhcmVudCgpO3RoaXMuZG9tPWs7fSxmaXJlOmZ1bmN0
aW9uKCl7dGhpcy5pbmZvcm0uYXBwbHkodGhpcyxhcmd1bWVudHMpO30sZ2V0QXR0
cmlidXRlOmZ1bmN0aW9uKGssbCxtKXt2YXIgbj1nLmdldEF0dHIodGhpcy5kb20s
ayk7cmV0dXJuIG4/bT9tKG4pOm46bDt9LF9nZXRCb29sQXR0cmlidXRlOmZ1bmN0
aW9uKGssbCl7dmFyIG09Zy5nZXRCb29sQXR0cih0aGlzLmRvbSxrKTtyZXR1cm4g
bT09PW51bGw/bDptO30sX2dldFB4QXR0cmlidXRlOmZ1bmN0aW9uKGssbCl7cmV0
dXJuIHRoaXMuZ2V0QXR0cmlidXRlKGssbCxmdW5jdGlvbihtKXt2YXIgbj1wYXJz
ZUludChtLnJlcGxhY2UoJ3B4JywnJyksMTApO2lmKGlzTmFOKG4pKXtyZXR1cm4g
bDt9ZWxzZSByZXR1cm4gbjt9KTt9LF9nZXRBdHRyaWJ1dGVGcm9tTGlzdDpmdW5j
dGlvbihrLGwsbSl7cmV0dXJuIHRoaXMuZ2V0QXR0cmlidXRlKGssbCxmdW5jdGlv
bihuKXtuPW4udG9Mb3dlckNhc2UoKTtyZXR1cm4gKEVTNShtLCdpbmRleE9mJyx0
cnVlLG4pPi0xKT9uOmw7fSk7fSxpc1ZhbGlkOmZ1bmN0aW9uKCl7Zm9yKHZhciBr
PXRoaXMuZG9tO2s7az1rLnBhcmVudE5vZGUpaWYoaz09ZG9jdW1lbnQuYm9keSly
ZXR1cm4gdHJ1ZTt9LGNsZWFyOmZ1bmN0aW9uKCl7Zy5odG1sKHRoaXMuZG9tLCcn
KTt9fSxpKTtlLmV4cG9ydHM9ajt9KTsKX19kKCJzZGsuWEZCTUwuSWZyYW1lV2lk
Z2V0IixbInNkay5BcmJpdGVyIiwic2RrLkF1dGgiLCJzZGsuQ29udGVudCIsImNv
cHlQcm9wZXJ0aWVzIiwic2RrLkRPTSIsInNkay5FdmVudCIsInNkay5YRkJNTC5F
bGVtZW50IiwiZ3VpZCIsImluc2VydElmcmFtZSIsIlF1ZXJ5U3RyaW5nIiwic2Rr
LlJ1bnRpbWUiLCJzZGsudWkiLCJVcmxNYXAiLCJzZGsuWEQiXSxmdW5jdGlvbihh
LGIsYyxkLGUsZil7dmFyIGc9Yignc2RrLkFyYml0ZXInKSxoPWIoJ3Nkay5BdXRo
JyksaT1iKCdzZGsuQ29udGVudCcpLGo9YignY29weVByb3BlcnRpZXMnKSxrPWIo
J3Nkay5ET00nKSxsPWIoJ3Nkay5FdmVudCcpLG09Yignc2RrLlhGQk1MLkVsZW1l
bnQnKSxuPWIoJ2d1aWQnKSxvPWIoJ2luc2VydElmcmFtZScpLHA9YignUXVlcnlT
dHJpbmcnKSxxPWIoJ3Nkay5SdW50aW1lJykscj1iKCdzZGsudWknKSxzPWIoJ1Vy
bE1hcCcpLHQ9Yignc2RrLlhEJyksdT1tLmV4dGVuZCh7X2lmcmFtZU5hbWU6bnVs
bCxfc2hvd0xvYWRlcjp0cnVlLF9yZWZyZXNoT25BdXRoQ2hhbmdlOmZhbHNlLF9h
bGxvd1JlUHJvY2VzczpmYWxzZSxfZmV0Y2hQcmVDYWNoZWRMb2FkZXI6ZmFsc2Us
X3Zpc2libGVBZnRlcjonbG9hZCcsX3dpZGdldFBpcGVFbmFibGVkOmZhbHNlLF9i
b3JkZXJSZXNldDpmYWxzZSxfcmVwb3NpdGlvbmVkOmZhbHNlLGdldFVybEJpdHM6
ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoJ0luaGVyaXRpbmcgY2xhc3MgbmVl
ZHMgdG8gaW1wbGVtZW50IGdldFVybEJpdHMoKS4nKTt9LHNldHVwQW5kVmFsaWRh
dGU6ZnVuY3Rpb24oKXtyZXR1cm4gdHJ1ZTt9LG9uZVRpbWVTZXR1cDpmdW5jdGlv
bigpe30sZ2V0U2l6ZTpmdW5jdGlvbigpe30sZ2V0SWZyYW1lTmFtZTpmdW5jdGlv
bigpe3JldHVybiB0aGlzLl9pZnJhbWVOYW1lO30sZ2V0SWZyYW1lVGl0bGU6ZnVu
Y3Rpb24oKXt9LGdldENoYW5uZWxVcmw6ZnVuY3Rpb24oKXtpZighdGhpcy5fY2hh
bm5lbFVybCl7dmFyIGFhPXRoaXM7dGhpcy5fY2hhbm5lbFVybD10LmhhbmRsZXIo
ZnVuY3Rpb24oYmEpe2FhLmZpcmUoJ3hkLicrYmEudHlwZSxiYSk7fSwncGFyZW50
LnBhcmVudCcsdHJ1ZSk7fXJldHVybiB0aGlzLl9jaGFubmVsVXJsO30sZ2V0SWZy
YW1lTm9kZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmRvbS5nZXRFbGVtZW50c0J5
VGFnTmFtZSgnaWZyYW1lJylbMF07fSxhcmJpdGVySW5mb3JtOmZ1bmN0aW9uKGV2
ZW50LGFhLGJhKXt0LnNlbmRUb0ZhY2Vib29rKHRoaXMuZ2V0SWZyYW1lTmFtZSgp
LHttZXRob2Q6ZXZlbnQscGFyYW1zOkVTNSgnSlNPTicsJ3N0cmluZ2lmeScsZmFs
c2UsYWF8fHt9KSxiZWhhdmlvcjpiYXx8Zy5CRUhBVklPUl9QRVJTSVNURU5UfSk7
fSxfYXJiaXRlckluZm9ybTpmdW5jdGlvbihldmVudCxhYSxiYSl7dmFyIGNhPSdw
YXJlbnQuZnJhbWVzWyInK3RoaXMuZ2V0SWZyYW1lTm9kZSgpLm5hbWUrJyJdJzt0
LmluZm9ybShldmVudCxhYSxjYSxiYSk7fSxnZXREZWZhdWx0V2ViRG9tYWluOmZ1
bmN0aW9uKCl7cmV0dXJuIHMucmVzb2x2ZSgnd3d3Jyk7fSxwcm9jZXNzOmZ1bmN0
aW9uKGFhKXtpZih0aGlzLl9kb25lKXtpZighdGhpcy5fYWxsb3dSZVByb2Nlc3Mm
JiFhYSlyZXR1cm47dGhpcy5jbGVhcigpO31lbHNlIHRoaXMuX29uZVRpbWVTZXR1
cCgpO3RoaXMuX2RvbmU9dHJ1ZTt0aGlzLl9pZnJhbWVOYW1lPXRoaXMuZ2V0SWZy
YW1lTmFtZSgpfHx0aGlzLl9pZnJhbWVOYW1lfHxuKCk7aWYoIXRoaXMuc2V0dXBB
bmRWYWxpZGF0ZSgpKXt0aGlzLmZpcmUoJ3JlbmRlcicpO3JldHVybjt9aWYodGhp
cy5fc2hvd0xvYWRlcil0aGlzLl9hZGRMb2FkZXIoKTtrLmFkZENzcyh0aGlzLmRv
bSwnZmJfaWZyYW1lX3dpZGdldCcpO2lmKHRoaXMuX3Zpc2libGVBZnRlciE9J2lt
bWVkaWF0ZScpe2suYWRkQ3NzKHRoaXMuZG9tLCdmYl9oaWRlX2lmcmFtZXMnKTt9
ZWxzZSB0aGlzLnN1YnNjcmliZSgnaWZyYW1lLm9ubG9hZCcsRVM1KHRoaXMuZmly
ZSwnYmluZCcsdHJ1ZSx0aGlzLCdyZW5kZXInKSk7dmFyIGJhPXRoaXMuZ2V0U2l6
ZSgpfHx7fSxjYT10aGlzLmdldEZ1bGx5UXVhbGlmaWVkVVJMKCk7aWYoYmEud2lk
dGg9PScxMDAlJylrLmFkZENzcyh0aGlzLmRvbSwnZmJfaWZyYW1lX3dpZGdldF9m
bHVpZCcpO3RoaXMuY2xlYXIoKTtvKHt1cmw6Y2Escm9vdDp0aGlzLmRvbS5hcHBl
bmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJykpLG5hbWU6dGhp
cy5faWZyYW1lTmFtZSx0aXRsZTp0aGlzLmdldElmcmFtZVRpdGxlKCksY2xhc3NO
YW1lOnEuZ2V0UnRsKCk/J2ZiX3J0bCc6J2ZiX2x0cicsaGVpZ2h0OmJhLmhlaWdo
dCx3aWR0aDpiYS53aWR0aCxvbmxvYWQ6RVM1KHRoaXMuZmlyZSwnYmluZCcsdHJ1
ZSx0aGlzLCdpZnJhbWUub25sb2FkJyl9KTt0aGlzLl9yZXNpemVGbG93KGJhKTt0
aGlzLmxvYWRlZD1mYWxzZTt0aGlzLnN1YnNjcmliZSgnaWZyYW1lLm9ubG9hZCcs
RVM1KGZ1bmN0aW9uKCl7dGhpcy5sb2FkZWQ9dHJ1ZTt9LCdiaW5kJyx0cnVlLHRo
aXMpKTt9LGdlbmVyYXRlV2lkZ2V0UGlwZUlmcmFtZU5hbWU6ZnVuY3Rpb24oKXt2
Kys7cmV0dXJuICdmYl9pZnJhbWVfJyt2O30sZ2V0RnVsbHlRdWFsaWZpZWRVUkw6
ZnVuY3Rpb24oKXt2YXIgYWE9dGhpcy5fZ2V0VVJMKCk7YWErPSc/JytwLmVuY29k
ZSh0aGlzLl9nZXRRUygpKTtpZihhYS5sZW5ndGg+MjAwMCl7YWE9J2Fib3V0OmJs
YW5rJzt2YXIgYmE9RVM1KGZ1bmN0aW9uKCl7dGhpcy5fcG9zdFJlcXVlc3QoKTt0
aGlzLnVuc3Vic2NyaWJlKCdpZnJhbWUub25sb2FkJyxiYSk7fSwnYmluZCcsdHJ1
ZSx0aGlzKTt0aGlzLnN1YnNjcmliZSgnaWZyYW1lLm9ubG9hZCcsYmEpO31yZXR1
cm4gYWE7fSxfZ2V0V2lkZ2V0UGlwZVNoZWxsOmZ1bmN0aW9uKCl7cmV0dXJuIHMu
cmVzb2x2ZSgnd3d3JykrJy9jb21tb24vd2lkZ2V0X3BpcGVfc2hlbGwucGhwJzt9
LF9vbmVUaW1lU2V0dXA6ZnVuY3Rpb24oKXt0aGlzLnN1YnNjcmliZSgneGQucmVz
aXplJyxFUzUodGhpcy5faGFuZGxlUmVzaXplTXNnLCdiaW5kJyx0cnVlLHRoaXMp
KTt0aGlzLnN1YnNjcmliZSgneGQucmVzaXplJyxFUzUodGhpcy5fYnViYmxlUmVz
aXplRXZlbnQsJ2JpbmQnLHRydWUsdGhpcykpO3RoaXMuc3Vic2NyaWJlKCd4ZC5y
ZXNpemUuaWZyYW1lJyxFUzUodGhpcy5fcmVzaXplSWZyYW1lLCdiaW5kJyx0cnVl
LHRoaXMpKTt0aGlzLnN1YnNjcmliZSgneGQucmVzaXplLmZsb3cnLEVTNSh0aGlz
Ll9yZXNpemVGbG93LCdiaW5kJyx0cnVlLHRoaXMpKTt0aGlzLnN1YnNjcmliZSgn
eGQucmVzaXplLmZsb3cnLEVTNSh0aGlzLl9idWJibGVSZXNpemVFdmVudCwnYmlu
ZCcsdHJ1ZSx0aGlzKSk7dGhpcy5zdWJzY3JpYmUoJ3hkLnJlZnJlc2hMb2dpblN0
YXR1cycsZnVuY3Rpb24oKXtoLmdldExvZ2luU3RhdHVzKGZ1bmN0aW9uKCl7fSx0
cnVlKTt9KTt0aGlzLnN1YnNjcmliZSgneGQubG9nb3V0JyxmdW5jdGlvbigpe3Io
e21ldGhvZDonYXV0aC5sb2dvdXQnLGRpc3BsYXk6J2hpZGRlbid9LGZ1bmN0aW9u
KCl7fSk7fSk7aWYodGhpcy5fcmVmcmVzaE9uQXV0aENoYW5nZSl0aGlzLl9zZXR1
cEF1dGhSZWZyZXNoKCk7aWYodGhpcy5fdmlzaWJsZUFmdGVyPT0nbG9hZCcpdGhp
cy5zdWJzY3JpYmUoJ2lmcmFtZS5vbmxvYWQnLEVTNSh0aGlzLl9tYWtlVmlzaWJs
ZSwnYmluZCcsdHJ1ZSx0aGlzKSk7dGhpcy5zdWJzY3JpYmUoJ3hkLnZlcmlmeScs
RVM1KGZ1bmN0aW9uKGFhKXt0aGlzLmFyYml0ZXJJbmZvcm0oJ3hkL3ZlcmlmeScs
YWEudG9rZW4pO30sJ2JpbmQnLHRydWUsdGhpcykpO3RoaXMub25lVGltZVNldHVw
KCk7fSxfbWFrZVZpc2libGU6ZnVuY3Rpb24oKXt0aGlzLl9yZW1vdmVMb2FkZXIo
KTtrLnJlbW92ZUNzcyh0aGlzLmRvbSwnZmJfaGlkZV9pZnJhbWVzJyk7dGhpcy5m
aXJlKCdyZW5kZXInKTt9LF9zZXR1cEF1dGhSZWZyZXNoOmZ1bmN0aW9uKCl7aC5n
ZXRMb2dpblN0YXR1cyhFUzUoZnVuY3Rpb24oYWEpe3ZhciBiYT1hYS5zdGF0dXM7
bC5zdWJzY3JpYmUoJ2F1dGguc3RhdHVzQ2hhbmdlJyxFUzUoZnVuY3Rpb24oY2Ep
e2lmKCF0aGlzLmlzVmFsaWQoKSlyZXR1cm47aWYoYmE9PSd1bmtub3duJ3x8Y2Eu
c3RhdHVzPT0ndW5rbm93bicpdGhpcy5wcm9jZXNzKHRydWUpO2JhPWNhLnN0YXR1
czt9LCdiaW5kJyx0cnVlLHRoaXMpKTt9LCdiaW5kJyx0cnVlLHRoaXMpKTt9LF9o
YW5kbGVSZXNpemVNc2c6ZnVuY3Rpb24oYWEpe2lmKCF0aGlzLmlzVmFsaWQoKSly
ZXR1cm47dGhpcy5fcmVzaXplSWZyYW1lKGFhKTt0aGlzLl9yZXNpemVGbG93KGFh
KTtpZighdGhpcy5fYm9yZGVyUmVzZXQpe3RoaXMuZ2V0SWZyYW1lTm9kZSgpLnN0
eWxlLmJvcmRlcj0nbm9uZSc7dGhpcy5fYm9yZGVyUmVzZXQ9dHJ1ZTt9dGhpcy5f
bWFrZVZpc2libGUoKTt9LF9idWJibGVSZXNpemVFdmVudDpmdW5jdGlvbihhYSl7
dmFyIGJhPXtoZWlnaHQ6YWEuaGVpZ2h0LHdpZHRoOmFhLndpZHRoLHBsdWdpbklE
OnRoaXMuZ2V0QXR0cmlidXRlKCdwbHVnaW4taWQnKX07bC5maXJlKCd4ZmJtbC5y
ZXNpemUnLGJhKTt9LF9yZXNpemVJZnJhbWU6ZnVuY3Rpb24oYWEpe3ZhciBiYT10
aGlzLmdldElmcmFtZU5vZGUoKTtpZihhYS5yZXBvc2l0aW9uPT09InRydWUiKXRo
aXMuX3JlcG9zaXRpb25JZnJhbWUoYWEpO2FhLmhlaWdodCYmKGJhLnN0eWxlLmhl
aWdodD1hYS5oZWlnaHQrJ3B4Jyk7YWEud2lkdGgmJihiYS5zdHlsZS53aWR0aD1h
YS53aWR0aCsncHgnKTt0aGlzLl91cGRhdGVJZnJhbWVaSW5kZXgoKTt9LF9yZXNp
emVGbG93OmZ1bmN0aW9uKGFhKXt2YXIgYmE9dGhpcy5kb20uZ2V0RWxlbWVudHNC
eVRhZ05hbWUoJ3NwYW4nKVswXTthYS5oZWlnaHQmJihiYS5zdHlsZS5oZWlnaHQ9
YWEuaGVpZ2h0KydweCcpO2FhLndpZHRoJiYoYmEuc3R5bGUud2lkdGg9YWEud2lk
dGgrJ3B4Jyk7dGhpcy5fdXBkYXRlSWZyYW1lWkluZGV4KCk7fSxfdXBkYXRlSWZy
YW1lWkluZGV4OmZ1bmN0aW9uKCl7dmFyIGFhPXRoaXMuZG9tLmdldEVsZW1lbnRz
QnlUYWdOYW1lKCdzcGFuJylbMF0sYmE9dGhpcy5nZXRJZnJhbWVOb2RlKCksY2E9
YmEuc3R5bGUuaGVpZ2h0PT09YWEuc3R5bGUuaGVpZ2h0JiZiYS5zdHlsZS53aWR0
aD09PWFhLnN0eWxlLndpZHRoLGRhPWNhPydyZW1vdmVDc3MnOidhZGRDc3MnO2tb
ZGFdKGJhLCdmYl9pZnJhbWVfd2lkZ2V0X2xpZnQnKTt9LF9yZXBvc2l0aW9uSWZy
YW1lOmZ1bmN0aW9uKGFhKXt2YXIgYmE9dGhpcy5nZXRJZnJhbWVOb2RlKCksY2E9
cGFyc2VJbnQoay5nZXRTdHlsZShiYSwnd2lkdGgnKSwxMCksZGE9ay5nZXRQb3Np
dGlvbihiYSkueCxlYT1rLmdldFZpZXdwb3J0SW5mbygpLndpZHRoLGZhPXBhcnNl
SW50KGFhLndpZHRoLDEwKTtpZihkYStmYT5lYSYmZGE+ZmEpe2JhLnN0eWxlLmxl
ZnQ9Y2EtZmErJ3B4Jzt0aGlzLmFyYml0ZXJJbmZvcm0oJ3hkL3JlcG9zaXRpb24n
LHt0eXBlOidob3Jpem9udGFsJ30pO3RoaXMuX3JlcG9zaXRpb25lZD10cnVlO31l
bHNlIGlmKHRoaXMuX3JlcG9zaXRpb25lZCl7YmEuc3R5bGUubGVmdD0nMHB4Jzt0
aGlzLmFyYml0ZXJJbmZvcm0oJ3hkL3JlcG9zaXRpb24nLHt0eXBlOidyZXN0b3Jl
J30pO3RoaXMuX3JlcG9zaXRpb25lZD1mYWxzZTt9fSxfYWRkTG9hZGVyOmZ1bmN0
aW9uKCl7aWYoIXRoaXMuX2xvYWRlckRpdil7ay5hZGRDc3ModGhpcy5kb20sJ2Zi
X2lmcmFtZV93aWRnZXRfbG9hZGVyJyk7dGhpcy5fbG9hZGVyRGl2PWRvY3VtZW50
LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO3RoaXMuX2xvYWRlckRpdi5jbGFzc05hbWU9
J0ZCX0xvYWRlcic7dGhpcy5kb20uYXBwZW5kQ2hpbGQodGhpcy5fbG9hZGVyRGl2
KTt9fSxfcmVtb3ZlTG9hZGVyOmZ1bmN0aW9uKCl7aWYodGhpcy5fbG9hZGVyRGl2
KXtrLnJlbW92ZUNzcyh0aGlzLmRvbSwnZmJfaWZyYW1lX3dpZGdldF9sb2FkZXIn
KTtpZih0aGlzLl9sb2FkZXJEaXYucGFyZW50Tm9kZSl0aGlzLl9sb2FkZXJEaXYu
cGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLl9sb2FkZXJEaXYpO3RoaXMuX2xv
YWRlckRpdj1udWxsO319LF9nZXRRUzpmdW5jdGlvbigpe3JldHVybiBqKHthcGlf
a2V5OnEuZ2V0Q2xpZW50SUQoKSxsb2NhbGU6cS5nZXRMb2NhbGUoKSxzZGs6J2pv
ZXknLHJlZjp0aGlzLmdldEF0dHJpYnV0ZSgncmVmJyl9LHRoaXMuZ2V0VXJsQml0
cygpLnBhcmFtcyk7fSxfZ2V0VVJMOmZ1bmN0aW9uKCl7dmFyIGFhPXRoaXMuZ2V0
RGVmYXVsdFdlYkRvbWFpbigpLGJhPScnO3JldHVybiBhYSsnL3BsdWdpbnMvJyti
YSt0aGlzLmdldFVybEJpdHMoKS5uYW1lKycucGhwJzt9LF9wb3N0UmVxdWVzdDpm
dW5jdGlvbigpe2kuc3VibWl0VG9UYXJnZXQoe3VybDp0aGlzLl9nZXRVUkwoKSx0
YXJnZXQ6dGhpcy5nZXRJZnJhbWVOb2RlKCkubmFtZSxwYXJhbXM6dGhpcy5fZ2V0
UVMoKX0pO319KSx2PTAsdz1udWxsLHg9e307ZnVuY3Rpb24geSgpe3ZhciBhYT17
fTtmb3IodmFyIGJhIGluIHgpe3ZhciBjYT14W2JhXTthYVtiYV09e3dpZGdldDpj
YS5nZXRVcmxCaXRzKCkubmFtZSxwYXJhbXM6Y2EuX2dldFFTKCl9O31yZXR1cm4g
YWE7fWZ1bmN0aW9uIHooKXtpZighdylyZXR1cm47dmFyIGFhPXkoKSxiYT17d2lk
Z2V0X3BpcGU6RVM1KCdKU09OJywnc3RyaW5naWZ5JyxmYWxzZSxhYSksaHJlZjp3
aW5kb3cubG9jYXRpb24sc2l0ZTpsb2NhdGlvbi5ob3N0bmFtZSxjaGFubmVsOncu
Z2V0Q2hhbm5lbFVybCgpLGFwaV9rZXk6cS5nZXRDbGllbnRJRCgpLGxvY2FsZTpx
LmdldExvY2FsZSgpLHNkazonam9leSd9LGNhPW4oKSxkYT13LmRvbSxlYT1kYS5h
cHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJykpO28oe3Vy
bDonYWJvdXQ6YmxhbmsnLHJvb3Q6ZWEsbmFtZTpjYSxjbGFzc05hbWU6J2ZiX2hp
ZGRlbiBmYl9pbnZpc2libGUnLG9ubG9hZDpmdW5jdGlvbigpe2kuc3VibWl0VG9U
YXJnZXQoe3VybDpzLnJlc29sdmUoJ3d3dycpKydwbHVnaW5zL3BpcGUvJyx0YXJn
ZXQ6Y2EscGFyYW1zOmJhfSwxKTt9fSk7fWUuZXhwb3J0cz11O30pOwpfX2QoInNk
ay5YRkJNTC5Db21tZW50cyIsWyJzZGsuRXZlbnQiLCJzZGsuWEZCTUwuSWZyYW1l
V2lkZ2V0IiwiUXVlcnlTdHJpbmciLCJzZGsuUnVudGltZSIsIlVybE1hcCIsIlVz
ZXJBZ2VudCIsIlNES0NvbmZpZyJdLGZ1bmN0aW9uKGEsYixjLGQsZSxmKXt2YXIg
Zz1iKCdzZGsuRXZlbnQnKSxoPWIoJ3Nkay5YRkJNTC5JZnJhbWVXaWRnZXQnKSxp
PWIoJ1F1ZXJ5U3RyaW5nJyksaj1iKCdzZGsuUnVudGltZScpLGs9YygnU0RLQ29u
ZmlnJyksbD1iKCdVcmxNYXAnKSxtPWIoJ1VzZXJBZ2VudCcpLG49aC5leHRlbmQo
e192aXNpYmxlQWZ0ZXI6J2ltbWVkaWF0ZScsX3JlZnJlc2hPbkF1dGhDaGFuZ2U6
dHJ1ZSxzZXR1cEFuZFZhbGlkYXRlOmZ1bmN0aW9uKCl7dmFyIG89e2NoYW5uZWxf
dXJsOnRoaXMuZ2V0Q2hhbm5lbFVybCgpLGNvbG9yc2NoZW1lOnRoaXMuZ2V0QXR0
cmlidXRlKCdjb2xvcnNjaGVtZScpLG51bXBvc3RzOnRoaXMuZ2V0QXR0cmlidXRl
KCdudW0tcG9zdHMnLDEwKSx3aWR0aDp0aGlzLl9nZXRQeEF0dHJpYnV0ZSgnd2lk
dGgnLDU1MCksaHJlZjp0aGlzLmdldEF0dHJpYnV0ZSgnaHJlZicpLHBlcm1hbGlu
azp0aGlzLmdldEF0dHJpYnV0ZSgncGVybWFsaW5rJykscHVibGlzaF9mZWVkOnRo
aXMuZ2V0QXR0cmlidXRlKCdwdWJsaXNoX2ZlZWQnKSxvcmRlcl9ieTp0aGlzLmdl
dEF0dHJpYnV0ZSgnb3JkZXJfYnknKSxtb2JpbGU6dGhpcy5fZ2V0Qm9vbEF0dHJp
YnV0ZSgnbW9iaWxlJyl9O2lmKGsuaW5pdFNpdGV2YXJzLmVuYWJsZU1vYmlsZUNv
bW1lbnRzJiZtLm1vYmlsZSgpJiZvLm1vYmlsZSE9PWZhbHNlKXtvLm1vYmlsZT10
cnVlO2RlbGV0ZSBvLndpZHRoO31pZighby5ocmVmKXtvLm1pZ3JhdGVkPXRoaXMu
Z2V0QXR0cmlidXRlKCdtaWdyYXRlZCcpO28ueGlkPXRoaXMuZ2V0QXR0cmlidXRl
KCd4aWQnKTtvLnRpdGxlPXRoaXMuZ2V0QXR0cmlidXRlKCd0aXRsZScsZG9jdW1l
bnQudGl0bGUpO28udXJsPXRoaXMuZ2V0QXR0cmlidXRlKCd1cmwnLGRvY3VtZW50
LlVSTCk7by5xdWlldD10aGlzLmdldEF0dHJpYnV0ZSgncXVpZXQnKTtvLnJldmVy
c2U9dGhpcy5nZXRBdHRyaWJ1dGUoJ3JldmVyc2UnKTtvLnNpbXBsZT10aGlzLmdl
dEF0dHJpYnV0ZSgnc2ltcGxlJyk7by5jc3M9dGhpcy5nZXRBdHRyaWJ1dGUoJ2Nz
cycpO28ubm90aWZ5PXRoaXMuZ2V0QXR0cmlidXRlKCdub3RpZnknKTtpZighby54
aWQpe3ZhciBwPUVTNShkb2N1bWVudC5VUkwsJ2luZGV4T2YnLHRydWUsJyMnKTtp
ZihwPjApe28ueGlkPWVuY29kZVVSSUNvbXBvbmVudChkb2N1bWVudC5VUkwuc3Vi
c3RyaW5nKDAscCkpO31lbHNlIG8ueGlkPWVuY29kZVVSSUNvbXBvbmVudChkb2N1
bWVudC5VUkwpO31pZihvLm1pZ3JhdGVkKW8uaHJlZj1sLnJlc29sdmUoJ3d3dycp
KycvcGx1Z2lucy9jb21tZW50c192MS5waHA/JysnYXBwX2lkPScrai5nZXRDbGll
bnRJRCgpKycmeGlkPScrZW5jb2RlVVJJQ29tcG9uZW50KG8ueGlkKSsnJnVybD0n
K2VuY29kZVVSSUNvbXBvbmVudChvLnVybCk7fWVsc2V7dmFyIHE9dGhpcy5nZXRB
dHRyaWJ1dGUoJ2ZiX2NvbW1lbnRfaWQnKTtpZighcSl7cT1pLmRlY29kZShkb2N1
bWVudC5VUkwuc3Vic3RyaW5nKEVTNShkb2N1bWVudC5VUkwsJ2luZGV4T2YnLHRy
dWUsJz8nKSsxKSkuZmJfY29tbWVudF9pZDtpZihxJiZFUzUocSwnaW5kZXhPZics
dHJ1ZSwnIycpPjApcT1xLnN1YnN0cmluZygwLEVTNShxLCdpbmRleE9mJyx0cnVl
LCcjJykpO31pZihxKXtvLmZiX2NvbW1lbnRfaWQ9cTt0aGlzLnN1YnNjcmliZSgn
cmVuZGVyJyxFUzUoZnVuY3Rpb24oKXtpZighd2luZG93LmxvY2F0aW9uLmhhc2gp
d2luZG93LmxvY2F0aW9uLmhhc2g9dGhpcy5nZXRJZnJhbWVOb2RlKCkuaWQ7fSwn
YmluZCcsdHJ1ZSx0aGlzKSk7fX10aGlzLl9hdHRyPW87cmV0dXJuIHRydWU7fSxv
bmVUaW1lU2V0dXA6ZnVuY3Rpb24oKXt0aGlzLnN1YnNjcmliZSgneGQuYWRkQ29t
bWVudCcsRVM1KHRoaXMuX2hhbmRsZUNvbW1lbnRNc2csJ2JpbmQnLHRydWUsdGhp
cykpO3RoaXMuc3Vic2NyaWJlKCd4ZC5jb21tZW50Q3JlYXRlZCcsRVM1KHRoaXMu
X2hhbmRsZUNvbW1lbnRDcmVhdGVkTXNnLCdiaW5kJyx0cnVlLHRoaXMpKTt0aGlz
LnN1YnNjcmliZSgneGQuY29tbWVudFJlbW92ZWQnLEVTNSh0aGlzLl9oYW5kbGVD
b21tZW50UmVtb3ZlZE1zZywnYmluZCcsdHJ1ZSx0aGlzKSk7fSxnZXRTaXplOmZ1
bmN0aW9uKCl7aWYodGhpcy5fYXR0ci5tb2JpbGUpcmV0dXJuIHt3aWR0aDonMTAw
JScsaGVpZ2h0OjE2MH07cmV0dXJuIHt3aWR0aDp0aGlzLl9hdHRyLndpZHRoLGhl
aWdodDoxNjB9O30sZ2V0VXJsQml0czpmdW5jdGlvbigpe3JldHVybiB7bmFtZTon
Y29tbWVudHMnLHBhcmFtczp0aGlzLl9hdHRyfTt9LGdldERlZmF1bHRXZWJEb21h
aW46ZnVuY3Rpb24oKXtyZXR1cm4gbC5yZXNvbHZlKHRoaXMuX2F0dHIubW9iaWxl
PydtJzond3d3Jyx0cnVlKTt9LF9oYW5kbGVDb21tZW50TXNnOmZ1bmN0aW9uKG8p
e2lmKCF0aGlzLmlzVmFsaWQoKSlyZXR1cm47Zy5maXJlKCdjb21tZW50cy5hZGQn
LHtwb3N0Om8ucG9zdCx1c2VyOm8udXNlcix3aWRnZXQ6dGhpc30pO30sX2hhbmRs
ZUNvbW1lbnRDcmVhdGVkTXNnOmZ1bmN0aW9uKG8pe2lmKCF0aGlzLmlzVmFsaWQo
KSlyZXR1cm47dmFyIHA9e2hyZWY6by5ocmVmLGNvbW1lbnRJRDpvLmNvbW1lbnRJ
RCxwYXJlbnRDb21tZW50SUQ6by5wYXJlbnRDb21tZW50SUR9O2cuZmlyZSgnY29t
bWVudC5jcmVhdGUnLHApO30sX2hhbmRsZUNvbW1lbnRSZW1vdmVkTXNnOmZ1bmN0
aW9uKG8pe2lmKCF0aGlzLmlzVmFsaWQoKSlyZXR1cm47dmFyIHA9e2hyZWY6by5o
cmVmLGNvbW1lbnRJRDpvLmNvbW1lbnRJRH07Zy5maXJlKCdjb21tZW50LnJlbW92
ZScscCk7fX0pO2UuZXhwb3J0cz1uO30pOwpfX2QoInNkay5YRkJNTC5Db21tZW50
c0NvdW50IixbInNkay5EYXRhIiwic2RrLkRPTSIsInNkay5YRkJNTC5FbGVtZW50
Iiwic3ByaW50ZiJdLGZ1bmN0aW9uKGEsYixjLGQsZSxmKXt2YXIgZz1iKCdzZGsu
RGF0YScpLGg9Yignc2RrLkRPTScpLGk9Yignc2RrLlhGQk1MLkVsZW1lbnQnKSxq
PWIoJ3NwcmludGYnKSxrPWkuZXh0ZW5kKHtwcm9jZXNzOmZ1bmN0aW9uKCl7aC5h
ZGRDc3ModGhpcy5kb20sJ2ZiX2NvbW1lbnRzX2NvdW50X3plcm8nKTt2YXIgbD10
aGlzLmdldEF0dHJpYnV0ZSgnaHJlZicsd2luZG93LmxvY2F0aW9uLmhyZWYpO2cu
X3NlbGVjdEJ5SW5kZXgoWydjb21tZW50c2JveF9jb3VudCddLCdsaW5rX3N0YXQn
LCd1cmwnLGwpLndhaXQoRVM1KGZ1bmN0aW9uKG0pe3ZhciBuPW1bMF0uY29tbWVu
dHNib3hfY291bnQ7aC5odG1sKHRoaXMuZG9tLGooJzxzcGFuIGNsYXNzPSJmYl9j
b21tZW50c19jb3VudCI+JXM8L3NwYW4+JyxuKSk7aWYobj4wKWgucmVtb3ZlQ3Nz
KHRoaXMuZG9tLCdmYl9jb21tZW50c19jb3VudF96ZXJvJyk7dGhpcy5maXJlKCdy
ZW5kZXInKTt9LCdiaW5kJyx0cnVlLHRoaXMpKTt9fSk7ZS5leHBvcnRzPWs7fSk7
Cl9fZCgic2RrLkFuaW0iLFsic2RrLkRPTSJdLGZ1bmN0aW9uKGEsYixjLGQsZSxm
KXt2YXIgZz1iKCdzZGsuRE9NJyksaD17YXRlOmZ1bmN0aW9uKGksaixrLGwpe2s9
IWlzTmFOKHBhcnNlRmxvYXQoaykpJiZrPj0wP2s6NzUwO3ZhciBtPTQwLG49e30s
bz17fSxwPW51bGwscT1zZXRJbnRlcnZhbChFUzUoZnVuY3Rpb24oKXtpZighcClw
PUVTNSgnRGF0ZScsJ25vdycsZmFsc2UpO3ZhciByPTE7aWYoayE9MClyPU1hdGgu
bWluKChFUzUoJ0RhdGUnLCdub3cnLGZhbHNlKS1wKS9rLDEpO2Zvcih2YXIgcyBp
biBqKWlmKGouaGFzT3duUHJvcGVydHkocykpe3ZhciB0PWpbc107aWYoIW5bc10p
e3ZhciB1PWcuZ2V0U3R5bGUoaSxzKTtpZih1PT09ZmFsc2UpcmV0dXJuO25bc109
dGhpcy5fcGFyc2VDU1ModSsnJyk7fWlmKCFvW3NdKW9bc109dGhpcy5fcGFyc2VD
U1ModC50b1N0cmluZygpKTt2YXIgdj0nJztFUzUobltzXSwnZm9yRWFjaCcsdHJ1
ZSxmdW5jdGlvbih3LHgpe2lmKGlzTmFOKG9bc11beF0ubnVtUGFydCkmJm9bc11b
eF0udGV4dFBhcnQ9PSc/Jyl7dj13Lm51bVBhcnQrdy50ZXh0UGFydDt9ZWxzZSBp
Zihpc05hTih3Lm51bVBhcnQpKXt2PXcudGV4dFBhcnQ7fWVsc2Ugdis9KHcubnVt
UGFydCtNYXRoLmNlaWwoKG9bc11beF0ubnVtUGFydC13Lm51bVBhcnQpKk1hdGgu
c2luKE1hdGguUEkvMipyKSkpK29bc11beF0udGV4dFBhcnQrJyAnO30pO2cuc2V0
U3R5bGUoaSxzLHYpO31pZihyPT0xKXtjbGVhckludGVydmFsKHEpO2lmKGwpbChp
KTt9fSwnYmluZCcsdHJ1ZSx0aGlzKSxtKTt9LF9wYXJzZUNTUzpmdW5jdGlvbihp
KXt2YXIgaj1bXTtFUzUoaS5zcGxpdCgnICcpLCdmb3JFYWNoJyx0cnVlLGZ1bmN0
aW9uKGspe3ZhciBsPXBhcnNlSW50KGssMTApO2oucHVzaCh7bnVtUGFydDpsLHRl
eHRQYXJ0OmsucmVwbGFjZShsLCcnKX0pO30pO3JldHVybiBqO319O2UuZXhwb3J0
cz1oO30pOwpfX2QoImVzY2FwZUhUTUwiLFtdLGZ1bmN0aW9uKGEsYixjLGQsZSxm
KXt2YXIgZz0vWyY8PiInXC9dL2csaD17JyYnOicmYW1wOycsJzwnOicmbHQ7Jywn
Pic6JyZndDsnLCciJzonJnF1b3Q7JywiJyI6JyYjMDM5OycsJy8nOicmI3gyRjsn
fTtmdW5jdGlvbiBpKGope3JldHVybiBqLnJlcGxhY2UoZyxmdW5jdGlvbihrKXty
ZXR1cm4gaFtrXTt9KTt9ZS5leHBvcnRzPWk7fSk7Cl9fZCgic2RrLkhlbHBlciIs
WyJzZGsuRXJyb3JIYW5kbGluZyIsInNkay5FdmVudCIsInNhZmVFdmFsIiwiVXJs
TWFwIl0sZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnPWIoJ3Nkay5FcnJvckhh
bmRsaW5nJyksaD1iKCdzZGsuRXZlbnQnKSxpPWIoJ3NhZmVFdmFsJyksaj1iKCdV
cmxNYXAnKSxrPXtpc1VzZXI6ZnVuY3Rpb24obCl7cmV0dXJuIGw8Mi4yZSswOXx8
KGw+PTFlKzE0JiZsPD0xMDAwOTk5OTk5ODk5OTkpfHwobD49OC45ZSsxMyYmbDw9
ODk5OTk5OTk5OTk5OTkpO30sdXBwZXJDYXNlRmlyc3RDaGFyOmZ1bmN0aW9uKGwp
e2lmKGwubGVuZ3RoPjApe3JldHVybiBsLnN1YnN0cigwLDEpLnRvVXBwZXJDYXNl
KCkrbC5zdWJzdHIoMSk7fWVsc2UgcmV0dXJuIGw7fSxnZXRQcm9maWxlTGluazpm
dW5jdGlvbihsLG0sbil7bj1ufHwobD9qLnJlc29sdmUoJ3d3dycpKycvcHJvZmls
ZS5waHA/aWQ9JytsLnVpZDpudWxsKTtpZihuKW09JzxhIGNsYXNzPSJmYl9saW5r
IiBocmVmPSInK24rJyI+JyttKyc8L2E+JztyZXR1cm4gbTt9LGludm9rZUhhbmRs
ZXI6ZnVuY3Rpb24obCxtLG4pe2lmKGwpaWYodHlwZW9mIGw9PT0nc3RyaW5nJyl7
Zy51bmd1YXJkKGkpKGwsbik7fWVsc2UgaWYobC5hcHBseSlnLnVuZ3VhcmQobCku
YXBwbHkobSxufHxbXSk7fSxmaXJlRXZlbnQ6ZnVuY3Rpb24obCxtKXt2YXIgbj1t
Ll9hdHRyLmhyZWY7bS5maXJlKGwsbik7aC5maXJlKGwsbixtKTt9LGV4ZWN1dGVG
dW5jdGlvbkJ5TmFtZTpmdW5jdGlvbihsKXt2YXIgbT1BcnJheS5wcm90b3R5cGUu
c2xpY2UuY2FsbChhcmd1bWVudHMsMSksbj1sLnNwbGl0KCIuIiksbz1uLnBvcCgp
LHA9d2luZG93O2Zvcih2YXIgcT0wO3E8bi5sZW5ndGg7cSsrKXA9cFtuW3FdXTty
ZXR1cm4gcFtvXS5hcHBseSh0aGlzLG0pO319O2UuZXhwb3J0cz1rO30pOwpfX2Qo
InNkay5YRkJNTC5Db25uZWN0QmFyIixbInNkay5BbmltIiwic2RrLmFwaSIsInNk
ay5BdXRoIiwiY3JlYXRlQXJyYXlGcm9tIiwic2RrLkRhdGEiLCJzZGsuRE9NIiwi
c2RrLlhGQk1MLkVsZW1lbnQiLCJlc2NhcGVIVE1MIiwic2RrLkV2ZW50IiwiZm9y
bWF0Iiwic2RrLkhlbHBlciIsInNkay5JbnNpZ2h0cyIsInNkay5JbnRsIiwic2Rr
LlJ1bnRpbWUiLCJVcmxNYXAiLCJVc2VyQWdlbnQiLCJDb25uZWN0QmFyQ29uZmln
Il0sZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnPWIoJ3Nkay5BbmltJyksaD1i
KCdzZGsuYXBpJyksaT1iKCdzZGsuQXV0aCcpLGo9YignY3JlYXRlQXJyYXlGcm9t
Jyksaz1jKCdDb25uZWN0QmFyQ29uZmlnJyksbD1iKCdzZGsuRGF0YScpLG09Yign
c2RrLkRPTScpLG49Yignc2RrLlhGQk1MLkVsZW1lbnQnKSxvPWIoJ2VzY2FwZUhU
TUwnKSxwPWIoJ3Nkay5FdmVudCcpLHE9YignZm9ybWF0Jykscj1iKCdzZGsuSGVs
cGVyJykscz1iKCdzZGsuSW5zaWdodHMnKSx0PWIoJ3Nkay5JbnRsJyksdT1iKCdz
ZGsuUnVudGltZScpLHY9YignVXJsTWFwJyksdz1iKCdVc2VyQWdlbnQnKSx4PW4u
ZXh0ZW5kKHtfaW5pdGlhbEhlaWdodDpudWxsLF9pbml0VG9wTWFyZ2luOjAsX3Bp
Y0ZpZWxkTmFtZToncGljX3NxdWFyZScsX3BhZ2U6bnVsbCxfZGlzcGxheWVkOmZh
bHNlLF9ub3REaXNwbGF5ZWQ6ZmFsc2UsX2NvbnRhaW5lcjpudWxsLF9hbmltYXRp
b25TcGVlZDowLHByb2Nlc3M6ZnVuY3Rpb24oKXtpLmdldExvZ2luU3RhdHVzKEVT
NShmdW5jdGlvbih5KXtwLm1vbml0b3IoJ2F1dGguc3RhdHVzQ2hhbmdlJyxFUzUo
ZnVuY3Rpb24oKXtpZih0aGlzLmlzVmFsaWQoKSYmdS5nZXRMb2dpblN0YXR1cygp
PT0nY29ubmVjdGVkJyl7dGhpcy5fdWlkPXUuZ2V0VXNlcklEKCk7aCh7bWV0aG9k
OidDb25uZWN0LnNob3VsZFNob3dDb25uZWN0QmFyJ30sRVM1KGZ1bmN0aW9uKHop
e2lmKHohPTIpe3RoaXMuX2FuaW1hdGlvblNwZWVkPSh6PT0wKT83NTA6MDt0aGlz
Ll9zaG93QmFyKCk7fWVsc2UgdGhpcy5fbm9SZW5kZXIoKTt9LCdiaW5kJyx0cnVl
LHRoaXMpKTt9ZWxzZSB0aGlzLl9ub1JlbmRlcigpO3JldHVybiBmYWxzZTt9LCdi
aW5kJyx0cnVlLHRoaXMpKTt9LCdiaW5kJyx0cnVlLHRoaXMpKTt9LF9zaG93QmFy
OmZ1bmN0aW9uKCl7dmFyIHk9bC5fc2VsZWN0QnlJbmRleChbJ2ZpcnN0X25hbWUn
LCdwcm9maWxlX3VybCcsdGhpcy5fcGljRmllbGROYW1lXSwndXNlcicsJ3VpZCcs
dGhpcy5fdWlkKSx6PWwuX3NlbGVjdEJ5SW5kZXgoWydkaXNwbGF5X25hbWUnXSwn
YXBwbGljYXRpb24nLCdhcGlfa2V5Jyx1LmdldENsaWVudElEKCkpO2wud2FpdE9u
KFt5LHpdLEVTNShmdW5jdGlvbihhYSl7YWFbMF1bMF0uc2l0ZV9uYW1lPWFhWzFd
WzBdLmRpc3BsYXlfbmFtZTtpZighdGhpcy5fZGlzcGxheWVkKXt0aGlzLl9kaXNw
bGF5ZWQ9dHJ1ZTt0aGlzLl9ub3REaXNwbGF5ZWQ9ZmFsc2U7dGhpcy5fcmVuZGVy
Q29ubmVjdEJhcihhYVswXVswXSk7dGhpcy5maXJlKCdyZW5kZXInKTtzLmltcHJl
c3Npb24oe2xpZDoxMDQsbmFtZTond2lkZ2V0X2xvYWQnfSk7dGhpcy5maXJlKCdj
b25uZWN0YmFyLm9uZGlzcGxheScpO3AuZmlyZSgnY29ubmVjdGJhci5vbmRpc3Bs
YXknLHRoaXMpO3IuaW52b2tlSGFuZGxlcih0aGlzLmdldEF0dHJpYnV0ZSgnb24t
ZGlzcGxheScpLHRoaXMpO319LCdiaW5kJyx0cnVlLHRoaXMpKTt9LF9ub1JlbmRl
cjpmdW5jdGlvbigpe2lmKHRoaXMuX2Rpc3BsYXllZCl7dGhpcy5fZGlzcGxheWVk
PWZhbHNlO3RoaXMuX2Nsb3NlQ29ubmVjdEJhcigpO31pZighdGhpcy5fbm90RGlz
cGxheWVkKXt0aGlzLl9ub3REaXNwbGF5ZWQ9dHJ1ZTt0aGlzLmZpcmUoJ3JlbmRl
cicpO3RoaXMuZmlyZSgnY29ubmVjdGJhci5vbm5vdGRpc3BsYXknKTtwLmZpcmUo
J2Nvbm5lY3RiYXIub25ub3RkaXNwbGF5Jyx0aGlzKTtyLmludm9rZUhhbmRsZXIo
dGhpcy5nZXRBdHRyaWJ1dGUoJ29uLW5vdC1kaXNwbGF5JyksdGhpcyk7fX0sX3Jl
bmRlckNvbm5lY3RCYXI6ZnVuY3Rpb24oeSl7dmFyIHo9ZG9jdW1lbnQuY3JlYXRl
RWxlbWVudCgnZGl2JyksYWE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7
ei5jbGFzc05hbWU9J2ZiX2Nvbm5lY3RfYmFyJzthYS5jbGFzc05hbWU9J2ZiX3Jl
c2V0IGZiX2Nvbm5lY3RfYmFyX2NvbnRhaW5lcic7YWEuYXBwZW5kQ2hpbGQoeik7
ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhYSk7dGhpcy5fY29udGFpbmVyPWFh
O3RoaXMuX2luaXRpYWxIZWlnaHQ9TWF0aC5yb3VuZChwYXJzZUZsb2F0KG0uZ2V0
U3R5bGUoYWEsJ2hlaWdodCcpKStwYXJzZUZsb2F0KG0uZ2V0U3R5bGUoYWEsJ2Jv
cmRlckJvdHRvbVdpZHRoJykpKTttLmh0bWwoeixxKCc8ZGl2IGNsYXNzPSJmYl9i
dXR0b25zIj4nKyc8YSBocmVmPSIjIiBjbGFzcz0iZmJfYmFyX2Nsb3NlIj4nKyc8
aW1nIHNyYz0iezF9IiBhbHQ9InsyfSIgdGl0bGU9InsyfSIvPicrJzwvYT4nKyc8
L2Rpdj4nKyc8YSBocmVmPSJ7N30iIGNsYXNzPSJmYl9wcm9maWxlIiB0YXJnZXQ9
Il9ibGFuayI+JysnPGltZyBzcmM9InszfSIgYWx0PSJ7NH0iIHRpdGxlPSJ7NH0i
Lz4nKyc8L2E+JysnezV9JysnIDxzcGFuPicrJzxhIGhyZWY9Ins4fSIgY2xhc3M9
ImZiX2xlYXJuX21vcmUiIHRhcmdldD0iX2JsYW5rIj57Nn08L2E+ICZuZGFzaDsg
JysnPGEgaHJlZj0iIyIgY2xhc3M9ImZiX25vX3RoYW5rcyI+ezB9PC9hPicrJzwv
c3Bhbj4nLHQudHguXygiTm8gVGhhbmtzIiksdi5yZXNvbHZlKCdmYmNkbicpKycv
JytrLmltZ3MuYnV0dG9uVXJsLHQudHguXygiQ2xvc2UiKSx5W3RoaXMuX3BpY0Zp
ZWxkTmFtZV18fHYucmVzb2x2ZSgnZmJjZG4nKSsnLycray5pbWdzLm1pc3NpbmdQ
cm9maWxlVXJsLG8oeS5maXJzdF9uYW1lKSx0LnR4Ll8oIkhpIHtmaXJzdE5hbWV9
LiBcdTAwM0NzdHJvbmc+e3NpdGVOYW1lfVx1MDAzQ1wvc3Ryb25nPiBpcyB1c2lu
ZyBGYWNlYm9vayB0byBwZXJzb25hbGl6ZSB5b3VyIGV4cGVyaWVuY2UuIix7Zmly
c3ROYW1lOm8oeS5maXJzdF9uYW1lKSxzaXRlTmFtZTpvKHkuc2l0ZV9uYW1lKX0p
LHQudHguXygiTGVhcm4gTW9yZSIpLHkucHJvZmlsZV91cmwsdi5yZXNvbHZlKCd3
d3cnKSsnL3NpdGV0b3VyL2Nvbm5lY3QucGhwJykpO0VTNShqKHouZ2V0RWxlbWVu
dHNCeVRhZ05hbWUoJ2EnKSksJ2ZvckVhY2gnLHRydWUsZnVuY3Rpb24oZGEpe2Rh
Lm9uY2xpY2s9RVM1KHRoaXMuX2NsaWNrSGFuZGxlciwnYmluZCcsdHJ1ZSx0aGlz
KTt9LHRoaXMpO3RoaXMuX3BhZ2U9ZG9jdW1lbnQuYm9keTt2YXIgYmE9MDtpZih0
aGlzLl9wYWdlLnBhcmVudE5vZGUpe2JhPU1hdGgucm91bmQoKHBhcnNlRmxvYXQo
bS5nZXRTdHlsZSh0aGlzLl9wYWdlLnBhcmVudE5vZGUsJ2hlaWdodCcpKS1wYXJz
ZUZsb2F0KG0uZ2V0U3R5bGUodGhpcy5fcGFnZSwnaGVpZ2h0JykpKS8yKTt9ZWxz
ZSBiYT1wYXJzZUludChtLmdldFN0eWxlKHRoaXMuX3BhZ2UsJ21hcmdpblRvcCcp
LDEwKTtiYT1pc05hTihiYSk/MDpiYTt0aGlzLl9pbml0VG9wTWFyZ2luPWJhO2lm
KCF3aW5kb3cuWE1MSHR0cFJlcXVlc3Qpe2FhLmNsYXNzTmFtZSs9IiBmYl9jb25u
ZWN0X2Jhcl9jb250YWluZXJfaWU2Ijt9ZWxzZXthYS5zdHlsZS50b3A9KC0xKnRo
aXMuX2luaXRpYWxIZWlnaHQpKydweCc7Zy5hdGUoYWEse3RvcDonMHB4J30sdGhp
cy5fYW5pbWF0aW9uU3BlZWQpO312YXIgY2E9e21hcmdpblRvcDp0aGlzLl9pbml0
VG9wTWFyZ2luK3RoaXMuX2luaXRpYWxIZWlnaHQrJ3B4J307aWYody5pZSgpKXtj
YS5iYWNrZ3JvdW5kUG9zaXRpb25ZPXRoaXMuX2luaXRpYWxIZWlnaHQrJ3B4Jzt9
ZWxzZSBjYS5iYWNrZ3JvdW5kUG9zaXRpb249Jz8gJyt0aGlzLl9pbml0aWFsSGVp
Z2h0KydweCc7Zy5hdGUodGhpcy5fcGFnZSxjYSx0aGlzLl9hbmltYXRpb25TcGVl
ZCk7fSxfY2xpY2tIYW5kbGVyOmZ1bmN0aW9uKHkpe3k9eXx8d2luZG93LmV2ZW50
O3ZhciB6PXkudGFyZ2V0fHx5LnNyY0VsZW1lbnQ7d2hpbGUoei5ub2RlTmFtZSE9
J0EnKXo9ei5wYXJlbnROb2RlO3N3aXRjaCh6LmNsYXNzTmFtZSl7Y2FzZSAnZmJf
YmFyX2Nsb3NlJzpoKHttZXRob2Q6J0Nvbm5lY3QuY29ubmVjdEJhck1hcmtBY2tu
b3dsZWRnZWQnfSk7cy5pbXByZXNzaW9uKHtsaWQ6MTA0LG5hbWU6J3dpZGdldF91
c2VyX2Nsb3NlZCd9KTt0aGlzLl9jbG9zZUNvbm5lY3RCYXIoKTticmVhaztjYXNl
ICdmYl9sZWFybl9tb3JlJzpjYXNlICdmYl9wcm9maWxlJzp3aW5kb3cub3Blbih6
LmhyZWYpO2JyZWFrO2Nhc2UgJ2ZiX25vX3RoYW5rcyc6dGhpcy5fY2xvc2VDb25u
ZWN0QmFyKCk7aCh7bWV0aG9kOidDb25uZWN0LmNvbm5lY3RCYXJNYXJrQWNrbm93
bGVkZ2VkJ30pO3MuaW1wcmVzc2lvbih7bGlkOjEwNCxuYW1lOid3aWRnZXRfdXNl
cl9ub190aGFua3MnfSk7aCh7bWV0aG9kOidhdXRoLnJldm9rZUF1dGhvcml6YXRp
b24nLGJsb2NrOnRydWV9LEVTNShmdW5jdGlvbigpe3RoaXMuZmlyZSgnY29ubmVj
dGJhci5vbmRlYXV0aCcpO3AuZmlyZSgnY29ubmVjdGJhci5vbmRlYXV0aCcsdGhp
cyk7ci5pbnZva2VIYW5kbGVyKHRoaXMuZ2V0QXR0cmlidXRlKCdvbi1kZWF1dGgn
KSx0aGlzKTtpZih0aGlzLl9nZXRCb29sQXR0cmlidXRlKCdhdXRvLXJlZnJlc2gn
LHRydWUpKXdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTt9LCdiaW5kJyx0cnVlLHRo
aXMpKTticmVhazt9cmV0dXJuIGZhbHNlO30sX2Nsb3NlQ29ubmVjdEJhcjpmdW5j
dGlvbigpe3RoaXMuX25vdERpc3BsYXllZD10cnVlO3ZhciB5PXttYXJnaW5Ub3A6
dGhpcy5faW5pdFRvcE1hcmdpbisncHgnfTtpZih3LmllKCkpe3kuYmFja2dyb3Vu
ZFBvc2l0aW9uWT0nMHB4Jzt9ZWxzZSB5LmJhY2tncm91bmRQb3NpdGlvbj0nPyAw
cHgnO3ZhciB6PSh0aGlzLl9hbmltYXRpb25TcGVlZD09MCk/MDozMDA7Zy5hdGUo
dGhpcy5fcGFnZSx5LHopO2cuYXRlKHRoaXMuX2NvbnRhaW5lcix7dG9wOigtMSp0
aGlzLl9pbml0aWFsSGVpZ2h0KSsncHgnfSx6LGZ1bmN0aW9uKGFhKXthYS5wYXJl
bnROb2RlLnJlbW92ZUNoaWxkKGFhKTt9KTt0aGlzLmZpcmUoJ2Nvbm5lY3RiYXIu
b25jbG9zZScpO3AuZmlyZSgnY29ubmVjdGJhci5vbmNsb3NlJyx0aGlzKTtyLmlu
dm9rZUhhbmRsZXIodGhpcy5nZXRBdHRyaWJ1dGUoJ29uLWNsb3NlJyksdGhpcyk7
fX0pO2UuZXhwb3J0cz14O30pOwpfX2QoInNkay5YRkJNTC5FZGdlQ29tbWVudFdp
ZGdldCIsWyJzZGsuWEZCTUwuSWZyYW1lV2lkZ2V0Iiwic2RrLkRPTSJdLGZ1bmN0
aW9uKGEsYixjLGQsZSxmKXt2YXIgZz1iKCdzZGsuWEZCTUwuSWZyYW1lV2lkZ2V0
JyksaD1iKCdzZGsuRE9NJyksaT0xMDAwMCxqPWcuZXh0ZW5kKHtjb25zdHJ1Y3Rv
cjpmdW5jdGlvbihrKXt0aGlzLnBhcmVudChrLmNvbW1lbnROb2RlKTt0aGlzLl9p
ZnJhbWVXaWR0aD1rLndpZHRoKzE7dGhpcy5faWZyYW1lSGVpZ2h0PWsuaGVpZ2h0
O3RoaXMuX2F0dHI9e21hc3Rlcl9mcmFtZV9uYW1lOmsubWFzdGVyRnJhbWVOYW1l
LG9mZnNldFg6ay5yZWxhdGl2ZVdpZHRoT2Zmc2V0LWsucGFkZGluZ0xlZnR9O3Ro
aXMuZG9tPWsuY29tbWVudE5vZGU7dGhpcy5kb20uc3R5bGUudG9wPWsucmVsYXRp
dmVIZWlnaHRPZmZzZXQrJ3B4Jzt0aGlzLmRvbS5zdHlsZS5sZWZ0PWsucmVsYXRp
dmVXaWR0aE9mZnNldCsncHgnO3RoaXMuZG9tLnN0eWxlLnpJbmRleD1pKys7aC5h
ZGRDc3ModGhpcy5kb20sJ2ZiX2VkZ2VfY29tbWVudF93aWRnZXQnKTt9LF92aXNp
YmxlQWZ0ZXI6J2xvYWQnLF9zaG93TG9hZGVyOmZhbHNlLGdldFNpemU6ZnVuY3Rp
b24oKXtyZXR1cm4ge3dpZHRoOnRoaXMuX2lmcmFtZVdpZHRoLGhlaWdodDp0aGlz
Ll9pZnJhbWVIZWlnaHR9O30sZ2V0VXJsQml0czpmdW5jdGlvbigpe3JldHVybiB7
bmFtZTonY29tbWVudF93aWRnZXRfc2hlbGwnLHBhcmFtczp0aGlzLl9hdHRyfTt9
fSk7ZS5leHBvcnRzPWo7fSk7Cl9fZCgic2RrLlhGQk1MLkVkZ2VXaWRnZXQiLFsi
c2RrLlhGQk1MLklmcmFtZVdpZGdldCIsInNkay5YRkJNTC5FZGdlQ29tbWVudFdp
ZGdldCIsInNkay5ET00iLCJzZGsuSGVscGVyIiwic2RrLlJ1bnRpbWUiXSxmdW5j
dGlvbihhLGIsYyxkLGUsZil7dmFyIGc9Yignc2RrLlhGQk1MLklmcmFtZVdpZGdl
dCcpLGg9Yignc2RrLlhGQk1MLkVkZ2VDb21tZW50V2lkZ2V0JyksaT1iKCdzZGsu
RE9NJyksaj1iKCdzZGsuSGVscGVyJyksaz1iKCdzZGsuUnVudGltZScpLGw9Zy5l
eHRlbmQoe192aXNpYmxlQWZ0ZXI6J2ltbWVkaWF0ZScsX3Nob3dMb2FkZXI6ZmFs
c2UsX3Jvb3RQYWRkaW5nOm51bGwsc2V0dXBBbmRWYWxpZGF0ZTpmdW5jdGlvbigp
e2kuYWRkQ3NzKHRoaXMuZG9tLCdmYl9lZGdlX3dpZGdldF93aXRoX2NvbW1lbnQn
KTt0aGlzLl9hdHRyPXtjaGFubmVsX3VybDp0aGlzLmdldENoYW5uZWxVcmwoKSxk
ZWJ1Zzp0aGlzLl9nZXRCb29sQXR0cmlidXRlKCdkZWJ1ZycpLGhyZWY6dGhpcy5n
ZXRBdHRyaWJ1dGUoJ2hyZWYnLHdpbmRvdy5sb2NhdGlvbi5ocmVmKSxpc19wZXJt
YWxpbms6dGhpcy5fZ2V0Qm9vbEF0dHJpYnV0ZSgnaXMtcGVybWFsaW5rJyksbm9k
ZV90eXBlOnRoaXMuZ2V0QXR0cmlidXRlKCdub2RlLXR5cGUnLCdsaW5rJyksd2lk
dGg6dGhpcy5fZ2V0V2lkZ2V0V2lkdGgoKSxmb250OnRoaXMuZ2V0QXR0cmlidXRl
KCdmb250JyksbGF5b3V0OnRoaXMuX2dldExheW91dCgpLGNvbG9yc2NoZW1lOnRo
aXMuZ2V0QXR0cmlidXRlKCdjb2xvci1zY2hlbWUnLCdsaWdodCcpLGFjdGlvbjp0
aGlzLmdldEF0dHJpYnV0ZSgnYWN0aW9uJykscmVmOnRoaXMuZ2V0QXR0cmlidXRl
KCdyZWYnKSxzaG93X2ZhY2VzOnRoaXMuX3Nob3VsZFNob3dGYWNlcygpLG5vX3Jl
c2l6ZTp0aGlzLl9nZXRCb29sQXR0cmlidXRlKCdub19yZXNpemUnKSxzZW5kOnRo
aXMuX2dldEJvb2xBdHRyaWJ1dGUoJ3NlbmQnKSx1cmxfbWFwOnRoaXMuZ2V0QXR0
cmlidXRlKCd1cmxfbWFwJyksZXh0ZW5kZWRfc29jaWFsX2NvbnRleHQ6dGhpcy5f
Z2V0Qm9vbEF0dHJpYnV0ZSgnZXh0ZW5kZWRfc29jaWFsX2NvbnRleHQnLGZhbHNl
KX07dGhpcy5fcm9vdFBhZGRpbmc9e2xlZnQ6cGFyc2VGbG9hdChpLmdldFN0eWxl
KHRoaXMuZG9tLCdwYWRkaW5nTGVmdCcpKSx0b3A6cGFyc2VGbG9hdChpLmdldFN0
eWxlKHRoaXMuZG9tLCdwYWRkaW5nVG9wJykpfTtyZXR1cm4gdHJ1ZTt9LG9uZVRp
bWVTZXR1cDpmdW5jdGlvbigpe3RoaXMuc3Vic2NyaWJlKCd4ZC5hdXRoUHJvbXB0
ZWQnLEVTNSh0aGlzLl9vbkF1dGhQcm9tcHQsJ2JpbmQnLHRydWUsdGhpcykpO3Ro
aXMuc3Vic2NyaWJlKCd4ZC5lZGdlQ3JlYXRlZCcsRVM1KHRoaXMuX29uRWRnZUNy
ZWF0ZSwnYmluZCcsdHJ1ZSx0aGlzKSk7dGhpcy5zdWJzY3JpYmUoJ3hkLmVkZ2VS
ZW1vdmVkJyxFUzUodGhpcy5fb25FZGdlUmVtb3ZlLCdiaW5kJyx0cnVlLHRoaXMp
KTt0aGlzLnN1YnNjcmliZSgneGQucHJlc2VudEVkZ2VDb21tZW50RGlhbG9nJyxF
UzUodGhpcy5faGFuZGxlRWRnZUNvbW1lbnREaWFsb2dQcmVzZW50YXRpb24sJ2Jp
bmQnLHRydWUsdGhpcykpO3RoaXMuc3Vic2NyaWJlKCd4ZC5kaXNtaXNzRWRnZUNv
bW1lbnREaWFsb2cnLEVTNSh0aGlzLl9oYW5kbGVFZGdlQ29tbWVudERpYWxvZ0Rp
c21pc3NhbCwnYmluZCcsdHJ1ZSx0aGlzKSk7dGhpcy5zdWJzY3JpYmUoJ3hkLmhp
ZGVFZGdlQ29tbWVudERpYWxvZycsRVM1KHRoaXMuX2hhbmRsZUVkZ2VDb21tZW50
RGlhbG9nSGlkZSwnYmluZCcsdHJ1ZSx0aGlzKSk7dGhpcy5zdWJzY3JpYmUoJ3hk
LnNob3dFZGdlQ29tbWVudERpYWxvZycsRVM1KHRoaXMuX2hhbmRsZUVkZ2VDb21t
ZW50RGlhbG9nU2hvdywnYmluZCcsdHJ1ZSx0aGlzKSk7fSxnZXRTaXplOmZ1bmN0
aW9uKCl7cmV0dXJuIHt3aWR0aDp0aGlzLl9nZXRXaWRnZXRXaWR0aCgpLGhlaWdo
dDp0aGlzLl9nZXRXaWRnZXRIZWlnaHQoKX07fSxfZ2V0V2lkZ2V0SGVpZ2h0OmZ1
bmN0aW9uKCl7dmFyIG09dGhpcy5fZ2V0TGF5b3V0KCksbj10aGlzLl9zaG91bGRT
aG93RmFjZXMoKT8nc2hvdyc6J2hpZGUnLG89dGhpcy5fZ2V0Qm9vbEF0dHJpYnV0
ZSgnc2VuZCcpLHA9NjUrKG8/MjU6MCkscT17c3RhbmRhcmQ6e3Nob3c6ODAsaGlk
ZTozNX0sYm94X2NvdW50OntzaG93OnAsaGlkZTpwfSxidXR0b25fY291bnQ6e3No
b3c6MjEsaGlkZToyMX0sc2ltcGxlOntzaG93OjIwLGhpZGU6MjB9fTtyZXR1cm4g
cVttXVtuXTt9LF9nZXRXaWRnZXRXaWR0aDpmdW5jdGlvbigpe3ZhciBtPXRoaXMu
X2dldExheW91dCgpLG49dGhpcy5fZ2V0Qm9vbEF0dHJpYnV0ZSgnc2VuZCcpLG89
dGhpcy5fc2hvdWxkU2hvd0ZhY2VzKCk/J3Nob3cnOidoaWRlJyxwPSh0aGlzLmdl
dEF0dHJpYnV0ZSgnYWN0aW9uJyk9PT0ncmVjb21tZW5kJykscT0ocD8yNjU6MjI1
KSsobj82MDowKSxyPShwPzEzMDo5MCkrKG4/NjA6MCkscz10aGlzLmdldEF0dHJp
YnV0ZSgnYWN0aW9uJyk9PT0ncmVjb21tZW5kJz8xMDA6NTUsdD10aGlzLmdldEF0
dHJpYnV0ZSgnYWN0aW9uJyk9PT0ncmVjb21tZW5kJz85MDo1MCx1PXtzdGFuZGFy
ZDp7c2hvdzo0NTAsaGlkZTo0NTB9LGJveF9jb3VudDp7c2hvdzpzLGhpZGU6c30s
YnV0dG9uX2NvdW50OntzaG93OnIsaGlkZTpyfSxzaW1wbGU6e3Nob3c6dCxoaWRl
OnR9fSx2PXVbbV1bb10sdz10aGlzLl9nZXRQeEF0dHJpYnV0ZSgnd2lkdGgnLHYp
LHg9e3N0YW5kYXJkOnttaW46cSxtYXg6OTAwfSxib3hfY291bnQ6e21pbjpzLG1h
eDo5MDB9LGJ1dHRvbl9jb3VudDp7bWluOnIsbWF4OjkwMH0sc2ltcGxlOnttaW46
NDksbWF4OjkwMH19O2lmKHc8eFttXS5taW4pe3c9eFttXS5taW47fWVsc2UgaWYo
dz54W21dLm1heCl3PXhbbV0ubWF4O3JldHVybiB3O30sX2dldExheW91dDpmdW5j
dGlvbigpe3JldHVybiB0aGlzLl9nZXRBdHRyaWJ1dGVGcm9tTGlzdCgnbGF5b3V0
Jywnc3RhbmRhcmQnLFsnc3RhbmRhcmQnLCdidXR0b25fY291bnQnLCdib3hfY291
bnQnLCdzaW1wbGUnXSk7fSxfc2hvdWxkU2hvd0ZhY2VzOmZ1bmN0aW9uKCl7cmV0
dXJuIHRoaXMuX2dldExheW91dCgpPT09J3N0YW5kYXJkJyYmdGhpcy5fZ2V0Qm9v
bEF0dHJpYnV0ZSgnc2hvdy1mYWNlcycsdHJ1ZSk7fSxfaGFuZGxlRWRnZUNvbW1l
bnREaWFsb2dQcmVzZW50YXRpb246ZnVuY3Rpb24obSl7aWYoIXRoaXMuaXNWYWxp
ZCgpKXJldHVybjt2YXIgbj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7
dGhpcy5fY29tbWVudFNsYXZlPXRoaXMuX2NyZWF0ZUVkZ2VDb21tZW50V2lkZ2V0
KG0sbik7dGhpcy5kb20uYXBwZW5kQ2hpbGQobik7dGhpcy5fY29tbWVudFNsYXZl
LnByb2Nlc3MoKTt0aGlzLl9jb21tZW50V2lkZ2V0Tm9kZT1uO30sX2NyZWF0ZUVk
Z2VDb21tZW50V2lkZ2V0OmZ1bmN0aW9uKG0sbil7dmFyIG89e2NvbW1lbnROb2Rl
Om4sZXh0ZXJuYWxVcmw6bS5leHRlcm5hbFVSTCxtYXN0ZXJGcmFtZU5hbWU6bS5t
YXN0ZXJGcmFtZU5hbWUsbGF5b3V0OnRoaXMuX2dldExheW91dCgpLHJlbGF0aXZl
SGVpZ2h0T2Zmc2V0OnRoaXMuX2dldEhlaWdodE9mZnNldChtKSxyZWxhdGl2ZVdp
ZHRoT2Zmc2V0OnRoaXMuX2dldFdpZHRoT2Zmc2V0KG0pLGFuY2hvclRhcmdldFg6
cGFyc2VGbG9hdChtWydxdWVyeVthbmNob3JUYXJnZXRYXSddKSt0aGlzLl9yb290
UGFkZGluZy5sZWZ0LGFuY2hvclRhcmdldFk6cGFyc2VGbG9hdChtWydxdWVyeVth
bmNob3JUYXJnZXRZXSddKSt0aGlzLl9yb290UGFkZGluZy50b3Asd2lkdGg6cGFy
c2VGbG9hdChtLndpZHRoKSxoZWlnaHQ6cGFyc2VGbG9hdChtLmhlaWdodCkscGFk
ZGluZ0xlZnQ6dGhpcy5fcm9vdFBhZGRpbmcubGVmdH07cmV0dXJuIG5ldyBoKG8p
O30sX2dldEhlaWdodE9mZnNldDpmdW5jdGlvbihtKXtyZXR1cm4gcGFyc2VGbG9h
dChtWydhbmNob3JHZW9tZXRyeVt5XSddKStwYXJzZUZsb2F0KG1bJ2FuY2hvclBv
c2l0aW9uW3ldJ10pK3RoaXMuX3Jvb3RQYWRkaW5nLnRvcDt9LF9nZXRXaWR0aE9m
ZnNldDpmdW5jdGlvbihtKXt2YXIgbj1wYXJzZUZsb2F0KG1bJ2FuY2hvclBvc2l0
aW9uW3hdJ10pK3RoaXMuX3Jvb3RQYWRkaW5nLmxlZnQsbz1pLmdldFBvc2l0aW9u
KHRoaXMuZG9tKS54LHA9dGhpcy5kb20ub2Zmc2V0V2lkdGgscT1pLmdldFZpZXdw
b3J0SW5mbygpLndpZHRoLHI9cGFyc2VGbG9hdChtLndpZHRoKSxzPWZhbHNlO2lm
KGsuZ2V0UnRsKCkpe3M9cjxvO31lbHNlIGlmKChvK3IpPnEpcz10cnVlO2lmKHMp
bis9cGFyc2VGbG9hdChtWydhbmNob3JHZW9tZXRyeVt4XSddKS1yO3JldHVybiBu
O30sX2dldENvbW1vbkVkZ2VDb21tZW50V2lkZ2V0T3B0czpmdW5jdGlvbihtLG4p
e3JldHVybiB7Y29sb3JzY2hlbWU6dGhpcy5fYXR0ci5jb2xvcnNjaGVtZSxjb21t
ZW50Tm9kZTpuLGNvbnRyb2xsZXJJRDptLmNvbnRyb2xsZXJJRCxub2RlSW1hZ2VV
Ukw6bS5ub2RlSW1hZ2VVUkwsbm9kZVJlZjp0aGlzLl9hdHRyLnJlZixub2RlVGl0
bGU6bS5ub2RlVGl0bGUsbm9kZVVSTDptLm5vZGVVUkwsbm9kZVN1bW1hcnk6bS5u
b2RlU3VtbWFyeSx3aWR0aDpwYXJzZUZsb2F0KG0ud2lkdGgpLGhlaWdodDpwYXJz
ZUZsb2F0KG0uaGVpZ2h0KSxyZWxhdGl2ZUhlaWdodE9mZnNldDp0aGlzLl9nZXRI
ZWlnaHRPZmZzZXQobSkscmVsYXRpdmVXaWR0aE9mZnNldDp0aGlzLl9nZXRXaWR0
aE9mZnNldChtKSxlcnJvcjptLmVycm9yLHNpZGVyZW5kZXI6bS5zaWRlcmVuZGVy
LGV4dGVuZGVkX3NvY2lhbF9jb250ZXh0Om0uZXh0ZW5kZWRfc29jaWFsX2NvbnRl
eHQsYW5jaG9yVGFyZ2V0WDpwYXJzZUZsb2F0KG1bJ3F1ZXJ5W2FuY2hvclRhcmdl
dFhdJ10pK3RoaXMuX3Jvb3RQYWRkaW5nLmxlZnQsYW5jaG9yVGFyZ2V0WTpwYXJz
ZUZsb2F0KG1bJ3F1ZXJ5W2FuY2hvclRhcmdldFldJ10pK3RoaXMuX3Jvb3RQYWRk
aW5nLnRvcH07fSxfaGFuZGxlRWRnZUNvbW1lbnREaWFsb2dEaXNtaXNzYWw6ZnVu
Y3Rpb24obSl7aWYodGhpcy5fY29tbWVudFdpZGdldE5vZGUpe3RoaXMuZG9tLnJl
bW92ZUNoaWxkKHRoaXMuX2NvbW1lbnRXaWRnZXROb2RlKTtkZWxldGUgdGhpcy5f
Y29tbWVudFdpZGdldE5vZGU7fX0sX2hhbmRsZUVkZ2VDb21tZW50RGlhbG9nSGlk
ZTpmdW5jdGlvbigpe2lmKHRoaXMuX2NvbW1lbnRXaWRnZXROb2RlKXRoaXMuX2Nv
bW1lbnRXaWRnZXROb2RlLnN0eWxlLmRpc3BsYXk9Im5vbmUiO30sX2hhbmRsZUVk
Z2VDb21tZW50RGlhbG9nU2hvdzpmdW5jdGlvbigpe2lmKHRoaXMuX2NvbW1lbnRX
aWRnZXROb2RlKXRoaXMuX2NvbW1lbnRXaWRnZXROb2RlLnN0eWxlLmRpc3BsYXk9
ImJsb2NrIjt9LF9maXJlRXZlbnRBbmRJbnZva2VIYW5kbGVyOmZ1bmN0aW9uKG0s
bil7ai5maXJlRXZlbnQobSx0aGlzKTtqLmludm9rZUhhbmRsZXIodGhpcy5nZXRB
dHRyaWJ1dGUobiksdGhpcyxbdGhpcy5fYXR0ci5ocmVmXSk7fSxfb25FZGdlQ3Jl
YXRlOmZ1bmN0aW9uKCl7dGhpcy5fZmlyZUV2ZW50QW5kSW52b2tlSGFuZGxlcign
ZWRnZS5jcmVhdGUnLCdvbi1jcmVhdGUnKTt9LF9vbkVkZ2VSZW1vdmU6ZnVuY3Rp
b24oKXt0aGlzLl9maXJlRXZlbnRBbmRJbnZva2VIYW5kbGVyKCdlZGdlLnJlbW92
ZScsJ29uLXJlbW92ZScpO30sX29uQXV0aFByb21wdDpmdW5jdGlvbigpe3RoaXMu
X2ZpcmVFdmVudEFuZEludm9rZUhhbmRsZXIoJ2F1dGgucHJvbXB0Jywnb24tcHJv
bXB0Jyk7fX0pO2UuZXhwb3J0cz1sO30pOwpfX2QoInNkay5YRkJNTC5MaWtlQm94
IixbInNkay5YRkJNTC5FZGdlV2lkZ2V0Iiwic2RrLkhlbHBlciIsIkxvZyIsInNk
ay5SdW50aW1lIl0sZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnPWIoJ3Nkay5Y
RkJNTC5FZGdlV2lkZ2V0JyksaD1iKCdzZGsuSGVscGVyJyksaT1iKCdMb2cnKSxq
PWIoJ3Nkay5SdW50aW1lJyksaz1nLmV4dGVuZCh7X3Zpc2libGVBZnRlcjonbG9h
ZCcsc2V0dXBBbmRWYWxpZGF0ZTpmdW5jdGlvbigpe3RoaXMuX2F0dHI9e2NoYW5u
ZWw6dGhpcy5nZXRDaGFubmVsVXJsKCksYXBpX2tleTpqLmdldENsaWVudElEKCks
Y29ubmVjdGlvbnM6dGhpcy5nZXRBdHRyaWJ1dGUoJ2Nvbm5lY3Rpb25zJyksY3Nz
OnRoaXMuZ2V0QXR0cmlidXRlKCdjc3MnKSxoZWlnaHQ6dGhpcy5nZXRBdHRyaWJ1
dGUoJ2hlaWdodCcpLGlkOnRoaXMuZ2V0QXR0cmlidXRlKCdwcm9maWxlLWlkJyks
aGVhZGVyOnRoaXMuX2dldEJvb2xBdHRyaWJ1dGUoJ2hlYWRlcicsdHJ1ZSksbmFt
ZTp0aGlzLmdldEF0dHJpYnV0ZSgnbmFtZScpLHNob3dfZmFjZXM6dGhpcy5fZ2V0
Qm9vbEF0dHJpYnV0ZSgnc2hvdy1mYWNlcycsdHJ1ZSksc3RyZWFtOnRoaXMuX2dl
dEJvb2xBdHRyaWJ1dGUoJ3N0cmVhbScsdHJ1ZSksd2lkdGg6dGhpcy5fZ2V0UHhB
dHRyaWJ1dGUoJ3dpZHRoJywzMDApLGhyZWY6dGhpcy5nZXRBdHRyaWJ1dGUoJ2hy
ZWYnKSxjb2xvcnNjaGVtZTp0aGlzLmdldEF0dHJpYnV0ZSgnY29sb3JzY2hlbWUn
LCdsaWdodCcpLGJvcmRlcl9jb2xvcjp0aGlzLmdldEF0dHJpYnV0ZSgnYm9yZGVy
X2NvbG9yJyksc2hvd19ib3JkZXI6dGhpcy5fZ2V0Qm9vbEF0dHJpYnV0ZSgnc2hv
dy1ib3JkZXInLHRydWUpfTtpZih0aGlzLl9nZXRCb29sQXR0cmlidXRlKCdmb3Jj
ZV93YWxsJyxmYWxzZSkpdGhpcy5fYXR0ci5mb3JjZV93YWxsPXRydWU7aWYodGhp
cy5fYXR0ci5jb25uZWN0aW9ucz09PScwJyl7dGhpcy5fYXR0ci5zaG93X2ZhY2Vz
PWZhbHNlO31lbHNlIGlmKHRoaXMuX2F0dHIuY29ubmVjdGlvbnMpdGhpcy5fYXR0
ci5zaG93X2ZhY2VzPXRydWU7aWYoIXRoaXMuX2F0dHIuaWQmJiF0aGlzLl9hdHRy
Lm5hbWUmJiF0aGlzLl9hdHRyLmhyZWYpe2kuZXJyb3IoJzxmYjpsaWtlLWJveD4g
cmVxdWlyZXMgb25lIG9mIHRoZSAiaWQiIG9yICJuYW1lIiBhdHRyaWJ1dGVzLicp
O3JldHVybiBmYWxzZTt9dmFyIGw9dGhpcy5fYXR0ci5oZWlnaHQ7aWYoIWwpaWYo
IXRoaXMuX2F0dHIuc2hvd19mYWNlcyYmIXRoaXMuX2F0dHIuc3RyZWFtKXtsPTYy
O31lbHNle2w9OTU7aWYodGhpcy5fYXR0ci5zaG93X2ZhY2VzKWwrPTE2MztpZih0
aGlzLl9hdHRyLnN0cmVhbSlsKz0zMDA7aWYodGhpcy5fYXR0ci5oZWFkZXImJnRo
aXMuX2F0dHIuaGVhZGVyIT09JzAnKWwrPTMyO310aGlzLl9hdHRyLmhlaWdodD1s
O3RoaXMuc3Vic2NyaWJlKCd4ZC5saWtlYm94TGlrZWQnLEVTNSh0aGlzLl9vbkxp
a2VkLCdiaW5kJyx0cnVlLHRoaXMpKTt0aGlzLnN1YnNjcmliZSgneGQubGlrZWJv
eFVubGlrZWQnLEVTNSh0aGlzLl9vblVubGlrZWQsJ2JpbmQnLHRydWUsdGhpcykp
O3JldHVybiB0cnVlO30sZ2V0U2l6ZTpmdW5jdGlvbigpe3JldHVybiB7d2lkdGg6
dGhpcy5fYXR0ci53aWR0aCxoZWlnaHQ6dGhpcy5fYXR0ci5oZWlnaHR9O30sZ2V0
VXJsQml0czpmdW5jdGlvbigpe3JldHVybiB7bmFtZTonbGlrZWJveCcscGFyYW1z
OnRoaXMuX2F0dHJ9O30sX29uTGlrZWQ6ZnVuY3Rpb24oKXtoLmZpcmVFdmVudCgn
ZWRnZS5jcmVhdGUnLHRoaXMpO30sX29uVW5saWtlZDpmdW5jdGlvbigpe2guZmly
ZUV2ZW50KCdlZGdlLnJlbW92ZScsdGhpcyk7fX0pO2UuZXhwb3J0cz1rO30pOwpf
X2QoInNkay5YRkJNTC5TZW5kQnV0dG9uRm9ybVdpZGdldCIsWyJzZGsuWEZCTUwu
RWRnZUNvbW1lbnRXaWRnZXQiLCJzZGsuRE9NIiwic2RrLkV2ZW50Il0sZnVuY3Rp
b24oYSxiLGMsZCxlLGYpe3ZhciBnPWIoJ3Nkay5YRkJNTC5FZGdlQ29tbWVudFdp
ZGdldCcpLGg9Yignc2RrLkRPTScpLGk9Yignc2RrLkV2ZW50Jyksaj1nLmV4dGVu
ZCh7Y29uc3RydWN0b3I6ZnVuY3Rpb24oayl7dGhpcy5wYXJlbnQoayk7aC5hZGRD
c3ModGhpcy5kb20sJ2ZiX3NlbmRfYnV0dG9uX2Zvcm1fd2lkZ2V0Jyk7aC5hZGRD
c3ModGhpcy5kb20say5jb2xvcnNjaGVtZSk7aC5hZGRDc3ModGhpcy5kb20sKHR5
cGVvZiBrLnNpZGVyZW5kZXIhPSd1bmRlZmluZWQnJiZrLnNpZGVyZW5kZXIpPydz
aWRlcmVuZGVyJzonJyk7dGhpcy5fYXR0ci5ub2RlSW1hZ2VVUkw9ay5ub2RlSW1h
Z2VVUkw7dGhpcy5fYXR0ci5ub2RlUmVmPWsubm9kZVJlZjt0aGlzLl9hdHRyLm5v
ZGVUaXRsZT1rLm5vZGVUaXRsZTt0aGlzLl9hdHRyLm5vZGVVUkw9ay5ub2RlVVJM
O3RoaXMuX2F0dHIubm9kZVN1bW1hcnk9ay5ub2RlU3VtbWFyeTt0aGlzLl9hdHRy
Lm9mZnNldFg9ay5yZWxhdGl2ZVdpZHRoT2Zmc2V0O3RoaXMuX2F0dHIub2Zmc2V0
WT1rLnJlbGF0aXZlSGVpZ2h0T2Zmc2V0O3RoaXMuX2F0dHIuYW5jaG9yVGFyZ2V0
WD1rLmFuY2hvclRhcmdldFg7dGhpcy5fYXR0ci5hbmNob3JUYXJnZXRZPWsuYW5j
aG9yVGFyZ2V0WTt0aGlzLl9hdHRyLmNoYW5uZWw9dGhpcy5nZXRDaGFubmVsVXJs
KCk7dGhpcy5fYXR0ci5jb250cm9sbGVySUQ9ay5jb250cm9sbGVySUQ7dGhpcy5f
YXR0ci5jb2xvcnNjaGVtZT1rLmNvbG9yc2NoZW1lO3RoaXMuX2F0dHIuZXJyb3I9
ay5lcnJvcjt0aGlzLl9hdHRyLnNpZGVyZW5kZXI9ay5zaWRlcmVuZGVyO3RoaXMu
X2F0dHIuZXh0ZW5kZWRfc29jaWFsX2NvbnRleHQ9ay5leHRlbmRlZF9zb2NpYWxf
Y29udGV4dDt9LF9zaG93TG9hZGVyOnRydWUsZ2V0VXJsQml0czpmdW5jdGlvbigp
e3JldHVybiB7bmFtZTonc2VuZF9idXR0b25fZm9ybV9zaGVsbCcscGFyYW1zOnRo
aXMuX2F0dHJ9O30sb25lVGltZVNldHVwOmZ1bmN0aW9uKCl7dGhpcy5zdWJzY3Jp
YmUoJ3hkLm1lc3NhZ2VTZW50JyxFUzUodGhpcy5fb25NZXNzYWdlU2VudCwnYmlu
ZCcsdHJ1ZSx0aGlzKSk7fSxfb25NZXNzYWdlU2VudDpmdW5jdGlvbigpe2kuZmly
ZSgnbWVzc2FnZS5zZW5kJyx0aGlzLl9hdHRyLm5vZGVVUkwsdGhpcyk7fX0pO2Uu
ZXhwb3J0cz1qO30pOwpfX2QoInNkay5YRkJNTC5MaWtlIixbInNkay5YRkJNTC5F
ZGdlV2lkZ2V0Iiwic2RrLlhGQk1MLlNlbmRCdXR0b25Gb3JtV2lkZ2V0Il0sZnVu
Y3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnPWIoJ3Nkay5YRkJNTC5FZGdlV2lkZ2V0
JyksaD1iKCdzZGsuWEZCTUwuU2VuZEJ1dHRvbkZvcm1XaWRnZXQnKSxpPWcuZXh0
ZW5kKHtnZXRVcmxCaXRzOmZ1bmN0aW9uKCl7cmV0dXJuIHtuYW1lOidsaWtlJyxw
YXJhbXM6dGhpcy5fYXR0cn07fSxfY3JlYXRlRWRnZUNvbW1lbnRXaWRnZXQ6ZnVu
Y3Rpb24oaixrKXtpZignc2VuZCcgaW4gdGhpcy5fYXR0ciYmJ3dpZGdldF90eXBl
JyBpbiBqJiZqLndpZGdldF90eXBlPT0nc2VuZCcpe3ZhciBsPXRoaXMuX2dldENv
bW1vbkVkZ2VDb21tZW50V2lkZ2V0T3B0cyhqLGspO3JldHVybiBuZXcgaChsKTt9
ZWxzZSByZXR1cm4gdGhpcy5wYXJlbnRDYWxsKCJfY3JlYXRlRWRnZUNvbW1lbnRX
aWRnZXQiLGosayk7fSxnZXRJZnJhbWVUaXRsZTpmdW5jdGlvbigpe3JldHVybiAn
TGlrZSB0aGlzIGNvbnRlbnQgb24gRmFjZWJvb2suJzt9fSk7ZS5leHBvcnRzPWk7
fSk7Cl9fZCgic2RrLlhGQk1MLkxpdmVTdHJlYW0iLFsic2RrLlhGQk1MLklmcmFt
ZVdpZGdldCJdLGZ1bmN0aW9uKGEsYixjLGQsZSxmKXt2YXIgZz1iKCdzZGsuWEZC
TUwuSWZyYW1lV2lkZ2V0JyksaD1nLmV4dGVuZCh7X3Zpc2libGVBZnRlcjonbG9h
ZCcsc2V0dXBBbmRWYWxpZGF0ZTpmdW5jdGlvbigpe3RoaXMuX2F0dHI9e2FwcF9p
ZDp0aGlzLmdldEF0dHJpYnV0ZSgnZXZlbnQtYXBwLWlkJyksaHJlZjp0aGlzLmdl
dEF0dHJpYnV0ZSgnaHJlZicsd2luZG93LmxvY2F0aW9uLmhyZWYpLGhlaWdodDp0
aGlzLl9nZXRQeEF0dHJpYnV0ZSgnaGVpZ2h0Jyw1MDApLGhpZGVGcmllbmRzVGFi
OnRoaXMuZ2V0QXR0cmlidXRlKCdoaWRlLWZyaWVuZHMtdGFiJykscmVkZXNpZ25l
ZDp0aGlzLl9nZXRCb29sQXR0cmlidXRlKCdyZWRlc2lnbmVkLXN0cmVhbScpLHdp
ZHRoOnRoaXMuX2dldFB4QXR0cmlidXRlKCd3aWR0aCcsNDAwKSx4aWQ6dGhpcy5n
ZXRBdHRyaWJ1dGUoJ3hpZCcsJ2RlZmF1bHQnKSxhbHdheXNfcG9zdF90b19mcmll
bmRzOnRoaXMuX2dldEJvb2xBdHRyaWJ1dGUoJ2Fsd2F5cy1wb3N0LXRvLWZyaWVu
ZHMnKSx2aWFfdXJsOnRoaXMuZ2V0QXR0cmlidXRlKCd2aWFfdXJsJyl9O3JldHVy
biB0cnVlO30sZ2V0U2l6ZTpmdW5jdGlvbigpe3JldHVybiB7d2lkdGg6dGhpcy5f
YXR0ci53aWR0aCxoZWlnaHQ6dGhpcy5fYXR0ci5oZWlnaHR9O30sZ2V0VXJsQml0
czpmdW5jdGlvbigpe3ZhciBpPXRoaXMuX2F0dHIucmVkZXNpZ25lZD8nbGl2ZV9z
dHJlYW1fYm94JzonbGl2ZWZlZWQnO2lmKHRoaXMuX2dldEJvb2xBdHRyaWJ1dGUo
J21vZGVybicsZmFsc2UpKWk9J2xpdmVfc3RyZWFtJztyZXR1cm4ge25hbWU6aSxw
YXJhbXM6dGhpcy5fYXR0cn07fX0pO2UuZXhwb3J0cz1oO30pOwpfX2QoInNkay5Y
RkJNTC5Mb2dpbkJ1dHRvbiIsWyJzZGsuSGVscGVyIiwiSWZyYW1lUGx1Z2luIl0s
ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnPWIoJ3Nkay5IZWxwZXInKSxoPWIo
J0lmcmFtZVBsdWdpbicpLGk9aC5leHRlbmQoe2NvbnN0cnVjdG9yOmZ1bmN0aW9u
KGosayxsLG0pe3RoaXMucGFyZW50KGosayxsLG0pO3ZhciBuPWguZ2V0VmFsKG0s
J29uX2xvZ2luJyk7aWYobil0aGlzLnN1YnNjcmliZSgnbG9naW4uc3RhdHVzJyxm
dW5jdGlvbihvKXtnLmludm9rZUhhbmRsZXIobixudWxsLFtvXSk7fSk7fSxnZXRQ
YXJhbXM6ZnVuY3Rpb24oKXtyZXR1cm4ge3Njb3BlOidzdHJpbmcnLHBlcm1zOidz
dHJpbmcnLHNpemU6J3N0cmluZycsbG9naW5fdGV4dDondGV4dCcsc2hvd19mYWNl
czonYm9vbCcsbWF4X3Jvd3M6J3N0cmluZycsc2hvd19sb2dpbl9mYWNlOidib29s
JyxyZWdpc3RyYXRpb25fdXJsOid1cmxfbWF5YmUnLGF1dG9fbG9nb3V0X2xpbms6
J2Jvb2wnLG9uZV9jbGljazonYm9vbCd9O319KTtlLmV4cG9ydHM9aTt9KTsKX19k
KCJzZGsuWEZCTUwuTmFtZSIsWyJjb3B5UHJvcGVydGllcyIsInNkay5EYXRhIiwi
ZXNjYXBlSFRNTCIsInNkay5FdmVudCIsInNkay5YRkJNTC5FbGVtZW50Iiwic2Rr
LkhlbHBlciIsIkxvZyIsInNkay5SdW50aW1lIl0sZnVuY3Rpb24oYSxiLGMsZCxl
LGYpe3ZhciBnPWIoJ2NvcHlQcm9wZXJ0aWVzJyksaD1iKCdzZGsuRGF0YScpLGk9
YignZXNjYXBlSFRNTCcpLGo9Yignc2RrLkV2ZW50Jyksaz1iKCdzZGsuWEZCTUwu
RWxlbWVudCcpLGw9Yignc2RrLkhlbHBlcicpLG09YignTG9nJyksbj1iKCdzZGsu
UnVudGltZScpLG89ay5leHRlbmQoe3Byb2Nlc3M6ZnVuY3Rpb24oKXtnKHRoaXMs
e191aWQ6dGhpcy5nZXRBdHRyaWJ1dGUoJ3VpZCcpLF9maXJzdG5hbWVvbmx5OnRo
aXMuX2dldEJvb2xBdHRyaWJ1dGUoJ2ZpcnN0LW5hbWUtb25seScpLF9sYXN0bmFt
ZW9ubHk6dGhpcy5fZ2V0Qm9vbEF0dHJpYnV0ZSgnbGFzdC1uYW1lLW9ubHknKSxf
cG9zc2Vzc2l2ZTp0aGlzLl9nZXRCb29sQXR0cmlidXRlKCdwb3NzZXNzaXZlJyks
X3JlZmxleGl2ZTp0aGlzLl9nZXRCb29sQXR0cmlidXRlKCdyZWZsZXhpdmUnKSxf
b2JqZWN0aXZlOnRoaXMuX2dldEJvb2xBdHRyaWJ1dGUoJ29iamVjdGl2ZScpLF9s
aW5rZWQ6dGhpcy5fZ2V0Qm9vbEF0dHJpYnV0ZSgnbGlua2VkJyx0cnVlKSxfc3Vi
amVjdElkOnRoaXMuZ2V0QXR0cmlidXRlKCdzdWJqZWN0LWlkJyl9KTtpZighdGhp
cy5fdWlkKXttLmVycm9yKCcidWlkIiBpcyBhIHJlcXVpcmVkIGF0dHJpYnV0ZSBm
b3IgPGZiOm5hbWU+Jyk7dGhpcy5maXJlKCdyZW5kZXInKTtyZXR1cm47fXZhciBw
PVtdO2lmKHRoaXMuX2ZpcnN0bmFtZW9ubHkpe3AucHVzaCgnZmlyc3RfbmFtZScp
O31lbHNlIGlmKHRoaXMuX2xhc3RuYW1lb25seSl7cC5wdXNoKCdsYXN0X25hbWUn
KTt9ZWxzZSBwLnB1c2goJ25hbWUnKTtpZih0aGlzLl9zdWJqZWN0SWQpe3AucHVz
aCgnc2V4Jyk7aWYodGhpcy5fc3ViamVjdElkPT1uLmdldFVzZXJJRCgpKXRoaXMu
X3JlZmxleGl2ZT10cnVlO312YXIgcTtqLm1vbml0b3IoJ2F1dGguc3RhdHVzQ2hh
bmdlJyxFUzUoZnVuY3Rpb24oKXtpZighdGhpcy5pc1ZhbGlkKCkpe3RoaXMuZmly
ZSgncmVuZGVyJyk7cmV0dXJuIHRydWU7fWlmKCF0aGlzLl91aWR8fHRoaXMuX3Vp
ZD09J2xvZ2dlZGludXNlcicpdGhpcy5fdWlkPW4uZ2V0VXNlcklEKCk7aWYoIXRo
aXMuX3VpZClyZXR1cm47aWYobC5pc1VzZXIodGhpcy5fdWlkKSl7cT1oLl9zZWxl
Y3RCeUluZGV4KHAsJ3VzZXInLCd1aWQnLHRoaXMuX3VpZCk7fWVsc2UgcT1oLl9z
ZWxlY3RCeUluZGV4KFsnbmFtZScsJ2lkJ10sJ3Byb2ZpbGUnLCdpZCcsdGhpcy5f
dWlkKTtxLndhaXQoRVM1KGZ1bmN0aW9uKHIpe2lmKHRoaXMuX3N1YmplY3RJZD09
dGhpcy5fdWlkKXt0aGlzLl9yZW5kZXJQcm9ub3VuKHJbMF0pO31lbHNlIHRoaXMu
X3JlbmRlck90aGVyKHJbMF0pO3RoaXMuZmlyZSgncmVuZGVyJyk7fSwnYmluZCcs
dHJ1ZSx0aGlzKSk7fSwnYmluZCcsdHJ1ZSx0aGlzKSk7fSxfcmVuZGVyUHJvbm91
bjpmdW5jdGlvbihwKXt2YXIgcT0nJyxyPXRoaXMuX29iamVjdGl2ZTtpZih0aGlz
Ll9zdWJqZWN0SWQpe3I9dHJ1ZTtpZih0aGlzLl9zdWJqZWN0SWQ9PT10aGlzLl91
aWQpdGhpcy5fcmVmbGV4aXZlPXRydWU7fWlmKHRoaXMuX3VpZD09bi5nZXRVc2Vy
SUQoKSYmdGhpcy5fZ2V0Qm9vbEF0dHJpYnV0ZSgndXNlLXlvdScsdHJ1ZSkpe2lm
KHRoaXMuX3Bvc3Nlc3NpdmUpe2lmKHRoaXMuX3JlZmxleGl2ZSl7cT0neW91ciBv
d24nO31lbHNlIHE9J3lvdXInO31lbHNlIGlmKHRoaXMuX3JlZmxleGl2ZSl7cT0n
eW91cnNlbGYnO31lbHNlIHE9J3lvdSc7fWVsc2Ugc3dpdGNoKHAuc2V4KXtjYXNl
ICdtYWxlJzppZih0aGlzLl9wb3NzZXNzaXZlKXtxPXRoaXMuX3JlZmxleGl2ZT8n
aGlzIG93bic6J2hpcyc7fWVsc2UgaWYodGhpcy5fcmVmbGV4aXZlKXtxPSdoaW1z
ZWxmJzt9ZWxzZSBpZihyKXtxPSdoaW0nO31lbHNlIHE9J2hlJzticmVhaztjYXNl
ICdmZW1hbGUnOmlmKHRoaXMuX3Bvc3Nlc3NpdmUpe3E9dGhpcy5fcmVmbGV4aXZl
PydoZXIgb3duJzonaGVyJzt9ZWxzZSBpZih0aGlzLl9yZWZsZXhpdmUpe3E9J2hl
cnNlbGYnO31lbHNlIGlmKHIpe3E9J2hlcic7fWVsc2UgcT0nc2hlJzticmVhaztk
ZWZhdWx0OmlmKHRoaXMuX2dldEJvb2xBdHRyaWJ1dGUoJ3VzZS10aGV5Jyx0cnVl
KSl7aWYodGhpcy5fcG9zc2Vzc2l2ZSl7aWYodGhpcy5fcmVmbGV4aXZlKXtxPSd0
aGVpciBvd24nO31lbHNlIHE9J3RoZWlyJzt9ZWxzZSBpZih0aGlzLl9yZWZsZXhp
dmUpe3E9J3RoZW1zZWx2ZXMnO31lbHNlIGlmKHIpe3E9J3RoZW0nO31lbHNlIHE9
J3RoZXknO31lbHNlIGlmKHRoaXMuX3Bvc3Nlc3NpdmUpe2lmKHRoaXMuX3JlZmxl
eGl2ZSl7cT0naGlzL2hlciBvd24nO31lbHNlIHE9J2hpcy9oZXInO31lbHNlIGlm
KHRoaXMuX3JlZmxleGl2ZSl7cT0naGltc2VsZi9oZXJzZWxmJzt9ZWxzZSBpZihy
KXtxPSdoaW0vaGVyJzt9ZWxzZSBxPSdoZS9zaGUnO2JyZWFrO31pZih0aGlzLl9n
ZXRCb29sQXR0cmlidXRlKCdjYXBpdGFsaXplJyxmYWxzZSkpcT1sLnVwcGVyQ2Fz
ZUZpcnN0Q2hhcihxKTt0aGlzLmRvbS5pbm5lckhUTUw9cTt9LF9yZW5kZXJPdGhl
cjpmdW5jdGlvbihwKXt2YXIgcT0nJyxyPScnO2lmKHRoaXMuX3VpZD09bi5nZXRV
c2VySUQoKSYmdGhpcy5fZ2V0Qm9vbEF0dHJpYnV0ZSgndXNlLXlvdScsdHJ1ZSkp
e2lmKHRoaXMuX3JlZmxleGl2ZSl7aWYodGhpcy5fcG9zc2Vzc2l2ZSl7cT0neW91
ciBvd24nO31lbHNlIHE9J3lvdXJzZWxmJzt9ZWxzZSBpZih0aGlzLl9wb3NzZXNz
aXZlKXtxPSd5b3VyJzt9ZWxzZSBxPSd5b3UnO31lbHNlIGlmKHApe2lmKG51bGw9
PT1wLmZpcnN0X25hbWUpcC5maXJzdF9uYW1lPScnO2lmKG51bGw9PT1wLmxhc3Rf
bmFtZSlwLmxhc3RfbmFtZT0nJztpZih0aGlzLl9maXJzdG5hbWVvbmx5JiZwLmZp
cnN0X25hbWUhPT11bmRlZmluZWQpe3E9aShwLmZpcnN0X25hbWUpO31lbHNlIGlm
KHRoaXMuX2xhc3RuYW1lb25seSYmcC5sYXN0X25hbWUhPT11bmRlZmluZWQpcT1p
KHAubGFzdF9uYW1lKTtpZighcSlxPWkocC5uYW1lKTtpZihxIT09JycmJnRoaXMu
X3Bvc3Nlc3NpdmUpcSs9J1wncyc7fWlmKCFxKXE9aSh0aGlzLmdldEF0dHJpYnV0
ZSgnaWYtY2FudC1zZWUnLCdGYWNlYm9vayBVc2VyJykpO2lmKHEpe2lmKHRoaXMu
X2dldEJvb2xBdHRyaWJ1dGUoJ2NhcGl0YWxpemUnLGZhbHNlKSlxPWwudXBwZXJD
YXNlRmlyc3RDaGFyKHEpO2lmKHAmJnRoaXMuX2xpbmtlZCl7cj1sLmdldFByb2Zp
bGVMaW5rKHAscSx0aGlzLmdldEF0dHJpYnV0ZSgnaHJlZicsbnVsbCkpO31lbHNl
IHI9cTt9dGhpcy5kb20uaW5uZXJIVE1MPXI7fX0pO2UuZXhwb3J0cz1vO30pOwpf
X2QoInNkay5YRkJNTC5Qcm9maWxlUGljIixbInNkay5EYXRhIiwic2RrLkRPTSIs
ImVzY2FwZUhUTUwiLCJzZGsuWEZCTUwuRWxlbWVudCIsInNkay5FdmVudCIsImZv
cm1hdCIsInNkay5IZWxwZXIiLCJzZGsuUnVudGltZSIsIlVybE1hcCIsIlByb2Zp
bGVQaWNDb25maWciXSxmdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9Yignc2Rr
LkRhdGEnKSxoPWIoJ3Nkay5ET00nKSxpPWIoJ2VzY2FwZUhUTUwnKSxqPWMoJ1By
b2ZpbGVQaWNDb25maWcnKSxrPWIoJ3Nkay5YRkJNTC5FbGVtZW50JyksbD1iKCdz
ZGsuRXZlbnQnKSxtPWIoJ2Zvcm1hdCcpLG49Yignc2RrLkhlbHBlcicpLG89Yign
c2RrLlJ1bnRpbWUnKSxwPWIoJ1VybE1hcCcpLHE9e246J3BpY19iaWcnLG5vcm1h
bDoncGljX2JpZycscToncGljX3NxdWFyZScsczoncGljJyxzbWFsbDoncGljJyxz
cXVhcmU6J3BpY19zcXVhcmUnLHQ6J3BpY19zbWFsbCcsdGh1bWI6J3BpY19zbWFs
bCd9LHI9ay5leHRlbmQoe3Byb2Nlc3M6ZnVuY3Rpb24oKXt2YXIgcz10aGlzLmdl
dEF0dHJpYnV0ZSgnc2l6ZScsJ3RodW1iJyksdD1xW3NdLHU9dGhpcy5fZ2V0UHhB
dHRyaWJ1dGUoJ3dpZHRoJyksdj10aGlzLl9nZXRQeEF0dHJpYnV0ZSgnaGVpZ2h0
Jyksdz10aGlzLmRvbS5zdHlsZSx4PXRoaXMuZ2V0QXR0cmlidXRlKCd1aWQnKTtp
Zih0aGlzLl9nZXRCb29sQXR0cmlidXRlKCdmYWNlYm9vay1sb2dvJykpdCs9J193
aXRoX2xvZ28nO2lmKHUpe3U9dSsncHgnO3cud2lkdGg9dTt9aWYodil7dj12Kydw
eCc7dy5oZWlnaHQ9djt9dmFyIHk9RVM1KGZ1bmN0aW9uKHope3ZhciBhYT16P3pb
MF06bnVsbCxiYT1hYT9hYVt0XTpudWxsO2lmKCFiYSliYT1wLnJlc29sdmUoJ2Zi
Y2RuJykrJy8nK2ouZGVmUGljTWFwW3RdO3ZhciBjYT0oKHU/J3dpZHRoOicrdSsn
Oyc6JycpKyh2PydoZWlnaHQ6Jyt1Kyc7JzonJykpLGRhPW0oJzxpbWcgc3JjPSJ7
MH0iIGFsdD0iezF9IiB0aXRsZT0iezF9IiBzdHlsZT0iezJ9IiBjbGFzcz0iezN9
IiAvPicsYmEsYWE/aShhYS5uYW1lKTonJyxjYSx0aGlzLmRvbS5jbGFzc05hbWUp
O2lmKHRoaXMuX2dldEJvb2xBdHRyaWJ1dGUoJ2xpbmtlZCcsdHJ1ZSkpZGE9bi5n
ZXRQcm9maWxlTGluayhhYSxkYSx0aGlzLmdldEF0dHJpYnV0ZSgnaHJlZicsbnVs
bCkpO3RoaXMuZG9tLmlubmVySFRNTD1kYTtoLmFkZENzcyh0aGlzLmRvbSwnZmJf
cHJvZmlsZV9waWNfcmVuZGVyZWQnKTt0aGlzLmZpcmUoJ3JlbmRlcicpO30sJ2Jp
bmQnLHRydWUsdGhpcyk7bC5tb25pdG9yKCdhdXRoLnN0YXR1c0NoYW5nZScsRVM1
KGZ1bmN0aW9uKCl7aWYoIXRoaXMuaXNWYWxpZCgpKXt0aGlzLmZpcmUoJ3JlbmRl
cicpO3JldHVybiB0cnVlO31pZih0aGlzLmdldEF0dHJpYnV0ZSgndWlkJyxudWxs
KT09J2xvZ2dlZGludXNlcicpeD1vLmdldFVzZXJJRCgpO2lmKG8uZ2V0TG9naW5T
dGF0dXMoKSE9PSd1bmtub3duJyYmeCl7Zy5fc2VsZWN0QnlJbmRleChbJ25hbWUn
LHRdLG4uaXNVc2VyKHgpPyd1c2VyJzoncHJvZmlsZScsbi5pc1VzZXIoeCk/J3Vp
ZCc6J2lkJyx4KS53YWl0KHkpO31lbHNlIHkoKTt9LCdiaW5kJyx0cnVlLHRoaXMp
KTt9fSk7ZS5leHBvcnRzPXI7fSk7Cl9fZCgic2RrLlhGQk1MLlJlY29tbWVuZGF0
aW9uc0JhciIsWyJzZGsuQXJiaXRlciIsIkRPTUV2ZW50TGlzdGVuZXIiLCJzZGsu
RXZlbnQiLCJzZGsuWEZCTUwuSWZyYW1lV2lkZ2V0IiwicmVzb2x2ZVVSSSIsInNk
ay5SdW50aW1lIl0sZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnPWIoJ3Nkay5B
cmJpdGVyJyksaD1iKCdET01FdmVudExpc3RlbmVyJyksaT1iKCdzZGsuRXZlbnQn
KSxqPWIoJ3Nkay5YRkJNTC5JZnJhbWVXaWRnZXQnKSxrPWIoJ3Jlc29sdmVVUkkn
KSxsPWIoJ3Nkay5SdW50aW1lJyksbT1qLmV4dGVuZCh7Z2V0VXJsQml0czpmdW5j
dGlvbigpe3JldHVybiB7bmFtZToncmVjb21tZW5kYXRpb25zX2JhcicscGFyYW1z
OnRoaXMuX2F0dHJ9O30sc2V0dXBBbmRWYWxpZGF0ZTpmdW5jdGlvbigpe2Z1bmN0
aW9uIG4odyx4KXt2YXIgeT0wLHo9bnVsbDtmdW5jdGlvbiBhYSgpe3goKTt6PW51
bGw7eT1FUzUoJ0RhdGUnLCdub3cnLGZhbHNlKTt9cmV0dXJuIGZ1bmN0aW9uKCl7
aWYoIXope3ZhciBiYT1FUzUoJ0RhdGUnLCdub3cnLGZhbHNlKTtpZihiYS15PHcp
e3o9c2V0VGltZW91dChhYSx3LShiYS15KSk7fWVsc2UgYWEoKTt9cmV0dXJuIHRy
dWU7fTt9ZnVuY3Rpb24gbyh3KXtpZih3Lm1hdGNoKC9eXGQrKD86XC5cZCspPyUk
Lykpe3ZhciB4PU1hdGgubWluKE1hdGgubWF4KHBhcnNlSW50KHcsMTApLDApLDEw
MCk7dz14LzEwMDt9ZWxzZSBpZih3IT0nbWFudWFsJyYmdyE9J29udmlzaWJsZScp
dz0nb252aXNpYmxlJztyZXR1cm4gdzt9ZnVuY3Rpb24gcCh3KXtyZXR1cm4gTWF0
aC5tYXgocGFyc2VJbnQodywxMCl8fDMwLDEwKTt9ZnVuY3Rpb24gcSh3KXtpZih3
PT0nbGVmdCd8fHc9PSdyaWdodCcpcmV0dXJuIHc7cmV0dXJuIGwuZ2V0UnRsKCk/
J2xlZnQnOidyaWdodCc7fXRoaXMuX2F0dHI9e2NoYW5uZWw6dGhpcy5nZXRDaGFu
bmVsVXJsKCksYXBpX2tleTpsLmdldENsaWVudElEKCksZm9udDp0aGlzLmdldEF0
dHJpYnV0ZSgnZm9udCcpLGNvbG9yc2NoZW1lOnRoaXMuZ2V0QXR0cmlidXRlKCdj
b2xvcnNjaGVtZScpLGhyZWY6ayh0aGlzLmdldEF0dHJpYnV0ZSgnaHJlZicpKSxz
aWRlOnEodGhpcy5nZXRBdHRyaWJ1dGUoJ3NpZGUnKSksc2l0ZTp0aGlzLmdldEF0
dHJpYnV0ZSgnc2l0ZScpLGFjdGlvbjp0aGlzLmdldEF0dHJpYnV0ZSgnYWN0aW9u
JykscmVmOnRoaXMuZ2V0QXR0cmlidXRlKCdyZWYnKSxtYXhfYWdlOnRoaXMuZ2V0
QXR0cmlidXRlKCdtYXhfYWdlJyksdHJpZ2dlcjpvKHRoaXMuZ2V0QXR0cmlidXRl
KCd0cmlnZ2VyJywnJykpLHJlYWRfdGltZTpwKHRoaXMuZ2V0QXR0cmlidXRlKCdy
ZWFkX3RpbWUnKSksbnVtX3JlY29tbWVuZGF0aW9uczpwYXJzZUludCh0aGlzLmdl
dEF0dHJpYnV0ZSgnbnVtX3JlY29tbWVuZGF0aW9ucycpLDEwKXx8Mn07dGhpcy5f
c2hvd0xvYWRlcj1mYWxzZTt0aGlzLnN1YnNjcmliZSgnaWZyYW1lLm9ubG9hZCcs
RVM1KGZ1bmN0aW9uKCl7dmFyIHc9dGhpcy5kb20uY2hpbGRyZW5bMF07dy5jbGFz
c05hbWU9J2ZicGx1Z2lucmVjb21tZW5kYXRpb25zYmFyJyt0aGlzLl9hdHRyLnNp
ZGU7fSwnYmluZCcsdHJ1ZSx0aGlzKSk7dmFyIHI9RVM1KGZ1bmN0aW9uKCl7aC5y
ZW1vdmUod2luZG93LCdzY3JvbGwnLHIpO2gucmVtb3ZlKGRvY3VtZW50LmRvY3Vt
ZW50RWxlbWVudCwnY2xpY2snLHIpO2gucmVtb3ZlKGRvY3VtZW50LmRvY3VtZW50
RWxlbWVudCwnbW91c2Vtb3ZlJyxyKTtzZXRUaW1lb3V0KEVTNSh0aGlzLmFyYml0
ZXJJbmZvcm0sJ2JpbmQnLHRydWUsdGhpcywncGxhdGZvcm0vcGx1Z2lucy9yZWNv
bW1lbmRhdGlvbnNfYmFyL2FjdGlvbicsbnVsbCxnLkJFSEFWSU9SX1NUQVRFKSx0
aGlzLl9hdHRyLnJlYWRfdGltZSoxMDAwKTtyZXR1cm4gdHJ1ZTt9LCdiaW5kJyx0
cnVlLHRoaXMpO2guYWRkKHdpbmRvdywnc2Nyb2xsJyxyKTtoLmFkZChkb2N1bWVu
dC5kb2N1bWVudEVsZW1lbnQsJ2NsaWNrJyxyKTtoLmFkZChkb2N1bWVudC5kb2N1
bWVudEVsZW1lbnQsJ21vdXNlbW92ZScscik7aWYodGhpcy5fYXR0ci50cmlnZ2Vy
PT0ibWFudWFsIil7dmFyIHM9RVM1KGZ1bmN0aW9uKHcpe2lmKHc9PXRoaXMuX2F0
dHIuaHJlZil7aS51bnN1YnNjcmliZSgneGZibWwucmVjb21tZW5kYXRpb25zYmFy
LnJlYWQnLHMpO3RoaXMuYXJiaXRlckluZm9ybSgncGxhdGZvcm0vcGx1Z2lucy9y
ZWNvbW1lbmRhdGlvbnNfYmFyL3RyaWdnZXInLG51bGwsZy5CRUhBVklPUl9TVEFU
RSk7fXJldHVybiB0cnVlO30sJ2JpbmQnLHRydWUsdGhpcyk7aS5zdWJzY3JpYmUo
J3hmYm1sLnJlY29tbWVuZGF0aW9uc2Jhci5yZWFkJyxzKTt9ZWxzZXt2YXIgdD1u
KDUwMCxFUzUoZnVuY3Rpb24oKXtpZih0aGlzLmNhbGN1bGF0ZVZpc2liaWxpdHko
KSl7aC5yZW1vdmUod2luZG93LCdzY3JvbGwnLHQpO2gucmVtb3ZlKHdpbmRvdywn
cmVzaXplJyx0KTt0aGlzLmFyYml0ZXJJbmZvcm0oJ3BsYXRmb3JtL3BsdWdpbnMv
cmVjb21tZW5kYXRpb25zX2Jhci90cmlnZ2VyJyxudWxsLGcuQkVIQVZJT1JfU1RB
VEUpO31yZXR1cm4gdHJ1ZTt9LCdiaW5kJyx0cnVlLHRoaXMpKTtoLmFkZCh3aW5k
b3csJ3Njcm9sbCcsdCk7aC5hZGQod2luZG93LCdyZXNpemUnLHQpO3QoKTt9dGhp
cy52aXNpYmxlPWZhbHNlO3ZhciB1PW4oNTAwLEVTNShmdW5jdGlvbigpe2lmKCF0
aGlzLnZpc2libGUmJnRoaXMuY2FsY3VsYXRlVmlzaWJpbGl0eSgpKXt0aGlzLnZp
c2libGU9dHJ1ZTt0aGlzLmFyYml0ZXJJbmZvcm0oJ3BsYXRmb3JtL3BsdWdpbnMv
cmVjb21tZW5kYXRpb25zX2Jhci92aXNpYmxlJyk7fWVsc2UgaWYodGhpcy52aXNp
YmxlJiYhdGhpcy5jYWxjdWxhdGVWaXNpYmlsaXR5KCkpe3RoaXMudmlzaWJsZT1m
YWxzZTt0aGlzLmFyYml0ZXJJbmZvcm0oJ3BsYXRmb3JtL3BsdWdpbnMvcmVjb21t
ZW5kYXRpb25zX2Jhci9pbnZpc2libGUnKTt9cmV0dXJuIHRydWU7fSwnYmluZCcs
dHJ1ZSx0aGlzKSk7aC5hZGQod2luZG93LCdzY3JvbGwnLHUpO2guYWRkKHdpbmRv
dywncmVzaXplJyx1KTt1KCk7dGhpcy5mb2N1c2VkPXRydWU7dmFyIHY9RVM1KGZ1
bmN0aW9uKCl7dGhpcy5mb2N1c2VkPSF0aGlzLmZvY3VzZWQ7cmV0dXJuIHRydWU7
fSwnYmluZCcsdHJ1ZSx0aGlzKTtoLmFkZCh3aW5kb3csJ2JsdXInLHYpO2guYWRk
KHdpbmRvdywnZm9jdXMnLHYpO3RoaXMucmVzaXplX3J1bm5pbmc9ZmFsc2U7dGhp
cy5hbmltYXRlPWZhbHNlO3RoaXMuc3Vic2NyaWJlKCd4ZC5zaWduYWxfYW5pbWF0
aW9uJyxFUzUoZnVuY3Rpb24oKXt0aGlzLmFuaW1hdGU9dHJ1ZTt9LCdiaW5kJyx0
cnVlLHRoaXMpKTtyZXR1cm4gdHJ1ZTt9LGdldFNpemU6ZnVuY3Rpb24oKXtyZXR1
cm4ge2hlaWdodDoyNSx3aWR0aDoodGhpcy5fYXR0ci5hY3Rpb249PSdyZWNvbW1l
bmQnPzE0MDo5Nil9O30sY2FsY3VsYXRlVmlzaWJpbGl0eTpmdW5jdGlvbigpe3Zh
ciBuPWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQ7aWYoIXRo
aXMuZm9jdXNlZCYmd2luZG93LmNvbnNvbGUmJndpbmRvdy5jb25zb2xlLmZpcmVi
dWcpcmV0dXJuIHRoaXMudmlzaWJsZTtzd2l0Y2godGhpcy5fYXR0ci50cmlnZ2Vy
KXtjYXNlICJtYW51YWwiOnJldHVybiBmYWxzZTtjYXNlICJvbnZpc2libGUiOnZh
ciBvPXRoaXMuZG9tLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcDtyZXR1cm4g
bzw9bjtkZWZhdWx0OnZhciBwPXdpbmRvdy5wYWdlWU9mZnNldHx8ZG9jdW1lbnQu
Ym9keS5zY3JvbGxUb3AscT1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xs
SGVpZ2h0O3JldHVybiAocCtuKS9xPj10aGlzLl9hdHRyLnRyaWdnZXI7fX19KTtl
LmV4cG9ydHM9bTt9KTsKX19kKCJzZGsuWEZCTUwuUmVnaXN0cmF0aW9uIixbInNk
ay5BdXRoIiwic2RrLkhlbHBlciIsInNkay5YRkJNTC5JZnJhbWVXaWRnZXQiLCJz
ZGsuUnVudGltZSIsIlVybE1hcCJdLGZ1bmN0aW9uKGEsYixjLGQsZSxmKXt2YXIg
Zz1iKCdzZGsuQXV0aCcpLGg9Yignc2RrLkhlbHBlcicpLGk9Yignc2RrLlhGQk1M
LklmcmFtZVdpZGdldCcpLGo9Yignc2RrLlJ1bnRpbWUnKSxrPWIoJ1VybE1hcCcp
LGw9aS5leHRlbmQoe192aXNpYmxlQWZ0ZXI6J2ltbWVkaWF0ZScsX2Jhc2VIZWln
aHQ6MTY3LF9maWVsZEhlaWdodDoyOCxfc2tpbm55V2lkdGg6NTIwLF9za2lubnlC
YXNlSGVpZ2h0OjE3Myxfc2tpbm55RmllbGRIZWlnaHQ6NTIsc2V0dXBBbmRWYWxp
ZGF0ZTpmdW5jdGlvbigpe3RoaXMuX2F0dHI9e2FjdGlvbjp0aGlzLmdldEF0dHJp
YnV0ZSgnYWN0aW9uJyksYm9yZGVyX2NvbG9yOnRoaXMuZ2V0QXR0cmlidXRlKCdi
b3JkZXItY29sb3InKSxjaGFubmVsX3VybDp0aGlzLmdldENoYW5uZWxVcmwoKSxj
bGllbnRfaWQ6ai5nZXRDbGllbnRJRCgpLGZiX29ubHk6dGhpcy5fZ2V0Qm9vbEF0
dHJpYnV0ZSgnZmItb25seScsZmFsc2UpLGZiX3JlZ2lzdGVyOnRoaXMuX2dldEJv
b2xBdHRyaWJ1dGUoJ2ZiLXJlZ2lzdGVyJyxmYWxzZSksZmllbGRzOnRoaXMuZ2V0
QXR0cmlidXRlKCdmaWVsZHMnKSxoZWlnaHQ6dGhpcy5fZ2V0UHhBdHRyaWJ1dGUo
J2hlaWdodCcpLHJlZGlyZWN0X3VyaTp0aGlzLmdldEF0dHJpYnV0ZSgncmVkaXJl
Y3QtdXJpJyx3aW5kb3cubG9jYXRpb24uaHJlZiksbm9fZm9vdGVyOnRoaXMuX2dl
dEJvb2xBdHRyaWJ1dGUoJ25vLWZvb3RlcicpLG5vX2hlYWRlcjp0aGlzLl9nZXRC
b29sQXR0cmlidXRlKCduby1oZWFkZXInKSxvbnZhbGlkYXRlOnRoaXMuZ2V0QXR0
cmlidXRlKCdvbnZhbGlkYXRlJyksd2lkdGg6dGhpcy5fZ2V0UHhBdHRyaWJ1dGUo
J3dpZHRoJyw2MDApLHRhcmdldDp0aGlzLmdldEF0dHJpYnV0ZSgndGFyZ2V0Jyl9
O2lmKHRoaXMuX2F0dHIub252YWxpZGF0ZSl0aGlzLnN1YnNjcmliZSgneGQudmFs
aWRhdGUnLEVTNShmdW5jdGlvbihtKXt2YXIgbj1FUzUoJ0pTT04nLCdwYXJzZScs
ZmFsc2UsbS52YWx1ZSksbz1FUzUoZnVuY3Rpb24ocSl7dGhpcy5hcmJpdGVySW5m
b3JtKCdSZWdpc3RyYXRpb24uVmFsaWRhdGlvbicse2Vycm9yczpxLGlkOm0uaWR9
KTt9LCdiaW5kJyx0cnVlLHRoaXMpLHA9aC5leGVjdXRlRnVuY3Rpb25CeU5hbWUo
dGhpcy5fYXR0ci5vbnZhbGlkYXRlLG4sbyk7aWYocClvKHApO30sJ2JpbmQnLHRy
dWUsdGhpcykpO3RoaXMuc3Vic2NyaWJlKCd4ZC5hdXRoTG9naW4nLEVTNSh0aGlz
Ll9vbkF1dGhMb2dpbiwnYmluZCcsdHJ1ZSx0aGlzKSk7dGhpcy5zdWJzY3JpYmUo
J3hkLmF1dGhMb2dvdXQnLEVTNSh0aGlzLl9vbkF1dGhMb2dvdXQsJ2JpbmQnLHRy
dWUsdGhpcykpO3JldHVybiB0cnVlO30sZ2V0U2l6ZTpmdW5jdGlvbigpe3JldHVy
biB7d2lkdGg6dGhpcy5fYXR0ci53aWR0aCxoZWlnaHQ6dGhpcy5fZ2V0SGVpZ2h0
KCl9O30sX2dldEhlaWdodDpmdW5jdGlvbigpe2lmKHRoaXMuX2F0dHIuaGVpZ2h0
KXJldHVybiB0aGlzLl9hdHRyLmhlaWdodDt2YXIgbTtpZighdGhpcy5fYXR0ci5m
aWVsZHMpe209WyduYW1lJ107fWVsc2UgdHJ5e209RVM1KCdKU09OJywncGFyc2Un
LGZhbHNlLHRoaXMuX2F0dHIuZmllbGRzKTt9Y2F0Y2gobil7bT10aGlzLl9hdHRy
LmZpZWxkcy5zcGxpdCgvLC8pO31pZih0aGlzLl9hdHRyLndpZHRoPHRoaXMuX3Nr
aW5ueVdpZHRoKXtyZXR1cm4gdGhpcy5fc2tpbm55QmFzZUhlaWdodCttLmxlbmd0
aCp0aGlzLl9za2lubnlGaWVsZEhlaWdodDt9ZWxzZSByZXR1cm4gdGhpcy5fYmFz
ZUhlaWdodCttLmxlbmd0aCp0aGlzLl9maWVsZEhlaWdodDt9LGdldFVybEJpdHM6
ZnVuY3Rpb24oKXtyZXR1cm4ge25hbWU6J3JlZ2lzdHJhdGlvbicscGFyYW1zOnRo
aXMuX2F0dHJ9O30sZ2V0RGVmYXVsdFdlYkRvbWFpbjpmdW5jdGlvbigpe3JldHVy
biBrLnJlc29sdmUoJ3d3dycsdHJ1ZSk7fSxfb25BdXRoTG9naW46ZnVuY3Rpb24o
KXtpZighZy5nZXRBdXRoUmVzcG9uc2UoKSlnLmdldExvZ2luU3RhdHVzKCk7aC5m
aXJlRXZlbnQoJ2F1dGgubG9naW4nLHRoaXMpO30sX29uQXV0aExvZ291dDpmdW5j
dGlvbigpe2lmKCFnLmdldEF1dGhSZXNwb25zZSgpKWcuZ2V0TG9naW5TdGF0dXMo
KTtoLmZpcmVFdmVudCgnYXV0aC5sb2dvdXQnLHRoaXMpO319KTtlLmV4cG9ydHM9
bDt9KTsKX19kKCJzZGsuWEZCTUwuU2VuZCIsWyJzZGsuRE9NIiwic2RrLlhGQk1M
LkVkZ2VXaWRnZXQiLCJzZGsuUnVudGltZSIsInNkay5YRkJNTC5TZW5kQnV0dG9u
Rm9ybVdpZGdldCJdLGZ1bmN0aW9uKGEsYixjLGQsZSxmKXt2YXIgZz1iKCdzZGsu
RE9NJyksaD1iKCdzZGsuWEZCTUwuRWRnZVdpZGdldCcpLGk9Yignc2RrLlJ1bnRp
bWUnKSxqPWIoJ3Nkay5YRkJNTC5TZW5kQnV0dG9uRm9ybVdpZGdldCcpLGs9aC5l
eHRlbmQoe3NldHVwQW5kVmFsaWRhdGU6ZnVuY3Rpb24oKXtnLmFkZENzcyh0aGlz
LmRvbSwnZmJfZWRnZV93aWRnZXRfd2l0aF9jb21tZW50Jyk7dGhpcy5fYXR0cj17
Y2hhbm5lbDp0aGlzLmdldENoYW5uZWxVcmwoKSxhcGlfa2V5OmkuZ2V0Q2xpZW50
SUQoKSxmb250OnRoaXMuZ2V0QXR0cmlidXRlKCdmb250JyksY29sb3JzY2hlbWU6
dGhpcy5nZXRBdHRyaWJ1dGUoJ2NvbG9yc2NoZW1lJywnbGlnaHQnKSxocmVmOnRo
aXMuZ2V0QXR0cmlidXRlKCdocmVmJyx3aW5kb3cubG9jYXRpb24uaHJlZikscmVm
OnRoaXMuZ2V0QXR0cmlidXRlKCdyZWYnKSxleHRlbmRlZF9zb2NpYWxfY29udGV4
dDp0aGlzLmdldEF0dHJpYnV0ZSgnZXh0ZW5kZWRfc29jaWFsX2NvbnRleHQnLGZh
bHNlKX07dGhpcy5fcm9vdFBhZGRpbmc9e2xlZnQ6cGFyc2VGbG9hdChnLmdldFN0
eWxlKHRoaXMuZG9tLCdwYWRkaW5nTGVmdCcpKSx0b3A6cGFyc2VGbG9hdChnLmdl
dFN0eWxlKHRoaXMuZG9tLCdwYWRkaW5nVG9wJykpfTtyZXR1cm4gdHJ1ZTt9LGdl
dFVybEJpdHM6ZnVuY3Rpb24oKXtyZXR1cm4ge25hbWU6J3NlbmQnLHBhcmFtczp0
aGlzLl9hdHRyfTt9LF9jcmVhdGVFZGdlQ29tbWVudFdpZGdldDpmdW5jdGlvbihs
LG0pe3ZhciBuPXRoaXMuX2dldENvbW1vbkVkZ2VDb21tZW50V2lkZ2V0T3B0cyhs
LG0pO3JldHVybiBuZXcgaihuKTt9LGdldFNpemU6ZnVuY3Rpb24oKXtyZXR1cm4g
e3dpZHRoOjgwLGhlaWdodDoyNX07fX0pO2UuZXhwb3J0cz1rO30pOwpfX2QoInNk
ay5YRkJNTC5Tb2NpYWxDb250ZXh0IixbInNkay5FdmVudCIsInNkay5YRkJNTC5J
ZnJhbWVXaWRnZXQiXSxmdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9Yignc2Rr
LkV2ZW50JyksaD1iKCdzZGsuWEZCTUwuSWZyYW1lV2lkZ2V0JyksaT1oLmV4dGVu
ZCh7c2V0dXBBbmRWYWxpZGF0ZTpmdW5jdGlvbigpe3ZhciBqPXRoaXMuZ2V0QXR0
cmlidXRlKCdzaXplJywnc21hbGwnKTt0aGlzLl9hdHRyPXtjaGFubmVsOnRoaXMu
Z2V0Q2hhbm5lbFVybCgpLHdpZHRoOnRoaXMuX2dldFB4QXR0cmlidXRlKCd3aWR0
aCcsNDAwKSxoZWlnaHQ6dGhpcy5fZ2V0UHhBdHRyaWJ1dGUoJ2hlaWdodCcsMTAw
KSxyZWY6dGhpcy5nZXRBdHRyaWJ1dGUoJ3JlZicpLHNpemU6dGhpcy5nZXRBdHRy
aWJ1dGUoJ3NpemUnKSxrZXl3b3Jkczp0aGlzLmdldEF0dHJpYnV0ZSgna2V5d29y
ZHMnKSx1cmxzOnRoaXMuZ2V0QXR0cmlidXRlKCd1cmxzJyksb2JqZWN0X2lkOnRo
aXMuZ2V0QXR0cmlidXRlKCdvYmplY3RfaWQnKX07dGhpcy5zdWJzY3JpYmUoJ3hk
LnNvY2lhbF9jb250ZXh0X3N0YXRzJyxFUzUodGhpcy5fYnViYmxlU29jaWFsQ29u
dGV4dFN0YXRzLCdiaW5kJyx0cnVlLHRoaXMpKTtyZXR1cm4gdHJ1ZTt9LF9idWJi
bGVTb2NpYWxDb250ZXh0U3RhdHM6ZnVuY3Rpb24oail7dmFyIGs9e3BsdWdpbklE
OnRoaXMuZ2V0QXR0cmlidXRlKCdwbHVnaW4taWQnKSxzb2NpYWxDb250ZXh0UGFn
ZUlEczpFUzUoJ0pTT04nLCdwYXJzZScsZmFsc2Usai5zb2NpYWxfY29udGV4dF9w
YWdlX2lkcyl9O2cuZmlyZSgneGZibWwuc29jaWFsX2NvbnRleHRfc3RhdHMnLGsp
O30sZ2V0U2l6ZTpmdW5jdGlvbigpe3JldHVybiB7d2lkdGg6dGhpcy5fYXR0ci53
aWR0aCxoZWlnaHQ6dGhpcy5fYXR0ci5oZWlnaHR9O30sZ2V0VXJsQml0czpmdW5j
dGlvbigpe3JldHVybiB7bmFtZTonc29jaWFsX2NvbnRleHQnLHBhcmFtczp0aGlz
Ll9hdHRyfTt9fSk7ZS5leHBvcnRzPWk7fSk7Cl9fZCgibGVnYWN5OmZiLnhmYm1s
IixbIkFzc2VydCIsInNkay5kb21SZWFkeSIsInNkay5FdmVudCIsIkZCIiwiSWZy
YW1lUGx1Z2luIiwiUGx1Z2luVGFncyIsIndyYXBGdW5jdGlvbiIsIlhGQk1MIiwi
c2RrLlhGQk1MLkNvbW1lbnRzIiwic2RrLlhGQk1MLkNvbW1lbnRzQ291bnQiLCJz
ZGsuWEZCTUwuQ29ubmVjdEJhciIsInNkay5YRkJNTC5MaWtlQm94Iiwic2RrLlhG
Qk1MLkxpa2UiLCJzZGsuWEZCTUwuTGl2ZVN0cmVhbSIsInNkay5YRkJNTC5Mb2dp
bkJ1dHRvbiIsInNkay5YRkJNTC5OYW1lIiwic2RrLlhGQk1MLlByb2ZpbGVQaWMi
LCJzZGsuWEZCTUwuUmVjb21tZW5kYXRpb25zQmFyIiwic2RrLlhGQk1MLlJlZ2lz
dHJhdGlvbiIsInNkay5YRkJNTC5TZW5kIiwic2RrLlhGQk1MLlNvY2lhbENvbnRl
eHQiXSxmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1iKCdBc3NlcnQnKSxmPWIoJ3Nk
ay5kb21SZWFkeScpLGc9Yignc2RrLkV2ZW50JyksaD1iKCdGQicpLGk9YignSWZy
YW1lUGx1Z2luJyksaj1iKCdQbHVnaW5UYWdzJyksaz1iKCd3cmFwRnVuY3Rpb24n
KSxsPWIoJ1hGQk1MJyksbT17Y29tbWVudHM6Yignc2RrLlhGQk1MLkNvbW1lbnRz
JyksY29tbWVudHNfY291bnQ6Yignc2RrLlhGQk1MLkNvbW1lbnRzQ291bnQnKSxj
b25uZWN0X2JhcjpiKCdzZGsuWEZCTUwuQ29ubmVjdEJhcicpLGZhbjpiKCdzZGsu
WEZCTUwuTGlrZUJveCcpLGxpa2U6Yignc2RrLlhGQk1MLkxpa2UnKSxsaWtlX2Jv
eDpiKCdzZGsuWEZCTUwuTGlrZUJveCcpLGxpdmVfc3RyZWFtOmIoJ3Nkay5YRkJN
TC5MaXZlU3RyZWFtJyksbG9naW5fYnV0dG9uOmIoJ3Nkay5YRkJNTC5Mb2dpbkJ1
dHRvbicpLG5hbWU6Yignc2RrLlhGQk1MLk5hbWUnKSxwcm9maWxlX3BpYzpiKCdz
ZGsuWEZCTUwuUHJvZmlsZVBpYycpLHJlY29tbWVuZGF0aW9uc19iYXI6Yignc2Rr
LlhGQk1MLlJlY29tbWVuZGF0aW9uc0JhcicpLHJlZ2lzdHJhdGlvbjpiKCdzZGsu
WEZCTUwuUmVnaXN0cmF0aW9uJyksc2VuZDpiKCdzZGsuWEZCTUwuU2VuZCcpLHNv
Y2lhbF9jb250ZXh0OmIoJ3Nkay5YRkJNTC5Tb2NpYWxDb250ZXh0Jyl9O0VTNShF
UzUoJ09iamVjdCcsJ2tleXMnLGZhbHNlLGopLCdmb3JFYWNoJyx0cnVlLGZ1bmN0
aW9uKG8pe2wucmVnaXN0ZXJUYWcoe3htbG5zOidmYicsbG9jYWxOYW1lOm8ucmVw
bGFjZSgvXy9nLCctJyksY3RvcjppLndpdGhQYXJhbXMoaltvXSl9KTt9KTtFUzUo
RVM1KCdPYmplY3QnLCdrZXlzJyxmYWxzZSxtKSwnZm9yRWFjaCcsdHJ1ZSxmdW5j
dGlvbihvKXtsLnJlZ2lzdGVyVGFnKHt4bWxuczonZmInLGxvY2FsTmFtZTpvLnJl
cGxhY2UoL18vZywnLScpLGN0b3I6bVtvXX0pO30pO2gucHJvdmlkZSgnWEZCTUwn
LHtwYXJzZTpmdW5jdGlvbihvKXtlLm1heWJlWGZibWwobywnSW52YWxpZCBhcmd1
bWVudCcpO2lmKG8mJm8ubm9kZVR5cGU9PT05KW89by5ib2R5O3JldHVybiBsLnBh
cnNlLmFwcGx5KG51bGwsYXJndW1lbnRzKTt9fSk7aC5wcm92aWRlKCdYRkJNTC5S
ZWNvbW1lbmRhdGlvbnNCYXInLHttYXJrUmVhZDpmdW5jdGlvbihvKXtnLmZpcmUo
J3hmYm1sLnJlY29tbWVuZGF0aW9uc2Jhci5yZWFkJyxvfHx3aW5kb3cubG9jYXRp
b24uaHJlZik7fX0pO2wuc3Vic2NyaWJlKCdwYXJzZScsRVM1KGcuZmlyZSwnYmlu
ZCcsdHJ1ZSxnLCd4ZmJtbC5wYXJzZScpKTtsLnN1YnNjcmliZSgncmVuZGVyJyxF
UzUoZy5maXJlLCdiaW5kJyx0cnVlLGcsJ3hmYm1sLnJlbmRlcicpKTtnLnN1YnNj
cmliZSgnaW5pdDpwb3N0JyxmdW5jdGlvbihvKXtpZihvLnhmYm1sKXNldFRpbWVv
dXQoayhFUzUoZiwnYmluZCcsdHJ1ZSxudWxsLGwucGFyc2UpLCdlbnRyeScsJ2lu
aXQ6cG9zdDp4ZmJtbC5wYXJzZScpLDApO30pO2UuZGVmaW5lKCdYZmJtbCcsZnVu
Y3Rpb24obyl7cmV0dXJuIChvLm5vZGVUeXBlPT09MXx8by5ub2RlVHlwZT09PTkp
JiZ0eXBlb2Ygby5ub2RlTmFtZT09PSdzdHJpbmcnO30pO3RyeXtpZihkb2N1bWVu
dC5uYW1lc3BhY2VzJiYhZG9jdW1lbnQubmFtZXNwYWNlcy5pdGVtLmZiKWRvY3Vt
ZW50Lm5hbWVzcGFjZXMuYWRkKCdmYicpO31jYXRjaChuKXt9fSwzKTsKdm9pZCgw
KTsKfSkuY2FsbCh7fSwgd2luZG93LmluRGFwSUYgPyBwYXJlbnQud2luZG93IDog
d2luZG93KTsKfSBjYXRjaCAoZSkge25ldyBJbWFnZSgpLnNyYz0iaHR0cDpcL1wv
d3d3LmZhY2Vib29rLmNvbVwvIiArICdjb21tb24vc2NyaWJlX2VuZHBvaW50LnBo
cD9jPWpzc2RrX2Vycm9yJm09JytlbmNvZGVVUklDb21wb25lbnQoJ3siZXJyb3Ii
OiJMT0FEIiwgImV4dHJhIjogeyJuYW1lIjoiJytlLm5hbWUrJyIsImxpbmUiOiIn
KyhlLmxpbmVOdW1iZXJ8fGUubGluZSkrJyIsInNjcmlwdCI6IicrKGUuZmlsZU5h
bWV8fGUuc291cmNlVVJMfHxlLnNjcmlwdCkrJyIsInN0YWNrIjoiJysoZS5zdGFj
a1RyYWNlfHxlLnN0YWNrKSsnIiwibWVzc2FnZSI6IicrZS5tZXNzYWdlKycifX0n
KTt9

------------qTBjXnmaI6qvT5AepQBBtZ--
